<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:pdt="PDT" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4">
<!--Component named Clm--><spirit:vendor>vendor</spirit:vendor>
   <spirit:library>lib</spirit:library>
   <spirit:name>Clm</spirit:name>
   <spirit:version>1.1</spirit:version>
   <spirit:memoryMaps>
      <spirit:memoryMap><!--MemoryMap named ClmCpuMemMap--><spirit:name>ClmCpuMemMap</spirit:name>
         <spirit:addressBlock><!--AddressBlock named Clm--><spirit:name>Clm</spirit:name>
            <spirit:description/>
            <spirit:baseAddress>0x0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x100</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Id--><spirit:name>Id</spirit:name>
               <spirit:description>CLM registers ASCII identification register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x5f434c4d</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Id--><spirit:name>Id</spirit:name>
                  <spirit:description>CLM registers ASCII identification field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Id--><spirit:vendorExtensions>
                     <pdt:valueType>ascii</pdt:valueType>
                     <pdt:resetValue>0x5f434c4d</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM registers ASCII identification field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Id--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Id--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>CLM registers ASCII identification register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Id--></spirit:register>
            <spirit:register><!--Register named Rev--><spirit:name>Rev</spirit:name>
               <spirit:description>CLM registers CVS revision register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x124</spirit:value>
                  <spirit:mask>0x8000ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named CvsMinor--><spirit:name>CvsMinor</spirit:name>
                  <spirit:description>CLM registers CVS minor revision field.  This field relates to the post-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMinor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x24</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM registers CVS minor revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMinor--></spirit:field>
               <spirit:field><!--BitField named CvsMajor--><spirit:name>CvsMajor</spirit:name>
                  <spirit:description>CLM registers CVS major revision field.  This field relates to the pre-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMajor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM registers CVS major revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMajor--></spirit:field>
               <spirit:field><!--BitField named Irq--><spirit:name>Irq</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptStatusBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rev--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>CLM registers CVS revision register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rev--></spirit:register>
            <spirit:register><!--Register named IntEn--><spirit:name>IntEn</spirit:name>
               <spirit:description>Interrupt mask register.

0 = interrupt disabled.
1 = interrupt enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named TxStatsETR--><spirit:name>TxStatsETR</spirit:name>
                  <spirit:description>TxStatsETR overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>TxStatsETR overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStatsETR--></spirit:field>
               <spirit:field><!--BitField named RxStatsETR--><spirit:name>RxStatsETR</spirit:name>
                  <spirit:description>RxStatsETR overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>RxStatsETR overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStatsETR--></spirit:field>
               <spirit:field><!--BitField named TxStats--><spirit:name>TxStats</spirit:name>
                  <spirit:description>TxStats overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>TxStats overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStats--></spirit:field>
               <spirit:field><!--BitField named RxStats--><spirit:name>RxStats</spirit:name>
                  <spirit:description>RxStats overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>RxStats overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStats--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrFrm--><spirit:name>PhyDfrmErrFrm</spirit:name>
                  <spirit:description>PHY deframer framing error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer framing error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrFrm--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrIpf--><spirit:name>PhyDfrmErrIpf</spirit:name>
                  <spirit:description>IPF deframer error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrIpf--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>IPF deframer error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrIpf--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrTout--><spirit:name>PhyDfrmErrTout</spirit:name>
                  <spirit:description>IPF deframer timeout interrupt enable field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>IPF deframer timeout interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrTout--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcUsb--><spirit:name>PhyDfrmErrCrcUsb</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt enable field (USB frame).</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrCrcUsb--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt enable field (USB frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcUsb--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcEnet--><spirit:name>PhyDfrmErrCrcEnet</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt enable field (ENET frame).</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrCrcEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt enable field (ENET frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcEnet--></spirit:field>
               <spirit:field><!--BitField named MlpLinkEvent--><spirit:name>MlpLinkEvent</spirit:name>
                  <spirit:description>MLP link event interrupt enable field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpLinkEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP link event interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpLinkEvent--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsInitDone--><spirit:name>MlpTxIcsInitDone</spirit:name>
                  <spirit:description>MLP TX cache initialization complete interrupt enable field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsInitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache initialization complete interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsInitDone--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsOflow--><spirit:name>MlpTxIcsOflow</spirit:name>
                  <spirit:description>MLP TX cache overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsUflow--><spirit:name>MlpTxIcsUflow</spirit:name>
                  <spirit:description>MLP TX cache underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsUflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidEmpty--><spirit:name>MlpTxIcsSidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Segment ID empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidAEmpty--><spirit:name>MlpTxIcsSidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID almost empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsSidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Segment ID almost empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidEmpty--><spirit:name>MlpTxIcsQidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Queue ID empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidAEmpty--><spirit:name>MlpTxIcsQidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID almost empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Queue ID almost empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsNewQErr--><spirit:name>MlpTxIcsNewQErr</spirit:name>
                  <spirit:description>MLP TX cache new QID request error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsNewQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache new QID request error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsNewQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsRetQErr--><spirit:name>MlpTxIcsRetQErr</spirit:name>
                  <spirit:description>MLP TX cache return QID request error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsRetQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache return QID request error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsRetQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsFluQErr--><spirit:name>MlpTxIcsFluQErr</spirit:name>
                  <spirit:description>MLP TX cache flush QID request error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsFluQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache flush QID request error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsFluQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpdropErr--><spirit:name>MlpTxVpdropErr</spirit:name>
                  <spirit:description>MLP TX data/datn drop, due to invalid vport, interrupt enable field.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxVpdropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX data/datn drop, due to invalid vport, interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpdropErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVp0LenErr--><spirit:name>MlpTxVp0LenErr</spirit:name>
                  <spirit:description>MLP TX invalid vport0 data packet length interrupt enable field.</spirit:description>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxVp0LenErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX invalid vport0 data packet length interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVp0LenErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrn--><spirit:name>MlpTxRtyWrn</spirit:name>
                  <spirit:description>MLP TX link retry event interrupt enable field.</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxRtyWrn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry event interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrn--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErr--><spirit:name>MlpTxRtyErr</spirit:name>
                  <spirit:description>MLP TX link retry failure event interrupt enable field.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxRtyErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry failure event interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErr--><spirit:name>MlpTxW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxToCntLvl--><spirit:name>MlpTxToCntLvl</spirit:name>
                  <spirit:description>MLP TX highest vport status table timeout counter level achieved interrupt enable field.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxToCntLvl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX highest vport status table timeout counter level achieved interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxToCntLvl--></spirit:field>
               <spirit:field><!--BitField named MlpRxFcDropErr--><spirit:name>MlpRxFcDropErr</spirit:name>
                  <spirit:description>MLP RX packet dropped, due to local flow control condition, interrupt enable field.</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxFcDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX packet dropped, due to local flow control condition, interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxHdrErr--><spirit:name>MlpRxHdrErr</spirit:name>
                  <spirit:description>MLP RX header crc validation failure interrupt enable field.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxHdrErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX header crc validation failure interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxHdrErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErr--><spirit:name>MlpRxPldErr</spirit:name>
                  <spirit:description>MLP RX payload crc validation failure interrupt enable field.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxPldErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX payload crc validation failure interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErr--><spirit:name>MlpRxSeqErr</spirit:name>
                  <spirit:description>MLP RX sequence error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxSeqErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sequence error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxAfifoOflow--><spirit:name>MlpRxAfifoOflow</spirit:name>
                  <spirit:description>MLP RX afifo overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX afifo overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxSfifoOflow--><spirit:name>MlpRxSfifoOflow</spirit:name>
                  <spirit:description>MLP RX sfifo overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxSfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sfifo overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSfifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntEn--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt mask register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntEn--></spirit:register>
            <spirit:register><!--Register named IntSrc--><spirit:name>IntSrc</spirit:name>
               <spirit:description>Interrupt source register.  These fields are pulsed or held '1' when an interrupt situation has occurred or is persisting.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named TxStatsETR--><spirit:name>TxStatsETR</spirit:name>
                  <spirit:description>TxStatsETR overflow interrupt source field.  This field is 1 when any CLM.TxStatsETR.xxxOflow is set.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>TxStatsETR overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStatsETR--></spirit:field>
               <spirit:field><!--BitField named RxStatsETR--><spirit:name>RxStatsETR</spirit:name>
                  <spirit:description>RxStatsETR overflow interrupt source field.  This field is 1 when any CLM.RxStatsETR.xxxOflow is set.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named RxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>RxStatsETR overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStatsETR--></spirit:field>
               <spirit:field><!--BitField named TxStats--><spirit:name>TxStats</spirit:name>
                  <spirit:description>TxStats overflow interrupt source field.  This field is 1 when any CLM.TxStats.xxxOflow is set.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>TxStats overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStats--></spirit:field>
               <spirit:field><!--BitField named RxStats--><spirit:name>RxStats</spirit:name>
                  <spirit:description>RxStats overflow interrupt source field.  This field is 1 when any CLM.RxStats.xxxOflow is set.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named RxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>RxStats overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStats--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrFrm--><spirit:name>PhyDfrmErrFrm</spirit:name>
                  <spirit:description>PHY deframer framing error interrupt source field.  This field is pulsed every time the PHY deframer has determined that a framing error in the reception stream has occurred.  In this case the PHY deframer will flush the remainder of the transmission.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer framing error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrFrm--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrIpf--><spirit:name>PhyDfrmErrIpf</spirit:name>
                  <spirit:description>IPF deframer error interrupt source field.  This field is pulsed every time the IPF deframer has detected an error in the incoming reception stream.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrIpf--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>IPF deframer error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrIpf--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrTout--><spirit:name>PhyDfrmErrTout</spirit:name>
                  <spirit:description>IPF deframer timeout interrupt source field.  This field is pulsed every time the IPF deframer has detected a timeout condition has occurred in the incoming reception stream.  Associated with the PhyConfig.ParToutThresh register.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>IPF deframer timeout interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrTout--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcUsb--><spirit:name>PhyDfrmErrCrcUsb</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt source field (USB frame).  This field is pulsed every time the deframer has detected a reception error in the MII level 2 frame.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrCrcUsb--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt source field (USB frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcUsb--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcEnet--><spirit:name>PhyDfrmErrCrcEnet</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt source field (ENET frame).  This field is pulsed every time the deframer has detected a reception error in the MII level 2 frame.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrCrcEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt source field (ENET frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcEnet--></spirit:field>
               <spirit:field><!--BitField named MlpLinkEvent--><spirit:name>MlpLinkEvent</spirit:name>
                  <spirit:description>MLP link event interrupt source field.  This field is pulsed '1' on any status change to the linkup condition for any vport.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpLinkEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP link event interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpLinkEvent--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsInitDone--><spirit:name>MlpTxIcsInitDone</spirit:name>
                  <spirit:description>MLP TX cache initialization complete interrupt source field.  This field is pulsed '1' when the initialization is complete.  Should only happen once when MlpConfig0.TxEnable is set.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsInitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache initialization complete interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsInitDone--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsOflow--><spirit:name>MlpTxIcsOflow</spirit:name>
                  <spirit:description>MLP TX cache overflow interrupt source field.  This field is pulsed '1' in the event that the MLP TX cache has detected and overflow condition.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsUflow--><spirit:name>MlpTxIcsUflow</spirit:name>
                  <spirit:description>MLP TX cache underflow interrupt source field.  This field is pulsed '1' in the event that the MLP TX cache has detected and underflow condition.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsUflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidEmpty--><spirit:name>MlpTxIcsSidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID empty interrupt source field.  This field is pulsed one when the SID fifo goes empty or goes not empty. Will need to read MlpIcsStatus.SidEmpty field to determine status.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Segment ID empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidAEmpty--><spirit:name>MlpTxIcsSidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID almost empty interrupt source field.  This field is pulsed one when the SID fifo count passes above or below the register defined threshold.  Will need to read MlpIcsStatus.SidAEmpty field to determine status.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsSidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Segment ID almost empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidEmpty--><spirit:name>MlpTxIcsQidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID empty interrupt source field.  This field is pulsed one when the QID fifo goes empty or goes not empty. Will need to read MlpIcsStatus.QidEmpty field to determine status.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Queue ID empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidAEmpty--><spirit:name>MlpTxIcsQidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID almost empty interrupt source field.  This field is pulsed one when the QID fifo count passes above or below the register defined threshold.  Will need to read MlpIcsStatus.QidAEmpty field to determine status.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache Queue ID almost empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsNewQErr--><spirit:name>MlpTxIcsNewQErr</spirit:name>
                  <spirit:description>MLP TX cache new QID request error interrupt source field.  This field is pulsed '1' when a new QID request error has occurred.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsNewQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache new QID request error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsNewQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsRetQErr--><spirit:name>MlpTxIcsRetQErr</spirit:name>
                  <spirit:description>MLP TX cache return QID request error interrupt source field.  This field is pulsed '1' when a return QID request error has occurred.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsRetQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache return QID request error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsRetQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsFluQErr--><spirit:name>MlpTxIcsFluQErr</spirit:name>
                  <spirit:description>MLP TX cache flush QID request error interrupt source field.  This field is pulsed '1' when a flush QID request error has occurred.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxIcsFluQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache flush QID request error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsFluQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpdropErr--><spirit:name>MlpTxVpdropErr</spirit:name>
                  <spirit:description>MLP TX data/datn drop, due to invalid vport, interrupt source field.  This field is pulsed '1' when a data or datn packet is dropped by the MLP tx module because it was destined for a vport that is not linkup and no pending read of the Mlp.MlpVpHold register is required.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpdropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX data/datn drop, due to invalid vport, interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpdropErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVp0LenErr--><spirit:name>MlpTxVp0LenErr</spirit:name>
                  <spirit:description>MLP TX invalid vport0 data packet length interrupt source field.  This field is pulsed '1' when the MLP TX has detected that an over-sized retriable data packet was destined to vport 0.

Note: max retriable vport 0 data packet is 2 XICS cache words (16 bytes).</spirit:description>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVp0LenErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX invalid vport0 data packet length interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVp0LenErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrn--><spirit:name>MlpTxRtyWrn</spirit:name>
                  <spirit:description>MLP TX link retry event interrupt source field.  This field is pulsed '1' when the MLP has begun a retry sequence and no pending read of the Mlp.MlpVpHold register is required.

Note: a retry sequence may contain 1 or more data packets for retry.  This event is not 1:1 with number of packets retried.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyWrn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry event interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrn--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErr--><spirit:name>MlpTxRtyErr</spirit:name>
                  <spirit:description>MLP TX link retry failure event interrupt source field.  This field is pulsed '1' when a retry failure event has occurred and no pending read of the Mlp.MlpVpHold register is required.

Note: a retry failure event is when any retriable packet is re-transmitted 3 times without a successful acknowledgement.  (4 total transmissions).

Note: a retry failure case will linkdown the associated vport, then attempt to re-initialize with STAT packets.  All existing cached packets destined for the vport will be self-cleaned from the MLP TX cache, and any incoming packet will be dropped until link is re-initialized.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry failure event interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErr--><spirit:name>MlpTxW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error interrupt source field.  This field is pulsed '1' when a wait for response event has occurredand no pending read of the Mlp.MlpVpHold register is required.

Note: a wait for response event is when a retriable packet has not successfully been acknowledged within the register defined threshold time.  This scenario will trigger a retry of pending retriable packets already transmitted to the vport.

Note: this event will not occur if this is the 4th wait for response timeout to the vport.  In that case a retry failure event will super-cede this event.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxToCntLvl--><spirit:name>MlpTxToCntLvl</spirit:name>
                  <spirit:description>MLP TX highest vport status table timeout counter level achieved interrupt source field.  This field is '1' when a vport status timeout counter level is greater than or equal to the defined CLM.MLPCONFIG1.ToCntThresh level.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxToCntLvl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX highest vport status table timeout counter level achieved interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxToCntLvl--></spirit:field>
               <spirit:field><!--BitField named MlpRxFcDropErr--><spirit:name>MlpRxFcDropErr</spirit:name>
                  <spirit:description>MLP RX packet dropped, due to local flow control condition, interrupt source field.  This field is pulsed '1' when the MLP RX has dropped a packet due to insufficient space in the reception buffersand no pending read of the Mlp.MlpVpHold register is required.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxFcDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX packet dropped, due to local flow control condition, interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxHdrErr--><spirit:name>MlpRxHdrErr</spirit:name>
                  <spirit:description>MLP RX header crc validation failure interrupt source field.  This field is pulsed '1' when a crc failure has been detected in the MLP header.

Note: Unfortunately the header information cannot be trusted so the vport cannot be extracted and provided.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxHdrErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX header crc validation failure interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxHdrErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErr--><spirit:name>MlpRxPldErr</spirit:name>
                  <spirit:description>MLP RX payload crc validation failure interrupt source field.  This field is pulsed '1' when a crc failure has been detected in the MLP payload and no pending read of the Mlp.MlpVpHold register is required.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxPldErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX payload crc validation failure interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErr--><spirit:name>MlpRxSeqErr</spirit:name>
                  <spirit:description>MLP RX sequence error interrupt source field.  This field is pulsed '1' when a sequence error has been detected and no pending read of the Mlp.MlpVpHold register is required.

Note: The vport associated with the error is captured in the CLM.MlpVpHold register.
Note: A new interrupt source pulse will not occur until CLM.MlpVpHold is read.
Note: Clear associated interrupt before reading CLM.MlpVpHold to avoid interrupt miss.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxSeqErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sequence error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxAfifoOflow--><spirit:name>MlpRxAfifoOflow</spirit:name>
                  <spirit:description>MLP RX afifo overflow interrupt source field.  This field is pulsed '1' when an overflow of the received buffer has been detected.

MLPR to MLPT afifo.</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX afifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxSfifoOflow--><spirit:name>MlpRxSfifoOflow</spirit:name>
                  <spirit:description>MLP RX sfifo overflow interrupt source field.  This field is pulsed '1' when an overflow of the received buffer has been detected.

MLPR to XCRM sfifo.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxSfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sfifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSfifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntSrc--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt source register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntSrc--></spirit:register>
            <spirit:register><!--Register named IntFlg--><spirit:name>IntFlg</spirit:name>
               <spirit:description>Interrupt flag register.  This field is set '1' when the interrupt source field has seen '1' and the interrupt enable field is set '1'.

0 = interrupt not detected.
1 = interrupt detected.

Note: write '1' to clear field.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named TxStatsETR--><spirit:name>TxStatsETR</spirit:name>
                  <spirit:description>TxStatsETR overflow interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.TxStatsETR'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.TxStatsETR'</pdt:instanceArg>
                     <pdt:briefDescription>TxStatsETR overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStatsETR--></spirit:field>
               <spirit:field><!--BitField named RxStatsETR--><spirit:name>RxStatsETR</spirit:name>
                  <spirit:description>RxStatsETR overflow interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RxStatsETR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.RxStatsETR'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.RxStatsETR'</pdt:instanceArg>
                     <pdt:briefDescription>RxStatsETR overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStatsETR--></spirit:field>
               <spirit:field><!--BitField named TxStats--><spirit:name>TxStats</spirit:name>
                  <spirit:description>TxStats overflow interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.TxStats'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.TxStats'</pdt:instanceArg>
                     <pdt:briefDescription>TxStats overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxStats--></spirit:field>
               <spirit:field><!--BitField named RxStats--><spirit:name>RxStats</spirit:name>
                  <spirit:description>RxStats overflow interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RxStats--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.RxStats'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.RxStats'</pdt:instanceArg>
                     <pdt:briefDescription>RxStats overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxStats--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrFrm--><spirit:name>PhyDfrmErrFrm</spirit:name>
                  <spirit:description>PHY deframer framing error interrupt flag field.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.PhyDfrmErrFrm'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.PhyDfrmErrFrm'</pdt:instanceArg>
                     <pdt:briefDescription>PHY deframer framing error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrFrm--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrIpf--><spirit:name>PhyDfrmErrIpf</spirit:name>
                  <spirit:description>IPF deframer error interrupt flag field.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrIpf--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.PhyDfrmErrIpf'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.PhyDfrmErrIpf'</pdt:instanceArg>
                     <pdt:briefDescription>IPF deframer error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrIpf--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrTout--><spirit:name>PhyDfrmErrTout</spirit:name>
                  <spirit:description>IPF deframer timeout interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.PhyDfrmErrTout'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.PhyDfrmErrTout'</pdt:instanceArg>
                     <pdt:briefDescription>IPF deframer timeout interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrTout--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcUsb--><spirit:name>PhyDfrmErrCrcUsb</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt flag field (USB frame).

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrCrcUsb--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.PhyDfrmErrCrcUsb'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.PhyDfrmErrCrcUsb'</pdt:instanceArg>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt flag field (USB frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcUsb--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcEnet--><spirit:name>PhyDfrmErrCrcEnet</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error interrupt flag field (ENET frame).

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyDfrmErrCrcEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.PhyDfrmErrCrcEnet'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.PhyDfrmErrCrcEnet'</pdt:instanceArg>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error interrupt flag field (ENET frame).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcEnet--></spirit:field>
               <spirit:field><!--BitField named MlpLinkEvent--><spirit:name>MlpLinkEvent</spirit:name>
                  <spirit:description>MLP link event interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpLinkEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpLinkEvent'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpLinkEvent'</pdt:instanceArg>
                     <pdt:briefDescription>MLP link event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpLinkEvent--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsInitDone--><spirit:name>MlpTxIcsInitDone</spirit:name>
                  <spirit:description>MLP TX cache initialization complete interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsInitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsInitDone'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsInitDone'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache initialization complete interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsInitDone--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsOflow--><spirit:name>MlpTxIcsOflow</spirit:name>
                  <spirit:description>MLP TX cache overflow interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsOflow'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsOflow'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsUflow--><spirit:name>MlpTxIcsUflow</spirit:name>
                  <spirit:description>MLP TX cache underflow interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsUflow'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsUflow'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsUflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidEmpty--><spirit:name>MlpTxIcsSidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID empty interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsSidEmpty'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsSidEmpty'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache Segment ID empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsSidAEmpty--><spirit:name>MlpTxIcsSidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Segment ID almost empty interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsSidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsSidAEmpty'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsSidAEmpty'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache Segment ID almost empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsSidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidEmpty--><spirit:name>MlpTxIcsQidEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID empty interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsQidEmpty'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsQidEmpty'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache Queue ID empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsQidAEmpty--><spirit:name>MlpTxIcsQidAEmpty</spirit:name>
                  <spirit:description>MLP TX cache Queue ID almost empty interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsQidAEmpty'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsQidAEmpty'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache Queue ID almost empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsNewQErr--><spirit:name>MlpTxIcsNewQErr</spirit:name>
                  <spirit:description>MLP TX cache new QID request error interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsNewQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsNewQErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsNewQErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache new QID request error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsNewQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsRetQErr--><spirit:name>MlpTxIcsRetQErr</spirit:name>
                  <spirit:description>MLP TX cache return QID request error interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsRetQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsRetQErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsRetQErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache return QID request error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsRetQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxIcsFluQErr--><spirit:name>MlpTxIcsFluQErr</spirit:name>
                  <spirit:description>MLP TX cache flush QID request error interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxIcsFluQErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxIcsFluQErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxIcsFluQErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX cache flush QID request error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxIcsFluQErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpdropErr--><spirit:name>MlpTxVpdropErr</spirit:name>
                  <spirit:description>MLP TX data/datn drop, due to invalid vport, interrupt flag field.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxVpdropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxVpdropErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxVpdropErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX data/datn drop, due to invalid vport, interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpdropErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVp0LenErr--><spirit:name>MlpTxVp0LenErr</spirit:name>
                  <spirit:description>MLP TX invalid vport0 data packet length interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxVp0LenErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxVp0LenErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxVp0LenErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX invalid vport0 data packet length interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVp0LenErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrn--><spirit:name>MlpTxRtyWrn</spirit:name>
                  <spirit:description>MLP TX link retry event interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxRtyWrn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxRtyWrn'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxRtyWrn'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX link retry event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrn--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErr--><spirit:name>MlpTxRtyErr</spirit:name>
                  <spirit:description>MLP TX link retry failure event interrupt flag field.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxRtyErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxRtyErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxRtyErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX link retry failure event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErr--><spirit:name>MlpTxW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxW4RErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxW4RErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX link wait for response error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxToCntLvl--><spirit:name>MlpTxToCntLvl</spirit:name>
                  <spirit:description>MLP TX highest vport status table timeout counter level achieved interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpTxToCntLvl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpTxToCntLvl'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpTxToCntLvl'</pdt:instanceArg>
                     <pdt:briefDescription>MLP TX highest vport status table timeout counter level achieved interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxToCntLvl--></spirit:field>
               <spirit:field><!--BitField named MlpRxFcDropErr--><spirit:name>MlpRxFcDropErr</spirit:name>
                  <spirit:description>MLP RX packet dropped, due to local flow control condition, interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxFcDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxFcDropErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxFcDropErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX packet dropped, due to local flow control condition, interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxHdrErr--><spirit:name>MlpRxHdrErr</spirit:name>
                  <spirit:description>MLP RX header crc validation failure interrupt flag field.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxHdrErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxHdrErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxHdrErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX header crc validation failure interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxHdrErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErr--><spirit:name>MlpRxPldErr</spirit:name>
                  <spirit:description>MLP RX payload crc validation failure interrupt flag field.

DEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxPldErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxPldErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxPldErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX payload crc validation failure interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErr--><spirit:name>MlpRxSeqErr</spirit:name>
                  <spirit:description>MLP RX sequence error interrupt flag field.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxSeqErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxSeqErr'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxSeqErr'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX sequence error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxAfifoOflow--><spirit:name>MlpRxAfifoOflow</spirit:name>
                  <spirit:description>MLP RX afifo overflow interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxAfifoOflow'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxAfifoOflow'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX afifo overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxSfifoOflow--><spirit:name>MlpRxSfifoOflow</spirit:name>
                  <spirit:description>MLP RX sfifo overflow interrupt flag field.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named MlpRxSfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Clm.Clm.IntEn.MlpRxSfifoOflow'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Clm.Clm.IntSrc.MlpRxSfifoOflow'</pdt:instanceArg>
                     <pdt:briefDescription>MLP RX sfifo overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSfifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntFlg--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt flag register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntFlg--></spirit:register>
            <spirit:register><!--Register named MlpConfig0--><spirit:name>MlpConfig0</spirit:name>
               <spirit:description>MLP configuration register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x4</spirit:value>
                  <spirit:mask>0x3ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named RxEnable--><spirit:name>RxEnable</spirit:name>
                  <spirit:description>MLP RX side enable.

0 : disabled
1 : enabled</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RxEnable--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX side enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RxEnable--></spirit:field>
               <spirit:field><!--BitField named TxEnable--><spirit:name>TxEnable</spirit:name>
                  <spirit:description>MLP TX side enable.

0 : disabled
1 : enabled

Note: do not enable any non-zero vports before tx_enable is set, or in the same access as setting the tx_enable.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxEnable--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX side enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxEnable--></spirit:field>
               <spirit:field><!--BitField named TxVportEn--><spirit:name>TxVportEn</spirit:name>
                  <spirit:description>Vport enable field.

0 : vport disable.
1 : vport enabled.

Bit Mapping:
TxVportEn[0] = Vport 0 (enabled by default)
:
TxVportEn[7] = Vport 7

Note: do not enable any non-zero vports before tx_enable is set, or in the same access as setting the tx_enable.
Note: once enabled the MLP will attempt to establish a link automatically.
Note: once disabled the MLP will clear any packets in MLP cache and drop any further packets destined to the disabled vport.
Note: it is possible to disable VPORT0, use great caution.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxVportEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Vport enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxVportEn--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MlpConfig0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MLP configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MlpConfig0--></spirit:register>
            <spirit:register><!--Register named MlpConfig1--><spirit:name>MlpConfig1</spirit:name>
               <spirit:description>MLP configuration register 1.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x20130393</spirit:value>
                  <spirit:mask>0x7fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named TxW4RLimit--><spirit:name>TxW4RLimit</spirit:name>
                  <spirit:description>Wait for response limit field.

This field selects the number W4R events in a row permitted without indicating a loss of link. For example: a value of 3 will allow 3 W4R timeouts to occur without taking down the link, however on the 4th W4R timeout the link will be considered lost.

0    : INVALID - do not use
1-15 : VALID

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxW4RLimit--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x3</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Wait for response limit field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxW4RLimit--></spirit:field>
               <spirit:field><!--BitField named TxW4RVpWatch--><spirit:name>TxW4RVpWatch</spirit:name>
                  <spirit:description>Wait for response count vport select field.  This field selects a specific vport for which  to count the W4R interrupts.  This is count may differ from the total W4R interrupt generated in a multi-vport system.

Note: the associated count is located in the TxStatsETR.MlpTxVpW4RErr field.
Note: if this field is changed discard the first read of TxStatsETR.MlpTxVpW4RErr field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxW4RVpWatch--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Wait for response count vport select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxW4RVpWatch--></spirit:field>
               <spirit:field><!--BitField named TxW4RThresh--><spirit:name>TxW4RThresh</spirit:name>
                  <spirit:description>Wait for response threshold field.

This field sets the wait for response timeout period for stats and required data acknowledgments. A timeout occurs some time shortly after the timeout period; therefore this limit is considered a "minimum" timeout.

Note: each unit of this field represents 1024 phy clock cycles.

0-1 : invalid (do not use)
2   : minimum
254 : maximum
255 : invalid (do not use)

Optimal limit math:  (w4r_period/(1024/phy_clk_freq))
  - note: round up to guarantee minimum timeout period
Actual minimum math: (tx_w4r_limit*(1/phy_clk_freq)*1024)

Example: GMII - if desired minimum w4r_period is 125us
Optimal limit: 15.3
Actual minimum (tx_w4r_limit=15): 122.9us
Actual minimum (tx_w4r_limit=16): 131.1us

Example: MII  - if desired minimum w4r_period is 1ms
Optimal limit: 24.4
Actual minimum (tx_w4r_limit=24): 0.983ms
Actual minimum (tx_w4r_limit=25): 1.024ms

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxW4RThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x7</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Wait for response threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxW4RThresh--></spirit:field>
               <spirit:field><!--BitField named TxSidThresh--><spirit:name>TxSidThresh</spirit:name>
                  <spirit:description>MLP TX cache segment ID almost empty threshold field.

This field selects the amount of MLP TX cache space (in SIDs) required to allow the MLP TX to accept the next packet for transmission.  This SID level is set such that it will ensure space for a maximum sized data packet (1200bytes).

Each unit represents 32 bytes (1SID=32bytes):
00100110 : 1216 bytes

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxSidThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x26</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache segment ID almost empty threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxSidThresh--></spirit:field>
               <spirit:field><!--BitField named TxQidThresh--><spirit:name>TxQidThresh</spirit:name>
                  <spirit:description>MLP TX cache queue ID almost empty threshold field.

This field selects the number of dynamic QIDs that must remain available at all times.  This allows selection of the number of retriable packets in flight at the same time, since each retriable packet requires 1 dynamic QID for temporary storage.

Each unit represents 1 retriable packet:
0000 : 15 simultaneous retriable packets in flight
0001 : 14 simultaneous retriable packets in flight
0010 : 13 simultaneous retriable packets in flight
:
1110 : 01 retriable packet in flight
1111 : invalid (do not use)

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TxQidThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX cache queue ID almost empty threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TxQidThresh--></spirit:field>
               <spirit:field><!--BitField named ToCntThresh--><spirit:name>ToCntThresh</spirit:name>
                  <spirit:description>MLP TX vport status table timeout counter level threshold field.

This field selects the level of the vport status table timeout counter field that will generate an interrupt.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ToCntThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x4</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX vport status table timeout counter level threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ToCntThresh--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MlpConfig1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MLP configuration register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MlpConfig1--></spirit:register>
            <spirit:register><!--Register named PhyConfig--><spirit:name>PhyConfig</spirit:name>
               <spirit:description>PHY configuration register.  Special sequence instructions:
1) set Clm.PhyConfig.PhyMode.
2) set serial or parallel configuration options.
- write register.
3) IF using the parallel PHY: set Clm.PhyConfig.ParPhyRdy = 1.
- write register.

Note: For the parallel PHY the Clm.PhyConfig.ParPhyRdy field must be a seperate write due to clock domain timing issues. The ready signal is synchronized and used to indicate that the other configuration fields are ready to be used.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x1c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x110004a</spirit:value>
                  <spirit:mask>0xefffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named ParReady--><spirit:name>ParReady</spirit:name>
                  <spirit:description>Parallel PHY indication field.  Once all parallel PHY configuration fields have been set appropriately this field is asserted to indicate that the PRX and PTX modules can sample the configuration fields.

Note: Only assert this field following a reset.  This field is not self clearing and there is no need to clear this field once set.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParReady--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY ready indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParReady--></spirit:field>
               <spirit:field><!--BitField named ParMode--><spirit:name>ParMode</spirit:name>
                  <spirit:description>Parallel PHY mode selection field.  This field indicates the PHY mode of operation and/or the PHY speed of operation:

0000 = CLEI8
0001 = CLEI4
0010 = CLEI2
0011 = CLEI1
0100 = MII
0101 = GMII
0110 = TBI
0111 = Legacy TBI
1000 = TBI with Ethernet Framing
1001 = Legacy TBI with Ethernet Framing
1010 = Reserved (do not use)
1011 = Reserved (do not use)
1100 = Reserved (do not use)
1101 = Reserved (do not use)
1110 = Reserved (do not use)
1111 = Reserved (do not use)

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x5</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParMode--></spirit:field>
               <spirit:field><!--BitField named ParRedBit--><spirit:name>ParRedBit</spirit:name>
                  <spirit:description>Parallel PHY reduced pin interface, also known as double data rata "DDR", mode selection field.

0 = Normal data rate.
1 = Double data rate.

Note: Not valid with CLEI1.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParRedBit--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY reduced pin interface, also known as double data rata "DDR", mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParRedBit--></spirit:field>
               <spirit:field><!--BitField named ParIpfPack--><spirit:name>ParIpfPack</spirit:name>
                  <spirit:description>Parallel PHY IPF frame packing enable.

0 = Do not pack multiple frames within a MII frame.
1 = Allow packing of multiple frames within a MII frame.

Packing allows multiple cache frames to occupy a MII frame.  A new cache frame may be added to a currently open MII frame as long as this bit is set, the ParFrmThresh has not yet been achieved, and the VPORT is the same as the previous VPORT.

Note: only valid for GMII/MII modes.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParIpfPack--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY IPF frame packing enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParIpfPack--></spirit:field>
               <spirit:field><!--BitField named ParIfgMode--><spirit:name>ParIfgMode</spirit:name>
                  <spirit:description>Inter-frame gap mode select field. MII and GMII modes only.  This field allows selection of transmit bandwidth throttling options.  The IFG can be selected to be proportional to the previously transmitted frame size (PTFS - time tx_en is asserted).  In all cases the minimum IFG of 12 cycles is guaranteed, and for all frames under 64 bytes the IFG is set to 12 cycles.  The IFG for frames greater than or equal to 64 bytes is set according to the selected IFG mode:

00 - max 100% transmit - IFG = 12     cycles
01 - max 88%  transmit - IFG = PTFS/4 cycles (for PTFS&gt;64)
10 - max 75%  transmit - IFG = PTFS/2 cycles (for PTFS&gt;64)
11 - max 50%  transmit - IFG = PTFS   cycles (for PTFS&gt;64)</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParIfgMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Inter-frame gap mode select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParIfgMode--></spirit:field>
               <spirit:field><!--BitField named ParIdleThresh--><spirit:name>ParIdleThresh</spirit:name>
                  <spirit:description>Parallel PHY idle threshold.  This threshold determines the maximum number of IDLEs injected into the data stream following a cache packet before closing the current MII frame. If a new cache frame destined for the same VPORT, and ParIpfPack is set, is ready to send before the IDLEs are complete the new cache frame will append to the current MII frame.

Half Duplex: N/A - (set/leave 0)
Full Duplex (ParIpfPack == 0) : N/A - (set/leave 0)
Full Duplex (ParIpfPack != 0) : Each unit represents PHY_CLKs of IDLEs.
  0  = 000 IDLEs
  1  = 008 IDLEs
  31 = 248 IDLEs

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParIdleThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY idle threshold.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParIdleThresh--></spirit:field>
               <spirit:field><!--BitField named ParFrmThresh--><spirit:name>ParFrmThresh</spirit:name>
                  <spirit:description>Parallel PHY frame threshold.  This threshold determines the maximum number of bytes into an frame/transmission that a new packet will be allowed to begin in the same frame/transmission.

Note: each unit represents 4 payload bytes (does not include: pre,sfd,dmac,smac,etype and fcs) into the transmission.  Set 0 for no limit.
0   = No limit
16  = 64 bytes (minimum if L2 framing enabled)
64  = 256 bytes (maximum if trying to avoid spanning frames)
128 = 512 bytes
255 = 1020 bytes

Note: Max MII frame = 1500 bytes.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParFrmThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x40</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY frame threshold.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParFrmThresh--></spirit:field>
               <spirit:field><!--BitField named ParToutThresh--><spirit:name>ParToutThresh</spirit:name>
                  <spirit:description>This field selected the maximum number of PhyClks cycles where no incoming traffic is detected once a packet reception has started.  Lost EOF case.  On timeout the packet is capped to the MLP and a new SOF search begins.

Currently only supports (G)MII.  This value depends on L2F mode and presence of switches in system.  Set default for 128 clocks (direct connected l2f mode).

Note: each unit represents 32 PhyClks.  Set 0 for no limit.
0   = disabled
1   = 32 cycles
4   = 128 cycles (default)
255 = 8160 cycles

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParToutThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x4</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY reception timeout threshold.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParToutThresh--></spirit:field>
               <spirit:field><!--BitField named ParL2Frm--><spirit:name>ParL2Frm</spirit:name>
                  <spirit:description>Parallel PHY ethernet level 2 framing enable field.  This field is must NOT be set "1" unless PhyIPFEn is also set "1".

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ParL2Frm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Parallel PHY ethernet level 2 framing enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ParL2Frm--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named PhyConfig--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>PHY configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named PhyConfig--></spirit:register>
            <spirit:register><!--Register named EtherType--><spirit:name>EtherType</spirit:name>
               <spirit:description>Level 2 Framing EtherType</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x20</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0xffff</spirit:value>
                  <spirit:mask>0x80ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Eco--><spirit:name>Eco</spirit:name>
                  <spirit:description>ECO Enable to fix MII IFG

NOTE: Write Only for GE ASIC</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Eco--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>ECO Enable</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Eco--></spirit:field>
               <spirit:field><!--BitField named Ifg--><spirit:name>Ifg</spirit:name>
                  <spirit:description>When ECO is enabled the IFG for packets with less than 64 payload bytes is:
(Ifg + 2) * CTM PHY clock period (For MII spec compliance: (22 + 2) * 40 = 960ns).
When PhyConfig.ParIfgMode is 0 the programmed IFG applies to all packets.

NOTE: Write Only for GE ASIC</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>12</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Ifg--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x000</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Ifg</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Ifg--></spirit:field>
               <spirit:field><!--BitField named Type--><spirit:name>Type</spirit:name>
                  <spirit:description>Level 2 Framing EtherType

MAC Frame: PRE(7), SFD(1), DSTMAC(6), SRCMAC(6), EtherType(2), PAYLOAD(46-1500), FCS(4)

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Type--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0xffff</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Level 2 Framing EtherType</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Type--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named EtherType--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Level 2 Framing EtherType</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named EtherType--></spirit:register>
            <spirit:register><!--Register named MacSrcLsw--><spirit:name>MacSrcLsw</spirit:name>
               <spirit:description>Source MAC Address (least significant 24 bits).  As in "local address"</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x24</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Src--><spirit:name>Src</spirit:name>
                  <spirit:description>Source MAC Address (least significant 24 bits)

NOTE: MAC address = 48bits; ICRON_OUI(0x001b13) represents the most significant 24bits.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Src--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Src--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacSrcLsw--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacSrcLsw--></spirit:register>
            <spirit:register><!--Register named MacSrcMsw--><spirit:name>MacSrcMsw</spirit:name>
               <spirit:description>Source MAC Address (least significant 24 bits).  As in "local address"</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x28</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Src--><spirit:name>Src</spirit:name>
                  <spirit:description>Source MAC Address (least significant 24 bits)

NOTE: MAC address = 48bits; ICRON_OUI(0x001b13) represents the most significant 24bits.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Src--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Src--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacSrcMsw--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacSrcMsw--></spirit:register>
            <spirit:register><!--Register named MacDstLsw--><spirit:name>MacDstLsw</spirit:name>
               <spirit:description>Destination MAC Address (least significant 24 bits) and LEX Destination MAC table control fields.  As in "remote address".

REX NOTE: Only the Msw field of the register is required.
LEX NOTE: Software must configure the LEX Destination MAC table appropriately when L2 framing enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x2C</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Dst--><spirit:name>Dst</spirit:name>
                  <spirit:description>Destination MAC Address (least significant 24 bits).

REX NOTE: this field is set with the LEX MAC Address.
LEX NOTE: this field is set with the REX MAC Address for the current access.  Only valid when WNR=1.

NOTE: MAC address = 48bits; ICRON_OUI(0x001b13) represents the most significant 24bits.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Dst--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Destination MAC Address (least significant 24 bits).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dst--></spirit:field>
               <spirit:field><!--BitField named Multi--><spirit:name>Multi</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC address is MultiCast.  Setting this field in the LEX MAC address table will force the multicast bit of the destination MAC address field to be set during transmission.  Each VPORT can be individually configured to send as Uni or MultiCast.

0 = UniCast
1 = MultiCast

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Multi--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC address is MultiCast</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Multi--></spirit:field>
               <spirit:field><!--BitField named Vport--><spirit:name>Vport</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC table Vport index field.  This field selects the Vport for which the MAC will be or is associated with.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Vport--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC table Vport index field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vport--></spirit:field>
               <spirit:field><!--BitField named WNR--><spirit:name>WNR</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC table read/write select field.

0 = Read
1 = Write

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named WNR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC table read/write select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WNR--></spirit:field>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC table access go field.  Set '1' to initiate an access.  This field is cleared once access is complete.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC table access go field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacDst--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Destination MAC Address (least significant 24 bits) and LEX Destination MAC table control fields.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacDstLsw--></spirit:register>
            <spirit:register><!--Register named MacDstMsw--><spirit:name>MacDstMsw</spirit:name>
               <spirit:description>Source MAC Address (Most significant 24 bits).  As in "remote address"</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x30</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Dst--><spirit:name>Dst</spirit:name>
                  <spirit:description>Destination MAC Address (most significant 24 bits)

NOTE: MAC address = 48bits; ICRON_OUI(0x001b13) represents the most significant 24bits.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Dst--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dst--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacDstMsw--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Source MAC Address (least significant 24 bits)</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacDstMsw--></spirit:register>
            <spirit:register><!--Register named MacRdDstLsw--><spirit:name>MacRdDstLsw</spirit:name>
               <spirit:description>LEX ONLY REGISTER: Destination MAC Address table read result (least significant 24 bits).</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x34</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Dst--><spirit:name>Dst</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC Address table read result (least significant 24 bits).

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Dst--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC Address table read result (least significant 24 bits).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dst--></spirit:field>
               <spirit:field><!--BitField named Multi--><spirit:name>Multi</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC address is MultiCast read result.

0 = UniCast
1 = MultiCast

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Multi--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC address is MultiCast read result.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Multi--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacRdDstLsw--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>LEX ONLY REGISTER: Destination MAC Address table read result (least significant 24 bits).</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacRdDstLsw--></spirit:register>
            <spirit:register><!--Register named MacRdDstMsw--><spirit:name>MacRdDstMsw</spirit:name>
               <spirit:description>LEX ONLY REGISTER: Destination MAC Address table read result (least significant 24 bits).</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x38</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Dst--><spirit:name>Dst</spirit:name>
                  <spirit:description>LEX ONLY FIELD: Destination MAC Address table read result (least significant 24 bits).

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>24</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Dst--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX ONLY FIELD: Destination MAC Address table read result (least significant 24 bits).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dst--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MacRdDstMsw--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>LEX ONLY REGISTER: Destination MAC Address table read result (least significant 24 bits).</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MacRdDstMsw--></spirit:register>
            <spirit:register><!--Register named TxStats--><spirit:name>TxStats</spirit:name>
               <spirit:description>Statistic counter for transmission register.

Note: All fields are cleared on read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x3C</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named AllType--><spirit:name>AllType</spirit:name>
                  <spirit:description>Transmitted alltype frame count field.  This field is incremented every time the CLM has determined that a frame with any tagtype has been transmitted.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>15</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named AllType--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transmitted alltype frame count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AllType--></spirit:field>
               <spirit:field><!--BitField named AllTypeOflow--><spirit:name>AllTypeOflow</spirit:name>
                  <spirit:description>Transmitted alltype frame counter overflow field.  This field is asserted when the Clm.TxStats.AllType counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named AllTypeOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transmitted alltype frame counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AllTypeOflow--></spirit:field>
               <spirit:field><!--BitField named TagType--><spirit:name>TagType</spirit:name>
                  <spirit:description>Transmitted tagtype frame count field.  This field is incremented every time the CLM has determined that a frame with tagtype matching CLM.RxStats.TagSel has been transmitted.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TagType--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transmitted tagtype frame count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagType--></spirit:field>
               <spirit:field><!--BitField named TagTypeOflow--><spirit:name>TagTypeOflow</spirit:name>
                  <spirit:description>Transmitted tagtype frame counter overflow field.  This field is asserted when the Clm.TxStats.TagType counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TagTypeOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transmitted tagtype frame counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagTypeOflow--></spirit:field>
               <spirit:field><!--BitField named TagSel--><spirit:name>TagSel</spirit:name>
                  <spirit:description>Transmitted frame count tagtype select field.  See the frame structure document description sheet for definitions of tagtypes.  This allows counting only a selected frame type.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TagSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transmitted frame count tagtype select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagSel--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named TxStats--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Statistic counter for transmission register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named TxStats--></spirit:register>
            <spirit:register><!--Register named RxStats--><spirit:name>RxStats</spirit:name>
               <spirit:description>Statistic counter for reception register.

Note: All fields are cleared on read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x40</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named AllType--><spirit:name>AllType</spirit:name>
                  <spirit:description>Received alltype frame count field.  This field is incremented every time the CLM has determined that a frame with any tagtype has been received.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>15</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named AllType--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received alltype frame count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AllType--></spirit:field>
               <spirit:field><!--BitField named AllTypeOflow--><spirit:name>AllTypeOflow</spirit:name>
                  <spirit:description>Received alltype frame counter overflow field.  This field is asserted when the Clm.RxStats.AllType counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named AllTypeOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received alltype frame counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AllTypeOflow--></spirit:field>
               <spirit:field><!--BitField named TagType--><spirit:name>TagType</spirit:name>
                  <spirit:description>Received tagtype frame count field.  This field is incremented every time the CLM has determined that a frame with tagtype matching CLM.RxStats.TagSel has been received.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TagType--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received tagtype frame count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagType--></spirit:field>
               <spirit:field><!--BitField named TagTypeOflow--><spirit:name>TagTypeOflow</spirit:name>
                  <spirit:description>Received tagtype frame counter overflow field.  This field is asserted when the Clm.RxStats.TagType counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TagTypeOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received tagtype frame counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagTypeOflow--></spirit:field>
               <spirit:field><!--BitField named TagSel--><spirit:name>TagSel</spirit:name>
                  <spirit:description>Received frame count tagtype select field.  See the frame structure document description sheet for definitions of tagtypes.  This allows counting only a selected frame type.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TagSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received frame count tagtype select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagSel--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named RxStats--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Statistic counter for reception register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named RxStats--></spirit:register>
            <spirit:register><!--Register named TxStatsETR--><spirit:name>TxStatsETR</spirit:name>
               <spirit:description>Transmit statistic counters for errors/timeouts/retries register.

Note: All fields are cleared on read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x44</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named MlpTxVpDropErr--><spirit:name>MlpTxVpDropErr</spirit:name>
                  <spirit:description>MLP TX data/datn drop, due to invalid vport, event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX data/datn drop, due to invalid vport, event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpDropErrOflow--><spirit:name>MlpTxVpDropErrOflow</spirit:name>
                  <spirit:description>MLP TX data/datn drop, due to invalid vport, event counter overflow field.  This field is asserted when the Clm.TxStatETR.MlpTxVpDropWrn counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpDropErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX data/datn drop, due to invalid vport, event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpDropErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrn--><spirit:name>MlpTxRtyWrn</spirit:name>
                  <spirit:description>MLP TX link retry event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyWrn--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrn--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrnOflow--><spirit:name>MlpTxRtyWrnOflow</spirit:name>
                  <spirit:description>MLP TX link retry event counter overflow field. This field is asserted when the Clm.TxStatETR.MlpTxRtyWrn counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyWrnOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrnOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErr--><spirit:name>MlpTxRtyErr</spirit:name>
                  <spirit:description>MLP TX link retry failure event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry failure event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErrOflow--><spirit:name>MlpTxRtyErrOflow</spirit:name>
                  <spirit:description>MLP TX link retry failure event counter overflow field.  This field is asserted when the Clm.StatCntETR.MlpTxRtyErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry failure event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErr--><spirit:name>MlpTxW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErrOflow--><spirit:name>MlpTxW4RErrOflow</spirit:name>
                  <spirit:description>MLP TX link wait for response error event counter overflow field.  This field is asserted when the Clm.StatCntETR.MlpTxW4RErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxW4RErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpW4RErr--><spirit:name>MlpTxVpW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error event counter (vport specific) field.  This field is incremented when a wait for response event has occurred to a specified vport.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error event counter (vport specific) field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxVpW4RErrOflow--><spirit:name>MlpTxVpW4RErrOflow</spirit:name>
                  <spirit:description>MLP TX link wait for response error event counter overflow field.  This field is asserted when the Clm.StatCntETR.MlpTxVpW4RErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpW4RErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpW4RErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpTxToCntLvl--><spirit:name>MlpTxToCntLvl</spirit:name>
                  <spirit:description>MLP TX highest vport status table timeout counter level achieved field.  This field represents the highest vport status table timeout counter level achieved since the last read of this register.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxToCntLvl--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX highest vport status table timeout counter level achieved field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxToCntLvl--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named TxStatsETR--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Transmit statistic counters for errors/timeouts/retries register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named TxStatsETR--></spirit:register>
            <spirit:register><!--Register named RxStatsETR--><spirit:name>RxStatsETR</spirit:name>
               <spirit:description>Statistic counters for errors/timeouts/retries register.

Note: All fields are cleared on read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x48</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named MlpRxFcDropErr--><spirit:name>MlpRxFcDropErr</spirit:name>
                  <spirit:description>MLP RX packet dropped, due to local flow control condition, event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxFcDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX packet dropped, due to local flow control condition, event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxFcDropErrOflow--><spirit:name>MlpRxFcDropErrOflow</spirit:name>
                  <spirit:description>MLP RX packet dropped, due to local flow control condition, event counter overflow field.  This field is asserted when the Clm.RxStatsETR.MlpTxFcDrop counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxFcDropErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX packet dropped, due to local flow control condition, event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxHdrErr--><spirit:name>MlpRxHdrErr</spirit:name>
                  <spirit:description>MLP RX header crc validation failure event counter field.  This field is incremented when a crc failure has been detected in the MLP header.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxHdrErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX header crc validation failure event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxHdrErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxHdrErrOflow--><spirit:name>MlpRxHdrErrOflow</spirit:name>
                  <spirit:description>MLP RX header crc validation failure event counter overflow field.  This field is asserted when the Clm.RxStatsETR.MlpRxHdrErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxHdrErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX header crc validation failure event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxHdrErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErr--><spirit:name>MlpRxPldErr</spirit:name>
                  <spirit:description>MLP RX payload crc validation failure event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxPldErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX payload crc validation failure event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErrOflow--><spirit:name>MlpRxPldErrOflow</spirit:name>
                  <spirit:description>MLP RX payload crc validation failure event counter overflow field.  This field is asserted when the Clm.RxStatsETR.MlpRxPldErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxPldErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX payload crc validation failure event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErrOflow--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErr--><spirit:name>MlpRxSeqErr</spirit:name>
                  <spirit:description>MLP RX sequence error event counter field.

Note: this field only increments with the interrupt source pulse.  Please see associated interrupt source field for rules regarding generation.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxSeqErr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sequence error event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErrOflow--><spirit:name>MlpRxSeqErrOflow</spirit:name>
                  <spirit:description>MLP RX sequence error event counter overflow field. This field is asserted when the Clm.RxStatsETR.MlpRxSeqErr counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxSeqErrOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX sequence error event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErrOflow--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrTout--><spirit:name>PhyDfrmErrTout</spirit:name>
                  <spirit:description>PHY IPF deframer timeout event counter field.  This field is incremented every time the IPF deframer has detected an timeout in the incoming reception stream.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrTout--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY IPF deframer timeout evemt counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrTout--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrToutOflow--><spirit:name>PhyDfrmErrToutOflow</spirit:name>
                  <spirit:description>PHY IPF deframer timeout event counter overflow field.  This field is asserted when the Clm.RxStatsETR.PhyDfrmErrTout counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrToutOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY IPF deframer timeout event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrToutOflow--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrIpf--><spirit:name>PhyDfrmErrIpf</spirit:name>
                  <spirit:description>PHY IPF deframer error event counter field.  This field is incremented every time the IPF deframer has detected an error in the incoming reception stream.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrIpf--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY IPF deframer error evemt counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrIpf--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrIpfOflow--><spirit:name>PhyDfrmErrIpfOflow</spirit:name>
                  <spirit:description>PHY IPF deframer error event counter overflow field.  This field is asserted when the Clm.RxStatsETR.PhyDfrmErrIpf counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrIpfOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY IPF deframer error event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrIpfOflow--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcUsb--><spirit:name>PhyDfrmErrCrcUsb</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error event counter field (USB frames).  This field is incremented every time the deframer has detected a reception error in the MII level 2 frame.

Note: only valid when ParL2Frm = 1</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrCrcUsb--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error event counter field (USB frames).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcUsb--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrCrcUsbOflow--><spirit:name>PhyDfrmErrCrcUsbOflow</spirit:name>
                  <spirit:description>PHY deframer MII level 2 framing CRC error event counter overflow field (USB frames).  This field is asserted when the Clm.RxStatsETR.PhyDfrmErrCrc counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrCrcUsbOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer MII level 2 framing CRC error event counter overflow field (USB frames).</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrCrcUsbOflow--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrFrm--><spirit:name>PhyDfrmErrFrm</spirit:name>
                  <spirit:description>PHY deframer framing error event counter field.  This field is incremented every time the PHY deframer has determined that a framing error in the reception stream has occurred.  In this case the PHY deframer will flush the remainder of the transmission.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrFrm--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer framing error event counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrFrm--></spirit:field>
               <spirit:field><!--BitField named PhyDfrmErrFrmOflow--><spirit:name>PhyDfrmErrFrmOflow</spirit:name>
                  <spirit:description>PHY deframer framing error event counter overflow field. This field is asserted when the Clm.StatCntETR.PhyDfrmErrFrm counter field overflows.

0 = counter has not overflowed.
1 = counter has overflowed.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyDfrmErrFrmOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY deframer framing error event counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyDfrmErrFrmOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named RxStatsETR--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Statistic counters for errors/timeouts/retries register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named RxStatsETR--></spirit:register>
            <spirit:register><!--Register named MlpStatus--><spirit:name>MlpStatus</spirit:name>
               <spirit:description>MLP status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4C</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named IcsInitDone--><spirit:name>IcsInitDone</spirit:name>
                  <spirit:description>Cache initialization complete status field.

0 : MLP cache not initialized.
1 : MLP cache initialized.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IcsInitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache initialization complete status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IcsInitDone--></spirit:field>
               <spirit:field><!--BitField named VpLinkStatus--><spirit:name>VpLinkStatus</spirit:name>
                  <spirit:description>Vport link status field.

0 : vport link not established or lost.
1 : vport link established.

Bit Mapping:
VpLinkStatus[0] = vport 1
:
VpLinkStatus[6] = vport 7

Note: vport 0 does not have a link status</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named VpLinkStatus--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Vport link status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named VpLinkStatus--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MlpStatus--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MLP status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MlpStatus--></spirit:register>
            <spirit:register><!--Register named MlpIcsStatus--><spirit:name>MlpIcsStatus</spirit:name>
               <spirit:description>MLP cache status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x50</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0xC00C0000</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named SidFreeCntLow--><spirit:name>SidFreeCntLow</spirit:name>
                  <spirit:description>Cache Segment ID (SID) free count low point since last read of this register field.

Note: This field is cleared on read of this register.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>9</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidFreeCntLow--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Segment ID (SID) free count low point since last read of this register field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidFreeCntLow--></spirit:field>
               <spirit:field><!--BitField named SidFreeCnt--><spirit:name>SidFreeCnt</spirit:name>
                  <spirit:description>Cache Segment ID (SID) free count field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>9</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidFreeCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Segment ID (SID) free count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidFreeCnt--></spirit:field>
               <spirit:field><!--BitField named SidAEmpty--><spirit:name>SidAEmpty</spirit:name>
                  <spirit:description>Cache Segment ID (SID) almost empty (l or 0 SIDs remain) indicator field.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Segment ID (SID) almost empty (l or 0 SIDs remain) indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmpty--></spirit:field>
               <spirit:field><!--BitField named SidEmpty--><spirit:name>SidEmpty</spirit:name>
                  <spirit:description>Cache Segment ID (SID) empty (0 SIDs remain) indicator field.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Segment ID (SID) empty (0 SIDs remain) indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidEmpty--></spirit:field>
               <spirit:field><!--BitField named QidFreeCntLow--><spirit:name>QidFreeCntLow</spirit:name>
                  <spirit:description>Cache Queue ID (QID) free count low point since last read of this register field.

Note: This field is cleared on read of this register.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidFreeCntLow--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Queue ID (QID) free count low point since last read of this register field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidFreeCntLow--></spirit:field>
               <spirit:field><!--BitField named QidFreeCnt--><spirit:name>QidFreeCnt</spirit:name>
                  <spirit:description>Cache Queue ID (QID) free count field.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidFreeCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Queue ID (QID) free count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidFreeCnt--></spirit:field>
               <spirit:field><!--BitField named QidAEmpty--><spirit:name>QidAEmpty</spirit:name>
                  <spirit:description>Cache Queue ID (QID) almost empty (l or 0 SIDs remain) indicator field.</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Queue ID (QID) almost empty (l or 0 SIDs remain) indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidAEmpty--></spirit:field>
               <spirit:field><!--BitField named QidEmpty--><spirit:name>QidEmpty</spirit:name>
                  <spirit:description>Cache Queue ID (QID) empty (0 SIDs remain) indicator field.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Cache Queue ID (QID) empty (0 SIDs remain) indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidEmpty--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MlpIcsStatus--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MLP cache status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MlpIcsStatus--></spirit:register>
            <spirit:register><!--Register named MlpVpHold--><spirit:name>MlpVpHold</spirit:name>
               <spirit:description>MLP error/warning vport hold register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x54</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1fffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named MlpTxVpDropErr--><spirit:name>MlpTxVpDropErr</spirit:name>
                  <spirit:description>MLP TX packet dropped vport hold field.  When a Clm.IntSrc.MlpTxVpDrop event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxVpDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX packet dropped vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxVpDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyWrn--><spirit:name>MlpTxRtyWrn</spirit:name>
                  <spirit:description>MLP TX link retry event vport hold field. When a Clm.IntSrc.MlpTxRtyWrn event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyWrn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry event vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyWrn--></spirit:field>
               <spirit:field><!--BitField named MlpTxRtyErr--><spirit:name>MlpTxRtyErr</spirit:name>
                  <spirit:description>MLP TX link retry failure event vport hold field. When a Clm.IntSrc.MlpTxRtyErr event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxRtyErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link retry failure event vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxRtyErr--></spirit:field>
               <spirit:field><!--BitField named MlpTxW4RErr--><spirit:name>MlpTxW4RErr</spirit:name>
                  <spirit:description>MLP TX link wait for response error vport hold field. When a Clm.IntSrc.MlpTxW4RErr event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpTxW4RErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP TX link wait for response error vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpTxW4RErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxFcDropErr--><spirit:name>MlpRxFcDropErr</spirit:name>
                  <spirit:description>MLP RX packet dropped vport hold field.  When a Clm.IntSrc.MlpRxFcDropErr event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxFcDropErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX packet dropped vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxFcDropErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxSeqErr--><spirit:name>MlpRxSeqErr</spirit:name>
                  <spirit:description>MLP RX receive sequence error vport hold field.  When a Clm.IntSrc.MlpRxSeqErr event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxSeqErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX receive sequence error vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxSeqErr--></spirit:field>
               <spirit:field><!--BitField named MlpRxPldErr--><spirit:name>MlpRxPldErr</spirit:name>
                  <spirit:description>MLP RX payload crc error vport hold field.  When a Clm.IntSrc.MlpRxPldErr event occurs the associated vport is held in this field.

Note: In cases of multiple events only the first vport is held in this field.  Reading this register will allow vport to be captured/updated for next event.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MlpRxPldErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MLP RX payload crc error vport hold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MlpRxPldErr--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MlpVpHold--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MLP error/warning vport hold register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MlpVpHold--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named Clm--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription/>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named Clm--></spirit:addressBlock>
         <!--
					 Bits in least addressable unit.  This defines how the address increments.
					 If this changes be sure to change the range of the AddressBlock and also
					 the addresses.
	--><spirit:addressUnitBits>8</spirit:addressUnitBits>
         <!--MemoryMap named ClmCpuMemMap--></spirit:memoryMap>
   </spirit:memoryMaps>
   <spirit:parameters/>
   <spirit:vendorExtensions><!--Component named Clm--><pdt:sysLevelOffset>0x20000200</pdt:sysLevelOffset>
      <pdt:description>Communications link module (CLM) register block.</pdt:description>
      <pdt:instanceClass>Component</pdt:instanceClass>
      <pdt:briefDescription>Communications link module (CLM) register block.</pdt:briefDescription>
      <pdt:developerComments/>
      <pdt:indexTags/>
      <pdt:related/>
      <pdt:visibleToRoles/>
   </spirit:vendorExtensions>
   <!--Component named Clm--></spirit:component>
