<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:pdt="PDT" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4"><!--Component named XCSR--><spirit:vendor>vendor</spirit:vendor>
   <spirit:library>lib</spirit:library>
   <spirit:name>XCSR</spirit:name>
   <spirit:version>1.1</spirit:version>
   <spirit:memoryMaps>
      <spirit:memoryMap><!--MemoryMap named XCSRCpuMemMap--><spirit:name>XCSRCpuMemMap</spirit:name>
         <spirit:addressBlock><!--AddressBlock named XUSB--><spirit:name>XUSB</spirit:name>
            <spirit:description>Extreme USB (XUSB) global interface register block.  This register block contains registers that contain fields that drive and/or are driven from various places within the XUSB core.</spirit:description>
            <spirit:baseAddress>0x0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x48</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Id--><spirit:name>Id</spirit:name>
               <spirit:description>XCSR registers ASCII identification register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x58435352</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Id--><spirit:name>Id</spirit:name>
                  <spirit:description>XCSR registers ASCII identification field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Id--><spirit:vendorExtensions>
                     <pdt:valueType>ascii</pdt:valueType>
                     <pdt:resetValue>0x58435352</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCSR registers ASCII identification field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Id--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Id--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCSR registers ASCII identification register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Id--></spirit:register>
            <spirit:register><!--Register named Rev--><spirit:name>Rev</spirit:name>
               <spirit:description>XCSR registers CVS revision register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x131</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named CvsMinor--><spirit:name>CvsMinor</spirit:name>
                  <spirit:description>XCSR registers CVS minor revision field.  This field relates to the post-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMinor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x48</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCSR registers CVS minor revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMinor--></spirit:field>
               <spirit:field><!--BitField named CvsMajor--><spirit:name>CvsMajor</spirit:name>
                  <spirit:description>XCSR registers CVS major revision field.  This field relates to the pre-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMajor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCSR registers CVS major revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMajor--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rev--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCSR registers CVS revision register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rev--></spirit:register>
            <spirit:register><!--Register named ModEn--><spirit:name>ModEn</spirit:name>
               <spirit:description>XUSB module enables</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xf</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named XcrmEn--><spirit:name>XcrmEn</spirit:name>
                  <spirit:description>XCRM enable field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XcrmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XcrmEn--></spirit:field>
               <spirit:field><!--BitField named XctmEn--><spirit:name>XctmEn</spirit:name>
                  <spirit:description>XCTM enable field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XctmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XctmEn--></spirit:field>
               <spirit:field><!--BitField named XurmEn--><spirit:name>XurmEn</spirit:name>
                  <spirit:description>XURM enable field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XurmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XurmEn--></spirit:field>
               <spirit:field><!--BitField named XutmEn--><spirit:name>XutmEn</spirit:name>
                  <spirit:description>XUTM enable field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XutmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XutmEn--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ModEn--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XUSB module enables</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ModEn--></spirit:register>
            <spirit:register><!--Register named IntEn0--><spirit:name>IntEn0</spirit:name>
               <spirit:description>Interrupt enable register 0.

0 = interrupt disabled.
1 = interrupt enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x30f0fff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexCtrl--><spirit:name>Irq0LexCtrl</spirit:name>
                  <spirit:description>LexCtrl static QID status interrupt enable field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexCtrl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexCtrl static QID status interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexCtrl--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRx--><spirit:name>Irq1CpuRx</spirit:name>
                  <spirit:description>CpuRx static QID status interrupt enable field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1CpuRx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRx static QID status interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRx--></spirit:field>

               <spirit:field><!--BitField named Irq1CpuRxEnet--><spirit:name>Irq1CpuRxEnet</spirit:name>
                  <spirit:description>CpuRxEnet static QID status interrupt enable field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1CpuRxEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRxEnet static QID status interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRxEnet--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRspQid--><spirit:name>Irq0LexRspQid</spirit:name>
                  <spirit:description>LexRspQid static QID status interrupt enable field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRspQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexRspQid static QID status interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRspQid--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEmpty--><spirit:name>Irq2XicsSidEmpty</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEvent--><spirit:name>Irq2XicsSidEvent</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsSidEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEvent--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidEmpty--><spirit:name>Irq2XicsQidEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO empty interrupt enable field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO empty interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidAEmpty--><spirit:name>Irq2XicsQidAEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO almost empty threshold interrupt enable field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO almost empty threshold interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidNew--><spirit:name>Irq2XicsQidNew</spirit:name>
                  <spirit:description>XICS QID new request error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsQidNew--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID new request error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidNew--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidRet--><spirit:name>Irq2XicsQidRet</spirit:name>
                  <spirit:description>XICS QID return request error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsQidRet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID return request error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidRet--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsUflow--><spirit:name>Irq2XicsUflow</spirit:name>
                  <spirit:description>XICS underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsOflow--><spirit:name>Irq2XicsOflow</spirit:name>
                  <spirit:description>XICS overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XicsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoUflow--><spirit:name>Irq2XurmFifoUflow</spirit:name>
                  <spirit:description>XURM receive fifo underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XurmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoOflow--><spirit:name>Irq2XurmFifoOflow</spirit:name>
                  <spirit:description>XURM receive fifo overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XurmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmCmdErr--><spirit:name>Irq2XurmCmdErr</spirit:name>
                  <spirit:description>XURM command error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XurmCmdErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM command error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmCmdErr--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmPktLimit--><spirit:name>Irq2XurmPktLimit</spirit:name>
                  <spirit:description>XURM packet limit error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XurmPktLimit--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM packet limit error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmPktLimit--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoUflow--><spirit:name>Irq2XutmFifoUflow</spirit:name>
                  <spirit:description>XUTM fifo underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XutmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoOflow--><spirit:name>Irq2XutmFifoOflow</spirit:name>
                  <spirit:description>XUTM fifo overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq2XutmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntEn0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt enable register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntEn0--></spirit:register>
            <spirit:register><!--Register named IntEn1--><spirit:name>IntEn1</spirit:name>
               <spirit:description>Interrupt enable register 1.

0 = interrupt disabled.
1 = interrupt enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x371ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq3XcrmNotInSys--><spirit:name>Irq3XcrmNotInSys</spirit:name>
                  <spirit:description>XCRM upstream packet address/endpoint not in-sys interrupt enable field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmNotInSys--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM upstream packet address/endpoint not in-sys interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmNotInSys--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoUflow--><spirit:name>Irq3XcrmAfifoUflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoOflow--><spirit:name>Irq3XcrmAfifoOflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoSync--><spirit:name>Irq3XcrmAfifoSync</spirit:name>
                  <spirit:description>XCRM AFIFOs have lost synchonization interrupt enable field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmAfifoSync--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM AFIFOs have lost synchonization interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoSync--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmDropFrm--><spirit:name>Irq3XcrmDropFrm</spirit:name>
                  <spirit:description>XCRM frame drop error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmDropFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame drop error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmDropFrm--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFraming--><spirit:name>Irq3XcrmFraming</spirit:name>
                  <spirit:description>XCRM framing error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmFraming--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM framing error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFraming--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFrmCrc--><spirit:name>Irq3XcrmFrmCrc</spirit:name>
                  <spirit:description>XCRM frame header CRC error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmFrmCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame header CRC error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFrmCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmPldCrc--><spirit:name>Irq3XcrmPldCrc</spirit:name>
                  <spirit:description>XCRM payload CRC error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmPldCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM payload CRC error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmPldCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmTout--><spirit:name>Irq3XcrmTout</spirit:name>
                  <spirit:description>XCRM srdy timeout interrupt enable field.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XcrmTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM srdy timeout interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmTout--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoUflow--><spirit:name>Irq3XctmAfifoUflow</spirit:name>
                  <spirit:description>XCTM AFIFO underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XctmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoOflow--><spirit:name>Irq3XctmAfifoOflow</spirit:name>
                  <spirit:description>XCTM AFIFO overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XctmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmPkt--><spirit:name>Irq3XctmPkt</spirit:name>
                  <spirit:description>XCTM packet framing error interrupt enable field.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XctmPkt--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM packet framing error interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmPkt--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventRemote--><spirit:name>Irq3XflcEventRemote</spirit:name>
                  <spirit:description>XFLC remote event interrupt enable.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XflcEventRemote--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC remote event interrupt enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventRemote--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventLocal--><spirit:name>Irq3XflcEventLocal</spirit:name>
                  <spirit:description>XFLC local event interrupt enable.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq3XflcEventLocal--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC local event interrupt enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventLocal--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntEn1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt enable register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntEn1--></spirit:register>
            <spirit:register><!--Register named IntFlg0--><spirit:name>IntFlg0</spirit:name>
               <spirit:description>Interrupt flag register 0.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x30f0fff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexCtrl--><spirit:name>Irq0LexCtrl</spirit:name>
                  <spirit:description>LexCtrl static QID status interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexCtrl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexCtrl static QID status interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexCtrl--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRx--><spirit:name>Irq1CpuRx</spirit:name>
                  <spirit:description>CpuRx static QID status interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1CpuRx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRx static QID status interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRx--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRxEnet--><spirit:name>Irq1CpuRxEnet</spirit:name>
                  <spirit:description>CpuRxEnet static QID status interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1CpuRxEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRxEnet static QID status interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRxEnet--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRspQid--><spirit:name>Irq0LexRspQid</spirit:name>
                  <spirit:description>LexRspQid static QID status interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRspQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexRspQid static QID status interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRspQid--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEmpty--><spirit:name>Irq2XicsSidEmpty</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEvent--><spirit:name>Irq2XicsSidEvent</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set. This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsSidEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEvent--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidEmpty--><spirit:name>Irq2XicsQidEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO empty interrupt flag field.

LEVEL SENSITIVE INTERRUPT:
This field is set when the corresponding interrupt source field and the corresponding interrupt enable field are set.  This field is cleared by writing the corresponding interrupt clear field '1' while the interrupt source field is '0'.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidAEmpty--><spirit:name>Irq2XicsQidAEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO almost empty threshold interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: INFORMATIONAL/WARNING</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO almost empty threshold interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidNew--><spirit:name>Irq2XicsQidNew</spirit:name>
                  <spirit:description>XICS QID new request error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidNew--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID new request error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidNew--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidRet--><spirit:name>Irq2XicsQidRet</spirit:name>
                  <spirit:description>XICS QID return request error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidRet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID return request error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidRet--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsUflow--><spirit:name>Irq2XicsUflow</spirit:name>
                  <spirit:description>XICS underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsOflow--><spirit:name>Irq2XicsOflow</spirit:name>
                  <spirit:description>XICS overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoUflow--><spirit:name>Irq2XurmFifoUflow</spirit:name>
                  <spirit:description>XURM receive fifo underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoOflow--><spirit:name>Irq2XurmFifoOflow</spirit:name>
                  <spirit:description>XURM receive fifo overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmCmdErr--><spirit:name>Irq2XurmCmdErr</spirit:name>
                  <spirit:description>XURM command error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmCmdErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM command error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmCmdErr--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmPktLimit--><spirit:name>Irq2XurmPktLimit</spirit:name>
                  <spirit:description>XURM packet limit error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmPktLimit--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM packet limit error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmPktLimit--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoUflow--><spirit:name>Irq2XutmFifoUflow</spirit:name>
                  <spirit:description>XUTM fifo underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XutmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoOflow--><spirit:name>Irq2XutmFifoOflow</spirit:name>
                  <spirit:description>XUTM fifo overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XutmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntFlg0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt flag register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntFlg0--></spirit:register>
            <spirit:register><!--Register named IntFlg1--><spirit:name>IntFlg1</spirit:name>
               <spirit:description>Interrupt flag register 1.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x371ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq3XcrmNotInSys--><spirit:name>Irq3XcrmNotInSys</spirit:name>
                  <spirit:description>XCRM upstream packet address/endpoint not in-sys interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmNotInSys--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM upstream packet address/endpoint not in-sys interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmNotInSys--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoUflow--><spirit:name>Irq3XcrmAfifoUflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoOflow--><spirit:name>Irq3XcrmAfifoOflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoSync--><spirit:name>Irq3XcrmAfifoSync</spirit:name>
                  <spirit:description>XCRM AFIFOs have lost synchonization interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoSync--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM AFIFOs have lost synchonization interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoSync--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmDropFrm--><spirit:name>Irq3XcrmDropFrm</spirit:name>
                  <spirit:description>XCRM frame drop error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmDropFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame drop error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmDropFrm--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFraming--><spirit:name>Irq3XcrmFraming</spirit:name>
                  <spirit:description>XCRM framing error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmFraming--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM framing error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFraming--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFrmCrc--><spirit:name>Irq3XcrmFrmCrc</spirit:name>
                  <spirit:description>XCRM frame header CRC error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmFrmCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame header CRC error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFrmCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmPldCrc--><spirit:name>Irq3XcrmPldCrc</spirit:name>
                  <spirit:description>XCRM payload CRC error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmPldCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM payload CRC error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmPldCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmTout--><spirit:name>Irq3XcrmTout</spirit:name>
                  <spirit:description>XCRM srdy timeout interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: WARNING</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM srdy timeout interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmTout--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoUflow--><spirit:name>Irq3XctmAfifoUflow</spirit:name>
                  <spirit:description>XCTM AFIFO underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoOflow--><spirit:name>Irq3XctmAfifoOflow</spirit:name>
                  <spirit:description>XCTM AFIFO overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmPkt--><spirit:name>Irq3XctmPkt</spirit:name>
                  <spirit:description>XCTM packet framing error interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: FAILURE</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmPkt--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM packet framing error interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmPkt--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventRemote--><spirit:name>Irq3XflcEventRemote</spirit:name>
                  <spirit:description>XFLC remote event interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set. This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XflcEventRemote--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC remote event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventRemote--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventLocal--><spirit:name>Irq3XflcEventLocal</spirit:name>
                  <spirit:description>XFLC local event interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set. This field is cleared by writing the corresponding interrupt clear field '1'.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XflcEventLocal--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC local event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventLocal--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntFlg1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt flag register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntFlg1--></spirit:register>
            <spirit:register><!--Register named IntSrc0--><spirit:name>IntSrc0</spirit:name>
               <spirit:description>Interrupt source register 0.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x1c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x30f0fff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexCtrl--><spirit:name>Irq0LexCtrl</spirit:name>
                  <spirit:description>LexCtrl static QID status interrupt source field.  This field is asserted while the LexCtrl static QID status is equal to the condition defined by XUSB.SQidIntCtrl.LexCtrl.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexCtrl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexCtrl static QID status interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexCtrl--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRx--><spirit:name>Irq1CpuRx</spirit:name>
                  <spirit:description>CpuRx static QID status interrupt source field.  This field is asserted while the CpuRx static QID status is equal to the condition defined by XUSB.SQidIntCtrl.CpuRx.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1CpuRx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRx static QID status interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRx--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRxEnet--><spirit:name>Irq1CpuRxEnet</spirit:name>
                  <spirit:description>CpuRxEnet static QID status interrupt source field.  This field is asserted while the CpuRx static QID status is equal to the condition defined by XUSB.SQidIntCtrl.CpuRxEnet.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1CpuRxEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRxEnet static QID status interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRxEnet--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRspQid--><spirit:name>Irq0LexRspQid</spirit:name>
                  <spirit:description>LexRspQid static QID status interrupt source field.  This field is asserted while the LexRspQid static QID status is equal to the condition defined by XUSB.SQidIntCtrl.LexRspQid.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRspQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexRspQid static QID status interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRspQid--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEmpty--><spirit:name>Irq2XicsSidEmpty</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt source field.  This field is asserted while the SID allocation FIFO is empty.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEvent--><spirit:name>Irq2XicsSidEvent</spirit:name>
                  <spirit:description>SID event interrupt source field.

Note: This field is pulsed on any low-high or high-low transition of the XICS.Status.SidAEmptyL/M/H status field.

Note: Read XICS.Status for SID current conditions</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsSidEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID event interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEvent--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidEmpty--><spirit:name>Irq2XicsQidEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO empty interrupt source field.  This field is asserted while the QID allocation FIFO is empty.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO empty interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidAEmpty--><spirit:name>Irq2XicsQidAEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO almost empty threshold interrupt source field.

Note: This field is pulsed on any low-high or high-low transition of the XICS.Status.QidAEmpty status field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO almost empty threshold interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidNew--><spirit:name>Irq2XicsQidNew</spirit:name>
                  <spirit:description>XICS QID new request error interrupt source field.  This field is asserted for a single cycle when a XICS QID new request occurred while the QID allocation FIFO was empty.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidNew--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID new request error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidNew--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidRet--><spirit:name>Irq2XicsQidRet</spirit:name>
                  <spirit:description>XICS QID return request error interrupt source field.  This field is asserted for a single cycle when a XICS QID return request occurred for an already de-allocated QID.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsQidRet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID return request error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidRet--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsUflow--><spirit:name>Irq2XicsUflow</spirit:name>
                  <spirit:description>XICS underflow interrupt source field.  This field is asserted for a single cycle when a XICS QID underflow condition is detected.  A XICS read occurred to an empty QID.

Note: this field does not represent that the XICS is empty.  Only that the QID read from was empty.  In cases where the XICS is empty a read from any QID will be a read from an empty QID, resulting in this error condition.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsOflow--><spirit:name>Irq2XicsOflow</spirit:name>
                  <spirit:description>XICS overflow interrupt source field.  This field is asserted for a single cycle when a XICS overflow condition is detected.  A XICS write occurred while the XICS was full.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XicsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoUflow--><spirit:name>Irq2XurmFifoUflow</spirit:name>
                  <spirit:description>XURM receive fifo underflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoOflow--><spirit:name>Irq2XurmFifoOflow</spirit:name>
                  <spirit:description>XURM receive fifo overflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmCmdErr--><spirit:name>Irq2XurmCmdErr</spirit:name>
                  <spirit:description>XURM command error interrupt source field.

This field is pulsed when the XLRC presents the XURM with an invalid command or a command that the XURM is currently unable to service.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmCmdErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM command error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmCmdErr--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmPktLimit--><spirit:name>Irq2XurmPktLimit</spirit:name>
                  <spirit:description>XURM packet limit error interrupt source field.

This field is pulsed when xurm has truncated a packet based on the packet length (pid + data + crc) limit the rex has indicated to it.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XurmPktLimit--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM packet limit error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmPktLimit--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoUflow--><spirit:name>Irq2XutmFifoUflow</spirit:name>
                  <spirit:description>XUTM fifo underflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XutmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoOflow--><spirit:name>Irq2XutmFifoOflow</spirit:name>
                  <spirit:description>XUTM fifo overflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq2XutmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntSrc0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt source register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntSrc0--></spirit:register>
            <spirit:register><!--Register named IntSrc1--><spirit:name>IntSrc1</spirit:name>
               <spirit:description>Interrupt source register 1.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x20</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x371ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq3XcrmNotInSys--><spirit:name>Irq3XcrmNotInSys</spirit:name>
                  <spirit:description>XCRM upstream packet address/endpoint not in-sys interrupt source field.  Pulsed.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmNotInSys--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM upstream packet address/endpoint not in-sys interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmNotInSys--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoUflow--><spirit:name>Irq3XcrmAfifoUflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO underflow interrupt source field. Pulsed.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoOflow--><spirit:name>Irq3XcrmAfifoOflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO overflow interrupt source field.  Pulsed.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoSync--><spirit:name>Irq3XcrmAfifoSync</spirit:name>
                  <spirit:description>XCRM AFIFOs have lost synchonization interrupt source field.  Pulsed.  AFIFOs have lost synchronization.  This error is fatal.  Reset required.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoSync--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM AFIFOs have lost synchonization interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoSync--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmDropFrm--><spirit:name>Irq3XcrmDropFrm</spirit:name>
                  <spirit:description>XCRM frame drop error interrupt source field.  This field is pulsed on a dropped incoming frame due to backup in the receive path.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmDropFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame drop error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmDropFrm--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFraming--><spirit:name>Irq3XcrmFraming</spirit:name>
                  <spirit:description>XCRM framing error interrupt source field.  This field is pulsed when a XUSB framing error is detected.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmFraming--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM framing error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFraming--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFrmCrc--><spirit:name>Irq3XcrmFrmCrc</spirit:name>
                  <spirit:description>XCRM frame header CRC error interrupt source field.  This field is pulsed when a XUSB header CRC error is detected.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmFrmCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame header CRC error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFrmCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmPldCrc--><spirit:name>Irq3XcrmPldCrc</spirit:name>
                  <spirit:description>XCRM payload CRC error interrupt source field.  This field is pulsed when a XUSB payload CRC error is detected.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmPldCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM payload CRC error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmPldCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmTout--><spirit:name>Irq3XcrmTout</spirit:name>
                  <spirit:description>XCRM srdy timeout interrupt source field.  This field is pulsed when srdy has fallen mid frame longer than the allowable time defined in the XCRM configuration.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XcrmTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM srdy timeout interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmTout--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoUflow--><spirit:name>Irq3XctmAfifoUflow</spirit:name>
                  <spirit:description>XCTM AFIFO underflow interrupt source field. Pulsed</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoOflow--><spirit:name>Irq3XctmAfifoOflow</spirit:name>
                  <spirit:description>XCTM AFIFO overflow interrupt source field. Pulsed</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmPkt--><spirit:name>Irq3XctmPkt</spirit:name>
                  <spirit:description>XCTM packet framing error interrupt source field.  This field is pulsed when the XCTM tries to send a new packet but SOF is not detected.  The XCTM will continue to read from QID until SOF is detected.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XctmPkt--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM packet framing error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmPkt--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventRemote--><spirit:name>Irq3XflcEventRemote</spirit:name>
                  <spirit:description>XFLC remote event interrupt status field. This field is pulsed when a flow control packet is received from the link.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XflcEventRemote--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC remote event interrupt status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventRemote--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventLocal--><spirit:name>Irq3XflcEventLocal</spirit:name>
                  <spirit:description>XFLC local event interrupt status field. This field is pulsed when the XFLC controller detects a status change in one of its monitored resources (XICS or QTYPE).</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq3XflcEventLocal--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC local event interrupt status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventLocal--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntSrc1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt source register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntSrc1--></spirit:register>
            <spirit:register><!--Register named IntClr0--><spirit:name>IntClr0</spirit:name>
               <spirit:description>Interrupt clear register 0.

Write 1 to clear.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x24</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x30f0fff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexCtrl--><spirit:name>Irq0LexCtrl</spirit:name>
                  <spirit:description>LexCtrl static QID status interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexCtrl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexCtrl static QID status interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexCtrl--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRx--><spirit:name>Irq1CpuRx</spirit:name>
                  <spirit:description>CpuRx static QID status interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1CpuRx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRx static QID status interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRx--></spirit:field>
               <spirit:field><!--BitField named Irq1CpuRxEnet--><spirit:name>Irq1CpuRxEnet</spirit:name>
                  <spirit:description>CpuRxEnet static QID status interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1CpuRxEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CpuRxEnet static QID status interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1CpuRxEnet--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRspQid--><spirit:name>Irq0LexRspQid</spirit:name>
                  <spirit:description>LexRspQid static QID status interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRspQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LexRspQid static QID status interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRspQid--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEmpty--><spirit:name>Irq2XicsSidEmpty</spirit:name>
                  <spirit:description>SID allocation FIFO empty interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsSidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsSidEvent--><spirit:name>Irq2XicsSidEvent</spirit:name>
                  <spirit:description>SID event interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag. This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsSidEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID event interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsSidEvent--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidEmpty--><spirit:name>Irq2XicsQidEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO empty interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsQidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO empty interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidAEmpty--><spirit:name>Irq2XicsQidAEmpty</spirit:name>
                  <spirit:description>XICS QID allocation FIFO almost empty threshold interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsQidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID allocation FIFO almost empty threshold interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidAEmpty--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidNew--><spirit:name>Irq2XicsQidNew</spirit:name>
                  <spirit:description>XICS QID new request error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsQidNew--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID new request error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidNew--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsQidRet--><spirit:name>Irq2XicsQidRet</spirit:name>
                  <spirit:description>XICS QID return request error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsQidRet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID return request error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsQidRet--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsUflow--><spirit:name>Irq2XicsUflow</spirit:name>
                  <spirit:description>XICS underflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS underflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XicsOflow--><spirit:name>Irq2XicsOflow</spirit:name>
                  <spirit:description>XICS overflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XicsOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS overflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XicsOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoUflow--><spirit:name>Irq2XurmFifoUflow</spirit:name>
                  <spirit:description>XURM receive fifo underflow interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XurmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmFifoOflow--><spirit:name>Irq2XurmFifoOflow</spirit:name>
                  <spirit:description>XURM receive fifo overflow interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XurmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM receive fifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmCmdErr--><spirit:name>Irq2XurmCmdErr</spirit:name>
                  <spirit:description>XURM command error interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XurmCmdErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM command error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmCmdErr--></spirit:field>
               <spirit:field><!--BitField named Irq2XurmPktLimit--><spirit:name>Irq2XurmPktLimit</spirit:name>
                  <spirit:description>XURM packet limit error interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XurmPktLimit--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XURM packet limit error interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XurmPktLimit--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoUflow--><spirit:name>Irq2XutmFifoUflow</spirit:name>
                  <spirit:description>XUTM fifo underflow interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XutmFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq2XutmFifoOflow--><spirit:name>Irq2XutmFifoOflow</spirit:name>
                  <spirit:description>XUTM fifo overflow interrupt source field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq2XutmFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUTM fifo overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq2XutmFifoOflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntClr0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt clear register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntClr0--></spirit:register>
            <spirit:register><!--Register named IntClr1--><spirit:name>IntClr1</spirit:name>
               <spirit:description>Interrupt clear register 1.

Write 1 to clear.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x28</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x371ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq3XcrmNotInSys--><spirit:name>Irq3XcrmNotInSys</spirit:name>
                  <spirit:description>XCRM upstream packet address/endpoint not in-sys interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmNotInSys--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM upstream packet address/endpoint not in-sys interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmNotInSys--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoUflow--><spirit:name>Irq3XcrmAfifoUflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO underflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO underflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoOflow--><spirit:name>Irq3XcrmAfifoOflow</spirit:name>
                  <spirit:description>XCRM Payload or Valid AFIFO overflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM Payload or Valid AFIFO overflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmAfifoSync--><spirit:name>Irq3XcrmAfifoSync</spirit:name>
                  <spirit:description>XCRM AFIFOs have lost synchonization interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmAfifoSync--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM AFIFOs have lost synchonization interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmAfifoSync--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmDropFrm--><spirit:name>Irq3XcrmDropFrm</spirit:name>
                  <spirit:description>XCRM frame drop error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmDropFrm--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame drop error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmDropFrm--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFraming--><spirit:name>Irq3XcrmFraming</spirit:name>
                  <spirit:description>XCRM framing error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmFraming--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM framing error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFraming--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmFrmCrc--><spirit:name>Irq3XcrmFrmCrc</spirit:name>
                  <spirit:description>XCRM frame header CRC error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmFrmCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM frame header CRC error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmFrmCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmPldCrc--><spirit:name>Irq3XcrmPldCrc</spirit:name>
                  <spirit:description>XCRM payload CRC error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmPldCrc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM payload CRC error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmPldCrc--></spirit:field>
               <spirit:field><!--BitField named Irq3XcrmTout--><spirit:name>Irq3XcrmTout</spirit:name>
                  <spirit:description>XCRM srdy timeout interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XcrmTout--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM srdy timeout interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XcrmTout--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoUflow--><spirit:name>Irq3XctmAfifoUflow</spirit:name>
                  <spirit:description>XCTM AFIFO underflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO underflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmAfifoOflow--><spirit:name>Irq3XctmAfifoOflow</spirit:name>
                  <spirit:description>XCTM AFIFO overflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XctmAfifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM AFIFO overflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmAfifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq3XctmPkt--><spirit:name>Irq3XctmPkt</spirit:name>
                  <spirit:description>XCTM packet framing error interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XctmPkt--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM packet framing error interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XctmPkt--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventRemote--><spirit:name>Irq3XflcEventRemote</spirit:name>
                  <spirit:description>XFLC remote event interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag. This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XflcEventRemote--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC remote event interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventRemote--></spirit:field>
               <spirit:field><!--BitField named Irq3XflcEventLocal--><spirit:name>Irq3XflcEventLocal</spirit:name>
                  <spirit:description>XFLC local event interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag. This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq3XflcEventLocal--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC local event interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq3XflcEventLocal--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntClr1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt clear register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntClr1--></spirit:register>
            <spirit:register><!--Register named SQidIntCtrl--><spirit:name>SQidIntCtrl</spirit:name>
               <spirit:description>Static QID interrupt control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x2c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0xaa</spirit:value>
                  <spirit:mask>0xff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named LexCtrl--><spirit:name>LexCtrl</spirit:name>
                  <spirit:description>Static QID LEX_CTRL interrupt control selection field.  This field sets the cache status condition used to generate the interrupt source.

00 = Interrupt when SQid is empty
01 = Interrupt when SQid is not empty
10 = Interrupt when SQid has at least 1 frame
11 = Interrupt when SQid has at least 2 frames</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named LexCtrl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x2</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID LEX_CTRL interrupt control selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LexCtrl--></spirit:field>
               <spirit:field><!--BitField named CpuRx--><spirit:name>CpuRx</spirit:name>
                  <spirit:description>Static QID CPU_RX interrupt control selection field.  This field sets the cache status condition used to generate the interrupt source.

00 = Interrupt when SQid is empty
01 = Interrupt when SQid is not empty
10 = Interrupt when SQid has at least 1 frame
11 = Interrupt when SQid has at least 2 frames</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CpuRx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x2</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID CPU_RX interrupt control selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CpuRx--></spirit:field>
               <spirit:field><!--BitField named CpuRxEnet--><spirit:name>CpuRxEnet</spirit:name>
                  <spirit:description>Static QID CPU_RX_ENET interrupt control selection field.  This field sets the cache status condition used to generate the interrupt source.

00 = Interrupt when SQid is empty
01 = Interrupt when SQid is not empty
10 = Interrupt when SQid has at least 1 frame
11 = Interrupt when SQid has at least 2 frames</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CpuRxEnet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x2</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID CPU_RX_ENET interrupt control selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CpuRxEnet--></spirit:field>
               <spirit:field><!--BitField named LexRspQid--><spirit:name>LexRspQid</spirit:name>
                  <spirit:description>Static QID LEX_CTRL interrupt control selection field.  This field sets the cache status condition used to generate the interrupt source.

00 = Interrupt when SQid is empty
01 = Interrupt when SQid is not empty
10 = Interrupt when SQid has at least 1 frame
11 = Interrupt when SQid has at least 2 frames</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named LexRspQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x2</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID LEX_CTRL interrupt control selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LexRspQid--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named SQidIntCtrl--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Static QID interrupt control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named SQidIntCtrl--></spirit:register>
            <spirit:register><!--Register named Scratch3--><spirit:name>Scratch3</spirit:name>
               <spirit:description>Scratch 3 register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x30</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Scratch--><spirit:name>Scratch</spirit:name>
                  <spirit:description>Scratch 3 field.  This field can be used for several purposes such as driving data signals while driving control signals by other register, or temporary storage.

XSST_MSW: [15:00] = XsstWstatus[55:32] Write Mask</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Scratch--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Scratch 3 field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Scratch--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Scratch3--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Scratch 3 register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Scratch3--></spirit:register>
            <spirit:register><!--Register named Scratch2--><spirit:name>Scratch2</spirit:name>
               <spirit:description/>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x34</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Scratch--><spirit:name>Scratch</spirit:name>
                  <spirit:description>Scratch 2 field.  This field can be used for several purposes such as driving data signals while driving control signals by other register, or temporary storage.

XSST_LSW : [31:00] = XsstWstatus[31:00] Write Mask
XSST_LAT : [12:09] = LAT field VPORT Write Mask
              [08] = LAT field VFNEN Write Mask
              [07] = LAT field SPLIT Write Mask
              [06] = LAT field INSYS Write Mask
              [05] = LAT field LAVAL Write Mask
           [04:00] = LAT field LADDR Write Mask</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Scratch--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Scratch 2 field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Scratch--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Scratch2--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription/>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Scratch2--></spirit:register>
            <spirit:register><!--Register named Scratch1--><spirit:name>Scratch1</spirit:name>
               <spirit:description>Scratch 1 register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x38</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Scratch--><spirit:name>Scratch</spirit:name>
                  <spirit:description>Scratch 1 field.  This field can be used for several purposes such as driving data signals while driving control signals by other register, or temporary storage.

XSST_MSW          : [31:00] = XsstWstatusMsw[64:32]
XICS Cache Access : [31:00] = Wdata[63:32]
XICS QID Ret/Flu  : NA</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Scratch--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Scratch 1 field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Scratch--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Scratch1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Scratch 1 register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Scratch1--></spirit:register>
            <spirit:register><!--Register named Scratch0--><spirit:name>Scratch0</spirit:name>
               <spirit:description>Scratch 0 register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x3c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Scratch--><spirit:name>Scratch</spirit:name>
                  <spirit:description>Scratch 0 field.  This field can be used for several purposes such as driving data signals while driving control signals by other register, or temporary storage.

XSST WRLAT        : [12:00] = XsstLatWdata = {Vport[03:00], Vfnen,
                    Split, Insys, Laval, Laddr[04:00]}
XSST WRSST        : [31:00] = XsstWstatusLsw[31:00]
XICS Cache Access : [31:00] = Wdata[31:00]
XICS QID Ret/Flu  : [07:00] = Return/Flush QID
QidTypeThresh     : [29:16] = WrdCnt High Threshold
                    [13:00] = WrdCnt Low Threshold</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Scratch--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Scratch 0 field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Scratch--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Scratch0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Scratch 0 register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Scratch0--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XUSB--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>Extreme USB (XUSB) global interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XUSB--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named XSST--><spirit:name>XSST</spirit:name>
            <spirit:description>System Status Table (XSST) interface register block.

Note: the for write and read-modify-write transactions the WriteStatus and WriteStatusMask are written to the XUSB.Scratch0 and XUSB.Scratch1 registers.</spirit:description>
            <spirit:baseAddress>0x48</spirit:baseAddress>
            <spirit:range spirit:format="long">0x20</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Control--><spirit:name>Control</spirit:name>
               <spirit:description>XSST control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Clear--><spirit:name>Clear</spirit:name>
                  <spirit:description>XSST clear request field.  Write '1' to re-initialize in all tables within the XMST.

Note: Initialized tables contain all zeros.
Note: This field is automatically cleared upon initialization of all tables.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Clear--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST clear request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Clear--></spirit:field>
               <spirit:field><!--BitField named InitDone--><spirit:name>InitDone</spirit:name>
                  <spirit:description>XSST initialization complete field.  This field is set '1' upon completion of initializing the XSST tables.  This field is cleared '0' while a XSST.Control.Clear is performed.  This signal is used to clear the XSST.Control.Clear upon completion of an XSST clear.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST initialization complete field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InitDone--></spirit:field>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XSST transaction GO field.  Write '1' to initiate the transaction selected by XSST.Control.AccMode.

Note: for write and read-modify-write access ensure that the XUSB.Scratch registers have been set up appropriately before asserting the GO field.

Note: this field is automatically cleared upon completion of the transaction.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named AccMode--><spirit:name>AccMode</spirit:name>
                  <spirit:description>XSST access mode selection field.

LAT = logical address table (contain more than just logical address)
SST = status table

0000 : RD  - LAT, MSW &amp; LSW
0001 : RD  - LAT, MSW &amp; LSW CONDITIONAL
0010 : WR  - LAT
0011 : WR  - LSW
0100 : WR  - MSW
0101 : WR  - MSW &amp; LSW
0110 : WR  - MSW &amp; LSW CONDITIONAL
0111 : RMW - LAT
1000 : RMW - LSW
1001 : RMW - MSW
1010 : RMW - MSW &amp; LSW
other: RESERVED (do not attempt)

NOTE: (reads) a read access will provide the LAT rdata as well as the SST rstatus.

NOTE: (writes) a write access requires that the XUSB.Scratch fields be set appropriately before setting the GO field.

NOTE: (read-modify-writes) a read-modify-write access will provide the LAT as well as the pre-modified SST status.  Like writes, XUSB.Scratch fields must be set appropriately before setting the GO field.

NOTE: (Conditional read/write) conditional reads place a marker on the SST entry accessed.  If any interface accesses the same entry the marker is removed.  A conditional write will fail if the marker is no longer present on entry at time of the conditional write.  A conditional write fail will not update the SST entry contents (see WrFail field).  A conditional write will remove the marker from the SST entry.

NOTE: (conditional write) conditional writes require that the write data be prepared in XUSB.Scratch fields.  Software is responsible for generating the entire write status since no mask can be used.

Note: Please see XSST.Scratch0/1/2/3 bit field descriptions for further detail.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named AccMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST access mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AccMode--></spirit:field>
               <spirit:field><!--BitField named DevEndpt--><spirit:name>DevEndpt</spirit:name>
                  <spirit:description>USB device endpoint field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DevEndpt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB device endpoint field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DevEndpt--></spirit:field>
               <spirit:field><!--BitField named DevAddr--><spirit:name>DevAddr</spirit:name>
                  <spirit:description>USB device address field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DevAddr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB device address field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DevAddr--></spirit:field>
               <spirit:field><!--BitField named InSsn--><spirit:name>InSsn</spirit:name>
                  <spirit:description>Last read in-session bit field.  Following a XSST read this bit will be set if the address endpoint being read is currently held in session by another XSST interface.  This will represent a high likelihood that the value read is about to be modified by another interface.  Note this field is not valid following an XSST write or XSST read-modify-write.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InSsn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Last read in-session bit field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InSsn--></spirit:field>
               <spirit:field><!--BitField named WrFail--><spirit:name>WrFail</spirit:name>
                  <spirit:description>This field is set when a conditional write access has been performed but the write fails.  The conditional write fails if between a conditional read and a conditional write to a SST entry another non-conditional access occurs on that same entry.  A conditional write fail means that the SST contents were not updated.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named WrFail--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Conditional write access failed.  Only valid if last access was a SST conditional write.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WrFail--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Control--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Control--></spirit:register>
            <spirit:register><!--Register named SstStatus2--><spirit:name>SstStatus2</spirit:name>
               <spirit:description>XSST logical address table fields read status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named LAddr--><spirit:name>LAddr</spirit:name>
                  <spirit:description>Logical address field for USB device accessed.  This field is updated with the logical address for the USB device accessed following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named LAddr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Logical address field for USB device accessed.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LAddr--></spirit:field>
               <spirit:field><!--BitField named Laval--><spirit:name>Laval</spirit:name>
                  <spirit:description>Logical Address valid field.  This bit signifies that the logical address field is valid.  If an SST access occurs to a non-valid logical address the SST access will not occur and the XSST_RSTATUS will return 0.

Note: the contents of the LAT are available following all SST transactions.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Laval--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Logical Address valid field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Laval--></spirit:field>
               <spirit:field><!--BitField named InSys--><spirit:name>InSys</spirit:name>
                  <spirit:description>This field is updated with the in-system indicator for the USB device accessed following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InSys--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>In-System indication field for USB device accessed.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InSys--></spirit:field>
               <spirit:field><!--BitField named Split--><spirit:name>Split</spirit:name>
                  <spirit:description>This field is updated with the split device indicator for the USB device accessed following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Split--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Split device indication field for USB device accessed.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Split--></spirit:field>
               <spirit:field><!--BitField named Vfnen--><spirit:name>Vfnen</spirit:name>
                  <spirit:description>This field is updated with the virtual function enabled indicator for the USB device accessed following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Vfnen--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Virual function enable status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vfnen--></spirit:field>
               <spirit:field><!--BitField named Vport--><spirit:name>Vport</spirit:name>
                  <spirit:description>Virtual port number.  This field is used to associate a USB device by address to a virtual port.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Vport--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Virtual port number.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vport--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named SstStatus2--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST logical address table fields read status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named SstStatus2--></spirit:register>
            <spirit:register><!--Register named SstStatus1--><spirit:name>SstStatus1</spirit:name>
               <spirit:description>XSST read status most significant word register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Msw--><spirit:name>Msw</spirit:name>
                  <spirit:description>XSST read status most significant word field xsst_rstatus. This field is updated following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Msw--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST read status most significant word field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Msw--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named SstStatus1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST read status most significant word register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named SstStatus1--></spirit:register>
            <spirit:register><!--Register named SstStatus0--><spirit:name>SstStatus0</spirit:name>
               <spirit:description>XSST read status least significant word register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Lsw--><spirit:name>Lsw</spirit:name>
                  <spirit:description>XSST read status least significant word field xsst_rstatus[31:00].  This field is updated following a read or read-modify-write XSST transaction.  Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Lsw--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XSST read status least significant word field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Lsw--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named SstStatus0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST read status least significant word register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named SstStatus0--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XSST--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>System Status Table (XSST) interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XSST--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named XICS--><spirit:name>XICS</spirit:name>
            <spirit:description>Internal Cache System Cache (XICS) interface register block.

Note: for write transactions the WdataMsw and WdataLsw for the XICS are written to the XUSB.Scratch0 and XUSB.Scratch1 registers.</spirit:description>
            <spirit:baseAddress>0x68</spirit:baseAddress>
            <spirit:range spirit:format="long">0x38</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Config0--><spirit:name>Config0</spirit:name>
               <spirit:description>XICS configuration register 0.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00300010</spirit:value>
                  <spirit:mask>0x17f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named EnetPktDropLevel--><spirit:name>EnetPktDropLevel</spirit:name>
                  <spirit:description>Ethernet packet drop cache level. This sets the cache level at which ethernet packets will be dropped after dropping below this level. The level is in terms of free Sid's / 8. The default level of 48 sets the cache level at which ethernet packets will be dropped at 24kB.
                  </spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named EnetPktDropLevel--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x30</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Ethernet packet drop cache level.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ExportedFlopBitField--></spirit:field>
               <spirit:field><!--BitField named ExportedFlopBitField--><spirit:name>QidAEmpty</spirit:name>
                  <spirit:description>QID almost empty threshold level configuration field.  This field configures the number of QIDs remaining in the QID allocation FIFO before indicating an almost empty condition.

Default = 16 (meaning 112 QIDs in use)</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named QidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x10</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID almost empty threshold level configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidAEmpty--></spirit:field>
               <spirit:field><!--BitField named Clear--><spirit:name>Clear</spirit:name>
                  <spirit:description>XICS clear status field.  Write '1' to clear the cache; forcing a re-initialization all XICS tables (ie: QID, SID, Pointer).  When this field is asserted the XICS.Status.InitDone signal will de-assert until the XICS clear has completed.

Note: this field is automatically cleared when the XICS.Status.InitDone is re-asserted.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Clear--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS clear status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Clear--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Config0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XICS configuration register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Config0--></spirit:register>
            <spirit:register><!--Register named Config1--><spirit:name>Config1</spirit:name>
               <spirit:description>XICS configuration register 1.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0xc0501c0</spirit:value>
                  <spirit:mask>0x3fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named SidAEmptyL--><spirit:name>SidAEmptyL</spirit:name>
                  <spirit:description>SID almost empty low threshold level configuration field.  This field configures the number of SIDs remaining in the SID allocation FIFO before indicating an almost empty low condition.

Note: XICS size = 16k (data portion)
Note: since these are almost empty thresholds: L &gt; M &gt; H.
Note: each SID represents 18bytes (2 cache words with header) of the XICS.

Default: 9k of 16k = TotalSIDs/(XICS(k)/Remaining(k)) = 1024/(16/7) = 448.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>10</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SidAEmptyL--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1c0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID almost empty low threshold level configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyL--></spirit:field>
               <spirit:field><!--BitField named SidAEmptyM--><spirit:name>SidAEmptyM</spirit:name>
                  <spirit:description>SID almost empty medium threshold level configuration field.  This field configures the number of SIDs remaining in the SID allocation FIFO before indicating an almost empty medium condition.

Note: XICS size = 16k (data portion)
Note: since these are almost empty thresholds: L &gt; M &gt; H.
Note: each SID represents 18bytes (2 cache words with header) of the XICS.

Default: 11k of 16k = TotalSIDs/(XICS(k)/Remaining(k)) = 1024/(16/5) = 320.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>10</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SidAEmptyM--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x140</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID almost empty medium threshold level configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyM--></spirit:field>
               <spirit:field><!--BitField named SidAEmptyH--><spirit:name>SidAEmptyH</spirit:name>
                  <spirit:description>SID almost empty high threshold level configuration field.  This field configures the number of SIDs remaining in the SID allocation FIFO before indicating an almost empty high condition.

Note: XICS size = 16k (data portion)
Note: since these are almost empty thresholds: L &gt; M &gt; H.
Note: each SID represents 18bytes (2 cache words with header) of the XICS.

Default: 13k of 16k = TotalSIDs/(XICS(k)/Remaining(k)) = 1024/(16/3) = 192.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>10</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SidAEmptyH--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0xc0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID almost empty high threshold level configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyH--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Config1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XICS configuration register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Config1--></spirit:register>
            <spirit:register><!--Register named ControlQAcc--><spirit:name>ControlQAcc</spirit:name>
               <spirit:description>XICS cache control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XICSC transaction GO field.  Write '1' to initiate a transaction.

Note: for writes ensure that XUSB.Scratch0 and XUSB.Scratch1 registers have been written as desired before writing to this field.
Note: this field is automatically cleared upon completion of the transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICSC transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named WNR--><spirit:name>WNR</spirit:name>
                  <spirit:description>XICS write/read select field.

0 = XICS read.
1 = XICS write.

Note: for XICS write transactions the write data MSW and write data LSW are written to the XUSB.Scratch1 and XUSB.Scratch0 registers respectively.  See Scratch register definitions for more information.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named WNR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write/read select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WNR--></spirit:field>
               <spirit:field><!--BitField named Nreq--><spirit:name>Nreq</spirit:name>
                  <spirit:description>No effect read request enable field.  A no effect read request will not alter the contents of the XICS.  It will return the first cache word of the addressed QID and the statistics associated with that QID.  The cache word returned by this operation will remain in the XICS at the head of the QID and statistics will remain unchanged.

0 = normal operation.
1 = no effect read request (XICSC.Control.WNR field is ignored)</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Nreq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>No effect read request enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Nreq--></spirit:field>
               <spirit:field><!--BitField named Qid--><spirit:name>Qid</spirit:name>
                  <spirit:description>Queue address field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Qid--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Queue address field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qid--></spirit:field>
               <spirit:field><!--BitField named Wbyte--><spirit:name>Wbyte</spirit:name>
                  <spirit:description>XICS write - valid bytes indicator field.  This field represents the number of bytes of valid data in the Scratch2 and Scratch registers.  The data is upper justified into the 64bit field.  The number of valid bytes is one greater than the Wbyte value.

Ex: 0 = 1 byte valid (Scratch2[63:56])
Ex: 7 = 8 bytes valid (Scratch2 and Scratch)</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wbyte--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - valid bytes indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wbyte--></spirit:field>
               <spirit:field><!--BitField named Wsof--><spirit:name>Wsof</spirit:name>
                  <spirit:description>XICS write - start of frame indicator field.  This field is inserted into the XICS cache word header byte.

0 = not start of frame.
1 = start of frame.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wsof--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - start of frame indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wsof--></spirit:field>
               <spirit:field><!--BitField named Wsop--><spirit:name>Wsop</spirit:name>
                  <spirit:description>XICS write - start of packet indicator field.  This field is inserted into the XICS cache word header byte.

0 = not start of packet.
1 = start of packet.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wsop--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - start of packet indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wsop--></spirit:field>
               <spirit:field><!--BitField named Weof--><spirit:name>Weof</spirit:name>
                  <spirit:description>XICS write - end of frame indicator field.  This field is inserted into the XICS cache word header byte.

0 = not end of frame.
1 = end of frame.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Weof--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - end of frame indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Weof--></spirit:field>
               <spirit:field><!--BitField named Weop--><spirit:name>Weop</spirit:name>
                  <spirit:description>XICS write - end of packet indicator field.  This field is inserted into the XICS cache word header byte.

0 = not end of packet.
1 = end of packet.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Weop--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - end of packet indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Weop--></spirit:field>
               <spirit:field><!--BitField named Wderr--><spirit:name>Wderr</spirit:name>
                  <spirit:description>XICS write - data error indicator field.  This field is inserted into the XICS cache word header byte.

0 = no write data error.
1 = write data error.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wderr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS write - data error indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wderr--></spirit:field>
               <spirit:field><!--BitField named Rbyte--><spirit:name>Rbyte</spirit:name>
                  <spirit:description>XICS read - valid bytes status field.  This field represents the number of bytes of valid data in the RdataMsw and RdataLsw registers.  The data is upper justified into the 64bit field.  The number of valid bytes is one greater than the Rbyte value.  This field is extracted from the XICS cache word header byte.

Ex: 0 = 1 byte valid (RdataMsw[63:56])
Ex: 7 = 8 bytes valid (RdataMsw and RdataLsw)</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rbyte--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - valid bytes status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rbyte--></spirit:field>
               <spirit:field><!--BitField named Rsof--><spirit:name>Rsof</spirit:name>
                  <spirit:description>XICS read - start of frame status field.  This field is extracted from the XICS cache word header byte.

0 = not start of frame.
1 = start of frame.</spirit:description>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rsof--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - start of frame status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rsof--></spirit:field>
               <spirit:field><!--BitField named Rsop--><spirit:name>Rsop</spirit:name>
                  <spirit:description>XICS read - start of packet status field.  This field is extracted from the XICS cache word header byte.

0 = not start of packet.
1 = start of packet.</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rsop--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - start of packet status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rsop--></spirit:field>
               <spirit:field><!--BitField named Reof--><spirit:name>Reof</spirit:name>
                  <spirit:description>XICS read - end of frame status field.  This field is extracted from the XICS cache word header byte.

0 = not end of frame.
1 = end of frame.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Reof--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - end of frame status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Reof--></spirit:field>
               <spirit:field><!--BitField named Reop--><spirit:name>Reop</spirit:name>
                  <spirit:description>XICS read - end of packet status field.  This field is extracted from the XICS cache word header byte.

0 = not end of packet.
1 = end of packet.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Reop--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - end of packet status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Reop--></spirit:field>
               <spirit:field><!--BitField named Rderr--><spirit:name>Rderr</spirit:name>
                  <spirit:description>XICS read - data error status field.  This field is extracted from the XICS cache word header byte.

0 = no read data error.
1 = read data error.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rderr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read - data error status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rderr--></spirit:field>
               <spirit:field><!--BitField named Rqerr--><spirit:name>Rqerr</spirit:name>
                  <spirit:description>Read queue error status field.

0 = no XICS error detected during a XICS read.
1 = XICS error detected during a XICS read (XICS underflow).</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rqerr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Read queue error status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rqerr--></spirit:field>
               <spirit:field><!--BitField named Wqerr--><spirit:name>Wqerr</spirit:name>
                  <spirit:description>Write queue error status field.

0 = no XICS error detected during a XICS write.
1 = XICS error detected during a XICS write (XICS overflow).</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Wqerr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Write queue error status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wqerr--></spirit:field>
               <spirit:field><!--BitField named CrcDone--><spirit:name>CrcDone</spirit:name>
                  <spirit:description>CRC16 calculation for XICS cache packet read is done status field.  All packets read from the XICS will see done asserted upon reading the entire packet.  This signifies that the CRC calculator has completed the CRC16 test on the packet read.  Done should be ready after reading XICSC.RdataMsw and XICSC.RdataLsw.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CrcDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC16 calculation for XICS cache packet read is done status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrcDone--></spirit:field>
               <spirit:field><!--BitField named CrcValid--><spirit:name>CrcValid</spirit:name>
                  <spirit:description>CRC16 calculation for XICS cache packet read is valid status field.  When the XCSR interface is used to read a DATA0/DATA1 packet from the XICS the software will need to know whether the CRC16 calculation for that packet is valid.  In the event that valid is not asserted upon reading a DATA0/DATA1 packet the software can know to ignore the contents of the packet.

Note: If the packet is not a DATA1/DATA0 packet the CRC16 calculation will not be valid.  This is expected since no DATA is present.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CrcValid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC16 calculation for XICS cache packet read is valid status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrcValid--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ControlQAcc--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XICS cache control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ControlQAcc--></spirit:register>
            <spirit:register><!--Register named ControlQAllo--><spirit:name>ControlQAllo</spirit:name>
               <spirit:description>XICS queue allocation/deallocation control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XICS QID (de)allocation transaction GO field.  Write '1' to initiate a transaction.

Note: for RetQReq and/or FluQReq transactions ensure that XUSB.Scratch0 register has been written appropriately before asserting this field.
Note: this field is automatically cleared upon completion of the transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS QID (de)allocation transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named Qerr--><spirit:name>Qerr</spirit:name>
                  <spirit:description>Queue ID (de)allocation error status field.  This field is asserted when a new queue request occurs while the queue (de)allocation FIFO is empty or when a return queue request occurs with a RetQueue that has not yet been allocated.

0 = no queue allocation error detected.
1 = queue allocation error detected.

Note: this field is not valid for a transaction where the XICS.ControlQAllo.FluQReq is asserted.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Qerr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Queue ID (de)allocation error status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qerr--></spirit:field>
               <spirit:field><!--BitField named FluQReq--><spirit:name>FluQReq</spirit:name>
                  <spirit:description>Flush queue ID request field.  When the XICS.ControlQAllo.NewQReq field is set '1' this field is ignored.  A NewQReq has higher priority.  This field can be set '1' with or without the XICS.ControlQAllo.RetQReq bit field.  If the desire is to simply flush a QID do not assert the XICS.ControlQAllo.RetQReq bit field.  If a flush and return QID is desired assert the XICSQ.Control.RetQReq with this field before asserting XICS.ControlQAllo.Go.

0 = no flush queue ID requested.
1 = flush queue ID requested.

Note: the flush QID must be written to XUSB.Scratch0 prior to asserting the XICS.ControlQAllo.Go bit field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named FluQReq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Flush queue ID request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FluQReq--></spirit:field>
               <spirit:field><!--BitField named RetQReq--><spirit:name>RetQReq</spirit:name>
                  <spirit:description>Return queue ID request field.  When the XICS.ControlQAllo.NewQReq field is set '1' this field is ignored.  A NewQReq has higher priority.  This field can be set '1' with or without the XICS.ControlQAllo.FluQReq bit field.  If the desire is to simply return a QID do not assert the XICS.ControlQAllo.FluQReq bit field.  If a flush and return QID is desired assert the XICS.ControlQAllo.FluQReq with this field before asserting XICS.ControlQAllo.Go.

0 = no return queue ID requested.
1 = return queue ID requested.

Note: the return QID must be written to XUSB.Scratch0 prior to asserting the XICS.ControlQAllo.Go bit field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RetQReq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Return queue ID request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RetQReq--></spirit:field>
               <spirit:field><!--BitField named NewQReq--><spirit:name>NewQReq</spirit:name>
                  <spirit:description>New queue ID request field.  When this field is set '1' the XICS.ControlQAllo.RetQReq and XICS.ControlQAllo.FluQReq bit fields are ignored.  A NewQReq has higher priority.

0 = no new queue ID requested.
1 = new queue ID requested.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named NewQReq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>New queue ID request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named NewQReq--></spirit:field>
               <spirit:field><!--BitField named NewQType--><spirit:name>NewQType</spirit:name>
                  <spirit:description>New queue request type field.

QTYPE MAP:
0     = QT_DEFAULT
1     = QT_DNS_ASYNC
2     = QT_DNS_PERIODIC
3     = QT_DNS_ACCBULK
4     = QT_UPS_ASYNC
5     = QT_UPS_PERIODIC
6     = QT_UPS_ACCBULK_VP1
7     = QT_UPS_ACCBULK_VP2
8     = QT_UPS_ACCBULK_VP3
9     = QT_UPS_ACCBULK_VP4
10    = QT_UPS_ACCBULK_VP5
11    = QT_UPS_ACCBULK_VP6
12    = QT_UPS_ACCBULK_VP7
13-15 = INVALID - DO NOT USE</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named NewQType--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>New queue request type field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named NewQType--></spirit:field>
               <spirit:field><!--BitField named NewQ--><spirit:name>NewQ</spirit:name>
                  <spirit:description>New queue request result field.  This field is the result (QID) of a new queue request, and is valid after the asserted XICS.ControlQAllo.Go field is clear.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named NewQ--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>New queue request result field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named NewQ--></spirit:field>
               <spirit:field><!--BitField named QRangeSel--><spirit:name>QRangeSel</spirit:name>
                  <spirit:description>Queue allocation selection field. It is not necessary to set go field for status register to update.

00 = QID031:00 allocation status visible in StatusQAllo.Allo
01 = QID063:32 allocation status visible in StatusQAllo.Allo
10 = QID095:64 allocation status visible in StatusQAllo.Allo
11 = QID127:96 allocation status visible in StatusQAllo.Allo</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named QRangeSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Queue allocation selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QRangeSel--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ControlQAllo--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XICS queue allocation/deallocation control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ControlQAllo--></spirit:register>
            <spirit:register><!--Register named Status--><spirit:name>Status</spirit:name>
               <spirit:description>QID and SID allocation status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named InitDone--><spirit:name>InitDone</spirit:name>
                  <spirit:description>XICS initialization complete status field.

0 = XICS initialization/clear is not complete (do not use XICS).
1 = XICS initialization/clear complete (XICS ready for use).</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS initialization complete status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InitDone--></spirit:field>
               <spirit:field><!--BitField named SidEmpty--><spirit:name>SidEmpty</spirit:name>
                  <spirit:description>SID allocation FIFO empty status field.

0 = SID allocation FIFO is not empty.
1 = SID allocation FIFO is empty.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO empty status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidEmpty--></spirit:field>
               <spirit:field><!--BitField named SidAEmptyL--><spirit:name>SidAEmptyL</spirit:name>
                  <spirit:description>SID allocation FIFO almost empty low status field.

0 = remaining SIDs in the SID allocation FIFO are greater than the level defined by the XICS.Config.SidAEmptyL field.
1 = remaining SIDs in the SID allocation FIFO are equal to or less than the level defined by the XICS.Config.SidAEmptyL field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidAEmptyL--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO almost empty low status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyL--></spirit:field>
               <spirit:field><!--BitField named SidAEmptyM--><spirit:name>SidAEmptyM</spirit:name>
                  <spirit:description>SID allocation FIFO almost empty medium status field.

0 = remaining SIDs in the SID allocation FIFO are greater than the level defined by the XICS.Config.SidAEmptyM field.
1 = remaining SIDs in the SID allocation FIFO are equal to or less than the level defined by the XICS.Config.SidAEmptyM field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidAEmptyM--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO almost empty medium status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyM--></spirit:field>
               <spirit:field><!--BitField named SidAEmptyH--><spirit:name>SidAEmptyH</spirit:name>
                  <spirit:description>SID allocation FIFO almost empty high status field.

0 = remaining SIDs in the SID allocation FIFO are greater than the level defined by the XICS.Config.SidAEmptyH field.
1 = remaining SIDs in the SID allocation FIFO are equal to or less than the level defined by the XICS.Config.SidAEmptyH field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidAEmptyH--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO almost empty high status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidAEmptyH--></spirit:field>
               <spirit:field><!--BitField named SidFreeCnt--><spirit:name>SidFreeCnt</spirit:name>
                  <spirit:description>SID allocation FIFO free SIDs count field.  This field represents the number of unallocated SIDs still available in the SID allocation FIFO.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named SidFreeCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>SID allocation FIFO free SIDs count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SidFreeCnt--></spirit:field>
               <spirit:field><!--BitField named QidEmpty--><spirit:name>QidEmpty</spirit:name>
                  <spirit:description>QID allocation FIFO empty status field.

0 = QID allocation FIFO is not empty.
1 = QID allocation FIFO is empty.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID allocation FIFO empty status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidEmpty--></spirit:field>
               <spirit:field><!--BitField named QidAEmpty--><spirit:name>QidAEmpty</spirit:name>
                  <spirit:description>QID allocation FIFO empty status field.

0 = QID allocation FIFO is not almost empty.
1 = QID allocation FIFO is almost empty.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidAEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID allocation almost FIFO empty status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidAEmpty--></spirit:field>
               <spirit:field><!--BitField named QidFreeCnt--><spirit:name>QidFreeCnt</spirit:name>
                  <spirit:description>QID allocation FIFO free QIDs count field.  This field represents the number of unallocated QIDs still available in the QID allocation FIFO.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named QidFreeCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID allocation FIFO free QIDs count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named QidFreeCnt--></spirit:field>
               <spirit:field><!--BitField named Statistics--><spirit:name>Statistics</spirit:name>
                  <spirit:description>Queue statistics field.  The field represents the statistics of the queue indexed by XICSC.ControlQAcc.Qid field.  If XICSC.ControlQAcc.Qid field changes this field is updated on the next cycle accordingly.

00 = Queue empty
01 = empty &lt; Queue &lt; 1 frame
10 = 1 frame &lt;= Queue &lt; 2 frames
11 = Queue &gt;= 2 frames</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Statistics--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Queue statistics field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Statistics--></spirit:field>
               <spirit:field><!--BitField named XicsLvl1--><spirit:name>XicsLvl1</spirit:name>
                  <spirit:description>XICS level 1 status field. This field represents the current SID level status the XICS is indicating to the XFLC module. This field is set '1' on exceeding of the SidAEmptyM threshold and cleared '0' on fall below the SidAEmptyL threshold.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named XicsLvl1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS level 1 status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XicsLvl1--></spirit:field>
               <spirit:field><!--BitField named XicsLvl2--><spirit:name>XicsLvl2</spirit:name>
                  <spirit:description>XICS level 2 status field. This field represents the current SID level status the XICS is indicating to the XFLC module. This field is set '1' on exceeding of the SidAEmptyH threshold and cleared '0' on fall below the SidAEmptyM threshold.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named XicsLvl2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS level 2 status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XicsLvl2--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Status--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>QID and SID allocation status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Status--></spirit:register>
            <spirit:register><!--Register named StatusQAcc0--><spirit:name>StatusQAcc0</spirit:name>
               <spirit:description>Queue access status register 0.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named FrmCnt--><spirit:name>FrmCnt</spirit:name>
                  <spirit:description>Frame count statistic of last queue accessed by processor field.  This field represents the frame count of the queue indexed by XICSC.ControlQAcc.Qid field following a processor cache access.  Note: If XICSC.ControlQAcc.Qid field changes this field will remain unchanged until the next processor cache access is complete.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FrmCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Frame count statistic of last queue accessed by processor field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FrmCnt--></spirit:field>
               <spirit:field><!--BitField named WrdCnt--><spirit:name>WrdCnt</spirit:name>
                  <spirit:description>Word count statistic of last queue accessed by processor field.  This field represents the word count of the queue indexed by XICSC.ControlQAcc.Qid field following a processor cache access.  Note: If XICSC.ControlQAcc.Qid field changes this field will remain unchanged until the next processor cache access is complete.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>14</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named WrdCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Word count statistic of last queue accessed by processor field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WrdCnt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatusQAcc0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Queue acesss status register 0.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatusQAcc0--></spirit:register>
            <spirit:register><!--Register named StatusQAcc1--><spirit:name>StatusQAcc1</spirit:name>
               <spirit:description>Queue access status register 1.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Msw--><spirit:name>Msw</spirit:name>
                  <spirit:description>XICS read data most significant word field.  This field represents the most significant 32 bits of the 64 bit read data field.  If the read data is less than 8 bytes the data is upper justified across the Msw and Lsw registers.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Msw--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read data most significant word field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Msw--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatusQAcc1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Queue access status register 1.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatusQAcc1--></spirit:register>
            <spirit:register><!--Register named StatusQAcc2--><spirit:name>StatusQAcc2</spirit:name>
               <spirit:description>Queue access status register 2.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x1c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Lsw--><spirit:name>Lsw</spirit:name>
                  <spirit:description>XICS read data least significant word field.  This field represents the least significant 32 bits of the 64 bit read data field.  If the read data is less than 8 bytes the data is upper justified across the Msw and Lsw registers.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Lsw--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS read data least significant word field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Lsw--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatusQAcc2--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Queue access status register 2.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatusQAcc2--></spirit:register>
            <spirit:register><!--Register named StatusQAllo--><spirit:name>StatusQAllo</spirit:name>
               <spirit:description>Queue allocation status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x20</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Allo--><spirit:name>Allo</spirit:name>
                  <spirit:description>Allocation status for selected QID range field.

1 = QID is allocated
0 = QID is NOT allocated

This field represents a portion of all QIDs selected by ControlQAllo.QRangeSel.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Allo--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Allocation status for selected QID range field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Allo--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatusQAllo--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Queue allocation status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatusQAllo--></spirit:register>
            <spirit:register><!--Register named FreeCntLow--><spirit:name>FreeCntLow</spirit:name>
               <spirit:description>Lowest number of free XICS SID/QIDs tracking register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x24</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x800400</spirit:value>
                  <spirit:mask>0xff07ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Sid--><spirit:name>Sid</spirit:name>
                  <spirit:description>Lowest number of free XICS SIDs tracking field.  This field reflects the lowest number of free XICS SIDs since last read of this register.  Used to determine the peek usage of the cache (XICS) between reads of this register.

Note: this field is set equal to the current SID free count level when read.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Sid--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x400</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Lowest number of free XICS SIDs tracking field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Sid--></spirit:field>
               <spirit:field><!--BitField named Qid--><spirit:name>Qid</spirit:name>
                  <spirit:description>Lowest number of free XICS QIDs tracking field.  This field reflects the lowest number of free XICS QIDs since last read of this register.  Used to determine the peek usage of the cache (XICS) between reads of this register.

Note: this field is set equal to the current QID free count level when read.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Qid--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x80</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Lowest number of free XICS QIDs tracking field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qid--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named FreeCntLow--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Lowest number of free XICS SID/QIDs tracking register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named FreeCntLow--></spirit:register>
            <spirit:register><!--Register named FlowErr--><spirit:name>FlowErr</spirit:name>
               <spirit:description>XICS overflow/underflow status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x28</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x377f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Qid--><spirit:name>Qid</spirit:name>
                  <spirit:description>QID accessed during underflow/overflow.

Note: Cleared on read of this register.
Note: Only valid when event != 00</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Qid--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID accessed during underflow/overflow.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qid--></spirit:field>
               <spirit:field><!--BitField named Interface--><spirit:name>Interface</spirit:name>
                  <spirit:description>XICS interface that caused the underflow/overflow.  Reads interfaces should correspond to underflows and write interfaces to overflows.

000 = interface 0 read
001 = interface 0 write
010 = interface 1 read
011 = interface 1 write
100 = interface 2 read
101 = interface 2 write
110 = interface 3 read
111 = interface 3 write

Note: Cleared on read of this register.
Note: Only valid when event != 00</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Interface--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS interface that caused the underflow/overflow.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Interface--></spirit:field>
               <spirit:field><!--BitField named Event--><spirit:name>Event</spirit:name>
                  <spirit:description>XICS flow error event decode field.

00 = No event since last read of register
01 = Underflow event occurred.  See Interface and Qid fields for more information.
10 = Overflow event occurred.  See Interface and Qid fields for more information.
11 = Reserved.

Note: if multiple under/overflow events occur this register will only hold the first offender.  This register must be read before it can update for new offences.

Note: Cleared on read of this register.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Event--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS flow error event decode field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Event--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named FlowErr--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XICS overflow/underflow status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named FlowErr--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XICS--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>Internal Cache System Cache (XICS) interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XICS--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named XFLC--><spirit:name>XFLC</spirit:name>
            <spirit:description>Flow control status and control register block</spirit:description>
            <spirit:baseAddress>0xa0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x10</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named QType--><spirit:name>QType</spirit:name>
               <spirit:description>Queue type control/status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>Qtype transaction go field. Set '1' to begin transaction selected by XICS.Qtype.WNR.

Note: this field is self cleared upon completion of transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>Qtype transaction go field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named WNR--><spirit:name>WNR</spirit:name>
                  <spirit:description>Transaction type select field.

0 = Read current word count for XICS.Qtype.Type
- result located at XICS.Qtype.WrdCnt
1 = Set thresholds for XICS.Qtype.Type
- prepare thresholds in XUSB.Scratch0 before setting XICS.Qtype.Go</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named WNR--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transaction type select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WNR--></spirit:field>
               <spirit:field><!--BitField named Type--><spirit:name>Type</spirit:name>
                  <spirit:description>QID type field.

QTYPE MAP:
0     = QT_DEFAULT
1     = QT_DNS_ASYNC
2     = QT_DNS_PERIODIC
3     = QT_DNS_ACCBULK
4     = QT_UPS_ASYNC
5     = QT_UPS_PERIODIC
6     = QT_UPS_ACCBULK_VP1
7     = QT_UPS_ACCBULK_VP2
8     = QT_UPS_ACCBULK_VP3
9     = QT_UPS_ACCBULK_VP4
10    = QT_UPS_ACCBULK_VP5
11    = QT_UPS_ACCBULK_VP6
12    = QT_UPS_ACCBULK_VP7
13-15 = INVALID - DO NOT USE</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Type--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QID type field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Type--></spirit:field>
               <spirit:field><!--BitField named WrdCnt--><spirit:name>WrdCnt</spirit:name>
                  <spirit:description>Qtype word count result field. Flowing a transaction where XICS.Qtype.WNR=0 this field represents the total word count for all QIDs in the system sharing XICS.Qtype.Type.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>14</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named WrdCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Qtype word count result field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named WrdCnt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named QType--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Queue type control/status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named QType--></spirit:register>
            <spirit:register><!--Register named RxTableWacc--><spirit:name>RxTableWacc</spirit:name>
               <spirit:description>Remote status RX table write access register.  This register can be used to override a remote status or initialize the remote status for any/all vport(s).</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x2</spirit:value>
                  <spirit:mask>0xfff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XFLC remote status RX table write go field. Set '1' to perform a write transaction.

Note: this field is a self-cleared pulse gen bit field.  Write only.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC remote status RX table write go field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named Vport--><spirit:name>Vport</spirit:name>
                  <spirit:description>Vport select field.

Vport MAP:
0     = Invalid
1     = Vport 1
2     = Vport 2
3     = Vport 3
4     = Vport 4
5     = Vport 5
6     = Vport 6
7     = Vport 7</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Vport--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Vport select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vport--></spirit:field>
               <spirit:field><!--BitField named XicsLvl1--><spirit:name>XicsLvl1</spirit:name>
                  <spirit:description>Desired remote status override/initialize XicsLvl1 status field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XicsLvl1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize XicsLvl1 status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XicsLvl1--></spirit:field>
               <spirit:field><!--BitField named XicsLvl2--><spirit:name>XicsLvl2</spirit:name>
                  <spirit:description>Desired remote status override/initialize XicsLvl2 status field.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XicsLvl2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize XicsLvl2 status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XicsLvl2--></spirit:field>
               <spirit:field><!--BitField named DnsAsy--><spirit:name>DnsAsy</spirit:name>
                  <spirit:description>Desired remote status override/initialize DnsAsy status field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DnsAsy--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize DnsAsy status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsAsy--></spirit:field>
               <spirit:field><!--BitField named DnsPer--><spirit:name>DnsPer</spirit:name>
                  <spirit:description>Desired remote status override/initialize DnsPer status field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DnsPer--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize DnsPer status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsPer--></spirit:field>
               <spirit:field><!--BitField named DnsAcc--><spirit:name>DnsAcc</spirit:name>
                  <spirit:description>Desired remote status override/initialize DnsAcc status field.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DnsAcc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize DnsAcc status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsAcc--></spirit:field>
               <spirit:field><!--BitField named UpsAsy--><spirit:name>UpsAsy</spirit:name>
                  <spirit:description>Desired remote status override/initialize UpsAsy status field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named UpsAsy--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize UpsAsy status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAsy--></spirit:field>
               <spirit:field><!--BitField named UpsPer--><spirit:name>UpsPer</spirit:name>
                  <spirit:description>Desired remote status override/initialize UpsPer status field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named UpsPer--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize UpsPer status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsPer--></spirit:field>
               <spirit:field><!--BitField named UpsAcc--><spirit:name>UpsAcc</spirit:name>
                  <spirit:description>Desired remote status override/initialize UpsAcc status field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named UpsAcc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Desired remote status override/initialize UpsAcc status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAcc--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named RxTableWacc--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Remote status RX table write access register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named RxTableWacc--></spirit:register>
            <spirit:register><!--Register named Status--><spirit:name>Status</spirit:name>
               <spirit:description>Local resource and blocking status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named BlkAsyIn--><spirit:name>BlkAsyIn</spirit:name>
                  <spirit:description>Asynchronous In flow control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkAsyIn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Asynchronous In flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkAsyIn--></spirit:field>
               <spirit:field><!--BitField named BlkAsyOut--><spirit:name>BlkAsyOut</spirit:name>
                  <spirit:description>Asynchronous Out flow control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkAsyOut--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Asynchronous Out flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkAsyOut--></spirit:field>
               <spirit:field><!--BitField named BlkPerIn--><spirit:name>BlkPerIn</spirit:name>
                  <spirit:description>Periodic In flow control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkPerIn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Periodic In flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkPerIn--></spirit:field>
               <spirit:field><!--BitField named BlkPerOut--><spirit:name>BlkPerOut</spirit:name>
                  <spirit:description>Periodic Out flow control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkPerOut--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Periodic Out flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkPerOut--></spirit:field>
               <spirit:field><!--BitField named BlkAccIn--><spirit:name>BlkAccIn</spirit:name>
                  <spirit:description>Accelerated Bulk In flow control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkAccIn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Accelerated Bulk In flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkAccIn--></spirit:field>
               <spirit:field><!--BitField named BlkAccOut--><spirit:name>BlkAccOut</spirit:name>
                  <spirit:description>Accelerated Bulk Out control block rule field.  This field is the result of rules applied to both the local and remote resources.

0 = do not block
1 = block</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BlkAccOut--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Accelerated Bulk Out flow control block rule field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BlkAccOut--></spirit:field>
               <spirit:field><!--BitField named DnsAsy--><spirit:name>DnsAsy</spirit:name>
                  <spirit:description>Block status request for the DNS_ASY QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named DnsAsy--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the DNS_ASY QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsAsy--></spirit:field>
               <spirit:field><!--BitField named DnsPer--><spirit:name>DnsPer</spirit:name>
                  <spirit:description>Block status request for the DNS_PER QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named DnsPer--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the DNS_PER QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsPer--></spirit:field>
               <spirit:field><!--BitField named DnsAcc--><spirit:name>DnsAcc</spirit:name>
                  <spirit:description>Block status request for the DNS_ACC QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named DnsAcc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the DNS_ACC QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DnsAcc--></spirit:field>
               <spirit:field><!--BitField named UpsAsy--><spirit:name>UpsAsy</spirit:name>
                  <spirit:description>Block status request for the UPS_ASY QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAsy--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ASY QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAsy--></spirit:field>
               <spirit:field><!--BitField named UpsPer--><spirit:name>UpsPer</spirit:name>
                  <spirit:description>Block status request for the UPS_PER QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsPer--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_PER QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsPer--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp1--><spirit:name>UpsAccVp1</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP1 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP1 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp1--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp2--><spirit:name>UpsAccVp2</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP2 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP2 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp2--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp3--><spirit:name>UpsAccVp3</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP3 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp3--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP3 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp3--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp4--><spirit:name>UpsAccVp4</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP4 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp4--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP4 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp4--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp5--><spirit:name>UpsAccVp5</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP5 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp5--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP5 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp5--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp6--><spirit:name>UpsAccVp6</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP6 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp6--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP6 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp6--></spirit:field>
               <spirit:field><!--BitField named UpsAccVp7--><spirit:name>UpsAccVp7</spirit:name>
                  <spirit:description>Block status request for the UPS_ACC_VP7 QID type. This field is set '1' on exceeding the corresponding Qtype thresh_hi level and cleared '0' on falling below the corresponding Qtype thresh_lo level.

Note: this status is provided to the XFLC module where the flow control rules are applied that actually affect local side blocking behaviors.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UpsAccVp7--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Block status request for the UPS_ACC_VP7 QID type.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UpsAccVp7--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Status--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Local resource and blocking status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Status--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XFLC--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>Flow control status and control register block</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XFLC--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named XCRM--><spirit:name>XCRM</spirit:name>
            <spirit:description>Communications link receive module (XCRM) interface register block.</spirit:description>
            <spirit:baseAddress>0xb0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x20</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Config--><spirit:name>Config</spirit:name>
               <spirit:description>XCRM configuration register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x1400</spirit:value>
                  <spirit:mask>0x7fff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named SlowLink--><spirit:name>SlowLink</spirit:name>
                  <spirit:description>XCRM slow link indicator field.
0 = Link exceeds required USB+Overhead bandwidth requirements (~&gt;600MHz).
1 = Link is less than required USB+Overhead bandwidth requirements(~&lt;600MHz).
When set this field will force all treat all receptions as "Confirmed Delivery" mode.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SlowLink--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM slow link indicator field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SlowLink--></spirit:field>
               <spirit:field><!--BitField named SrdyTout--><spirit:name>SrdyTout</spirit:name>
                  <spirit:description>Srdy timeout threshold field.  Set the maximum allowable number of PHY_CLK cycles that SRDY can fall mid frame.  This field is multiplied by 8 such that:

00000000 = Disabled
00000001 = 8 PHY clocks
10000000 = 1024 PHY clocks
11111111 = 2040 PHY clocks

This field must be set before the XCTM is enabled.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SrdyTout--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Srdy timeout threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SrdyTout--></spirit:field>
               <spirit:field><!--BitField named VportFilter--><spirit:name>VportFilter</spirit:name>
                  <spirit:description>XCRM VPORT filter enable field.

LEX: n/a
REX: 0 = Allow all packets regardless of VPORT to pass through the XCRM to the XICS.
     1 = Allow only packets with VPORT0 and VPORT=GRG.VPORTID.ID to pass through the XCRM to the XICS.

Note: Once REX has been assigned a VPORT ID by LEX this field should be set '1'.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named VportFilter--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM VPORT filter enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named VportFilter--></spirit:field>
               <spirit:field><!--BitField named PktBufThresh--><spirit:name>PktBufThresh</spirit:name>
                  <spirit:description>XCRM packet buffering threshold field.  This value is adjusted to account for the rate of data received over the link to ensure the XUTM is does not underflow the cache in advanced delivery mode. The default value is set to compensate for ipf framing. This value must be adjusted for packets spanning interframe gaps when packet packing possible.

Note: When using SLP half duplex packet packing will not occur.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PktBufThresh--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x5</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM packet buffering threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PktBufThresh--></spirit:field>
               <spirit:field><!--BitField named EnetRxQid--><spirit:name>EnetRxQid</spirit:name>
                  <spirit:description>Received ethernet frame static destination QID select field.

0 = SQ_CPU_RX_ENET
1 = SQ_CPU_RX</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named EnetRxQid--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Received ethernet frame static destination QID select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named EnetRxQid--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Config--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCRM configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Config--></spirit:register>
            <spirit:register><!--Register named Status--><spirit:name>Status</spirit:name>
               <spirit:description>XCRM status register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xff7f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named RetQReq--><spirit:name>RetQReq</spirit:name>
                  <spirit:description>The mechanism for returning XCRM requested QIDs is lost once the XCRM is disabled; therefore, upon disable of the XCRM software must return this QID when non-zero.

If RetQ = 0x00 = No QID to return.
If RetQ = 0xXX = QID XX must be returned.

Note: Only return once after disabling XCRM.  This field is updated only following an XCRM disable.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named RetQReq--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM software return QID request made at time GRG.ModEn.XcrmEn was set 0.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RetQReq--></spirit:field>
               <spirit:field><!--BitField named PfifoCnt--><spirit:name>PfifoCnt</spirit:name>
                  <spirit:description>Payload FIFO count.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PfifoCnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Payload FIFO count.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PfifoCnt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Status--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCRM status register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Status--></spirit:register>
            <spirit:register><!--Register named QosStatus0--><spirit:name>QosStatus0</spirit:name>
               <spirit:description>XCRM/XCTM QOS status 0 register.

Note: status in XCRM, configuration in XCTM</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named TSEnd--><spirit:name>TSEnd</spirit:name>
                  <spirit:description>Time stamp end field.  This field holds the top 16 bits of the internal 26 bit time stamp at the end of the QOS sequence.  This field can be used in conjunction with the time stamp start field to calculate the total time to complete the QOS sequence.

Note: The internal time stamp is 26 bits allowing a max differential of 2^26(1/60000000)=1.1185s.  This field represents a resolution of 1.1185s/2^16=17.07us.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TSEnd--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Time stamp end field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TSEnd--></spirit:field>
               <spirit:field><!--BitField named TSStart--><spirit:name>TSStart</spirit:name>
                  <spirit:description>Time stamp start field.  This field holds the top 16 bits of the internal 26 bit time stamp at the start of the QOS sequence.  This field can be used in conjunction with the time stamp end field to calculate the total time to complete the QOS sequence.

Note: The internal time stamp is 26 bits allowing a max differential of 2^26(1/60000000)=1.1185s.  This field represents a resolution of 1.1185s/2^16=17.07us.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TSStart--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Time stamp start field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TSStart--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named QosStatus0--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCRM/XCTM QOS status 0 register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named QosStatus0--></spirit:register>
            <spirit:register><!--Register named QosStatus1--><spirit:name>QosStatus1</spirit:name>
               <spirit:description>XCRM/XCTM QOS status 1 register.

Note: status in XCRM, configuration in XCTM</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named LatencyL--><spirit:name>LatencyL</spirit:name>
                  <spirit:description>QOS low latency field.  This field represents the lowest latency detected during the last QOS sequence.

Note: the internal time stamp is 26bit, but this field monitors bit 20:05 providing a maximum latency time of 2^10*(1/60000000)=17.476ms and a resolution of 266us.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named LatencyL--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS low latency field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LatencyL--></spirit:field>
               <spirit:field><!--BitField named LatencyH--><spirit:name>LatencyH</spirit:name>
                  <spirit:description>QOS high latency field.  This field represents the highest latency detected during the last QOS sequence.

Note: the internal time stamp is 26bit, but this field monitors bit 20:05 providing a maximum latency time of 2^10*(1/60000000)=17.476ms and a resolution of 266us.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named LatencyH--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS high latency field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LatencyH--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named QosStatus1--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCRM/XCTM QOS status 1 register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named QosStatus1--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XCRM--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>Communications link receive module (XCRM) interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XCRM--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named XCTM--><spirit:name>XCTM</spirit:name>
            <spirit:description>Communications link transmit module (XCTM) interface register block.</spirit:description>
            <spirit:baseAddress>0xd0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x30</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Config--><spirit:name>Config</spirit:name>
               <spirit:description>XCTM configuration register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x4830</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Running--><spirit:name>Running</spirit:name>
                  <spirit:description>XCTM running field.  When XCTM is disabled do not clear the XICS or re-enable the XCTM until this field is read '0'.  This field is set when XCTM is enabled.

Note: when XCTM is disabled if it is in the process of reading a frame from the XICS it will continue to do so until the frame has been sent.  During this time this field is read '1'.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Running--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM running field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Running--></spirit:field>
               <spirit:field><!--BitField named ThrottleEn--><spirit:name>ThrottleEn</spirit:name>
                  <spirit:description>XCTM throttle enable field.
0 = Throttle disabled.
1 = Throttle enabled.
When throttle is enabled the XCTM will not read the XICS more than once every 8 cycles (MAX 480Mbps).</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ThrottleEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM throttle enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ThrottleEn--></spirit:field>
               <spirit:field><!--BitField named Packetized--><spirit:name>Packetized</spirit:name>
                  <spirit:description>XCTM packetized enable field.  When set the XCTM will wait for a full frame to be in an QID before arbitrating it for transmission.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Packetized--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM packetized enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Packetized--></spirit:field>
               <spirit:field><!--BitField named SofTxType--><spirit:name>SofTxType</spirit:name>
                  <spirit:description>SOF transmit type select field.  Selects how SOF packets are replicated on transmitted.

00 = CLM non-replicated non-retriable (sent a single non-retriable broadcast packet on vport 0, frame header vport field = 0)
01 = CLM replicated retriable (sent as retriable unicast packets on all enable vports, frame header vport field = 0)
10 = XCTM replicated non-retriable (sent as non-retriable unicast packets on all enabled vports, frame header vport field = vport)
11 = XCTM replicated retriable (sent as retriable unicast packets on all enable vports, frame header vport field = vport)</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SofTxType--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x2</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>SOF transmit type select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SofTxType--></spirit:field>
               <spirit:field><!--BitField named Bufmode--><spirit:name>Bufmode</spirit:name>
                  <spirit:description>XCTM buffer mode selection field.  This field selects the operation of the XCTM internal buffer, for XCTM packetized mode use the XCTM.Config.Packetized field.
00 = BF_NONE = No XCTM buffering of data before transmission
01 = BF_1FRM = Buffer at least 1 frame before allowing transmission.
10 = BF_THSH = Buffer to a threshold before allowing transmission.

Note: for BM_1FRM and BM_THSH once transmission has begun the XCTM will continue transmit as long as the XCTM internal buffer contains 1 or more frames.

For BM_1FRM: the XCTM will detect a frame on write of EOF to the XCTM internal buffer or upon detecting a USB traffic type threshold has been set.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Bufmode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM buffer mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Bufmode--></spirit:field>
                  <spirit:field><!--BitField named Peridskip_Disable--><spirit:name>Peridskip_Disable</spirit:name>
                  <spirit:description>XCTM Periodic skip disable field.  When set the XCTM will disable the periodic skip arbiter and revert to the priority arbiter.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Peridskip_Disable--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM Periodic skip disable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Peridskip_Disable--></spirit:field>
                  <spirit:field><!--BitField named Peridskip--><spirit:name>Peridskip</spirit:name>
                  <spirit:description>Peridskip stands for Periodic Skip Counter.
In the XCTM Arbiter P2 priority is given to Periodic Packets.  To ensure both Async and AccBlk packets are also serviced
this counter times out by counting Periodic Packets thus servicing Async and AccBlk in round robin.  Auto reset. </spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Peridskip--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x48</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Periodic Counter select field</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Peridskip--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Config--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCTM configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Config--></spirit:register>
            <spirit:register><!--Register named ThshLevels--><spirit:name>ThshLevels</spirit:name>
               <spirit:description>XCTM endpoint type frame buffered detect threshold register.  Only valid for XCTM.Config.Bufmode=BM_THSH.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1fffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Cyc--><spirit:name>Cyc</spirit:name>
                  <spirit:description>XCTM buffer inactivity threshold field.  This field sets the minimum number of cycles that the XCTM internal buffer must be inactive with data before transmission can commence.



0 = Not Enabled
1 = 4 XusbClks required
:
255 = 1020 XusbClks required (MAXIMUM)</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Cyc--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM buffer inactivity threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Cyc--></spirit:field>
               <spirit:field><!--BitField named Wrd--><spirit:name>Wrd</spirit:name>
                  <spirit:description>XCTM buffer cache word threshold field.  This field sets the minimum number of cache words that the XCTM internal buffer must buffer before transmission can commence.  Note: the XCTM buffer has maximum cache word limit of 72; however depending on frame structure and size the XCTM buffer may fill before that limit is achieved.

Note: whenever a word threshold greater than 1 is set a XCTM.ThshLevels.Cyc limit must also be set.

0 = Not Enabled
1 = 1 cache word required
:
150 = 150 cache words required (MAXIMUM)</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wrd--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM buffer cache word threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wrd--></spirit:field>
               <spirit:field><!--BitField named Frm--><spirit:name>Frm</spirit:name>
                  <spirit:description>XCTM buffer frame threshold field.  This field sets the minimum number of frames that the XCTM internal buffer must buffer before transmission can commence.  Note: the XCTM buffer has maximum frame limit of 16; however depending on frame structure and size the XCTM buffer may fill before that limit is achieved.

Note: whenever a frame threshold greater than 1 is set a XCTM.ThshLevels.Cyc limit must also be set.

0 = Not Enabled
1 = 1 frame required
:
16 = 16 frames required (MAXIMUM)</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Frm--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM buffer frame threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Frm--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ThshLevels--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCTM endpoint type frame buffered detect threshold register.  Only valid for XCTM.Config.Bufmode=BM_THSH.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ThshLevels--></spirit:register>
            <spirit:register><!--Register named ThshEpType--><spirit:name>ThshEpType</spirit:name>
               <spirit:description>XCTM endpoint type frame buffered detect threshold register.  Only valid for XCTM.Config.Bufmode-BM_1FRM/BM_THSH.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x45452306</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Ctrl--><spirit:name>Ctrl</spirit:name>
                  <spirit:description>BULK endpoint type frame buffered detect threshold field.  This field set the number of XICS cache words that the XCTM will buffer before indicating that a bulk frame is ready for transmission.  This field allows the XCTM to start transmission of a frame before completely buffering it without worries of data under-runs due to a faster transmit PHY clock.

For example if the PHY clock is double the XUSB clock it is only necessary to buffer half of the maximum size packet to guarantee that the XCTM buffer will not under-run.

0 = Disabled
1 = 1 cache word
:
150 = 150 cache words (MAXIMUM)

Calculation Equation: MaxWrds-(MaxWrds(XusbRate/PhyRate))=MinWrds

HS_CTRL MAX_WRDs = (dhdr+pid+data+crc)/8=11

Example (GMII): 11-(11(480/1000))=6</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Ctrl--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x6</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM running field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Ctrl--></spirit:field>
               <spirit:field><!--BitField named Bulk--><spirit:name>Bulk</spirit:name>
                  <spirit:description>BULK endpoint type frame buffered detect threshold field.  This field set the number of XICS cache words that the XCTM will buffer before indicating that a bulk frame is ready for transmission.  This field allows the XCTM to start transmission of a frame before completely buffering it without worries of data under-runs due to a faster transmit PHY clock.

For example if the PHY clock is double the XUSB clock it is only necessary to buffer half of the maximum size packet to guarantee that the XCTM buffer will not under-run.

0 = Disabled
1 = 1 cache word
:
150 = 150 cache words (MAXIMUM)

Calculation Equation: MaxWrds-(MaxWrds(XusbRate/PhyRate))=MinWrds

HS_BULK MAX_WRDs = (dhdr+pid+data+crc)/8=67

Example (GMII): 67-(67(480/1000))=35</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Bulk--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x23</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>BULK endpoint type frame buffered detect threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Bulk--></spirit:field>
               <spirit:field><!--BitField named Intr--><spirit:name>Intr</spirit:name>
                  <spirit:description>INTR endpoint type frame buffered detect threshold field.  This field set the number of XICS cache words that the XCTM will buffer before indicating that an interrupt frame is ready for transmission.  This field allows the XCTM to start transmission of a frame before completely buffering it without worries of data under-runs due to a faster transmit PHY clock.

For example if the PHY clock is double the XUSB clock it is only necessary to buffer half of the maximum size packet to guarantee that the XCTM buffer will not under-run.

0 = Disabled
1 = 1 cache word
:
150 = 150 cache words (MAXIMUM)

Calculation Equation: MaxWrds-(MaxWrds(XusbRate/PhyRate))=MinWrds

HS_INTR MAX_WRDs = (dhdr+pid+data+crc)/8=131

Example (GMII): 131-(131(480/1000))=69</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Intr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x45</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>INTR endpoint type frame buffered detect threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Intr--></spirit:field>
               <spirit:field><!--BitField named Isoc--><spirit:name>Isoc</spirit:name>
                  <spirit:description>ISOC endpoint type frame buffered detect threshold field.  This field set the number of XICS cache words that the XCTM will buffer before indicating that an isochronous frame is ready for transmission.  This field allows the XCTM to start transmission of a frame before completely buffering it without worries of data under-runs due to a faster transmit PHY clock.

For example if the PHY clock is double the XUSB clock it is only necessary to buffer half of the maximum size packet to guarantee that the XCTM buffer will not under-run.

0 = Disabled
1 = 1 cache word
:
150 = 150 cache words (MAXIMUM)

Calculation Equation: MaxWrds-(MaxWrds(XusbRate/PhyRate))=MinWrds

HS_ISOC MAX_WRDs = (dhdr+pid+data+crc)/8=131

Example (GMII): 131-(131(480/1000))=69</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Isoc--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x45</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>ISOC endpoint type frame buffered detect threshold field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Isoc--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ThshEpType--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCTM endpoint type frame buffered detect threshold register.  Only valid for XCTM.Config.Bufmode=BM_1FRM/BM_THSH.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ThshEpType--></spirit:register>
            <spirit:register><!--Register named SrcTxEn--><spirit:name>SrcTxEn</spirit:name>
               <spirit:description>Source Transmit Enable Register</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x1ff</spirit:value>
                  <spirit:mask>0x1ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named SQsof--><spirit:name>SQsof</spirit:name>
                  <spirit:description>Static QID SOF transmit enable field.
0 = XCTM will not transmit from the SOF QID.
1 = XCTM will transmit from the SOF QID.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQsof--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID SOF transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQsof--></spirit:field>
               <spirit:field><!--BitField named SQcputx--><spirit:name>SQcputx</spirit:name>
                  <spirit:description>Static QID CPUTX transmit enable field.
0 = XCTM will not transmit from the CPUTX QID.
1 = XCTM will transmit from the CPUTX QID.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQcputx--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID CPUTX transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQcputx--></spirit:field>
               <spirit:field><!--BitField named SQcputxusb--><spirit:name>SQcputxusb</spirit:name>
                  <spirit:description>Static QID CPUTXUSB transmit enable field.
0 = XCTM will not transmit from the CPUTXUSB QID.
1 = XCTM will transmit from the CPUTXUSB QID.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQcputxusb--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID CPUTXUSB transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQcputxusb--></spirit:field>
               <spirit:field><!--BitField named SQcputxenet--><spirit:name>SQcputxenet</spirit:name>
                  <spirit:description>Static QID CPUTXUSB transmit enable field.
0 = XCTM will not transmit from the CPUTXENET QID.
1 = XCTM will transmit from the CPUTXENET QID.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQcputxenet--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID CPUTXENET transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQcputxenet--></spirit:field>
               <spirit:field><!--BitField named SQasync--><spirit:name>SQasync</spirit:name>
                  <spirit:description>Static QID ASYNC transmit enable field.
0 = XCTM will not transmit from the ASYNC QID.
1 = XCTM will transmit from the ASYNC QID.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQasync--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID ASYNC transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQasync--></spirit:field>
               <spirit:field><!--BitField named SQperiodic--><spirit:name>SQperiodic</spirit:name>
                  <spirit:description>Static QID PERIODIC transmit enable field.
0 = XCTM will not transmit from the PERIODIC QID.
1 = XCTM will transmit from the PERIODIC QID.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQperiodic--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID PERIODIC transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQperiodic--></spirit:field>
               <spirit:field><!--BitField named SQaccbulk--><spirit:name>SQaccbulk</spirit:name>
                  <spirit:description>Static QID ACCBULK transmit enable field.
0 = XCTM will not transmit from the ACCBULK QID.
1 = XCTM will transmit from the ACCBULK QID.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SQaccbulk--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Static QID ACCBULK transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SQaccbulk--></spirit:field>
               <spirit:field><!--BitField named Xflc--><spirit:name>Xflc</spirit:name>
                  <spirit:description>XFLC transmit enable field.
0 = XCTM will not transmit from the XFLC.
1 = XCTM will transmit from the XFLC.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Xflc--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XFLC transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Xflc--></spirit:field>
               <spirit:field><!--BitField named Qos--><spirit:name>Qos</spirit:name>
                  <spirit:description>Quality-of-Service module transmit enable field.
0 = XCTM will not transmit from the XCTM QOS module.
1 = XCTM will transmit from the XCTM QOS module.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Qos--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Quality-of-Service module transmit enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qos--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named SrcTxEn--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Source Transmit Enable Register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named SrcTxEn--></spirit:register>
            <spirit:register><!--Register named QosConfig--><spirit:name>QosConfig</spirit:name>
               <spirit:description>XCTM/XCRM QOS configuration register.

Note: configuration in XCTM, status in XCRM</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x2</spirit:value>
                  <spirit:mask>0x7ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>QOS sequence go field. Set '1' to start the QOS sequence configured.

Note: this field is self-clearing upon completion of test.
Note: if a QOS sequence is not complete within the resolution of the internal time stamp the XCRM.QosConfig.Error field will indicate the failure when this field read '0'.  Other results are found in the XCRM.QosStatus0/1 registers.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS sequence go field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named Vport--><spirit:name>Vport</spirit:name>
                  <spirit:description>QOS vport selection field.

0 : invalid
1-7 : valid</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Vport--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS vport selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vport--></spirit:field>
               <spirit:field><!--BitField named PyldSize--><spirit:name>PyldSize</spirit:name>
                  <spirit:description>QOS payload size select field. Size of payload in addition to frame header.

00 -    0 bytes
01 -  128 bytes
10 -  512 bytes
11 - 1024 bytes</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PyldSize--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS payload size select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PyldSize--></spirit:field>
               <spirit:field><!--BitField named Iterations--><spirit:name>Iterations</spirit:name>
                  <spirit:description>QOS iterations select field. Number of packets in QOS sequence.

00 =    1 packets
01 =   16 packets
10 = 1024 packets
11 = 4096 packets</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Iterations--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS iterations select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Iterations--></spirit:field>
               <spirit:field><!--BitField named IFGmode--><spirit:name>IFGmode</spirit:name>
                  <spirit:description>QOS inter-frame gap mode select field.  Number of cycles between packet iterations.

00 -    0 cycles
01 -  128 cycles
10 -  512 cycles
11 - 1024 cycles</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named IFGmode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS inter-frame gap mode select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IFGmode--></spirit:field>
               <spirit:field><!--BitField named Error--><spirit:name>Error</spirit:name>
                  <spirit:description>QOS sequence error field. After a QOS sequence is complete (go bit clear) this field represents that a the test exceeded the maximum time resolution of the internal time stamp.

0 = No QOS sequence yet run or last sequence passed.
1 = Last QOS sequence failed.  (cleared on next XCTM.QosConfig.Go)</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Error--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>QOS sequence error field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Error--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named QosConfig--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XCTM/XCRM QOS configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named QosConfig--></spirit:register>
            <spirit:register><!--Register named Corrupt--><spirit:name>Corrupt</spirit:name>
               <spirit:description>Corruption configuration register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfff7cf7f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>Corruption request field.

Note: this field clears when corruption has occurred.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corruption request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named Hdr0--><spirit:name>Hdr0</spirit:name>
                  <spirit:description>Corrupt HDR0 request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Hdr0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt HDR0 request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Hdr0--></spirit:field>
               <spirit:field><!--BitField named Hdr1--><spirit:name>Hdr1</spirit:name>
                  <spirit:description>Corrupt HDR1 request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Hdr1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt HDR1 request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Hdr1--></spirit:field>
               <spirit:field><!--BitField named Dat0--><spirit:name>Dat0</spirit:name>
                  <spirit:description>Corrupt first data byte request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Dat0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt first data byte request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dat0--></spirit:field>
               <spirit:field><!--BitField named DatN--><spirit:name>DatN</spirit:name>
                  <spirit:description>Corrupt last data byte request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DatN--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt last data byte request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DatN--></spirit:field>
               <spirit:field><!--BitField named LnkHdr--><spirit:name>LnkHdr</spirit:name>
                  <spirit:description>Corrupt Link Header request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named LnkHdr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt Link Header request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LnkHdr--></spirit:field>
               <spirit:field><!--BitField named LnkDat--><spirit:name>LnkDat</spirit:name>
                  <spirit:description>Corrupt Link Data request field.  Set as desired before setting Go.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named LnkDat--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Corrupt Link Data request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LnkDat--></spirit:field>
               <spirit:field><!--BitField named VportEn--><spirit:name>VportEn</spirit:name>
                  <spirit:description>Vport corruption filter enable.  If enabled the selected corruption will only occur when the frame Vport matches the Vport field in this register.

Note: if multiple enables are set in this register all enable fields must match for the corruption to occur.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named VportEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Vport corruption filter enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named VportEn--></spirit:field>
               <spirit:field><!--BitField named Vport--><spirit:name>Vport</spirit:name>
                  <spirit:description>Vport corruption filter.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Vport--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Vport corruption filter.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Vport--></spirit:field>
               <spirit:field><!--BitField named TagTypeEn--><spirit:name>TagTypeEn</spirit:name>
                  <spirit:description>Tag type corruption filter enable.  If enabled the selected corruption will only occur when the frame tag type matches the TagType field in this register.

Note: if multiple enables are set in this register all enable fields must match for the corruption to occur.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TagTypeEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Tag type corruption filter enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagTypeEn--></spirit:field>
               <spirit:field><!--BitField named TagType--><spirit:name>TagType</spirit:name>
                  <spirit:description>Tag type corruption filter.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TagType--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Tag type corruption filter.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TagType--></spirit:field>
               <spirit:field><!--BitField named AddrEndptEn--><spirit:name>AddrEndptEn</spirit:name>
                  <spirit:description>USB Address and Endpoint corruption filter enable.  If enabled the selected corruption will only occur when the frame USB Address and Endpoint matches the AddrEndpt field in this register.

Note: if multiple enables are set in this register all enable fields must match for the corruption to occur.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named AddrEndptEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB Address and Endpoint corruption filter enable.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AddrEndptEn--></spirit:field>
               <spirit:field><!--BitField named AddrEndpt--><spirit:name>AddrEndpt</spirit:name>
                  <spirit:description>USB Address and Endpoint corruption filter.</spirit:description>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>11</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named AddrEndpt--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB Address and Endpoint corruption filter.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AddrEndpt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Corrupt--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Corruption configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Corrupt--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XCTM--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>Communications link transmit module (XCTM) interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XCTM--></spirit:addressBlock>
         <!--
					 Bits in least addressable unit.  This defines how the address increments.
					 If this changes be sure to change the range of the AddressBlock and also
					 the addresses.
	--><spirit:addressUnitBits>8</spirit:addressUnitBits>
         <!--MemoryMap named XCSRCpuMemMap--></spirit:memoryMap>
   </spirit:memoryMaps>
   <spirit:parameters/>
   <spirit:vendorExtensions><!--Component named XCSR--><pdt:sysLevelOffset>0x20000500</pdt:sysLevelOffset>
      <pdt:description>ExtremeUSB control/status register block (XCSR).</pdt:description>
      <pdt:instanceClass>Component</pdt:instanceClass>
      <pdt:briefDescription>ExtremeUSB control/status register block (XCSR).</pdt:briefDescription>
      <pdt:developerComments/>
      <pdt:indexTags/>
      <pdt:related/>
      <pdt:visibleToRoles/>
   </spirit:vendorExtensions>
   <!--Component named XCSR--></spirit:component>
