<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:pdt="PDT" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4"><!--Component named XLR--><spirit:vendor>vendor</spirit:vendor>
   <spirit:library>lib</spirit:library>
   <spirit:name>XLR</spirit:name>
   <spirit:version>1.1</spirit:version>
   <spirit:memoryMaps>
      <spirit:memoryMap><!--MemoryMap named XLRCpuMemMap--><spirit:name>XLRCpuMemMap</spirit:name>
         <spirit:addressBlock><!--AddressBlock named XLR--><spirit:name>XLR</spirit:name>
            <spirit:description>LEX core interface register block.</spirit:description>
            <spirit:baseAddress>0x0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x2c</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Id--><spirit:name>Id</spirit:name>
               <spirit:description>XLR registers ASCII identification register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x5f584c52</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Id--><spirit:name>Id</spirit:name>
                  <spirit:description>XLR registers ASCII identification field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Id--><spirit:vendorExtensions>
                     <pdt:valueType>ascii</pdt:valueType>
                     <pdt:resetValue>0x5f584c52</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR registers ASCII identification field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Id--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Id--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XLR registers ASCII identification register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Id--></spirit:register>
            <spirit:register><!--Register named Rev--><spirit:name>Rev</spirit:name>
               <spirit:description/>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x10d</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named CvsMinor--><spirit:name>CvsMinor</spirit:name>
                  <spirit:description>XLR registers CVS minor revision field.  This field relates to the post-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMinor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0xd</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR registers CVS minor revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMinor--></spirit:field>
               <spirit:field><!--BitField named CvsMajor--><spirit:name>CvsMajor</spirit:name>
                  <spirit:description>XLR registers CVS major revision field.  This field relates to the pre-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMajor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR registers CVS major revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMajor--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rev--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription/>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rev--></spirit:register>
            <spirit:register><!--Register named IntEn--><spirit:name>IntEn</spirit:name>
               <spirit:description>Interrupt enable register.

0 = interrupt disabled.
1 = interrupt enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xf1f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexRty0--><spirit:name>Irq0LexRty0</spirit:name>
                  <spirit:description>DQID and Rty0 release collision interrupt enable field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRty0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 release collision interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty1--><spirit:name>Irq0LexRty1</spirit:name>
                  <spirit:description>DQID and Rty1 release collision interrupt enable field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty1 release collision interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty0Rty1--><spirit:name>Irq0LexRty0Rty1</spirit:name>
                  <spirit:description>DQID and Rty0 and Rty1 release collision interrupt enable field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRty0Rty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 and Rty1 release collision interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0Rty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoOflow--><spirit:name>Irq0LexRlsFifoOflow</spirit:name>
                  <spirit:description>LEX release FIFO overflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRlsFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO overflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoUflow--><spirit:name>Irq0LexRlsFifoUflow</spirit:name>
                  <spirit:description>LEX release FIFO underflow interrupt enable field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq0LexRlsFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO underflow interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntInOverflow--><spirit:name>Irq1StatCntInOverflow</spirit:name>
                  <spirit:description>XLR.StatCntIn.XXXOvfl(s)=1 interrupt enable field.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1StatCntInOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntIn.XXXOvfl(s)=1 interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntInOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntOutOverflow--><spirit:name>Irq1StatCntOutOverflow</spirit:name>
                  <spirit:description>XLR.StatCntOut.XXXOvfl(s)=1 interrupt enable field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1StatCntOutOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntOut.XXXOvfl(s)=1 interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntOutOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntFlcOverflow--><spirit:name>Irq1StatCntFlcOverflow</spirit:name>
                  <spirit:description>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt enable field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1StatCntFlcOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntFlcOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntErrOverflow--><spirit:name>Irq1StatCntErrOverflow</spirit:name>
                  <spirit:description>XLR.StatCntErr.XXXOvfl(s)=1 interrupt enable field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Irq1StatCntErrOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntErr.XXXOvfl(s)=1 interrupt enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntErrOverflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntEn--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt enable register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntEn--></spirit:register>
            <spirit:register><!--Register named IntFlg--><spirit:name>IntFlg</spirit:name>
               <spirit:description>Interrupt flag register.

0 = no interrupt event detected
1 = interrupt event detected

Note: if the corresponding interrupt enable field (XLR.IntEn.xxx) is asserted and the corresponding interrupt source field (XLR.IntSrc.xxx) is asserted the interrupt flag will assert.  Unless otherwise stated.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xf1f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexRty0--><spirit:name>Irq0LexRty0</spirit:name>
                  <spirit:description>DQID and Rty0 release collision interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 release collision interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty1--><spirit:name>Irq0LexRty1</spirit:name>
                  <spirit:description>DQID and Rty1 release collision interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty1 release collision interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty0Rty1--><spirit:name>Irq0LexRty0Rty1</spirit:name>
                  <spirit:description>DQID and Rty0 and Rty1 release collision interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty0Rty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 and Rty1 release collision interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0Rty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoOflow--><spirit:name>Irq0LexRlsFifoOflow</spirit:name>
                  <spirit:description>LEX release FIFO overflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO overflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoUflow--><spirit:name>Irq0LexRlsFifoUflow</spirit:name>
                  <spirit:description>LEX release FIFO underflow interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO underflow interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntInOverflow--><spirit:name>Irq1StatCntInOverflow</spirit:name>
                  <spirit:description>XLR.StatCntIn.XXXOvfl(s)=1 interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntInOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntIn.XXXOvfl(s)=1 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntInOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntOutOverflow--><spirit:name>Irq1StatCntOutOverflow</spirit:name>
                  <spirit:description>XLR.StatCntOut.XXXOvfl(s)=1 interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntOutOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntOut.XXXOvfl(s)=1 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntOutOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntFlcOverflow--><spirit:name>Irq1StatCntFlcOverflow</spirit:name>
                  <spirit:description>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntFlcOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntFlcOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntErrOverflow--><spirit:name>Irq1StatCntErrOverflow</spirit:name>
                  <spirit:description>XLR.StatCntErr.XXXOvfl(s)=1 interrupt flag field.

POSEDGE INTERRUPT:
This field is set on the rising edge of the corresponding interrupt source field when the corresponding interrupt enable field is set.  This field is cleared by writing the corresponding interrupt clear field '1'.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntErrOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntErr.XXXOvfl(s)=1 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntErrOverflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntFlg--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt flag register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntFlg--></spirit:register>
            <spirit:register><!--Register named IntSrc--><spirit:name>IntSrc</spirit:name>
               <spirit:description>Interrupt source register.

0 = interrupt source inactive.
1 = interrupt source active.

Note: These fields reflect the live interrupt source status and may not be valuable as polled fields.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xf1f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexRty0--><spirit:name>Irq0LexRty0</spirit:name>
                  <spirit:description>DQID and Rty0 release collision interrupt source field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 release collision interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty1--><spirit:name>Irq0LexRty1</spirit:name>
                  <spirit:description>DQID and Rty1 release collision interrupt source field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty1 release collision interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty0Rty1--><spirit:name>Irq0LexRty0Rty1</spirit:name>
                  <spirit:description>DQID and Rty0 and Rty1 release collision interrupt source field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRty0Rty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 and Rty1 release collision interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0Rty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoOflow--><spirit:name>Irq0LexRlsFifoOflow</spirit:name>
                  <spirit:description>LEX release FIFO overflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO overflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoUflow--><spirit:name>Irq0LexRlsFifoUflow</spirit:name>
                  <spirit:description>LEX release FIFO underflow interrupt source field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO underflow interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntInOverflow--><spirit:name>Irq1StatCntInOverflow</spirit:name>
                  <spirit:description>XLR.StatCntIn.XXXOvfl(s)=1 interrupt source field.  This field indicates that one or more of the overflow(s) in the XLR.StatCntIn register is = 1.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntInOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntIn.XXXOvfl(s)=1 interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntInOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntOutOverflow--><spirit:name>Irq1StatCntOutOverflow</spirit:name>
                  <spirit:description>XLR.StatCntOut.XXXOvfl(s)=1 interrupt source field.  This field indicates that one or more of the overflow(s) in the XLR.StatCntOut register is = 1.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntOutOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntOut.XXXOvfl(s)=1 interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntOutOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntFlcOverflow--><spirit:name>Irq1StatCntFlcOverflow</spirit:name>
                  <spirit:description>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt source field.  This field indicates that one or more of the overflow(s) in the XLR.StatCntFlc register is = 1.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntFlcOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntFlcOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntErrOverflow--><spirit:name>Irq1StatCntErrOverflow</spirit:name>
                  <spirit:description>XLR.StatCntErr.XXXOvfl(s)=1 interrupt source field.  This field indicates that one or more of the overflow(s) in the XLR.StatCntErr register is = 1.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Irq1StatCntErrOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntErr.XXXOvfl(s)=1 interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntErrOverflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntSrc--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt source register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntSrc--></spirit:register>
            <spirit:register><!--Register named IntClr--><spirit:name>IntClr</spirit:name>
               <spirit:description>Interrupt clear register.  Writing '1' to a field within this register will clear the corresponding interrupt flag field in the XUSB.IntFlg register.

Note: All fields within this register are self clearing.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xf1f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Irq0LexRty0--><spirit:name>Irq0LexRty0</spirit:name>
                  <spirit:description>DQID and Rty0 release collision interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRty0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 release collision interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty1--><spirit:name>Irq0LexRty1</spirit:name>
                  <spirit:description>DQID and Rty1 release collision interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty1 release collision interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRty0Rty1--><spirit:name>Irq0LexRty0Rty1</spirit:name>
                  <spirit:description>DQID and Rty0 and Rty1 release collision interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRty0Rty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>DQID and Rty0 and Rty1 release collision interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRty0Rty1--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoOflow--><spirit:name>Irq0LexRlsFifoOflow</spirit:name>
                  <spirit:description>LEX release FIFO overflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoOflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO overflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoOflow--></spirit:field>
               <spirit:field><!--BitField named Irq0LexRlsFifoUflow--><spirit:name>Irq0LexRlsFifoUflow</spirit:name>
                  <spirit:description>LEX release FIFO underflow interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq0LexRlsFifoUflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX release FIFO underflow interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq0LexRlsFifoUflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntInOverflow--><spirit:name>Irq1StatCntInOverflow</spirit:name>
                  <spirit:description>XLR.StatCntIn.XXXOvfl(s)=1 interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1StatCntInOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntIn.XXXOvfl(s)=1 interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntInOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntOutOverflow--><spirit:name>Irq1StatCntOutOverflow</spirit:name>
                  <spirit:description>XLR.StatCntOut.XXXOvfl(s)=1 interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1StatCntOutOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntOut.XXXOvfl(s)=1 interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntOutOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntFlcOverflow--><spirit:name>Irq1StatCntFlcOverflow</spirit:name>
                  <spirit:description>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1StatCntFlcOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntFlc.XXXOvfl(s)=1 interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntFlcOverflow--></spirit:field>
               <spirit:field><!--BitField named Irq1StatCntErrOverflow--><spirit:name>Irq1StatCntErrOverflow</spirit:name>
                  <spirit:description>XLR.StatCntErr.XXXOvfl(s)=1 interrupt clear field.

Note: Write '1' to this field to clear the corresponding interrupt flag.  This field is self-clearing.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named Irq1StatCntErrOverflow--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XLR.StatCntErr.XXXOvfl(s)=1 interrupt clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Irq1StatCntErrOverflow--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntClr--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt clear register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntClr--></spirit:register>
            <spirit:register><!--Register named StatCntIn--><spirit:name>StatCntIn</spirit:name>
               <spirit:description>IN transaction statistics counter register.

Note: all fields within this register are cleared upon read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Bulk--><spirit:name>Bulk</spirit:name>
                  <spirit:description>Bulk IN counter field.  This field is incremented every time it has been determined that a Bulk IN transaction has completed.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Bulk--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk IN counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Bulk--></spirit:field>
               <spirit:field><!--BitField named BulkOvfl--><spirit:name>BulkOvfl</spirit:name>
                  <spirit:description>Bulk IN transaction counter overflow field.

0 = XUSB.StatCntIn.Bulk counter has not overflowed.
1 = XUSB.StatCntIn.Bulk counter has overflowed.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk IN transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkOvfl--></spirit:field>
               <spirit:field><!--BitField named Iso--><spirit:name>Iso</spirit:name>
                  <spirit:description>Isochronous IN counter field.  This field is incremented every time it has been determined that a Isochronous IN transaction has completed.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Iso--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous IN counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Iso--></spirit:field>
               <spirit:field><!--BitField named IsoOvfl--><spirit:name>IsoOvfl</spirit:name>
                  <spirit:description>Isochronous IN transaction counter overflow field.

0 = XUSB.StatCntIn.Iso counter has not overflowed.
1 = XUSB.StatCntIn.Iso counter has overflowed.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous IN transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoOvfl--></spirit:field>
               <spirit:field><!--BitField named Intrp--><spirit:name>Intrp</spirit:name>
                  <spirit:description>Interrupt IN counter field.  This field is incremented every time it has been determined that a Interrupt IN transaction has completed.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>6</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Intrp--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Interrupt IN counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Intrp--></spirit:field>
               <spirit:field><!--BitField named IntrpOvfl--><spirit:name>IntrpOvfl</spirit:name>
                  <spirit:description>Interrupt IN transaction counter overflow field.

0 = XUSB.StatCntIn.Intrp counter has not overflowed.
1 = XUSB.StatCntIn.Intrp counter has overflowed.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntrpOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Interrupt IN transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntrpOvfl--></spirit:field>
               <spirit:field><!--BitField named Ctrl--><spirit:name>Ctrl</spirit:name>
                  <spirit:description>Control IN counter field.  This field is incremented every time it has been determined that a Control IN transaction has completed.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>6</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Ctrl--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Control IN counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Ctrl--></spirit:field>
               <spirit:field><!--BitField named CtrlOvfl--><spirit:name>CtrlOvfl</spirit:name>
                  <spirit:description>Control IN transaction counter overflow field.

0 = XUSB.StatCntIn.Ctrl counter has not overflowed.
1 = XUSB.StatCntIn.Ctrl counter has overflowed.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CtrlOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Control IN transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtrlOvfl--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatCntIn--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>IN transaction statistics counter register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatCntIn--></spirit:register>
            <spirit:register><!--Register named StatCntOut--><spirit:name>StatCntOut</spirit:name>
               <spirit:description>OUT transaction statistics counter register.

Note: all fields within this register are cleared upon read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x1c</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Bulk--><spirit:name>Bulk</spirit:name>
                  <spirit:description>Bulk OUT counter field.  This field is incremented every time it has been determined that a Bulk OUT transaction has completed.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Bulk--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk OUT counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Bulk--></spirit:field>
               <spirit:field><!--BitField named BulkOvfl--><spirit:name>BulkOvfl</spirit:name>
                  <spirit:description>Bulk OUT transaction counter overflow field.

0 = XUSB.StatCntOut.Bulk counter has not overflowed.
1 = XUSB.StatCntOut.Bulk counter has overflowed.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk OUT transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkOvfl--></spirit:field>
               <spirit:field><!--BitField named Iso--><spirit:name>Iso</spirit:name>
                  <spirit:description>Isochronous OUT counter field.  This field is incremented every time it has been determined that a Isochronous OUT transaction has completed.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Iso--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous OUT counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Iso--></spirit:field>
               <spirit:field><!--BitField named IsoOvfl--><spirit:name>IsoOvfl</spirit:name>
                  <spirit:description>Isochronous OUT transaction counter overflow field.

0 = XUSB.StatCntOut.Iso counter has not overflowed.
1 = XUSB.StatCntOut.Iso counter has overflowed.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous OUT transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoOvfl--></spirit:field>
               <spirit:field><!--BitField named Intrp--><spirit:name>Intrp</spirit:name>
                  <spirit:description>Interrupt OUT counter field.  This field is incremented every time it has been determined that a Interrupt OUT transaction has completed.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>6</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Intrp--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Interrupt OUT counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Intrp--></spirit:field>
               <spirit:field><!--BitField named IntrpOvfl--><spirit:name>IntrpOvfl</spirit:name>
                  <spirit:description>Interrupt OUT transaction counter overflow field.

0 = XUSB.StatCntOut.Intrp counter has not overflowed.
1 = XUSB.StatCntOut.Intrp counter has overflowed.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntrpOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Interrupt OUT transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntrpOvfl--></spirit:field>
               <spirit:field><!--BitField named Ctrl--><spirit:name>Ctrl</spirit:name>
                  <spirit:description>Control OUT counter field.  This field is incremented every time it has been determined that a Control OUT transaction has completed.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>6</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Ctrl--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Control OUT counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Ctrl--></spirit:field>
               <spirit:field><!--BitField named CtrlOvfl--><spirit:name>CtrlOvfl</spirit:name>
                  <spirit:description>Control OUT transaction counter overflow field.

0 = XUSB.StatCntOut.Ctrl counter has not overflowed.
1 = XUSB.StatCntOut.Ctrl counter has overflowed.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CtrlOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Control OUT transaction counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtrlOvfl--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatCntOut--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>OUT transaction statistics counter register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatCntOut--></spirit:register>
            <spirit:register><!--Register named StatCntFlc--><spirit:name>StatCntFlc</spirit:name>
               <spirit:description>IN/OUT transaction flow control statistics counter register.

Note: all fields within this register are cleared upon read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x20</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named BulkIn--><spirit:name>BulkIn</spirit:name>
                  <spirit:description>Bulk IN transaction flow control counter field.  This field is incremented every time it has been determined that a Bulk IN transaction has been dropped due to flow control conditions.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkIn--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk IN transaction flow control counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkIn--></spirit:field>
               <spirit:field><!--BitField named BulkInOvfl--><spirit:name>BulkInOvfl</spirit:name>
                  <spirit:description>Bulk IN transaction flow control counter overflow field.

0 = XUSB.StatCntFlc.BulkIn counter has not overflowed.
1 = XUSB.StatCntFlc.BulkIn counter has overflowed.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkInOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk IN transaction flow control counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkInOvfl--></spirit:field>
               <spirit:field><!--BitField named IsoIn--><spirit:name>IsoIn</spirit:name>
                  <spirit:description>Isochronous IN transaction flow control counter field.  This field is incremented every time it has been determined that a Isochronous IN transaction has been dropped due to flow control conditions.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoIn--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous IN transaction flow control counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoIn--></spirit:field>
               <spirit:field><!--BitField named IsoInOvfl--><spirit:name>IsoInOvfl</spirit:name>
                  <spirit:description>Isochronous IN transaction flow control counter overflow field.

0 = XUSB.StatCntFlc.IsoIn counter has not overflowed.
1 = XUSB.StatCntFlc.IsoIn counter has overflowed.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoInOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous IN transaction flow control counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoInOvfl--></spirit:field>
               <spirit:field><!--BitField named BulkOut--><spirit:name>BulkOut</spirit:name>
                  <spirit:description>Bulk OUT transaction flow control counter field.  This field is incremented every time it has been determined that a Bulk OUT transaction has been dropped due to flow control conditions.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkOut--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk OUT transaction flow control counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkOut--></spirit:field>
               <spirit:field><!--BitField named BulkOutOvfl--><spirit:name>BulkOutOvfl</spirit:name>
                  <spirit:description>Bulk OUT transaction flow control counter overflow field.

0 = XUSB.StatCntFlc.BulkOut counter has not overflowed.
1 = XUSB.StatCntFlc.BulkOut counter has overflowed.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BulkOutOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bulk OUT transaction flow control counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BulkOutOvfl--></spirit:field>
               <spirit:field><!--BitField named IsoOut--><spirit:name>IsoOut</spirit:name>
                  <spirit:description>Isochronous OUT transaction flow control counter field.  This field is incremented every time it has been determined that a Isochronous OUT transaction has been dropped due to flow control conditions.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoOut--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous OUT transaction flow control counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoOut--></spirit:field>
               <spirit:field><!--BitField named IsoOutOvfl--><spirit:name>IsoOutOvfl</spirit:name>
                  <spirit:description>Isochronous OUT transaction flow control counter overflow field.

0 = XUSB.StatCntFlc.IsoOut counter has not overflowed.
1 = XUSB.StatCntFlc.IsoOut counter has overflowed.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IsoOutOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Isochronous OUT transaction flow control counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IsoOutOvfl--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatCntFlc--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>IN/OUT transaction flow control statistics counter register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatCntFlc--></spirit:register>
            <spirit:register><!--Register named StatCntErr--><spirit:name>StatCntErr</spirit:name>
               <spirit:description>Error statistics counter register.

Note: all fields within this register are cleared upon read of this register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x24</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3fffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Link--><spirit:name>Link</spirit:name>
                  <spirit:description>Link error counter field.  This field is incremented every time it has been determined that a Link error has occurred.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Link--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Link error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Link--></spirit:field>
               <spirit:field><!--BitField named LinkOvfl--><spirit:name>LinkOvfl</spirit:name>
                  <spirit:description>Link error counter overflow field.

0 = XUSB.StatCntErr.Link counter has not overflowed.
1 = XUSB.StatCntErr.Link counter has overflowed.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named LinkOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Link error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LinkOvfl--></spirit:field>
               <spirit:field><!--BitField named Crc16--><spirit:name>Crc16</spirit:name>
                  <spirit:description>CRC16 error counter field.  This field is incremented every time it has been determined that a CRC16 error has occurred.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Crc16--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC16 error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Crc16--></spirit:field>
               <spirit:field><!--BitField named Crc16Ovfl--><spirit:name>Crc16Ovfl</spirit:name>
                  <spirit:description>CRC16 error counter overflow field.

0 = XUSB.StatCntErr.Crc16 counter has not overflowed.
1 = XUSB.StatCntErr.Crc16 counter has overflowed.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Crc16Ovfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC16 error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Crc16Ovfl--></spirit:field>
               <spirit:field><!--BitField named Crc5--><spirit:name>Crc5</spirit:name>
                  <spirit:description>CRC5 error counter field.  This field is incremented every time it has been determined that a CRC5 error has occurred.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Crc5--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC5 error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Crc5--></spirit:field>
               <spirit:field><!--BitField named Crc5Ovfl--><spirit:name>Crc5Ovfl</spirit:name>
                  <spirit:description>CRC5 error counter overflow field.

0 = XUSB.StatCntErr.Crc5 counter has not overflowed.
1 = XUSB.StatCntErr.Crc5 counter has overflowed.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Crc5Ovfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRC5 error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Crc5Ovfl--></spirit:field>
               <spirit:field><!--BitField named Pid--><spirit:name>Pid</spirit:name>
                  <spirit:description>PID error counter field.  This field is incremented every time it has been determined that a PID error has occurred.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Pid--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PID error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Pid--></spirit:field>
               <spirit:field><!--BitField named PidOvfl--><spirit:name>PidOvfl</spirit:name>
                  <spirit:description>PID error counter overflow field.

0 = XUSB.StatCntErr.Pid counter has not overflowed.
1 = XUSB.StatCntErr.Pid counter has overflowed.</spirit:description>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PidOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PID error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PidOvfl--></spirit:field>
               <spirit:field><!--BitField named BitStuff--><spirit:name>BitStuff</spirit:name>
                  <spirit:description>Bit stuff error counter field.  This field is incremented every time it has been determined that a bit stuff error has occurred.</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BitStuff--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bit stuff error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BitStuff--></spirit:field>
               <spirit:field><!--BitField named BitStuffOvfl--><spirit:name>BitStuffOvfl</spirit:name>
                  <spirit:description>Bit stuff error counter overflow field.

0 = XUSB.StatCntErr.BitStuff counter has not overflowed.
1 = XUSB.StatCntErr.BitStuff counter has overflowed.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BitStuffOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Bit stuff error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BitStuffOvfl--></spirit:field>
               <spirit:field><!--BitField named Babel--><spirit:name>Babel</spirit:name>
                  <spirit:description>Babel error counter field.  This field is incremented every time it has been determined that a babel error has occurred.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Babel--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Babel error counter field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Babel--></spirit:field>
               <spirit:field><!--BitField named BabelOvfl--><spirit:name>BabelOvfl</spirit:name>
                  <spirit:description>Babel error counter overflow field.

0 = XUSB.StatCntErr.Babel counter has not overflowed.
1 = XUSB.StatCntErr.Babel counter has overflowed.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BabelOvfl--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Babel error counter overflow field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BabelOvfl--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named StatCntErr--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Error statistics counter register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named StatCntErr--></spirit:register>
            <spirit:register><!--Register named LexCtrl--><spirit:name>LexCtrl</spirit:name>
               <spirit:description>LEX control register.

Note: fields in this register apply only to LEX configurations.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x28</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x25000000</spirit:value>
                  <spirit:mask>0xfdff73ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named iNtfyMax--><spirit:name>iNtfyMax</spirit:name>
                  <spirit:description>This field indicates the maximum number of packets notifications that are or may have been for any IN endpoints starting at system reset.  It is updated strictly on the initial XSST read for any transaction.  This information is used strictly for profiling the LEX notification characteristics.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named iNtfyMax--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX active address and endpoint field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named iNtfyMax--></spirit:field>
               <spirit:field><!--BitField named oNtfyMax--><spirit:name>oNtfyMax</spirit:name>
                  <spirit:description>This field indicates the maximum number of packets notifications that are or may have been for any OUT endpoints starting at system reset.  It is updated strictly on the initial XSST read for any transaction.  This information is used strictly for profiling the LEX notification characteristics.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named oNtfyMax--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named oNtfyMax--></spirit:field>
               <spirit:field><!--BitField named lexCtrlSel--><spirit:name>lexCtrlSel</spirit:name>
                  <spirit:description>This field is used to generate different behaviors overides over the entire operation of the LEX.
00 =  No global overides
01 = Must only with MSA endpoints if software wants to manage the ClearFeatureEndPointHalt() support.  This will prevent CFEPH from doing MST lookups
1x = reserved</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named lexCtrlSel--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Testmode QID field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named lexCtrlSel--></spirit:field>
               <spirit:field><!--BitField named RlsRty1--><spirit:name>RlsRty1</spirit:name>
                  <spirit:description>Release retry buffer 1 request field.

Note: field is self-clearing.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named RlsRty1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Release retry buffer 1 request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RlsRty1--></spirit:field>
               <spirit:field><!--BitField named RlsRty0--><spirit:name>RlsRty0</spirit:name>
                  <spirit:description>Release retry buffer 0 request field.

Note: field is self-clearing.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>write-only</spirit:access>
                  <!--BitField named RlsRty0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>PulseGenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Release retry buffer 0 request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RlsRty0--></spirit:field>
               <spirit:field><!--BitField named RlsSts--><spirit:name>RlsSts</spirit:name>
                  <spirit:description>This bit indicates that the release was ignored by hardware because there is an endpoint currently using the value in the retry buffer.  This is valid one clock after the release bit was set.  If cleared then the release was successful, if set it failed.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named RlsSts--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RlsSts--></spirit:field>
               <spirit:field><!--BitField named TestModeQID--><spirit:name>TestModeQID</spirit:name>
                  <spirit:description>Testmode QID field.  For TEST+PACKET testmode this QID contains the USB I/F test packet.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named TestModeQID--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Testmode QID field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TestModeQID--></spirit:field>
               <spirit:field><!--BitField named ThrottleBulk--><spirit:name>ThrottleBulk</spirit:name>
                  <spirit:description>Enabling this bit will only allow two IN transactions and either 1024bytes or 512Bytes of out data to be forwarded downstream per micro frame.  This applies globally across all endpoints.

There will not be anymore than 2 BULK IN transactions forwarded to the REX in any given micro frame.

For BULK packets, the total number of bytes for each forwarded packet is accumulated within the micro frame.  At the end of the transmission of the last packet if the byte count (this includes the PID and 2CRC bytes) is greater or equal to the limit (either 1024 or 512 as selected by ThrottleSel bit in this register)

*Note that if 3 packets of 300 bytes were forwarded and then a 515 byte packet (PID+CRC16) was sent from the host, then the total sent over the pipe would be 900 + 515 bytes = 1415 bytes.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ThrottleBulk--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Enables throttling of bulk transactions.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ThrottleBulk--></spirit:field>
               <spirit:field><!--BitField named ThrottleSel--><spirit:name>ThrottleSel</spirit:name>
                  <spirit:description>When this bit is set the LEX will only allow an agregate BULK OUT byte count of &lt; 1024 bytes to be forwarded per micro frame.  All calculations are done at the end of the transaction and therefore actually byte counts on the link may be greater but still less than three 512 byte packets.

When this bit is cleared the rate will be &lt; 512 bytes.  The same caveats apply as for the 1024 byte setting.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ThrottleSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Selects bulk out throttling rate of 1024 or 512 bytes.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ThrottleSel--></spirit:field>
               <spirit:field><!--BitField named CtrlPKtTglChkEn--><spirit:name>CtrlPKtTglChkEn</spirit:name>
                  <spirit:description>This bit is used to check to toggles bits of control packets.  If set and the toggles don't match the LEX hardware will through out the packet and release the Q.</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtrlPKtTglChkEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtrlPKtTglChkEn--></spirit:field>
               <spirit:field><!--BitField named Testmode--><spirit:name>Testmode</spirit:name>
                  <spirit:description>LEX testmode selection and enable field.

00 = normal LEX operation mode.

01 = LEX system software sets this field when the host sends the USB request: SET_FEATURE - TEST_MODE - TEST_PACKET.  Before writing this field = "01" software must first request a QID from the system cache and then write the USB 2.0 defined test packet into the cache at the requested QID.  Software will then write the QID it requested into the TestmodeQid[6:0] field.

10 = LEX system software sets this field when the host sends the USB request: SET_FEATURE - TEST_MODE - TEST_SE0_NAK.  Selection of this mode will cause the LEX to respond to and only to valid IN transactions with a NAK. The LEX will not forward anything to the REX, and all other traffic will be dropped and not responded to.

11 = reserved.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Testmode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX testmode selection and enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Testmode--></spirit:field>
               <spirit:field><!--BitField named FwdSofDnstrm--><spirit:name>FwdSofDnstrm</spirit:name>
                  <spirit:description>This bit allows the LEX to forward all SOF's downstream.  If set all SOF's are forwarded downstream.  If cleared all SOF's are dropped.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named FwdSofDnstrm--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FwdSofDnstrm--></spirit:field>
               <spirit:field><!--BitField named FwdSetupsToCpu--><spirit:name>FwdSetupsToCpu</spirit:name>
                  <spirit:description>Non-CSPLIT Setup request destination QID selection field.  When set this field will force all Non-CSPLIT setup requests to the CPU_CTRL_QID.</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named FwdSetupsToCpu--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Non-CSPLIT Setup request destination QID selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FwdSetupsToCpu--></spirit:field>
               <spirit:field><!--BitField named Enable--><spirit:name>Enable</spirit:name>
                  <spirit:description>LEX enable field.

0 = LEX disabled.
1 = LEX enabled.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Enable--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Enable--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named LexCtrl--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>LEX control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named LexCtrl--></spirit:register>
            <spirit:register><!--Register named RexQSel--><spirit:name>RexQSel</spirit:name>
               <spirit:description>LEX control register.

Note: fields in this register apply only to LEX configurations.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x2C</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00000399</spirit:value>
                  <spirit:mask>0x000003ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Qsel--><spirit:name>Qsel</spirit:name>
                  <spirit:description>Description:
 This logic will determine the downstream Q destination for each of the transactiontypes listed in the table below.
   Bit is 0 then Alt0 Q is selected
   Bit is 1 then Alt1 Q is selected

   HA = Hard Scheduled ASYNC
   SP = Soft Scheduled Periodic
   SA = Soft Scheduled ASYNC
   SM = Soft Scheduled MSA

   | MOD | INSTR | EP | Alt0 | Alt1 | Bit |
   |     |       |    |  Q   |  Q   |     |
   +=====+=======+====+======+======+=====+
   | NULL|  IN   |CTRL|  HA  |  SA  |  0  |
   | NULL|  OUT  |CTRL|  HA  |  SA  |  0  |
   | NULL|  SETUP|CTRL|  HA  |  SA  |  0  |
   | NULL|  PING |CTRL|  HA  |  SA  |  0  |
   | NULL|  IN   |BULK|  HA  |  SA  |  1  |
   | NULL|  OUT  |BULK|  HA  |  SA  |  1  |
   | NULL|  PING |BULK|  HA  |  SA  |  1  |
   | NULL|  IN   | INT|  HA  |  SA  |  2  |
   | NULL|  OUT  | INT|  HA  |  SA  |  2  |
   | NULL|  PING | INT|  HA  |  SA  |  2  |
   | NULL|  IN   |ISOC|  SP  |  HA  |  3  |
   | NULL|  OUT  |ISOC|  SP  |  HA  |  3  |
   |SPLIT|  SETUP|CTRL|  SA  |  HA  |  4  |
   |SPLIT|  IN   |CTRL|  HA  |  SA  |  5  |
   |SPLIT|  OUT  |CTRL|  HA  |  SA  |  5  |
   |SPLIT|  IN   |BULK|  HA  |  SA  |  6  |
   |SPLIT|  OUT  |BULK|  HA  |  SA  |  6  |
   |SPLIT|  OUT  | INT|  SP  |  HA  |  7  |
   |SPLIT|  IN   | INT|  SP  |  HA  |  7  |
   |SPLIT|  OUT  |ISOC|  SP  |  HA  |  8  |
   |SPLIT|  IN   |ISOC|  SP  |  HA  |  8  |
   | NULL|  IN   | MSA|  SM  |  HA  |  9  |
   | NULL|  OUT  | MSA|  SM  |  HA  |  9  |
   | NULL|  PING | MSA|  SM  |  HA  |  9  |</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>10</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Qsel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x399</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Rex Scheduler Q selection</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Qsel--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named RexQSel--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Rex Scheduler Q selection</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named RexQSel--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XLR--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>LEX core interface register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XLR--></spirit:addressBlock>



         <spirit:addressBlock><!--AddressBlock named XMST--><spirit:name>XMST</spirit:name>
            <spirit:description/>
            <spirit:baseAddress>0x40</spirit:baseAddress>
            <spirit:range spirit:format="long">0x34</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Control--><spirit:name>Control</spirit:name>
               <spirit:description>XSST control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x3ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Clear--><spirit:name>Clear</spirit:name>
                  <spirit:description>XMST clear request field.  Write '1' to re-initialize in all tables within the XMST.

Note: Initialized tables contain all zeros.
Note: This field is automatically cleared upon initialization of all tables.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Clear--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST clear request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Clear--></spirit:field>
               <spirit:field><!--BitField named InitDone--><spirit:name>InitDone</spirit:name>
                  <spirit:description>XMST initialization complete field.  This field is set '1' upon completion of initializing the XMST tables.  This field is cleared '0' while a XMST.Control.Clear is performed.  This signal is used to clear the XMST.Control.Clear upon completion of an XMST clear.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InitDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST initialization complete field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InitDone--></spirit:field>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XMST transaction GO field.  Write '1' to initiate the transaction selected by XMST.Control.AccMode.

Note: for write and read-modify-write access ensure wdata and wmask fields set appropriately when setting this field.

Note: this field is automatically cleared upon completion of the transaction.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named AccMode--><spirit:name>AccMode</spirit:name>
                  <spirit:description>XMST access mode selection field.

LAT = logical address table (contains enable and logical address)
MPT = pointer table (contains MID)
MST = status table (contains status)

0000 : RD  - LAT &amp; MPT &amp; MST
0001 : WR  - MST
0010 : WR  - MPT
0011 : WR  - LAT
0100 : RMW - MST
other: RESERVED (do not attempt)

NOTE: (reads) a read access will provide the LAT and MPT rdata as well as the MST rstatus.

NOTE: (writes) a write access requires that the Wmask and Wdata bit fields be set appropriately when setting the GO field.

NOTE: (read-modify-writes) a read-modify-write access will provide the LAT and MPT rdata as well as the pre-modified MST status.  Like writes, the Wmask and Wdata bit fields be set appropriately when setting the GO field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named AccMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST access mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AccMode--></spirit:field>
               <spirit:field><!--BitField named DevEndpt--><spirit:name>DevEndpt</spirit:name>
                  <spirit:description>USB device endpoint field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DevEndpt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB device endpoint field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DevEndpt--></spirit:field>
               <spirit:field><!--BitField named DevAddr--><spirit:name>DevAddr</spirit:name>
                  <spirit:description>USB device address field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>7</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named DevAddr--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>USB device address field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named DevAddr--></spirit:field>
               <spirit:field><!--BitField named InSsn--><spirit:name>InSsn</spirit:name>
                  <spirit:description>Last read in-session bit field.  Following a XMST read this bit will be set if the address endpoint being read is currently held in session by another XMST interface.  This will represent a high likelihood that the value read is about to be modified by another interface.  Note this field is not valid following an XMST write or XMST read-modify-write.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named InSsn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Last read in-session bit field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named InSsn--></spirit:field>
               <spirit:field><!--BitField named Wstatus--><spirit:name>Wstatus</spirit:name>
                  <spirit:description>XMST write data/status field.

Based on XMST.Control.AccMode this field is set accordingly:

RD LAT/MPT/MST - [04:00] = 5'bXXXXX
WR/RMW MST     - [04:03] = 2'bXX,  [02:00] = MST status
WR MPT         - [04]    = 1'bX,   [03:00] = MID (MST index)
WR LAT         - [04]    = Enable, [03:00] = Logical Address</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wstatus--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST write data/status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wstatus--></spirit:field>
               <spirit:field><!--BitField named Wmask--><spirit:name>Wmask</spirit:name>
                  <spirit:description>XMST write status mask field.  This field is only required for XMST read-modify-write accesses. Set bits '1' to allow modification for that bit location.</spirit:description>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wmask--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XMST write status mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wmask--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Control--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Control--></spirit:register>
            <spirit:register><!--Register named Rstatus--><spirit:name>Rstatus</spirit:name>
               <spirit:description>XSST read status most significant word register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named MstRstatus--><spirit:name>MstRstatus</spirit:name>
                  <spirit:description>MSA_MST read status field. This field is updated following a read or read-modify-write XSST transaction.  However, for a read-modify-write this field will reflect the pre-modified value.

Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MstRstatus--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MSA_MST read status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MstRstatus--></spirit:field>
               <spirit:field><!--BitField named MptRdata--><spirit:name>MptRdata</spirit:name>
                  <spirit:description>Mass storage status pointer table index.   This field is updated with the mass storage status pointer table index (MID) for the USB device accessed following a read or read-modify-write XMST transaction.

Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MptRdata--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Mass storage status pointer table index.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MptRdata--></spirit:field>
               <spirit:field><!--BitField named LatRdata--><spirit:name>LatRdata</spirit:name>
                  <spirit:description>Logical address field for USB device accessed.  This field is updated with the logical address for the USB device accessed following a read or read-modify-write XMST transaction.

Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named LatRdata--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Logical address field for USB device accessed.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named LatRdata--></spirit:field>
               <spirit:field><!--BitField named MsaEn--><spirit:name>MsaEn</spirit:name>
                  <spirit:description>Mass Storage Acceleration enabled field.  This field is updated with the mass storage acceleration enabled field for the USB device accessed following a read or read-modify-write XMST transaction.

Note: this field is not updated following a write transaction.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named MsaEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Mass Storage Acceleration enabled field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named MsaEn--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rstatus--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST read status most significant word register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rstatus--></spirit:register>
            <spirit:register><!--Register named MidAllo--><spirit:name>MidAllo</spirit:name>
               <spirit:description>XSST_MSA Mass Storage Index allocation/deallocation control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x1ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>XICS_MSA MID (de)allocation transaction GO field.  Write '1' to initiate a transaction.

Note: for a RetIDreq transactions ensure that RetID field is set appropriately before or while asserting this field.
Note: this field is automatically cleared upon completion of the transaction.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>XICS_MSA MID (de)allocation transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named RetIDreq--><spirit:name>RetIDreq</spirit:name>
                  <spirit:description>Return MID request field.  When the XSST.MidAllo.NewQReq field is set '1' this field is ignored.  A NewIDreq has higher priority.

0 = no return MID request.
1 = return MID request.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RetIDreq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Return MID request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RetIDreq--></spirit:field>
               <spirit:field><!--BitField named RetID--><spirit:name>RetID</spirit:name>
                  <spirit:description>Return MID field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RetID--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Return MID field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RetID--></spirit:field>
               <spirit:field><!--BitField named NewIDreq--><spirit:name>NewIDreq</spirit:name>
                  <spirit:description>New MID request field.  When this field is set '1' the XSST.MidAllo.RetIDreq field is ignored.  A NewIDreq has higher priority.

0 = no new MID request.
1 = new MID request.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named NewIDreq--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>New MID request field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named NewIDreq--></spirit:field>
               <spirit:field><!--BitField named NewID--><spirit:name>NewID</spirit:name>
                  <spirit:description>New MID request result field.  This field is the result of a new MID request, and is valid once the asserted XSST.MidAllo.Go field is clear.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named NewID--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>New MID request result field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named NewID--></spirit:field>
               <spirit:field><!--BitField named IDerr--><spirit:name>IDerr</spirit:name>
                  <spirit:description>MID (de)allocation error status field.  This field is asserted when a new MID request occurs while the queue (de)allocation FIFO is empty or when a return MID request occurs with a RetQueue that has not yet been allocated.

0 = no MID (de)allocation error detected.
1 = MID (de)allocation error detected.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IDerr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MID (de)allocation error status field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IDerr--></spirit:field>
               <spirit:field><!--BitField named FreeIDcnt--><spirit:name>FreeIDcnt</spirit:name>
                  <spirit:description>Mass Storage Index free count field.  Represents remaining MIDs.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FreeIDcnt--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Mass Storage Index free count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FreeIDcnt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named MidAllo--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>XSST_MSA Mass Storage Index allocation/deallocation control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named MidAllo--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named XMST--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription/>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named XMST--></spirit:addressBlock>
         <!--
					 Bits in least addressable unit.  This defines how the address increments.
					 If this changes be sure to change the range of the AddressBlock and also
					 the addresses.
	--><spirit:addressUnitBits>8</spirit:addressUnitBits>
         <!--MemoryMap named XLRCpuMemMap--></spirit:memoryMap>
   </spirit:memoryMaps>
   <spirit:parameters/>
   <spirit:vendorExtensions><!--Component named XLR--><pdt:sysLevelOffset>0x20000400</pdt:sysLevelOffset>
      <pdt:description>ExtremeUSB LEX/REX control register block (XLRC).</pdt:description>
      <pdt:instanceClass>Component</pdt:instanceClass>
      <pdt:briefDescription>ExtremeUSB LEX/REX control register block (XLRC).</pdt:briefDescription>
      <pdt:developerComments/>
      <pdt:indexTags/>
      <pdt:related/>
      <pdt:visibleToRoles/>
   </spirit:vendorExtensions>
   <!--Component named XLR--></spirit:component>
