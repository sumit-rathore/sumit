//**********************************************************
// Generated by SpectaReg from PDTi (www.productive-eda.com)
// SpectaReg Revision: 579
// Generated from ViewFileTemplate at: comp_mmreg_macro.h.gen
// ViewFileTemplate Revision: 767
// Generation date: Thu Nov 29 19:26:02 GMT 2012
//**********************************************************

/**************************************************************************
 *  This is a GENERATED registerMap C/C++ header file for the
 *  Grg Component.  Use the Macros in this file
 *  to read and write Registers and BitFields.
 **************************************************************************/

#ifndef __GRG_MMREG_MACRO_H__
#define __GRG_MMREG_MACRO_H__

#include "common_mmreg_access.h"

/* CMacroHeaderView.RegOffsetDefVP per Register (and subclasses) */
/**
 * Offset for the Id Register
 */
#define GRG_GRG_ID_REG_OFFSET 0  /*0x0*/
/**
 * Offset for the Rev Register
 */
#define GRG_GRG_REV_REG_OFFSET 4  /*0x4*/
/**
 * Offset for the ChipRev Register
 */
#define GRG_GRG_CHIPREV_REG_OFFSET 8  /*0x8*/
/**
 * Offset for the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_REG_OFFSET 12  /*0xc*/
/**
 * Offset for the ModRst Register
 */
#define GRG_GRG_MODRST_REG_OFFSET 16  /*0x10*/
/**
 * Offset for the IntMsk Register
 */
#define GRG_GRG_INTMSK_REG_OFFSET 20  /*0x14*/
/**
 * Offset for the IntFlg Register
 */
#define GRG_GRG_INTFLG_REG_OFFSET 24  /*0x18*/
/**
 * Offset for the Dir Register
 */
#define GRG_GPIO_DIR_REG_OFFSET 48  /*0x30*/
/**
 * Offset for the In Register
 */
#define GRG_GPIO_IN_REG_OFFSET 52  /*0x34*/
/**
 * Offset for the Out Register
 */
#define GRG_GPIO_OUT_REG_OFFSET 56  /*0x38*/
/**
 * Offset for the Control Register
 */
#define GRG_I2CMDIO_CONTROL_REG_OFFSET 64  /*0x40*/
/**
 * Offset for the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_REG_OFFSET 68  /*0x44*/
/**
 * Offset for the Rdata Register
 */
#define GRG_I2CMDIO_RDATA_REG_OFFSET 72  /*0x48*/
/**
 * Offset for the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_REG_OFFSET 80  /*0x50*/
/**
 * Offset for the PllConfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_REG_OFFSET 84  /*0x54*/
/**
 * Offset for the PllConfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_REG_OFFSET 88  /*0x58*/
/**
 * Offset for the FreqTest Register
 */
#define GRG_PLL_FREQTEST_REG_OFFSET  92 /*0x5c*/
/**
 * Offset for the PllConfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_REG_OFFSET 96  /*0x60*/
/**
 * Offset for the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_REG_OFFSET 100  /*0x64*/
/**
 * Offset for the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_REG_OFFSET 104  /*0x68*/
/**
 * Offset for the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET 108  /*0x6c*/
/**
 * Offset for the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_REG_OFFSET 112  /*0x70*/
/**
 * Offset for the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_REG_OFFSET 116  /*0x74*/
/**
 * Offset for the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_REG_OFFSET 120  /*0x78*/
/**
 * Offset for the RefClk Register
 */
#define GRG_IOCFG_REFCLK_REG_OFFSET 124  /*0x7C*/



/* CMacroHeaderView.RegArrayOffsetDefVP per Register (and subclasses) */


/* CMacroHeaderView.RegBfDefsVP per Register (and subclasses) */
/***********************************************************
  BitFields defs from the Id Register
***********************************************************/
/**
 * The Shift for Id in the Id Register
 */
#define GRG_GRG_ID_ID_BF_SHIFT 0
/**
 * The mask for Id in the Id Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_GRG_ID_ID_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Id in the Id Register
 */
#define GRG_GRG_ID_ID_BF_RESET 0x5F475247

/***********************************************************
  BitFields defs from the Rev Register
***********************************************************/
/**
 * The Shift for CvsMajor in the Rev Register
 */
#define GRG_GRG_REV_CVSMAJOR_BF_SHIFT 8
/**
 * The Shift for CvsMinor in the Rev Register
 */
#define GRG_GRG_REV_CVSMINOR_BF_SHIFT 0
/**
 * The mask for CvsMajor in the Rev Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define GRG_GRG_REV_CVSMAJOR_BF_MASK 0x0000FF00


/**
 * The mask for CvsMinor in the Rev Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define GRG_GRG_REV_CVSMINOR_BF_MASK 0x000000FF



/**
 * Reset value for CvsMajor in the Rev Register
 */
#define GRG_GRG_REV_CVSMAJOR_BF_RESET 0x00000001


/**
 * Reset value for CvsMinor in the Rev Register
 */
#define GRG_GRG_REV_CVSMINOR_BF_RESET 0x00000003

/***********************************************************
  BitFields defs from the ChipRev Register
***********************************************************/
/**
 * The Shift for Major in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MAJOR_BF_SHIFT 16
/**
 * The Shift for Minor in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MINOR_BF_SHIFT 8
/**
 * The Shift for Debug in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_DEBUG_BF_SHIFT 0
/**
 * The mask for Major in the ChipRev Register
 * Binary value of mask is 00000000111111110000000000000000
 */
#define GRG_GRG_CHIPREV_MAJOR_BF_MASK 0x00FF0000


/**
 * The mask for Minor in the ChipRev Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define GRG_GRG_CHIPREV_MINOR_BF_MASK 0x0000FF00


/**
 * The mask for Debug in the ChipRev Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define GRG_GRG_CHIPREV_DEBUG_BF_MASK 0x000000FF



/**
 * Reset value for Major in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MAJOR_BF_RESET 0x00000001


/**
 * Reset value for Minor in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MINOR_BF_RESET 0x00000008


/**
 * Reset value for Debug in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_DEBUG_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ConfigMode Register
***********************************************************/
/**
 * The Shift for VPortId in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VPORTID_BF_SHIFT 24
/**
 * The Shift for VariantID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_BF_SHIFT 20
/**
 * The Shift for PlatformID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_BF_SHIFT 16
/**
 * The Shift for PhyL2FEn in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_BF_SHIFT 13
/**
 * The Shift for PhyMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_BF_SHIFT 8
/**
 * The Shift for CfgLexRex in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_BF_SHIFT 3
/**
 * The Shift for CfgUSBMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_SHIFT 2
/**
 * The Shift for BootSel in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_BF_SHIFT 0
/**
 * The mask for VPortId in the ConfigMode Register
 * Binary value of mask is 00000111000000000000000000000000
 */
#define GRG_GRG_CONFIGMODE_VPORTID_BF_MASK 0x07000000


/**
 * The mask for Variant ID in the ConfigMode Register
 * Binary value of mask is 00000000111100000000000000000000
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_BF_MASK 0x00F00000


/**
 * The mask for PlatformID in the ConfigMode Register
 * Binary value of mask is 00000000000011110000000000000000
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_BF_MASK 0x000F0000


/**
 * The mask for PhyL2FEn in the ConfigMode Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_BF_MASK 0x00002000


/**
 * The mask for PhyMode in the ConfigMode Register
 * Binary value of mask is 00000000000000000001111100000000
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_BF_MASK 0x00001F00


/**
 * The mask for CfgLexRex in the ConfigMode Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_BF_MASK 0x00000008


/**
 * The mask for CfgUSBMode in the ConfigMode Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_MASK 0x00000004


/**
 * The mask for BootSel in the ConfigMode Register
 * Binary value of mask is 00000000000000000000000000000011
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_BF_MASK 0x00000003



/**
 * Reset value for VPortId in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VPORTID_BF_RESET 0x00000001


/**
 * Reset value for PlatformID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_BF_RESET 0x00000000


/**
 * Reset value for PlatformID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_BF_RESET 0x00000000


/**
 * Reset value for PhyL2FEn in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_BF_RESET 0x00000000


/**
 * Reset value for PhyMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_BF_RESET 0x00000000


/**
 * Reset value for CfgLexRex in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_BF_RESET 0x00000000


/**
 * Reset value for CfgUSBMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_RESET 0x00000000


/**
 * Reset value for BootSel in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ModRst Register
***********************************************************/
/**
 * The Shift for UlmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_ULMEN_BF_SHIFT 7
/**
 * The Shift for ClmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CLMEN_BF_SHIFT 6
/**
 * The Shift for CtmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CTMPHYEN_BF_SHIFT 5
/**
 * The Shift for CrmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CRMPHYEN_BF_SHIFT 4
/**
 * The Shift for XctmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCTMEN_BF_SHIFT 3
/**
 * The Shift for XcrmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCRMEN_BF_SHIFT 2
/**
 * The Shift for XusbCoreEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBCOREEN_BF_SHIFT 1
/**
 * The Shift for XusbEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBEN_BF_SHIFT 0
/**
 * The mask for UlmEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define GRG_GRG_MODRST_ULMEN_BF_MASK 0x00000080


/**
 * The mask for ClmEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define GRG_GRG_MODRST_CLMEN_BF_MASK 0x00000040


/**
 * The mask for CtmPhyEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define GRG_GRG_MODRST_CTMPHYEN_BF_MASK 0x00000020


/**
 * The mask for CrmPhyEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define GRG_GRG_MODRST_CRMPHYEN_BF_MASK 0x00000010


/**
 * The mask for XctmEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define GRG_GRG_MODRST_XCTMEN_BF_MASK 0x00000008


/**
 * The mask for XcrmEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define GRG_GRG_MODRST_XCRMEN_BF_MASK 0x00000004


/**
 * The mask for XusbCoreEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_GRG_MODRST_XUSBCOREEN_BF_MASK 0x00000002


/**
 * The mask for XusbEn in the ModRst Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_GRG_MODRST_XUSBEN_BF_MASK 0x00000001



/**
 * Reset value for UlmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_ULMEN_BF_RESET 0x00000000


/**
 * Reset value for ClmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CLMEN_BF_RESET 0x00000000


/**
 * Reset value for CtmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CTMPHYEN_BF_RESET 0x00000001


/**
 * Reset value for CrmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CRMPHYEN_BF_RESET 0x00000001


/**
 * Reset value for XctmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCTMEN_BF_RESET 0x00000000


/**
 * Reset value for XcrmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCRMEN_BF_RESET 0x00000000


/**
 * Reset value for XusbCoreEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBCOREEN_BF_RESET 0x00000000


/**
 * Reset value for XusbEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBEN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntMsk Register
***********************************************************/
/**
 * The Shift for I2CFifoAlmostEmpty in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_SHIFT 26
/**
 * The Shift for I2CFifoAlmostFull in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_SHIFT 25
/**
 * The Shift for I2CMdioDone in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_BF_SHIFT 24
/**
 * The Shift for CtmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_BF_SHIFT 18
/**
 * The Shift for CrmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_BF_SHIFT 17
/**
 * The Shift for ClmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_BF_SHIFT 16
/**
 * The Shift for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO15_BF_SHIFT 15
/**
 * The Shift for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO14_BF_SHIFT 14
/**
 * The Shift for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO13_BF_SHIFT 13
/**
 * The Shift for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO12_BF_SHIFT 12
/**
 * The Shift for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO11_BF_SHIFT 11
/**
 * The Shift for Gpio10 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO10_BF_SHIFT 10
/**
 * The Shift for Gpio9 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO9_BF_SHIFT 9
/**
 * The Shift for Gpio8 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO8_BF_SHIFT 8
/**
 * The Shift for Gpio7 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO7_BF_SHIFT 7
/**
 * The Shift for Gpio6 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO6_BF_SHIFT 6
/**
 * The Shift for Gpio5 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO5_BF_SHIFT 5
/**
 * The Shift for Gpio4 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO4_BF_SHIFT 4
/**
 * The Shift for Gpio3 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO3_BF_SHIFT 3
/**
 * The Shift for Gpio2 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO2_BF_SHIFT 2
/**
 * The Shift for Gpio1 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO1_BF_SHIFT 1
/**
 * The Shift for Gpio0 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO0_BF_SHIFT 0
/**
 * The mask for I2CFifoAlmostEmpty in the IntMsk Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK 0x04000000


/**
 * The mask for I2CFifoAlmostFull in the IntMsk Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK 0x02000000


/**
 * The mask for I2CMdioDone in the IntMsk Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK 0x01000000


/**
 * The mask for CtmPllLock in the IntMsk Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK 0x00040000


/**
 * The mask for CrmPllLock in the IntMsk Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK 0x00020000


/**
 * The mask for ClmPllLock in the IntMsk Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK 0x00010000

/**
 * The mask for Gpio15 in the IntMsk Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define GRG_GRG_INTMSK_GPIO15_BF_MASK 0x00008000


/**
 * The mask for Gpio14 in the IntMsk Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define GRG_GRG_INTMSK_GPIO14_BF_MASK 0x00004000


/**
 * The mask for Gpio13 in the IntMsk Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define GRG_GRG_INTMSK_GPIO13_BF_MASK 0x000002000


/**
 * The mask for Gpio12 in the IntMsk Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define GRG_GRG_INTMSK_GPIO12_BF_MASK 0x00001000


/**
 * The mask for Gpio11 in the IntMsk Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define GRG_GRG_INTMSK_GPIO11_BF_MASK 0x00000800


/**
 * The mask for Gpio10 in the IntMsk Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define GRG_GRG_INTMSK_GPIO10_BF_MASK 0x00000400


/**
 * The mask for Gpio9 in the IntMsk Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define GRG_GRG_INTMSK_GPIO9_BF_MASK 0x00000200


/**
 * The mask for Gpio8 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define GRG_GRG_INTMSK_GPIO8_BF_MASK 0x00000100


/**
 * The mask for Gpio7 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define GRG_GRG_INTMSK_GPIO7_BF_MASK 0x00000080


/**
 * The mask for Gpio6 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define GRG_GRG_INTMSK_GPIO6_BF_MASK 0x00000040


/**
 * The mask for Gpio5 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define GRG_GRG_INTMSK_GPIO5_BF_MASK 0x00000020


/**
 * The mask for Gpio4 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define GRG_GRG_INTMSK_GPIO4_BF_MASK 0x00000010


/**
 * The mask for Gpio3 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define GRG_GRG_INTMSK_GPIO3_BF_MASK 0x00000008


/**
 * The mask for Gpio2 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define GRG_GRG_INTMSK_GPIO2_BF_MASK 0x00000004


/**
 * The mask for Gpio1 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_GRG_INTMSK_GPIO1_BF_MASK 0x00000002


/**
 * The mask for Gpio0 in the IntMsk Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_GRG_INTMSK_GPIO0_BF_MASK 0x00000001



/**
 * Reset value for I2CFifoAlmostEmpty in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_RESET 0x00000000


/**
 * Reset value for I2CFifoAlmostFull in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_RESET 0x00000000


/**
 * Reset value for I2CMdioDone in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_BF_RESET 0x00000000


/**
 * Reset value for CtmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_BF_RESET 0x00000000


/**
 * Reset value for CrmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_BF_RESET 0x00000000


/**
 * Reset value for ClmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_BF_RESET 0x00000000

/**
 * Reset value for Gpio15 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO15_BF_RESET 0x00000000


/**
 * Reset value for Gpio14 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO14_BF_RESET 0x00000000


/**
 * Reset value for Gpio13 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO13_BF_RESET 0x00000000


/**
 * Reset value for Gpio12 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO12_BF_RESET 0x00000000


/**
 * Reset value for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO11_BF_RESET 0x00000000


/**
 * Reset value for Gpio10 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO10_BF_RESET 0x00000000


/**
 * Reset value for Gpio9 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO9_BF_RESET 0x00000000


/**
 * Reset value for Gpio8 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO8_BF_RESET 0x00000000


/**
 * Reset value for Gpio7 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO7_BF_RESET 0x00000000


/**
 * Reset value for Gpio6 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO6_BF_RESET 0x00000000


/**
 * Reset value for Gpio5 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO5_BF_RESET 0x00000000


/**
 * Reset value for Gpio4 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO4_BF_RESET 0x00000000


/**
 * Reset value for Gpio3 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO3_BF_RESET 0x00000000


/**
 * Reset value for Gpio2 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO2_BF_RESET 0x00000000


/**
 * Reset value for Gpio1 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO1_BF_RESET 0x00000000


/**
 * Reset value for Gpio0 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntFlg Register
***********************************************************/
/**
 * The Shift for UnservicedInterrupts in the IntFlg Register
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_SHIFT 31
/**
 * The Shift for I2CFifoAlmostEmpty in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_SHIFT 26
/**
 * The Shift for I2CFifoAlmostFull in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_SHIFT 25
/**
 * The Shift for I2CMdioDone in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_BF_SHIFT 24
/**
 * The Shift for CtmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_BF_SHIFT 18
/**
 * The Shift for CrmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_BF_SHIFT 17
/**
 * The Shift for ClmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_BF_SHIFT 16
/**
 * The Shift for Gpio15 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO15_BF_SHIFT 15
/**
 * The Shift for Gpio14 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO14_BF_SHIFT 14
/**
 * The Shift for Gpio13 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO13_BF_SHIFT 13
/**
 * The Shift for Gpio12 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO12_BF_SHIFT 12
/**
 * The Shift for Gpio11 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO11_BF_SHIFT 11
/**
 * The Shift for Gpio10 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO10_BF_SHIFT 10
/**
 * The Shift for Gpio9 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO9_BF_SHIFT 9
/**
 * The Shift for Gpio8 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO8_BF_SHIFT 8
/**
 * The Shift for Gpio7 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO7_BF_SHIFT 7
/**
 * The Shift for Gpio6 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO6_BF_SHIFT 6
/**
 * The Shift for Gpio5 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO5_BF_SHIFT 5
/**
 * The Shift for Gpio4 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO4_BF_SHIFT 4
/**
 * The Shift for Gpio3 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO3_BF_SHIFT 3
/**
 * The Shift for Gpio2 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO2_BF_SHIFT 2
/**
 * The Shift for Gpio1 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO1_BF_SHIFT 1
/**
 * The Shift for Gpio0 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO0_BF_SHIFT 0
/**
 * The mask for UnservicedInterrupts in the IntFlg Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_MASK 0x80000000


/**
 * The mask for I2CFifoAlmostEmpty in the IntFlg Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK 0x04000000


/**
 * The mask for I2CFifoAlmostFull in the IntFlg Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK 0x02000000


/**
 * The mask for I2CMdioDone in the IntFlg Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK 0x01000000


/**
 * The mask for CtmPllLock in the IntFlg Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK 0x00040000


/**
 * The mask for CrmPllLock in the IntFlg Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK 0x00020000


/**
 * The mask for ClmPllLock in the IntFlg Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK 0x00010000


/**
 * The mask for Gpio15 in the IntFlg Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define GRG_GRG_INTFLG_GPIO15_BF_MASK 0x00008000


/**
 * The mask for Gpio14 in the IntFlg Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define GRG_GRG_INTFLG_GPIO14_BF_MASK 0x00004000


/**
 * The mask for Gpio13 in the IntFlg Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define GRG_GRG_INTFLG_GPIO13_BF_MASK 0x00002000


/**
 * The mask for Gpio12 in the IntFlg Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define GRG_GRG_INTFLG_GPIO12_BF_MASK 0x00001000


/**
 * The mask for Gpio11 in the IntFlg Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define GRG_GRG_INTFLG_GPIO11_BF_MASK 0x00000800


/**
 * The mask for Gpio10 in the IntFlg Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define GRG_GRG_INTFLG_GPIO10_BF_MASK 0x00000400


/**
 * The mask for Gpio9 in the IntFlg Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define GRG_GRG_INTFLG_GPIO9_BF_MASK 0x00000200


/**
 * The mask for Gpio8 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define GRG_GRG_INTFLG_GPIO8_BF_MASK 0x00000100


/**
 * The mask for Gpio7 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define GRG_GRG_INTFLG_GPIO7_BF_MASK 0x00000080


/**
 * The mask for Gpio6 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define GRG_GRG_INTFLG_GPIO6_BF_MASK 0x00000040


/**
 * The mask for Gpio5 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define GRG_GRG_INTFLG_GPIO5_BF_MASK 0x00000020


/**
 * The mask for Gpio4 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define GRG_GRG_INTFLG_GPIO4_BF_MASK 0x00000010


/**
 * The mask for Gpio3 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define GRG_GRG_INTFLG_GPIO3_BF_MASK 0x00000008


/**
 * The mask for Gpio2 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define GRG_GRG_INTFLG_GPIO2_BF_MASK 0x00000004


/**
 * The mask for Gpio1 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_GRG_INTFLG_GPIO1_BF_MASK 0x00000002


/**
 * The mask for Gpio0 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_GRG_INTFLG_GPIO0_BF_MASK 0x00000001



/**
 * Reset value for UnservicedInterrupts in the IntFlg Register
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_RESET 0x00000000


/**
 * Reset value for I2CFifoAlmostEmpty in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_RESET 0x00000000


/**
 * Reset value for I2CFifoAlmostFull in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_RESET 0x00000000


/**
 * Reset value for I2CMdioDone in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_BF_RESET 0x00000000


/**
 * Reset value for CtmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_BF_RESET 0x00000000


/**
 * Reset value for CrmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_BF_RESET 0x00000000


/**
 * Reset value for ClmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_BF_RESET 0x00000000


/**
 * Reset value for Gpio15 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO15_BF_RESET 0x00000000


/**
 * Reset value for Gpio14 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO14_BF_RESET 0x00000000


/**
 * Reset value for Gpio13 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO13_BF_RESET 0x00000000


/**
 * Reset value for Gpio12 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO12_BF_RESET 0x00000000


/**
 * Reset value for Gpio11 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO11_BF_RESET 0x00000000


/**
 * Reset value for Gpio10 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO10_BF_RESET 0x00000000


/**
 * Reset value for Gpio9 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO9_BF_RESET 0x00000000


/**
 * Reset value for Gpio8 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO8_BF_RESET 0x00000000


/**
 * Reset value for Gpio7 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO7_BF_RESET 0x00000000


/**
 * Reset value for Gpio6 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO6_BF_RESET 0x00000000


/**
 * Reset value for Gpio5 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO5_BF_RESET 0x00000000


/**
 * Reset value for Gpio4 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO4_BF_RESET 0x00000000


/**
 * Reset value for Gpio3 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO3_BF_RESET 0x00000000


/**
 * Reset value for Gpio2 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO2_BF_RESET 0x00000000


/**
 * Reset value for Gpio1 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO1_BF_RESET 0x00000000


/**
 * Reset value for Gpio0 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Dir Register
***********************************************************/
/**
 * The Shift for Dir in the Dir Register
 */
#define GRG_GPIO_DIR_DIR_BF_SHIFT 0

/**
 * The mask for Dir in the Dir Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_GPIO_DIR_DIR_BF_MASK 0x0000FFFF

/**
 * Reset value for Dir in the Dir Register
 */
#define GRG_GPIO_DIR_DIR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the In Register
***********************************************************/
/**
 * The Shift for IntSrc15 in the In Register
 */
#define GRG_GPIO_IN_INTSRC15_BF_SHIFT 31
/**
 * The Shift for IntSrc14 in the In Register
 */
#define GRG_GPIO_IN_INTSRC14_BF_SHIFT 30
/**
 * The Shift for IntSrc13 in the In Register
 */
#define GRG_GPIO_IN_INTSRC13_BF_SHIFT 29
/**
 * The Shift for IntSrc12 in the In Register
 */
#define GRG_GPIO_IN_INTSRC12_BF_SHIFT 28
/**
 * The Shift for IntSrc11 in the In Register
 */
#define GRG_GPIO_IN_INTSRC11_BF_SHIFT 27
/**
 * The Shift for IntSrc10 in the In Register
 */
#define GRG_GPIO_IN_INTSRC10_BF_SHIFT 26
/**
 * The Shift for IntSrc9 in the In Register
 */
#define GRG_GPIO_IN_INTSRC9_BF_SHIFT 25
/**
 * The Shift for IntSrc8 in the In Register
 */
#define GRG_GPIO_IN_INTSRC8_BF_SHIFT 24
/**
 * The Shift for IntSrc7 in the In Register
 */
#define GRG_GPIO_IN_INTSRC7_BF_SHIFT 23
/**
 * The Shift for IntSrc6 in the In Register
 */
#define GRG_GPIO_IN_INTSRC6_BF_SHIFT 22
/**
 * The Shift for IntSrc5 in the In Register
 */
#define GRG_GPIO_IN_INTSRC5_BF_SHIFT 21
/**
 * The Shift for IntSrc4 in the In Register
 */
#define GRG_GPIO_IN_INTSRC4_BF_SHIFT 20
/**
 * The Shift for IntSrc3 in the In Register
 */
#define GRG_GPIO_IN_INTSRC3_BF_SHIFT 19
/**
 * The Shift for IntSrc2 in the In Register
 */
#define GRG_GPIO_IN_INTSRC2_BF_SHIFT 18
/**
 * The Shift for IntSrc1 in the In Register
 */
#define GRG_GPIO_IN_INTSRC1_BF_SHIFT 17
/**
 * The Shift for IntSrc0 in the In Register
 */
#define GRG_GPIO_IN_INTSRC0_BF_SHIFT 16
/**
 * The Shift for In in the In Register
 */
#define GRG_GPIO_IN_IN_BF_SHIFT 0

/**
 * The mask for IntSrc15 in the In Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC15_BF_MASK 0x80000000


/**
 * The mask for IntSrc14 in the In Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC14_BF_MASK 0x40000000


/**
 * The mask for IntSrc13 in the In Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC13_BF_MASK 0x20000000


/**
 * The mask for IntSrc12 in the In Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC12_BF_MASK 0x10000000


/**
 * The mask for IntSrc11 in the In Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC11_BF_MASK 0x08000000


/**
 * The mask for IntSrc10 in the In Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC10_BF_MASK 0x04000000


/**
 * The mask for IntSrc9 in the In Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC9_BF_MASK 0x02000000


/**
 * The mask for IntSrc8 in the In Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC8_BF_MASK 0x01000000


/**
 * The mask for IntSrc7 in the In Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC7_BF_MASK 0x00800000


/**
 * The mask for IntSrc6 in the In Register
 * Binary value of mask is 00000000010000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC6_BF_MASK 0x00400000


/**
 * The mask for IntSrc5 in the In Register
 * Binary value of mask is 00000000001000000000000000000000
 */
#define GRG_GPIO_IN_INTSRC5_BF_MASK 0x00200000


/**
 * The mask for IntSrc4 in the In Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define GRG_GPIO_IN_INTSRC4_BF_MASK 0x00100000


/**
 * The mask for IntSrc3 in the In Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define GRG_GPIO_IN_INTSRC3_BF_MASK 0x00080000


/**
 * The mask for IntSrc2 in the In Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define GRG_GPIO_IN_INTSRC2_BF_MASK 0x00040000


/**
 * The mask for IntSrc1 in the In Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define GRG_GPIO_IN_INTSRC1_BF_MASK 0x00020000


/**
 * The mask for IntSrc0 in the In Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define GRG_GPIO_IN_INTSRC0_BF_MASK 0x00010000


/**
 * The mask for In in the In Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_GPIO_IN_IN_BF_MASK 0x0000FFFF


/**
 * Reset value for IntSrc15 in the In Register
 */
#define GRG_GPIO_IN_INTSRC15_BF_RESET 0x00000000


/**
 * Reset value for IntSrc14 in the In Register
 */
#define GRG_GPIO_IN_INTSRC14_BF_RESET 0x00000000


/**
 * Reset value for IntSrc13 in the In Register
 */
#define GRG_GPIO_IN_INTSRC13_BF_RESET 0x00000000


/**
 * Reset value for IntSrc12 in the In Register
 */
#define GRG_GPIO_IN_INTSRC12_BF_RESET 0x00000000


/**
 * Reset value for IntSrc11 in the In Register
 */
#define GRG_GPIO_IN_INTSRC11_BF_RESET 0x00000000


/**
 * Reset value for IntSrc10 in the In Register
 */
#define GRG_GPIO_IN_INTSRC10_BF_RESET 0x00000000


/**
 * Reset value for IntSrc9 in the In Register
 */
#define GRG_GPIO_IN_INTSRC9_BF_RESET 0x00000000


/**
 * Reset value for IntSrc8 in the In Register
 */
#define GRG_GPIO_IN_INTSRC8_BF_RESET 0x00000000


/**
 * Reset value for IntSrc7 in the In Register
 */
#define GRG_GPIO_IN_INTSRC7_BF_RESET 0x00000000


/**
 * Reset value for IntSrc6 in the In Register
 */
#define GRG_GPIO_IN_INTSRC6_BF_RESET 0x00000000


/**
 * Reset value for IntSrc5 in the In Register
 */
#define GRG_GPIO_IN_INTSRC5_BF_RESET 0x00000000


/**
 * Reset value for IntSrc4 in the In Register
 */
#define GRG_GPIO_IN_INTSRC4_BF_RESET 0x00000000


/**
 * Reset value for IntSrc3 in the In Register
 */
#define GRG_GPIO_IN_INTSRC3_BF_RESET 0x00000000


/**
 * Reset value for IntSrc2 in the In Register
 */
#define GRG_GPIO_IN_INTSRC2_BF_RESET 0x00000000


/**
 * Reset value for IntSrc1 in the In Register
 */
#define GRG_GPIO_IN_INTSRC1_BF_RESET 0x00000000


/**
 * Reset value for IntSrc0 in the In Register
 */
#define GRG_GPIO_IN_INTSRC0_BF_RESET 0x00000000


/**
 * Reset value for In in the In Register
 */
#define GRG_GPIO_IN_IN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Out Register
***********************************************************/
/**
 * The Shift for Out in the Out Register
 */
#define GRG_GPIO_OUT_OUT_BF_SHIFT 0
/**
 * The mask for Out in the Out Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_GPIO_OUT_OUT_BF_MASK 0x0000FFFF



/**
 * Reset value for Out in the Out Register
 */
#define GRG_GPIO_OUT_OUT_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Control Register
***********************************************************/
/**
 * The Shift for I2cMdioDone in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_SHIFT 31
/**
 * The Shift for TrnErr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_BF_SHIFT 30
/**
 * The Shift for FifoAlmostFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_SHIFT 29
/**
 * The Shift for FifoAlmostEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_SHIFT 28
/**
 * The Shift for FifoFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_BF_SHIFT 27
/**
 * The Shift for FifoEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_SHIFT 26
/**
 * The Shift for ForceSDAn in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_BF_SHIFT 25
/**
 * The Shift for PortSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_BF_SHIFT 24
/**
 * The Shift for SpeedSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_SHIFT 22
/**
 * The Shift for PhyAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_BF_SHIFT 14
/**
 * The Shift for RdBytesRegAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_SHIFT 6
/**
 * The Shift for Clear in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_BF_SHIFT 5
/**
 * The Shift for IndirectMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_SHIFT 4
/**
 * The Shift for AccessMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_SHIFT 2
/**
 * The Shift for I2cMdioSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_SHIFT 1
/**
 * The Shift for Go in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_GO_BF_SHIFT 0
/**
 * The mask for I2cMdioDone in the Control Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_MASK 0x80000000


/**
 * The mask for TrnErr in the Control Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_BF_MASK 0x40000000


/**
 * The mask for FifoAlmostFull in the Control Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_MASK 0x20000000


/**
 * The mask for FifoAlmostEmpty in the Control Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_MASK 0x10000000


/**
 * The mask for FifoFull in the Control Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_BF_MASK 0x08000000


/**
 * The mask for FifoEmpty in the Control Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_MASK 0x04000000


/**
 * The mask for ForceSDAn in the Control Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK 0x02000000


/**
 * The mask for PortSel in the Control Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK 0x01000000


/**
 * The mask for SpeedSel in the Control Register
 * Binary value of mask is 00000000110000000000000000000000
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK 0x00C00000


/**
 * The mask for PhyAddr in the Control Register
 * Binary value of mask is 00000000001111111100000000000000
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK 0x003FC000


/**
 * The mask for RdBytesRegAddr in the Control Register
 * Binary value of mask is 00000000000000000011111111000000
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK 0x00003FC0


/**
 * The mask for Clear in the Control Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK 0x00000020


/**
 * The mask for IndirectMode in the Control Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK 0x00000010


/**
 * The mask for AccessMode in the Control Register
 * Binary value of mask is 00000000000000000000000000001100
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK 0x0000000C


/**
 * The mask for I2cMdioSel in the Control Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK 0x00000002


/**
 * The mask for Go in the Control Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_I2CMDIO_CONTROL_GO_BF_MASK 0x00000001



/**
 * Reset value for I2cMdioDone in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_RESET 0x00000000


/**
 * Reset value for TrnErr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_BF_RESET 0x00000000


/**
 * Reset value for FifoAlmostFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_RESET 0x00000000


/**
 * Reset value for FifoAlmostEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_RESET 0x00000000


/**
 * Reset value for FifoFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_BF_RESET 0x00000000


/**
 * Reset value for FifoEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_RESET 0x00000000


/**
 * Reset value for ForceSDAn in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_BF_RESET 0x00000000


/**
 * Reset value for PortSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_BF_RESET 0x00000000


/**
 * Reset value for SpeedSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_RESET 0x00000000


/**
 * Reset value for PhyAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_BF_RESET 0x00000000


/**
 * Reset value for RdBytesRegAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_RESET 0x00000000


/**
 * Reset value for Clear in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_BF_RESET 0x00000000


/**
 * Reset value for IndirectMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_RESET 0x00000000


/**
 * Reset value for AccessMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_RESET 0x00000000


/**
 * Reset value for I2cMdioSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_RESET 0x00000000


/**
 * Reset value for Go in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Wdata Register
***********************************************************/
/**
 * The Shift for Wdata in the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_WDATA_BF_SHIFT 0
/**
 * The mask for Wdata in the Wdata Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_I2CMDIO_WDATA_WDATA_BF_MASK 0x0000FFFF



/**
 * Reset value for Wdata in the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_WDATA_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Rdata Register
***********************************************************/
/**
 * The Shift for Rdata in the Rdata Register
 */
#define GRG_I2CMDIO_RDATA_RDATA_BF_SHIFT 0
/**
 * The mask for Rdata in the Rdata Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_I2CMDIO_RDATA_RDATA_BF_MASK 0x0000FFFF



/**
 * Reset value for Rdata in the Rdata Register
 */
#define GRG_I2CMDIO_RDATA_RDATA_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the PllConfig Register
***********************************************************/
/**
 * The Shift for CtmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_BF_SHIFT 20
/**
 * The Shift for CtmClkSel in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_SHIFT 18
/**
 * The Shift for CtmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_SHIFT 17
/**
 * The Shift for CtmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_BF_SHIFT 16
/**
 * The Shift for CrmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_BF_SHIFT 12
/**
 * The Shift for CrmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_SHIFT 9
/**
 * The Shift for CrmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_BF_SHIFT 8
/**
 * The Shift for ClmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_BF_SHIFT 4
/**
 * The Shift for ClmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_SHIFT 1
/**
 * The Shift for ClmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_BF_SHIFT 0

/**
 * The mask for CtmReset in the PllConfig Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK 0x00100000


/**
 * The mask for CtmClkSel in the PllConfig Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK 0x000C0000


/**
 * The mask for CtmLockEvent in the PllConfig Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_MASK 0x00020000


/**
 * The mask for CtmLock in the PllConfig Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_BF_MASK 0x00010000


/**
 * The mask for CrmReset in the PllConfig Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK 0x00001000


/**
 * The mask for CrmLockEvent in the PllConfig Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_MASK 0x00000200


/**
 * The mask for CrmLock in the PllConfig Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_BF_MASK 0x00000100


/**
 * The mask for ClmReset in the PllConfig Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK 0x00000010


/**
 * The mask for ClmLockEvent in the PllConfig Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_MASK 0x00000002


/**
 * The mask for ClmLock in the PllConfig Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_BF_MASK 0x00000001


/**
 * Reset value for CtmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_BF_RESET 0x00000001


/**
 * Reset value for CtmClkSel in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_RESET 0x00000000


/**
 * Reset value for CtmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_RESET 0x00000000


/**
 * Reset value for CtmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_BF_RESET 0x00000000


/**
 * Reset value for CrmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_BF_RESET 0x00000001


/**
 * Reset value for CrmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_RESET 0x00000000


/**
 * Reset value for CrmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_BF_RESET 0x00000000


/**
 * Reset value for ClmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_BF_RESET 0x00000001


/**
 * Reset value for ClmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_RESET 0x00000000


/**
 * Reset value for ClmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_BF_RESET 0x00000000


/***********************************************************
  BitFields defs from the PllConfig2 Register
***********************************************************/
/**
 * The Shift for Gen in the PllConfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_GEN_BF_SHIFT 0

/**
 * The mask for Gen in the PllConfig2 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_PLL_PLLCONFIG2_GEN_BF_MASK 0xffffffff


/**
 * Reset value for Gen in the PllConfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_GEN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the PllConfig3 Register
***********************************************************/
/**
 * The Shift for Gen in the PllConfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_GEN_BF_SHIFT 0

/**
 * The mask for Gen in the PllConfig3 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_PLL_PLLCONFIG3_GEN_BF_MASK 0xffffffff


/**
 * Reset value for Gen in the PllConfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_GEN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the FreqTest Register
***********************************************************/
/**
 * The Shift for Reset in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_RESET_BF_SHIFT 24
/**
 * The Shift for Xusb in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_XUSB_BF_SHIFT 16
/**
 * The Shift for Cxm in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CXM_BF_SHIFT 8
/**
 * The Shift for Select in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_SELECT_BF_SHIFT 4
/**
 * The Shift for Clear in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CLEAR_BF_SHIFT 1
/**
 * The Shift for Go in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_GO_BF_SHIFT 0


/**
 * The mask for RESET in the FreqTest Register
 * Binary value of mask is 0000 1111 0000 0000 0000 0000 0000 0000
 */
#define GRG_PLL_FREQTEST_RESET_BF_MASK 0x0f000000


/**
 * The mask for Xusb in the FreqTest Register
 * Binary value of mask is 0000 0000 1111 1111 0000 0000 0000 0000
 */
#define GRG_PLL_FREQTEST_XUSB_BF_MASK 0x00FF0000


/**
 * The mask for Cxm in the FreqTest Register
 * Binary value of mask is 0000 0000 0000 0000 1111 1111 0000 0000
 */
#define GRG_PLL_FREQTEST_CXM_BF_MASK 0x0000FF00


/**
 * The mask for Select in the FreqTest Register
 * Binary value of mask is 0000 0000 0000 0000 0000 0000 1111 0000
 */
#define GRG_PLL_FREQTEST_SELECT_BF_MASK 0x000000F0


/**
 * The mask for Clear in the FreqTest Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define GRG_PLL_FREQTEST_CLEAR_BF_MASK 0x00000002


/**
 * The mask for Go in the FreqTest Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define GRG_PLL_FREQTEST_GO_BF_MASK 0x00000001



/**
 * Reset value for Xusb in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_XUSB_BF_RESET 0x00000000


/**
 * Reset value for Cxm in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CXM_BF_RESET 0x00000000


/**
 * Reset value for Select in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_SELECT_BF_RESET 0x00000000


/**
 * Reset value for Clear in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CLEAR_BF_RESET 0x00000000


/**
 * Reset value for Go in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the PllConfig4 Register
***********************************************************/
/**
 * The Shift for Gen in the PllConfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_GEN_BF_SHIFT 0

/**
 * The mask for Gen in the PllConfig4 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_PLL_PLLCONFIG4_GEN_BF_MASK 0xffffffff


/**
 * Reset value for Gen in the PllConfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_GEN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the GpioDrive Register
***********************************************************/
/**
 * The Shift for Drive in the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_BF_SHIFT 0

/**
 * The mask for Drive in the GpioDrive Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK 0xffffffff


/**
 * Reset value for Drive in the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_BF_RESET 0xffffffff

/***********************************************************
  BitFields defs from the GpioPull Register
***********************************************************/
/**
 * The Shift for Pull in the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_PULL_BF_SHIFT 0

/**
 * The mask for Pull in the GpioPull Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_IOCFG_GPIOPULL_PULL_BF_MASK 0xffffffff


/**
 * Reset value for Pull in the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_PULL_BF_RESET 0x55555555

/***********************************************************
  BitFields defs from the GpioSchmittSlew Register
***********************************************************/
/**
 * The Shift for Slew in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_SHIFT 16

/**
 * The Shift for Schmitt in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_SHIFT 0

/**
 * The mask for Slew in the GpioSchmittSlew Register
 * Binary value of mask is 11111111111111110000000000000000
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK 0xffff0000

/**
 * The mask for Schmitt in the GpioSchmittSlew Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK 0x0000ffff


/**
 * Reset value for Slew in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_RESET 0x00000000

/**
 * Reset value for Schmitt in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the GpioMux Register
***********************************************************/
/**
 * The Shift for Mux in the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_MUX_BF_SHIFT 0

/**
 * The mask for Mux in the GpioMux Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define GRG_IOCFG_GPIOMUX_MUX_BF_MASK 0xffffffff


/**
 * Reset value for Mux in the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_MUX_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ClmTx Register
***********************************************************/
/**
 * The Shift for Drive in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_DRIVE_BF_SHIFT 16

/**
 * The Shift for Slew in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_SLEW_BF_SHIFT 8

/**
 * The Shift for Enable in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_ENABLE_BF_SHIFT 0

/**
 * The mask for Drive in the ClmTx Register
 * Binary value of mask is 11111111111111110000000000000000
 */
#define GRG_IOCFG_CLMTX_DRIVE_BF_MASK 0xffff0000

/**
 * The mask for Slew in the ClmTx Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define GRG_IOCFG_CLMTX_SLEW_BF_MASK 0x0000ff00

/**
 * The mask for Enable in the ClmTx Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define GRG_IOCFG_CLMTX_ENABLE_BF_MASK 0x000000ff


/**
 * Reset value for Drive in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_DRIVE_BF_RESET 0x00001555

/**
 * Reset value for Slew in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_SLEW_BF_RESET 0x00000000

/**
 * Reset value for Enable in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_ENABLE_BF_RESET 0x0000007f

/***********************************************************
  BitFields defs from the ClmRx Register
***********************************************************/
/**
 * The Shift for Schmitt in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_SCHMITT_BF_SHIFT 16

/**
 * The Shift for Pull in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_PULL_BF_SHIFT 0

/**
 * The mask for Schmitt in the ClmRx Register
 * Binary value of mask is 00000000111111110000000000000000
 */
#define GRG_IOCFG_CLMRX_SCHMITT_BF_MASK 0x00ff0000

/**
 * The mask for Pull in the ClmRx Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define GRG_IOCFG_CLMRX_PULL_BF_MASK 0x0000ffff


/**
 * Reset value for Schmitt in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_SCHMITT_BF_RESET 0x00000000

/**
 * Reset value for Pull in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_PULL_BF_RESET 0x00005555

/***********************************************************
  BitFields defs from the RefClk Register
***********************************************************/
/**
 * The Shift for In1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN1_BF_SHIFT 12

/**
 * The Shift for In0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN0_BF_SHIFT 8

/**
 * The Shift for Out1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT1_BF_SHIFT 4

/**
 * The Shift for Out0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT0_BF_SHIFT 0

/**
 * The mask for In1 in the RefClk Register
 * Binary value of mask is 00000000000000001111000000000000
 */
#define GRG_IOCFG_REFCLK_IN1_BF_MASK 0x0000f000

/**
 * The mask for In0 in the RefClk Register
 * Binary value of mask is 00000000000000000000111100000000
 */
#define GRG_IOCFG_REFCLK_IN0_BF_MASK 0x00000f00

/**
 * The mask for Out1 in the RefClk Register
 * Binary value of mask is 00000000000000000000000011110000
 */
#define GRG_IOCFG_REFCLK_OUT1_BF_MASK 0x000000f0

/**
 * The mask for Out0 in the RefClk Register
 * Binary value of mask is 00000000000000000000000000001111
 */
#define GRG_IOCFG_REFCLK_OUT0_BF_MASK 0x0000000f


/**
 * Reset value for In1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN1_BF_RESET 0x00000000

/**
 * Reset value for In0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN0_BF_RESET 0x00000000

/**
 * Reset value for Out1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT1_BF_RESET 0x00000005

/**
 * Reset value for Out0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT0_BF_RESET 0x00000005




/* CMacroHeaderView.RegRWMacroVP per Register (and subclasses) */

/*****************************************************************************
 The Id register is read-only
******************************************************************************/

/**
 * The Read Macro for the Id Register
 */
#define GRG_GRG_ID_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_ID_REG_OFFSET,0))

/*****************************************************************************
 The Rev register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rev Register
 */
#define GRG_GRG_REV_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_REV_REG_OFFSET,0))

/*****************************************************************************
 The ChipRev register is read-only
******************************************************************************/

/**
 * The Read Macro for the ChipRev Register
 */
#define GRG_GRG_CHIPREV_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0))

/*****************************************************************************
 The ConfigMode register is read-write
******************************************************************************/

/**
 * The Read Macro for the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0))

/**
 * The Write Macro for the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ModRst register is read-write
******************************************************************************/

/**
 * The Read Macro for the ModRst Register
 */
#define GRG_GRG_MODRST_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0))

/**
 * The Write Macro for the ModRst Register
 */
#define GRG_GRG_MODRST_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntMsk register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntMsk Register
 */
#define GRG_GRG_INTMSK_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0))

/**
 * The Write Macro for the IntMsk Register
 */
#define GRG_GRG_INTMSK_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntFlg register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntFlg Register
 */
#define GRG_GRG_INTFLG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0))

/**
 * The Write Macro for the IntFlg Register
 */
#define GRG_GRG_INTFLG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Dir register is read-write
******************************************************************************/

/**
 * The Read Macro for the Dir Register
 */
#define GRG_GPIO_DIR_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0))

/**
 * The Write Macro for the Dir Register
 */
#define GRG_GPIO_DIR_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,(value)))

/*****************************************************************************
 The In register is read-only
******************************************************************************/

/**
 * The Read Macro for the In Register
 */
#define GRG_GPIO_IN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0))

/*****************************************************************************
 The Out register is read-write
******************************************************************************/

/**
 * The Read Macro for the Out Register
 */
#define GRG_GPIO_OUT_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0))

/**
 * The Write Macro for the Out Register
 */
#define GRG_GPIO_OUT_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Control register is read-write
******************************************************************************/

/**
 * The Read Macro for the Control Register
 */
#define GRG_I2CMDIO_CONTROL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0))

/**
 * The Write Macro for the Control Register
 */
#define GRG_I2CMDIO_CONTROL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Wdata register is read-write
******************************************************************************/

/**
 * The Read Macro for the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0))

/**
 * The Write Macro for the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Rdata register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rdata Register
 */
#define GRG_I2CMDIO_RDATA_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_I2CMDIO_RDATA_REG_OFFSET,0))

/*****************************************************************************
 The PllConfig register is read-write
******************************************************************************/

/**
 * The Read Macro for the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0))

/**
 * The Write Macro for the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The PllConfig2 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Pllconfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0))

/**
 * The Write Macro for the Pllconfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,(value)))

/*****************************************************************************
 The PllConfig3 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Pllconfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0))

/**
 * The Write Macro for the Pllconfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,(value)))

/*****************************************************************************
 The FreqTest register is read-write
******************************************************************************/

/**
 * The Read Macro for the FreqTest Register
 */
#define GRG_PLL_FREQTEST_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0))

/**
 * The Write Macro for the FreqTest Register
 */
#define GRG_PLL_FREQTEST_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,(value)))

/*****************************************************************************
 The PllConfig4 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Pllconfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0))

/**
 * The Write Macro for the Pllconfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,(value)))

/*****************************************************************************
 The GpioDrive register is read-write
******************************************************************************/

/**
 * The Read Macro for the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0))

/**
 * The Write Macro for the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,(value)))

/*****************************************************************************
 The GpioPull register is read-write
******************************************************************************/

/**
 * The Read Macro for the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0))

/**
 * The Write Macro for the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The GpioSchmittSlew register is read-write
******************************************************************************/

/**
 * The Write Macro for the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,(value)))

/**
 * The Write Macro for the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,(value)))

/*****************************************************************************
 The GpioMux register is read-write
******************************************************************************/

/**
 * The Write Macro for the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,(value)))

/**
 * The Write Macro for the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ClmTx register is read-write
******************************************************************************/

/**
 * The Read Macro for the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_READ_REG(baseAddress) \
       (READ_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0))

/**
 * The Write Macro for the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ClmRx register is read-write
******************************************************************************/

/**
 * The Write Macro for the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,(value)))

/**
 * The Write Macro for the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,(value)))

/*****************************************************************************
 The RefClk register is read-write
******************************************************************************/

/**
 * The Write Macro for the RefClk Register
 */
#define GRG_IOCFG_REFCLK_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,(value)))

/**
 * The Write Macro for the RefClk Register
 */
#define GRG_IOCFG_REFCLK_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,(value)))


/* CMacroHeaderView.BfROMacroVP per ReadOnlyBitField (and subclasses) */

/******************************************************************************
 The Id ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Id in the Id Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_ID_ID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_ID_REG_OFFSET,0,GRG_GRG_ID_ID_BF_MASK,GRG_GRG_ID_ID_BF_SHIFT))

/**
 * The Read then Mask Macro for Id in the Id Register
 * This does not do a shift.
 */
#define GRG_GRG_ID_ID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_ID_REG_OFFSET,0,GRG_GRG_ID_ID_BF_MASK))

/**
 * The Get Macro for Id in the Id Register
 */
#define GRG_GRG_ID_ID_GET_BF(regValue) \
	(GET_BF(GRG_GRG_ID_ID_BF_MASK,GRG_GRG_ID_ID_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMinor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMinor in the Rev Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_REV_CVSMINOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_REV_REG_OFFSET,0,GRG_GRG_REV_CVSMINOR_BF_MASK,GRG_GRG_REV_CVSMINOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMinor in the Rev Register
 * This does not do a shift.
 */
#define GRG_GRG_REV_CVSMINOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_REV_REG_OFFSET,0,GRG_GRG_REV_CVSMINOR_BF_MASK))

/**
 * The Get Macro for CvsMinor in the Rev Register
 */
#define GRG_GRG_REV_CVSMINOR_GET_BF(regValue) \
	(GET_BF(GRG_GRG_REV_CVSMINOR_BF_MASK,GRG_GRG_REV_CVSMINOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMajor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMajor in the Rev Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_REV_CVSMAJOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_REV_REG_OFFSET,0,GRG_GRG_REV_CVSMAJOR_BF_MASK,GRG_GRG_REV_CVSMAJOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMajor in the Rev Register
 * This does not do a shift.
 */
#define GRG_GRG_REV_CVSMAJOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_REV_REG_OFFSET,0,GRG_GRG_REV_CVSMAJOR_BF_MASK))

/**
 * The Get Macro for CvsMajor in the Rev Register
 */
#define GRG_GRG_REV_CVSMAJOR_GET_BF(regValue) \
	(GET_BF(GRG_GRG_REV_CVSMAJOR_BF_MASK,GRG_GRG_REV_CVSMAJOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The UnservicedInterrupts ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UnservicedInterrupts in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_MASK,GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_SHIFT))

/**
 * The Read then Mask Macro for UnservicedInterrupts in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_MASK))

/**
 * The Get Macro for UnservicedInterrupts in the IntFlg Register
 */
#define GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_MASK,GRG_GRG_INTFLG_UNSERVICEDINTERRUPTS_BF_SHIFT,(regValue)))

/******************************************************************************
 The Debug ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Debug in the ChipRev Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CHIPREV_DEBUG_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_DEBUG_BF_MASK,GRG_GRG_CHIPREV_DEBUG_BF_SHIFT))

/**
 * The Read then Mask Macro for Debug in the ChipRev Register
 * This does not do a shift.
 */
#define GRG_GRG_CHIPREV_DEBUG_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_DEBUG_BF_MASK))

/**
 * The Get Macro for Debug in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_DEBUG_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CHIPREV_DEBUG_BF_MASK,GRG_GRG_CHIPREV_DEBUG_BF_SHIFT,(regValue)))

/******************************************************************************
 The Minor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Minor in the ChipRev Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CHIPREV_MINOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_MINOR_BF_MASK,GRG_GRG_CHIPREV_MINOR_BF_SHIFT))

/**
 * The Read then Mask Macro for Minor in the ChipRev Register
 * This does not do a shift.
 */
#define GRG_GRG_CHIPREV_MINOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_MINOR_BF_MASK))

/**
 * The Get Macro for Minor in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MINOR_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CHIPREV_MINOR_BF_MASK,GRG_GRG_CHIPREV_MINOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Major ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Major in the ChipRev Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CHIPREV_MAJOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_MAJOR_BF_MASK,GRG_GRG_CHIPREV_MAJOR_BF_SHIFT))

/**
 * The Read then Mask Macro for Major in the ChipRev Register
 * This does not do a shift.
 */
#define GRG_GRG_CHIPREV_MAJOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CHIPREV_REG_OFFSET,0,GRG_GRG_CHIPREV_MAJOR_BF_MASK))

/**
 * The Get Macro for Major in the ChipRev Register
 */
#define GRG_GRG_CHIPREV_MAJOR_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CHIPREV_MAJOR_BF_MASK,GRG_GRG_CHIPREV_MAJOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The BootSel ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BootSel in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_BOOTSEL_BF_MASK,GRG_GRG_CONFIGMODE_BOOTSEL_BF_SHIFT))

/**
 * The Read then Mask Macro for BootSel in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_BOOTSEL_BF_MASK))

/**
 * The Get Macro for BootSel in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_BOOTSEL_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_BOOTSEL_BF_MASK,GRG_GRG_CONFIGMODE_BOOTSEL_BF_SHIFT,(regValue)))

/******************************************************************************
 The CfgUSBMode ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CfgUSBMode in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_MASK,GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_SHIFT))

/**
 * The Read then Mask Macro for CfgUSBMode in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_MASK))

/**
 * The Get Macro for CfgUSBMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGUSBMODE_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_MASK,GRG_GRG_CONFIGMODE_CFGUSBMODE_BF_SHIFT,(regValue)))

/******************************************************************************
 The CfgLexRex ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CfgLexRex in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_CFGLEXREX_BF_MASK,GRG_GRG_CONFIGMODE_CFGLEXREX_BF_SHIFT))

/**
 * The Read then Mask Macro for CfgLexRex in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_CFGLEXREX_BF_MASK))

/**
 * The Get Macro for CfgLexRex in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_CFGLEXREX_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_CFGLEXREX_BF_MASK,GRG_GRG_CONFIGMODE_CFGLEXREX_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyMode ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyMode in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PHYMODE_BF_MASK,GRG_GRG_CONFIGMODE_PHYMODE_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyMode in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PHYMODE_BF_MASK))

/**
 * The Get Macro for PhyMode in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYMODE_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_PHYMODE_BF_MASK,GRG_GRG_CONFIGMODE_PHYMODE_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyL2FEn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyL2FEn in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PHYL2FEN_BF_MASK,GRG_GRG_CONFIGMODE_PHYL2FEN_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyL2FEn in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PHYL2FEN_BF_MASK))

/**
 * The Get Macro for PhyL2FEn in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PHYL2FEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_PHYL2FEN_BF_MASK,GRG_GRG_CONFIGMODE_PHYL2FEN_BF_SHIFT,(regValue)))

/******************************************************************************
 The VariantID ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for VariantID in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VARIANTID_BF_MASK,GRG_GRG_CONFIGMODE_VARIANTID_BF_SHIFT))

/**
 * The Read then Mask Macro for VariantID in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VARIANTID_BF_MASK))

/**
 * The Get Macro for VariantID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VARIANTID_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_VARIANTID_BF_MASK,GRG_GRG_CONFIGMODE_VARIANTID_BF_SHIFT,(regValue)))

/******************************************************************************
 The PlatformID ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PlatformID in the ConfigMode Register
 * This does a read, mask, then shift.
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PLATFORMID_BF_MASK,GRG_GRG_CONFIGMODE_PLATFORMID_BF_SHIFT))

/**
 * The Read then Mask Macro for PlatformID in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_PLATFORMID_BF_MASK))

/**
 * The Get Macro for PlatformID in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_PLATFORMID_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_PLATFORMID_BF_MASK,GRG_GRG_CONFIGMODE_PLATFORMID_BF_SHIFT,(regValue)))

/******************************************************************************
 The In ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for In in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_IN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_IN_BF_MASK,GRG_GPIO_IN_IN_BF_SHIFT))

/**
 * The Read then Mask Macro for In in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_IN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_IN_BF_MASK))

/**
 * The Get Macro for In in the In Register
 */
#define GRG_GPIO_IN_IN_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_IN_BF_MASK,GRG_GPIO_IN_IN_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc0 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc0 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC0_BF_MASK,GRG_GPIO_IN_INTSRC0_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc0 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC0_BF_MASK))

/**
 * The Get Macro for IntSrc0 in the In Register
 */
#define GRG_GPIO_IN_INTSRC0_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC0_BF_MASK,GRG_GPIO_IN_INTSRC0_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc1 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC1_BF_MASK,GRG_GPIO_IN_INTSRC1_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc1 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC1_BF_MASK))

/**
 * The Get Macro for IntSrc1 in the In Register
 */
#define GRG_GPIO_IN_INTSRC1_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC1_BF_MASK,GRG_GPIO_IN_INTSRC1_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc2 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc2 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC2_BF_MASK,GRG_GPIO_IN_INTSRC2_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc2 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC2_BF_MASK))

/**
 * The Get Macro for IntSrc2 in the In Register
 */
#define GRG_GPIO_IN_INTSRC2_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC2_BF_MASK,GRG_GPIO_IN_INTSRC2_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc3 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc3 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC3_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC3_BF_MASK,GRG_GPIO_IN_INTSRC3_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc3 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC3_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC3_BF_MASK))

/**
 * The Get Macro for IntSrc3 in the In Register
 */
#define GRG_GPIO_IN_INTSRC3_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC3_BF_MASK,GRG_GPIO_IN_INTSRC3_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc4 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc4 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC4_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC4_BF_MASK,GRG_GPIO_IN_INTSRC4_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc4 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC4_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC4_BF_MASK))

/**
 * The Get Macro for IntSrc4 in the In Register
 */
#define GRG_GPIO_IN_INTSRC4_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC4_BF_MASK,GRG_GPIO_IN_INTSRC4_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc5 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc5 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC5_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC5_BF_MASK,GRG_GPIO_IN_INTSRC5_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc5 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC5_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC5_BF_MASK))

/**
 * The Get Macro for IntSrc5 in the In Register
 */
#define GRG_GPIO_IN_INTSRC5_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC5_BF_MASK,GRG_GPIO_IN_INTSRC5_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc6 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc6 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC6_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC6_BF_MASK,GRG_GPIO_IN_INTSRC6_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc6 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC6_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC6_BF_MASK))

/**
 * The Get Macro for IntSrc6 in the In Register
 */
#define GRG_GPIO_IN_INTSRC6_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC6_BF_MASK,GRG_GPIO_IN_INTSRC6_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc7 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc7 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC7_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC7_BF_MASK,GRG_GPIO_IN_INTSRC7_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc7 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC7_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC7_BF_MASK))

/**
 * The Get Macro for IntSrc7 in the In Register
 */
#define GRG_GPIO_IN_INTSRC7_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC7_BF_MASK,GRG_GPIO_IN_INTSRC7_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc8 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc8 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC8_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC8_BF_MASK,GRG_GPIO_IN_INTSRC8_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc8 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC8_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC8_BF_MASK))

/**
 * The Get Macro for IntSrc8 in the In Register
 */
#define GRG_GPIO_IN_INTSRC8_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC8_BF_MASK,GRG_GPIO_IN_INTSRC8_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc9 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc9 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC9_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC9_BF_MASK,GRG_GPIO_IN_INTSRC9_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc9 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC9_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC9_BF_MASK))

/**
 * The Get Macro for IntSrc9 in the In Register
 */
#define GRG_GPIO_IN_INTSRC9_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC9_BF_MASK,GRG_GPIO_IN_INTSRC9_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc10 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc10 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC10_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC10_BF_MASK,GRG_GPIO_IN_INTSRC10_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc10 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC10_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC10_BF_MASK))

/**
 * The Get Macro for IntSrc10 in the In Register
 */
#define GRG_GPIO_IN_INTSRC10_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC10_BF_MASK,GRG_GPIO_IN_INTSRC10_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc11 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc11 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC11_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC11_BF_MASK,GRG_GPIO_IN_INTSRC11_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc11 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC11_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC11_BF_MASK))

/**
 * The Get Macro for IntSrc11 in the In Register
 */
#define GRG_GPIO_IN_INTSRC11_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC11_BF_MASK,GRG_GPIO_IN_INTSRC11_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc12 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc12 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC12_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC12_BF_MASK,GRG_GPIO_IN_INTSRC12_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc12 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC12_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC12_BF_MASK))

/**
 * The Get Macro for IntSrc12 in the In Register
 */
#define GRG_GPIO_IN_INTSRC12_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC12_BF_MASK,GRG_GPIO_IN_INTSRC12_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc13 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc13 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC13_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC13_BF_MASK,GRG_GPIO_IN_INTSRC13_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc13 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC13_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC13_BF_MASK))

/**
 * The Get Macro for IntSrc13 in the In Register
 */
#define GRG_GPIO_IN_INTSRC13_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC13_BF_MASK,GRG_GPIO_IN_INTSRC13BF_SHIFT,(regValue)))


/******************************************************************************
 The IntSrc14 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc14 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC14_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC14_BF_MASK,GRG_GPIO_IN_INTSRC14_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc14 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC14_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC14_BF_MASK))

/**
 * The Get Macro for IntSrc14 in the In Register
 */
#define GRG_GPIO_IN_INTSRC14_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC14_BF_MASK,GRG_GPIO_IN_INTSRC14_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntSrc15 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntSrc15 in the In Register
 * This does a read, mask, then shift.
 */
#define GRG_GPIO_IN_INTSRC15_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC15_BF_MASK,GRG_GPIO_IN_INTSRC15_BF_SHIFT))

/**
 * The Read then Mask Macro for IntSrc15 in the In Register
 * This does not do a shift.
 */
#define GRG_GPIO_IN_INTSRC15_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_IN_REG_OFFSET,0,GRG_GPIO_IN_INTSRC15_BF_MASK))

/**
 * The Get Macro for IntSrc15 in the In Register
 */
#define GRG_GPIO_IN_INTSRC15_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_IN_INTSRC15_BF_MASK,GRG_GPIO_IN_INTSRC15_BF_SHIFT,(regValue)))

/******************************************************************************
 The FifoEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FifoEmpty in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for FifoEmpty in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_MASK))

/**
 * The Get Macro for FifoEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOEMPTY_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The FifoFull ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FifoFull in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOFULL_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOFULL_BF_SHIFT))

/**
 * The Read then Mask Macro for FifoFull in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOFULL_BF_MASK))

/**
 * The Get Macro for FifoFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOFULL_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_FIFOFULL_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOFULL_BF_SHIFT,(regValue)))

/******************************************************************************
 The FifoAlmostEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FifoAlmostEmpty in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for FifoAlmostEmpty in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_MASK))

/**
 * The Get Macro for FifoAlmostEmpty in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOALMOSTEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The FifoAlmostFull ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FifoAlmostFull in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_SHIFT))

/**
 * The Read then Mask Macro for FifoAlmostFull in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_MASK))

/**
 * The Get Macro for FifoAlmostFull in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_MASK,GRG_I2CMDIO_CONTROL_FIFOALMOSTFULL_BF_SHIFT,(regValue)))

/******************************************************************************
 The TrnErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TrnErr in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_TRNERR_BF_MASK,GRG_I2CMDIO_CONTROL_TRNERR_BF_SHIFT))

/**
 * The Read then Mask Macro for TrnErr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_TRNERR_BF_MASK))

/**
 * The Get Macro for TrnErr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_TRNERR_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_TRNERR_BF_MASK,GRG_I2CMDIO_CONTROL_TRNERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The I2cMdioDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for I2cMdioDone in the Control Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_SHIFT))

/**
 * The Read then Mask Macro for I2cMdioDone in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_MASK))

/**
 * The Get Macro for I2cMdioDone in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIODONE_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIODONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rdata ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rdata in the Rdata Register
 * This does a read, mask, then shift.
 */
#define GRG_I2CMDIO_RDATA_RDATA_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_RDATA_REG_OFFSET,0,GRG_I2CMDIO_RDATA_RDATA_BF_MASK,GRG_I2CMDIO_RDATA_RDATA_BF_SHIFT))

/**
 * The Read then Mask Macro for Rdata in the Rdata Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_RDATA_RDATA_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_RDATA_REG_OFFSET,0,GRG_I2CMDIO_RDATA_RDATA_BF_MASK))

/**
 * The Get Macro for Rdata in the Rdata Register
 */
#define GRG_I2CMDIO_RDATA_RDATA_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_RDATA_RDATA_BF_MASK,GRG_I2CMDIO_RDATA_RDATA_BF_SHIFT,(regValue)))

/******************************************************************************
 The ClmLock ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for ClmLock in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CLMLOCK_BF_SHIFT))

/**
 * The Read then Mask Macro for ClmLock in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMLOCK_BF_MASK))

/**
 * The Get Macro for ClmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCK_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CLMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CLMLOCK_BF_SHIFT,(regValue)))

/******************************************************************************
 The ClmLockEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for ClmLockEvent in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for ClmLockEvent in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_MASK))

/**
 * The Get Macro for ClmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMLOCKEVENT_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CLMLOCKEVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The CrmLock ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CrmLock in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CRMLOCK_BF_SHIFT))

/**
 * The Read then Mask Macro for CrmLock in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMLOCK_BF_MASK))

/**
 * The Get Macro for CrmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCK_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CRMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CRMLOCK_BF_SHIFT,(regValue)))

/******************************************************************************
 The CrmLockEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CrmLockEvent in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for CrmLockEvent in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_MASK))

/**
 * The Get Macro for CrmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMLOCKEVENT_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CRMLOCKEVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The CtmLock ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CtmLock in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CTMLOCK_BF_SHIFT))

/**
 * The Read then Mask Macro for CtmLock in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMLOCK_BF_MASK))

/**
 * The Get Macro for CtmLock in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCK_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CTMLOCK_BF_MASK,GRG_PLL_PLLCONFIG_CTMLOCK_BF_SHIFT,(regValue)))

/******************************************************************************
 The CtmLockEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CtmLockEvent in the PllConfig Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for CtmLockEvent in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_MASK))

/**
 * The Get Macro for CtmLockEvent in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMLOCKEVENT_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_MASK,GRG_PLL_PLLCONFIG_CTMLOCKEVENT_BF_SHIFT,(regValue)))


/******************************************************************************
 The Cxm ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Cxm in the FreqTest Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_FREQTEST_CXM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CXM_BF_MASK,GRG_PLL_FREQTEST_CXM_BF_SHIFT))

/**
 * The Read then Mask Macro for Cxm in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_CXM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CXM_BF_MASK))

/**
 * The Get Macro for Cxm in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CXM_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_CXM_BF_MASK,GRG_PLL_FREQTEST_CXM_BF_SHIFT,(regValue)))


/******************************************************************************
 The Xusb ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Xusb in the FreqTest Register
 * This does a read, mask, then shift.
 */
#define GRG_PLL_FREQTEST_XUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_XUSB_BF_MASK,GRG_PLL_FREQTEST_XUSB_BF_SHIFT))

/**
 * The Read then Mask Macro for Xusb in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_XUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_XUSB_BF_MASK))

/**
 * The Get Macro for Xusb in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_XUSB_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_XUSB_BF_MASK,GRG_PLL_FREQTEST_XUSB_BF_SHIFT,(regValue)))


/* CMacroHeaderView.BfRWMacroVP per ReadWriteBitField (and subclasses) */

/******************************************************************************
 The Gpio0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio0 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO0_BF_MASK,GRG_GRG_INTMSK_GPIO0_BF_SHIFT))

/**
 * The Write Macro for Gpio0 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO0_BF_MASK,GRG_GRG_INTMSK_GPIO0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio0 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO0_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio0 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO0_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio0 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO0_BF_MASK))
/**
 * The Get Macro for Gpio0 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO0_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO0_BF_MASK,GRG_GRG_INTMSK_GPIO0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio0 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO0_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO0_BF_MASK,GRG_GRG_INTMSK_GPIO0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio1 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO1_BF_MASK,GRG_GRG_INTMSK_GPIO1_BF_SHIFT))

/**
 * The Write Macro for Gpio1 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO1_BF_MASK,GRG_GRG_INTMSK_GPIO1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio1 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO1_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio1 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO1_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio1 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO1_BF_MASK))
/**
 * The Get Macro for Gpio1 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO1_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO1_BF_MASK,GRG_GRG_INTMSK_GPIO1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio1 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO1_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO1_BF_MASK,GRG_GRG_INTMSK_GPIO1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio2 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio2 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO2_BF_MASK,GRG_GRG_INTMSK_GPIO2_BF_SHIFT))

/**
 * The Write Macro for Gpio2 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO2_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO2_BF_MASK,GRG_GRG_INTMSK_GPIO2_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio2 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO2_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio2 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO2_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO2_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio2 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO2_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO2_BF_MASK))
/**
 * The Get Macro for Gpio2 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO2_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO2_BF_MASK,GRG_GRG_INTMSK_GPIO2_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio2 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO2_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO2_BF_MASK,GRG_GRG_INTMSK_GPIO2_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio3 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio3 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO3_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO3_BF_MASK,GRG_GRG_INTMSK_GPIO3_BF_SHIFT))

/**
 * The Write Macro for Gpio3 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO3_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO3_BF_MASK,GRG_GRG_INTMSK_GPIO3_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio3 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO3_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO3_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio3 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO3_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO3_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio3 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO3_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO3_BF_MASK))
/**
 * The Get Macro for Gpio3 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO3_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO3_BF_MASK,GRG_GRG_INTMSK_GPIO3_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio3 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO3_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO3_BF_MASK,GRG_GRG_INTMSK_GPIO3_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio4 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio4 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO4_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO4_BF_MASK,GRG_GRG_INTMSK_GPIO4_BF_SHIFT))

/**
 * The Write Macro for Gpio4 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO4_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO4_BF_MASK,GRG_GRG_INTMSK_GPIO4_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio4 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO4_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO4_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio4 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO4_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO4_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio4 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO4_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO4_BF_MASK))
/**
 * The Get Macro for Gpio4 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO4_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO4_BF_MASK,GRG_GRG_INTMSK_GPIO4_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio4 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO4_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO4_BF_MASK,GRG_GRG_INTMSK_GPIO4_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio5 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio5 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO5_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO5_BF_MASK,GRG_GRG_INTMSK_GPIO5_BF_SHIFT))

/**
 * The Write Macro for Gpio5 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO5_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO5_BF_MASK,GRG_GRG_INTMSK_GPIO5_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio5 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO5_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO5_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio5 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO5_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO5_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio5 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO5_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO5_BF_MASK))
/**
 * The Get Macro for Gpio5 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO5_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO5_BF_MASK,GRG_GRG_INTMSK_GPIO5_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio5 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO5_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO5_BF_MASK,GRG_GRG_INTMSK_GPIO5_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio6 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio6 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO6_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO6_BF_MASK,GRG_GRG_INTMSK_GPIO6_BF_SHIFT))

/**
 * The Write Macro for Gpio6 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO6_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO6_BF_MASK,GRG_GRG_INTMSK_GPIO6_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio6 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO6_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO6_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio6 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO6_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO6_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio6 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO6_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO6_BF_MASK))
/**
 * The Get Macro for Gpio6 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO6_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO6_BF_MASK,GRG_GRG_INTMSK_GPIO6_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio6 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO6_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO6_BF_MASK,GRG_GRG_INTMSK_GPIO6_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio7 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio7 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO7_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO7_BF_MASK,GRG_GRG_INTMSK_GPIO7_BF_SHIFT))

/**
 * The Write Macro for Gpio7 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO7_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO7_BF_MASK,GRG_GRG_INTMSK_GPIO7_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio7 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO7_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO7_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio7 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO7_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO7_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio7 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO7_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO7_BF_MASK))
/**
 * The Get Macro for Gpio7 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO7_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO7_BF_MASK,GRG_GRG_INTMSK_GPIO7_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio7 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO7_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO7_BF_MASK,GRG_GRG_INTMSK_GPIO7_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio8 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio8 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO8_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO8_BF_MASK,GRG_GRG_INTMSK_GPIO8_BF_SHIFT))

/**
 * The Write Macro for Gpio8 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO8_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO8_BF_MASK,GRG_GRG_INTMSK_GPIO8_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio8 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO8_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO8_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio8 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO8_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO8_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio8 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO8_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO8_BF_MASK))
/**
 * The Get Macro for Gpio8 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO8_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO8_BF_MASK,GRG_GRG_INTMSK_GPIO8_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio8 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO8_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO8_BF_MASK,GRG_GRG_INTMSK_GPIO8_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio9 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio9 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO9_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO9_BF_MASK,GRG_GRG_INTMSK_GPIO9_BF_SHIFT))

/**
 * The Write Macro for Gpio9 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO9_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO9_BF_MASK,GRG_GRG_INTMSK_GPIO9_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio9 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO9_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO9_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio9 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO9_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO9_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio9 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO9_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO9_BF_MASK))
/**
 * The Get Macro for Gpio9 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO9_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO9_BF_MASK,GRG_GRG_INTMSK_GPIO9_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio9 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO9_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO9_BF_MASK,GRG_GRG_INTMSK_GPIO9_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio10 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio10 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO10_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO10_BF_MASK,GRG_GRG_INTMSK_GPIO10_BF_SHIFT))

/**
 * The Write Macro for Gpio10 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO10_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO10_BF_MASK,GRG_GRG_INTMSK_GPIO10_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio10 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO10_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO10_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio10 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO10_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO10_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio10 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO10_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO10_BF_MASK))
/**
 * The Get Macro for Gpio10 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO10_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO10_BF_MASK,GRG_GRG_INTMSK_GPIO10_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio10 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO10_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO10_BF_MASK,GRG_GRG_INTMSK_GPIO10_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio11 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio11 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO11_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO11_BF_MASK,GRG_GRG_INTMSK_GPIO11_BF_SHIFT))

/**
 * The Write Macro for Gpio11 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO11_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO11_BF_MASK,GRG_GRG_INTMSK_GPIO11_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio11 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO11_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO11_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio11 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO11_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO11_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio11 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO11_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO11_BF_MASK))
/**
 * The Get Macro for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO11_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO11_BF_MASK,GRG_GRG_INTMSK_GPIO11_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio11 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO11_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO11_BF_MASK,GRG_GRG_INTMSK_GPIO11_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio12 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio12 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO12_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO12_BF_MASK,GRG_GRG_INTMSK_GPIO12_BF_SHIFT))

/**
 * The Write Macro for Gpio12 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO12_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO12_BF_MASK,GRG_GRG_INTMSK_GPIO12_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio12 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO12_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO12_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio12 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO12_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO12_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio12 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO12_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO12_BF_MASK))
/**
 * The Get Macro for Gpio12 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO12_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO12_BF_MASK,GRG_GRG_INTMSK_GPIO12_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio12 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO12_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO12_BF_MASK,GRG_GRG_INTMSK_GPIO12_BF_SHIFT,(regValue),(bfValue)))



/******************************************************************************
 The Gpio13 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio13 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO13_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO13_BF_MASK,GRG_GRG_INTMSK_GPIO13_BF_SHIFT))

/**
 * The Write Macro for Gpio13 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO13_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO13_BF_MASK,GRG_GRG_INTMSK_GPIO13_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio13 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO13_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO13_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio13 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO13_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO13_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio13 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO13_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO13_BF_MASK))
/**
 * The Get Macro for Gpio13 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO13_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO13_BF_MASK,GRG_GRG_INTMSK_GPIO13_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio13 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO13_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO13_BF_MASK,GRG_GRG_INTMSK_GPIO13_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Gpio14 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio14 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO14_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO14_BF_MASK,GRG_GRG_INTMSK_GPIO14_BF_SHIFT))

/**
 * The Write Macro for Gpio14 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO14_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO14_BF_MASK,GRG_GRG_INTMSK_GPIO14_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio14 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO14_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO14_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio14 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO14_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO14_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio14 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO14_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO14_BF_MASK))
/**
 * The Get Macro for Gpio14 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO14_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO14_BF_MASK,GRG_GRG_INTMSK_GPIO14_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio14 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO14_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO14_BF_MASK,GRG_GRG_INTMSK_GPIO14_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Gpio15 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio15 in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_GPIO15_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO15_BF_MASK,GRG_GRG_INTMSK_GPIO15_BF_SHIFT))

/**
 * The Write Macro for Gpio15 in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_GPIO15_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO15_BF_MASK,GRG_GRG_INTMSK_GPIO15_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio15 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO15_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO15_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio15 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO15_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO15_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio15 in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_GPIO15_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_GPIO15_BF_MASK))
/**
 * The Get Macro for Gpio15 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO15_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_GPIO15_BF_MASK,GRG_GRG_INTMSK_GPIO15_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio15 in the IntMsk Register
 */
#define GRG_GRG_INTMSK_GPIO15_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_GPIO15_BF_MASK,GRG_GRG_INTMSK_GPIO15_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The ClmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ClmPllLock in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CLMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for ClmPllLock in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CLMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ClmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for ClmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for ClmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK))
/**
 * The Get Macro for ClmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CLMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ClmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CLMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_CLMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CLMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CrmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CrmPllLock in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CRMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for CrmPllLock in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CRMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CrmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for CrmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for CrmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK))
/**
 * The Get Macro for CrmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CRMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CrmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CRMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_CRMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CRMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtmPllLock in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CTMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for CtmPllLock in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CTMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for CtmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for CtmPllLock in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK))
/**
 * The Get Macro for CtmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CTMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtmPllLock in the IntMsk Register
 */
#define GRG_GRG_INTMSK_CTMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_CTMPLLLOCK_BF_MASK,GRG_GRG_INTMSK_CTMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CMdioDone ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CMdioDone in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK,GRG_GRG_INTMSK_I2CMDIODONE_BF_SHIFT))

/**
 * The Write Macro for I2CMdioDone in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK,GRG_GRG_INTMSK_I2CMDIODONE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CMdioDone in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK))

/**
 * The Read Modify Write Macro for I2CMdioDone in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CMdioDone in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK))
/**
 * The Get Macro for I2CMdioDone in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK,GRG_GRG_INTMSK_I2CMDIODONE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CMdioDone in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CMDIODONE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_I2CMDIODONE_BF_MASK,GRG_GRG_INTMSK_I2CMDIODONE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CFifoAlmostFull ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CFifoAlmostFull in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_SHIFT))

/**
 * The Write Macro for I2CFifoAlmostFull in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CFifoAlmostFull in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK))

/**
 * The Read Modify Write Macro for I2CFifoAlmostFull in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CFifoAlmostFull in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK))
/**
 * The Get Macro for I2CFifoAlmostFull in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CFifoAlmostFull in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTFULL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CFifoAlmostEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CFifoAlmostEmpty in the IntMsk Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_SHIFT))

/**
 * The Write Macro for I2CFifoAlmostEmpty in the IntMsk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CFifoAlmostEmpty in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for I2CFifoAlmostEmpty in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CFifoAlmostEmpty in the IntMsk Register
 * This does not do a shift.
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTMSK_REG_OFFSET,0,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK))
/**
 * The Get Macro for I2CFifoAlmostEmpty in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CFifoAlmostEmpty in the IntMsk Register
 */
#define GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTMSK_I2CFIFOALMOSTEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio0 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO0_BF_MASK,GRG_GRG_INTFLG_GPIO0_BF_SHIFT))

/**
 * The Write Macro for Gpio0 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO0_BF_MASK,GRG_GRG_INTFLG_GPIO0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio0 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO0_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio0 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO0_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio0 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO0_BF_MASK))
/**
 * The Get Macro for Gpio0 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO0_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO0_BF_MASK,GRG_GRG_INTFLG_GPIO0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio0 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO0_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO0_BF_MASK,GRG_GRG_INTFLG_GPIO0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio1 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO1_BF_MASK,GRG_GRG_INTFLG_GPIO1_BF_SHIFT))

/**
 * The Write Macro for Gpio1 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO1_BF_MASK,GRG_GRG_INTFLG_GPIO1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio1 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO1_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio1 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO1_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio1 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO1_BF_MASK))
/**
 * The Get Macro for Gpio1 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO1_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO1_BF_MASK,GRG_GRG_INTFLG_GPIO1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio1 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO1_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO1_BF_MASK,GRG_GRG_INTFLG_GPIO1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio2 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio2 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO2_BF_MASK,GRG_GRG_INTFLG_GPIO2_BF_SHIFT))

/**
 * The Write Macro for Gpio2 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO2_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO2_BF_MASK,GRG_GRG_INTFLG_GPIO2_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio2 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO2_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio2 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO2_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO2_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio2 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO2_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO2_BF_MASK))
/**
 * The Get Macro for Gpio2 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO2_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO2_BF_MASK,GRG_GRG_INTFLG_GPIO2_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio2 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO2_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO2_BF_MASK,GRG_GRG_INTFLG_GPIO2_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio3 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio3 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO3_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO3_BF_MASK,GRG_GRG_INTFLG_GPIO3_BF_SHIFT))

/**
 * The Write Macro for Gpio3 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO3_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO3_BF_MASK,GRG_GRG_INTFLG_GPIO3_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio3 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO3_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO3_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio3 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO3_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO3_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio3 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO3_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO3_BF_MASK))
/**
 * The Get Macro for Gpio3 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO3_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO3_BF_MASK,GRG_GRG_INTFLG_GPIO3_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio3 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO3_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO3_BF_MASK,GRG_GRG_INTFLG_GPIO3_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio4 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio4 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO4_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO4_BF_MASK,GRG_GRG_INTFLG_GPIO4_BF_SHIFT))

/**
 * The Write Macro for Gpio4 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO4_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO4_BF_MASK,GRG_GRG_INTFLG_GPIO4_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio4 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO4_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO4_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio4 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO4_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO4_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio4 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO4_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO4_BF_MASK))
/**
 * The Get Macro for Gpio4 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO4_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO4_BF_MASK,GRG_GRG_INTFLG_GPIO4_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio4 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO4_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO4_BF_MASK,GRG_GRG_INTFLG_GPIO4_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio5 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio5 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO5_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO5_BF_MASK,GRG_GRG_INTFLG_GPIO5_BF_SHIFT))

/**
 * The Write Macro for Gpio5 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO5_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO5_BF_MASK,GRG_GRG_INTFLG_GPIO5_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio5 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO5_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO5_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio5 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO5_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO5_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio5 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO5_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO5_BF_MASK))
/**
 * The Get Macro for Gpio5 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO5_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO5_BF_MASK,GRG_GRG_INTFLG_GPIO5_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio5 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO5_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO5_BF_MASK,GRG_GRG_INTFLG_GPIO5_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio6 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio6 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO6_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO6_BF_MASK,GRG_GRG_INTFLG_GPIO6_BF_SHIFT))

/**
 * The Write Macro for Gpio6 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO6_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO6_BF_MASK,GRG_GRG_INTFLG_GPIO6_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio6 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO6_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO6_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio6 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO6_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO6_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio6 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO6_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO6_BF_MASK))
/**
 * The Get Macro for Gpio6 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO6_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO6_BF_MASK,GRG_GRG_INTFLG_GPIO6_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio6 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO6_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO6_BF_MASK,GRG_GRG_INTFLG_GPIO6_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio7 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio7 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO7_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO7_BF_MASK,GRG_GRG_INTFLG_GPIO7_BF_SHIFT))

/**
 * The Write Macro for Gpio7 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO7_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO7_BF_MASK,GRG_GRG_INTFLG_GPIO7_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio7 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO7_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO7_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio7 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO7_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO7_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio7 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO7_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO7_BF_MASK))
/**
 * The Get Macro for Gpio7 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO7_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO7_BF_MASK,GRG_GRG_INTFLG_GPIO7_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio7 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO7_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO7_BF_MASK,GRG_GRG_INTFLG_GPIO7_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio8 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio8 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO8_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO8_BF_MASK,GRG_GRG_INTFLG_GPIO8_BF_SHIFT))

/**
 * The Write Macro for Gpio8 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO8_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO8_BF_MASK,GRG_GRG_INTFLG_GPIO8_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio8 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO8_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO8_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio8 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO8_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO8_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio8 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO8_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO8_BF_MASK))
/**
 * The Get Macro for Gpio8 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO8_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO8_BF_MASK,GRG_GRG_INTFLG_GPIO8_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio8 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO8_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO8_BF_MASK,GRG_GRG_INTFLG_GPIO8_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio9 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio9 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO9_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO9_BF_MASK,GRG_GRG_INTFLG_GPIO9_BF_SHIFT))

/**
 * The Write Macro for Gpio9 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO9_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO9_BF_MASK,GRG_GRG_INTFLG_GPIO9_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio9 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO9_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO9_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio9 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO9_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO9_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio9 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO9_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO9_BF_MASK))
/**
 * The Get Macro for Gpio9 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO9_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO9_BF_MASK,GRG_GRG_INTFLG_GPIO9_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio9 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO9_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO9_BF_MASK,GRG_GRG_INTFLG_GPIO9_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio10 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio10 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO10_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO10_BF_MASK,GRG_GRG_INTFLG_GPIO10_BF_SHIFT))

/**
 * The Write Macro for Gpio10 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO10_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO10_BF_MASK,GRG_GRG_INTFLG_GPIO10_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio10 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO10_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO10_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio10 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO10_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO10_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio10 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO10_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO10_BF_MASK))
/**
 * The Get Macro for Gpio10 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO10_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO10_BF_MASK,GRG_GRG_INTFLG_GPIO10_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio10 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO10_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO10_BF_MASK,GRG_GRG_INTFLG_GPIO10_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio11 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio11 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO11_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO11_BF_MASK,GRG_GRG_INTFLG_GPIO11_BF_SHIFT))

/**
 * The Write Macro for Gpio11 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO11_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO11_BF_MASK,GRG_GRG_INTFLG_GPIO11_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio11 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO11_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO11_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio11 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO11_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO11_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio11 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO11_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO11_BF_MASK))
/**
 * The Get Macro for Gpio11 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO11_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO11_BF_MASK,GRG_GRG_INTFLG_GPIO11_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio11 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO11_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO11_BF_MASK,GRG_GRG_INTFLG_GPIO11_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio12 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio12 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO12_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO12_BF_MASK,GRG_GRG_INTFLG_GPIO12_BF_SHIFT))

/**
 * The Write Macro for Gpio12 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO12_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO12_BF_MASK,GRG_GRG_INTFLG_GPIO12_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio12 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO12_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO12_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio12 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO12_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO12_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio12 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO12_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO12_BF_MASK))
/**
 * The Get Macro for Gpio12 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO12_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO12_BF_MASK,GRG_GRG_INTFLG_GPIO12_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio12 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO12_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO12_BF_MASK,GRG_GRG_INTFLG_GPIO12_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Gpio13 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio13 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO13_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO13_BF_MASK,GRG_GRG_INTFLG_GPIO13_BF_SHIFT))

/**
 * The Write Macro for Gpio13 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO13_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO13_BF_MASK,GRG_GRG_INTFLG_GPIO13_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio13 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO13_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO13_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio13 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO13_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO13_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio13 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO13_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO13_BF_MASK))
/**
 * The Get Macro for Gpio13 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO13_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO13_BF_MASK,GRG_GRG_INTFLG_GPIO13_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio13 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO13_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO13_BF_MASK,GRG_GRG_INTFLG_GPIO13_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio14 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio14 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO14_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO14_BF_MASK,GRG_GRG_INTFLG_GPIO14_BF_SHIFT))

/**
 * The Write Macro for Gpio14 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO14_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO14_BF_MASK,GRG_GRG_INTFLG_GPIO14_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio14 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO14_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO14_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio14 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO14_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO14_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio14 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO14_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO14_BF_MASK))
/**
 * The Get Macro for Gpio14 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO14_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO14_BF_MASK,GRG_GRG_INTFLG_GPIO14_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio14 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO14_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO14_BF_MASK,GRG_GRG_INTFLG_GPIO14_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gpio15 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gpio15 in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_GPIO15_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO15_BF_MASK,GRG_GRG_INTFLG_GPIO15_BF_SHIFT))

/**
 * The Write Macro for Gpio15 in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_GPIO15_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO15_BF_MASK,GRG_GRG_INTFLG_GPIO15_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gpio15 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO15_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO15_BF_MASK))

/**
 * The Read Modify Write Macro for Gpio15 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO15_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO15_BF_MASK,(value)))

/**
 * The Toggle Macro for Gpio15 in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_GPIO15_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_GPIO15_BF_MASK))
/**
 * The Get Macro for Gpio15 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO15_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_GPIO15_BF_MASK,GRG_GRG_INTFLG_GPIO15_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gpio15 in the IntFlg Register
 */
#define GRG_GRG_INTFLG_GPIO15_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_GPIO15_BF_MASK,GRG_GRG_INTFLG_GPIO15_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ClmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ClmPllLock in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CLMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for ClmPllLock in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CLMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ClmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for ClmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for ClmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK))
/**
 * The Get Macro for ClmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CLMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ClmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CLMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_CLMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CLMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CrmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CrmPllLock in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CRMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for CrmPllLock in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CRMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CrmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for CrmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for CrmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK))
/**
 * The Get Macro for CrmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CRMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CrmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CRMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_CRMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CRMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtmPllLock ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtmPllLock in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CTMPLLLOCK_BF_SHIFT))

/**
 * The Write Macro for CtmPllLock in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CTMPLLLOCK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK))

/**
 * The Read Modify Write Macro for CtmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK,(value)))

/**
 * The Toggle Macro for CtmPllLock in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK))
/**
 * The Get Macro for CtmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CTMPLLLOCK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtmPllLock in the IntFlg Register
 */
#define GRG_GRG_INTFLG_CTMPLLLOCK_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_CTMPLLLOCK_BF_MASK,GRG_GRG_INTFLG_CTMPLLLOCK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CMdioDone ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CMdioDone in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK,GRG_GRG_INTFLG_I2CMDIODONE_BF_SHIFT))

/**
 * The Write Macro for I2CMdioDone in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK,GRG_GRG_INTFLG_I2CMDIODONE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CMdioDone in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK))

/**
 * The Read Modify Write Macro for I2CMdioDone in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CMdioDone in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK))
/**
 * The Get Macro for I2CMdioDone in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK,GRG_GRG_INTFLG_I2CMDIODONE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CMdioDone in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CMDIODONE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_I2CMDIODONE_BF_MASK,GRG_GRG_INTFLG_I2CMDIODONE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CFifoAlmostFull ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CFifoAlmostFull in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_SHIFT))

/**
 * The Write Macro for I2CFifoAlmostFull in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CFifoAlmostFull in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK))

/**
 * The Read Modify Write Macro for I2CFifoAlmostFull in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CFifoAlmostFull in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK))
/**
 * The Get Macro for I2CFifoAlmostFull in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CFifoAlmostFull in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTFULL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2CFifoAlmostEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2CFifoAlmostEmpty in the IntFlg Register
 * This does a mask and shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_SHIFT))

/**
 * The Write Macro for I2CFifoAlmostEmpty in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2CFifoAlmostEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for I2CFifoAlmostEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for I2CFifoAlmostEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_INTFLG_REG_OFFSET,0,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK))
/**
 * The Get Macro for I2CFifoAlmostEmpty in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_GET_BF(regValue) \
	(GET_BF(GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2CFifoAlmostEmpty in the IntFlg Register
 */
#define GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_MASK,GRG_GRG_INTFLG_I2CFIFOALMOSTEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The VPortId ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for VPortId in the ConfigMode Register
 * This does a mask and shift.
 */
#define GRG_GRG_CONFIGMODE_VPORTID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VPORTID_BF_MASK,GRG_GRG_CONFIGMODE_VPORTID_BF_SHIFT))

/**
 * The Write Macro for VPortId in the ConfigMode Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_CONFIGMODE_VPORTID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VPORTID_BF_MASK,GRG_GRG_CONFIGMODE_VPORTID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for VPortId in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_VPORTID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VPORTID_BF_MASK))

/**
 * The Read Modify Write Macro for VPortId in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_VPORTID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VPORTID_BF_MASK,(value)))

/**
 * The Toggle Macro for VPortId in the ConfigMode Register
 * This does not do a shift.
 */
#define GRG_GRG_CONFIGMODE_VPORTID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_CONFIGMODE_REG_OFFSET,0,GRG_GRG_CONFIGMODE_VPORTID_BF_MASK))
/**
 * The Get Macro for VPortId in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VPORTID_GET_BF(regValue) \
	(GET_BF(GRG_GRG_CONFIGMODE_VPORTID_BF_MASK,GRG_GRG_CONFIGMODE_VPORTID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for VPortId in the ConfigMode Register
 */
#define GRG_GRG_CONFIGMODE_VPORTID_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_CONFIGMODE_VPORTID_BF_MASK,GRG_GRG_CONFIGMODE_VPORTID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XusbEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XusbEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_XUSBEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBEN_BF_MASK,GRG_GRG_MODRST_XUSBEN_BF_SHIFT))

/**
 * The Write Macro for XusbEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_XUSBEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBEN_BF_MASK,GRG_GRG_MODRST_XUSBEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XusbEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBEN_BF_MASK))

/**
 * The Read Modify Write Macro for XusbEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XusbEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBEN_BF_MASK))
/**
 * The Get Macro for XusbEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_XUSBEN_BF_MASK,GRG_GRG_MODRST_XUSBEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XusbEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_XUSBEN_BF_MASK,GRG_GRG_MODRST_XUSBEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XusbCoreEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XusbCoreEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_XUSBCOREEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBCOREEN_BF_MASK,GRG_GRG_MODRST_XUSBCOREEN_BF_SHIFT))

/**
 * The Write Macro for XusbCoreEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_XUSBCOREEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBCOREEN_BF_MASK,GRG_GRG_MODRST_XUSBCOREEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XusbCoreEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBCOREEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBCOREEN_BF_MASK))

/**
 * The Read Modify Write Macro for XusbCoreEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBCOREEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBCOREEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XusbCoreEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XUSBCOREEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XUSBCOREEN_BF_MASK))
/**
 * The Get Macro for XusbCoreEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBCOREEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_XUSBCOREEN_BF_MASK,GRG_GRG_MODRST_XUSBCOREEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XusbCoreEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XUSBCOREEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_XUSBCOREEN_BF_MASK,GRG_GRG_MODRST_XUSBCOREEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XcrmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XcrmEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_XCRMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCRMEN_BF_MASK,GRG_GRG_MODRST_XCRMEN_BF_SHIFT))

/**
 * The Write Macro for XcrmEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_XCRMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCRMEN_BF_MASK,GRG_GRG_MODRST_XCRMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XcrmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCRMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCRMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XcrmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCRMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCRMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XcrmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCRMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCRMEN_BF_MASK))
/**
 * The Get Macro for XcrmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCRMEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_XCRMEN_BF_MASK,GRG_GRG_MODRST_XCRMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XcrmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCRMEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_XCRMEN_BF_MASK,GRG_GRG_MODRST_XCRMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XctmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XctmEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_XCTMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCTMEN_BF_MASK,GRG_GRG_MODRST_XCTMEN_BF_SHIFT))

/**
 * The Write Macro for XctmEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_XCTMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCTMEN_BF_MASK,GRG_GRG_MODRST_XCTMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XctmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCTMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCTMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XctmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCTMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCTMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XctmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_XCTMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_XCTMEN_BF_MASK))
/**
 * The Get Macro for XctmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCTMEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_XCTMEN_BF_MASK,GRG_GRG_MODRST_XCTMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XctmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_XCTMEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_XCTMEN_BF_MASK,GRG_GRG_MODRST_XCTMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CrmPhyEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CrmPhyEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_CRMPHYEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CRMPHYEN_BF_MASK,GRG_GRG_MODRST_CRMPHYEN_BF_SHIFT))

/**
 * The Write Macro for CrmPhyEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_CRMPHYEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CRMPHYEN_BF_MASK,GRG_GRG_MODRST_CRMPHYEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CrmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CRMPHYEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CRMPHYEN_BF_MASK))

/**
 * The Read Modify Write Macro for CrmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CRMPHYEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CRMPHYEN_BF_MASK,(value)))

/**
 * The Toggle Macro for CrmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CRMPHYEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CRMPHYEN_BF_MASK))
/**
 * The Get Macro for CrmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CRMPHYEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_CRMPHYEN_BF_MASK,GRG_GRG_MODRST_CRMPHYEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CrmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CRMPHYEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_CRMPHYEN_BF_MASK,GRG_GRG_MODRST_CRMPHYEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtmPhyEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtmPhyEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_CTMPHYEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CTMPHYEN_BF_MASK,GRG_GRG_MODRST_CTMPHYEN_BF_SHIFT))

/**
 * The Write Macro for CtmPhyEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_CTMPHYEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CTMPHYEN_BF_MASK,GRG_GRG_MODRST_CTMPHYEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CTMPHYEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CTMPHYEN_BF_MASK))

/**
 * The Read Modify Write Macro for CtmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CTMPHYEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CTMPHYEN_BF_MASK,(value)))

/**
 * The Toggle Macro for CtmPhyEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CTMPHYEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CTMPHYEN_BF_MASK))
/**
 * The Get Macro for CtmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CTMPHYEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_CTMPHYEN_BF_MASK,GRG_GRG_MODRST_CTMPHYEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtmPhyEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CTMPHYEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_CTMPHYEN_BF_MASK,GRG_GRG_MODRST_CTMPHYEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ClmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ClmEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_CLMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CLMEN_BF_MASK,GRG_GRG_MODRST_CLMEN_BF_SHIFT))

/**
 * The Write Macro for ClmEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_CLMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CLMEN_BF_MASK,GRG_GRG_MODRST_CLMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ClmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CLMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CLMEN_BF_MASK))

/**
 * The Read Modify Write Macro for ClmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CLMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CLMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for ClmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_CLMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_CLMEN_BF_MASK))
/**
 * The Get Macro for ClmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CLMEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_CLMEN_BF_MASK,GRG_GRG_MODRST_CLMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ClmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_CLMEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_CLMEN_BF_MASK,GRG_GRG_MODRST_CLMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The UlmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for UlmEn in the ModRst Register
 * This does a mask and shift.
 */
#define GRG_GRG_MODRST_ULMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_ULMEN_BF_MASK,GRG_GRG_MODRST_ULMEN_BF_SHIFT))

/**
 * The Write Macro for UlmEn in the ModRst Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GRG_MODRST_ULMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_ULMEN_BF_MASK,GRG_GRG_MODRST_ULMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for UlmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_ULMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_ULMEN_BF_MASK))

/**
 * The Read Modify Write Macro for UlmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_ULMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_ULMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for UlmEn in the ModRst Register
 * This does not do a shift.
 */
#define GRG_GRG_MODRST_ULMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GRG_MODRST_REG_OFFSET,0,GRG_GRG_MODRST_ULMEN_BF_MASK))
/**
 * The Get Macro for UlmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_ULMEN_GET_BF(regValue) \
	(GET_BF(GRG_GRG_MODRST_ULMEN_BF_MASK,GRG_GRG_MODRST_ULMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for UlmEn in the ModRst Register
 */
#define GRG_GRG_MODRST_ULMEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GRG_MODRST_ULMEN_BF_MASK,GRG_GRG_MODRST_ULMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Dir ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Dir in the Dir Register
 * This does a mask and shift.
 */
#define GRG_GPIO_DIR_DIR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,GRG_GPIO_DIR_DIR_BF_MASK,GRG_GPIO_DIR_DIR_BF_SHIFT))

/**
 * The Write Macro for Dir in the Dir Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GPIO_DIR_DIR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,GRG_GPIO_DIR_DIR_BF_MASK,GRG_GPIO_DIR_DIR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Dir in the Dir Register
 * This does not do a shift.
 */
#define GRG_GPIO_DIR_DIR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,GRG_GPIO_DIR_DIR_BF_MASK))

/**
 * The Read Modify Write Macro for Dir in the Dir Register
 * This does not do a shift.
 */
#define GRG_GPIO_DIR_DIR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,GRG_GPIO_DIR_DIR_BF_MASK,(value)))

/**
 * The Toggle Macro for Dir in the Dir Register
 * This does not do a shift.
 */
#define GRG_GPIO_DIR_DIR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GPIO_DIR_REG_OFFSET,0,GRG_GPIO_DIR_DIR_BF_MASK))
/**
 * The Get Macro for Dir in the Dir Register
 */
#define GRG_GPIO_DIR_DIR_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_DIR_DIR_BF_MASK,GRG_GPIO_DIR_DIR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Dir in the Dir Register
 */
#define GRG_GPIO_DIR_DIR_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GPIO_DIR_DIR_BF_MASK,GRG_GPIO_DIR_DIR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Out ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Out in the Out Register
 * This does a mask and shift.
 */
#define GRG_GPIO_OUT_OUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,GRG_GPIO_OUT_OUT_BF_MASK,GRG_GPIO_OUT_OUT_BF_SHIFT))

/**
 * The Write Macro for Out in the Out Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_GPIO_OUT_OUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,GRG_GPIO_OUT_OUT_BF_MASK,GRG_GPIO_OUT_OUT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Out in the Out Register
 * This does not do a shift.
 */
#define GRG_GPIO_OUT_OUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,GRG_GPIO_OUT_OUT_BF_MASK))

/**
 * The Read Modify Write Macro for Out in the Out Register
 * This does not do a shift.
 */
#define GRG_GPIO_OUT_OUT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,GRG_GPIO_OUT_OUT_BF_MASK,(value)))

/**
 * The Toggle Macro for Out in the Out Register
 * This does not do a shift.
 */
#define GRG_GPIO_OUT_OUT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_GPIO_OUT_REG_OFFSET,0,GRG_GPIO_OUT_OUT_BF_MASK))
/**
 * The Get Macro for Out in the Out Register
 */
#define GRG_GPIO_OUT_OUT_GET_BF(regValue) \
	(GET_BF(GRG_GPIO_OUT_OUT_BF_MASK,GRG_GPIO_OUT_OUT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Out in the Out Register
 */
#define GRG_GPIO_OUT_OUT_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_GPIO_OUT_OUT_BF_MASK,GRG_GPIO_OUT_OUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The I2cMdioSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for I2cMdioSel in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_SHIFT))

/**
 * The Write Macro for I2cMdioSel in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for I2cMdioSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK))

/**
 * The Read Modify Write Macro for I2cMdioSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for I2cMdioSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK))
/**
 * The Get Macro for I2cMdioSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for I2cMdioSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_I2CMDIOSEL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_MASK,GRG_I2CMDIO_CONTROL_I2CMDIOSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The AccessMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for AccessMode in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_SHIFT))

/**
 * The Write Macro for AccessMode in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for AccessMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK))

/**
 * The Read Modify Write Macro for AccessMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for AccessMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK))
/**
 * The Get Macro for AccessMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for AccessMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_ACCESSMODE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_MASK,GRG_I2CMDIO_CONTROL_ACCESSMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The IndirectMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for IndirectMode in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_SHIFT))

/**
 * The Write Macro for IndirectMode in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for IndirectMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK))

/**
 * The Read Modify Write Macro for IndirectMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for IndirectMode in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK))
/**
 * The Get Macro for IndirectMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for IndirectMode in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_INDIRECTMODE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_MASK,GRG_I2CMDIO_CONTROL_INDIRECTMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Clear ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Clear in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK,GRG_I2CMDIO_CONTROL_CLEAR_BF_SHIFT))

/**
 * The Write Macro for Clear in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK,GRG_I2CMDIO_CONTROL_CLEAR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK))

/**
 * The Read Modify Write Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK,(value)))

/**
 * The Toggle Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK))
/**
 * The Get Macro for Clear in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK,GRG_I2CMDIO_CONTROL_CLEAR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Clear in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_CLEAR_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_CLEAR_BF_MASK,GRG_I2CMDIO_CONTROL_CLEAR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RdBytesRegAddr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RdBytesRegAddr in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_SHIFT))

/**
 * The Write Macro for RdBytesRegAddr in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RdBytesRegAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK))

/**
 * The Read Modify Write Macro for RdBytesRegAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK,(value)))

/**
 * The Toggle Macro for RdBytesRegAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK))
/**
 * The Get Macro for RdBytesRegAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RdBytesRegAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_MASK,GRG_I2CMDIO_CONTROL_RDBYTESREGADDR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyAddr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyAddr in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK,GRG_I2CMDIO_CONTROL_PHYADDR_BF_SHIFT))

/**
 * The Write Macro for PhyAddr in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK,GRG_I2CMDIO_CONTROL_PHYADDR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK))

/**
 * The Read Modify Write Macro for PhyAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyAddr in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK))
/**
 * The Get Macro for PhyAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK,GRG_I2CMDIO_CONTROL_PHYADDR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyAddr in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PHYADDR_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_PHYADDR_BF_MASK,GRG_I2CMDIO_CONTROL_PHYADDR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SpeedSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SpeedSel in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_SHIFT))

/**
 * The Write Macro for SpeedSel in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SpeedSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK))

/**
 * The Read Modify Write Macro for SpeedSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for SpeedSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK))
/**
 * The Get Macro for SpeedSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SpeedSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_SPEEDSEL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_MASK,GRG_I2CMDIO_CONTROL_SPEEDSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PortSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PortSel in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK,GRG_I2CMDIO_CONTROL_PORTSEL_BF_SHIFT))

/**
 * The Write Macro for PortSel in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK,GRG_I2CMDIO_CONTROL_PORTSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PortSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK))

/**
 * The Read Modify Write Macro for PortSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for PortSel in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK))
/**
 * The Get Macro for PortSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK,GRG_I2CMDIO_CONTROL_PORTSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PortSel in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_PORTSEL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_PORTSEL_BF_MASK,GRG_I2CMDIO_CONTROL_PORTSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ForceSDAn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ForceSDAn in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_SHIFT))

/**
 * The Write Macro for ForceSDAn in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ForceSDAn in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK))

/**
 * The Read Modify Write Macro for ForceSDAn in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK,(value)))

/**
 * The Toggle Macro for ForceSDAn in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK))
/**
 * The Get Macro for ForceSDAn in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ForceSDAn in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_FORCESDAN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_FORCESDAN_BF_MASK,GRG_I2CMDIO_CONTROL_FORCESDAN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ClmReset ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ClmReset in the PllConfig Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CLMRESET_BF_SHIFT))

/**
 * The Write Macro for ClmReset in the PllConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CLMRESET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ClmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK))

/**
 * The Read Modify Write Macro for ClmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK,(value)))

/**
 * The Toggle Macro for ClmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK))
/**
 * The Get Macro for ClmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CLMRESET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ClmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CLMRESET_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG_CLMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CLMRESET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CrmReset ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CrmReset in the PllConfig Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CRMRESET_BF_SHIFT))

/**
 * The Write Macro for CrmReset in the PllConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CRMRESET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CrmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK))

/**
 * The Read Modify Write Macro for CrmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK,(value)))

/**
 * The Toggle Macro for CrmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK))
/**
 * The Get Macro for CrmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CRMRESET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CrmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CRMRESET_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG_CRMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CRMRESET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtmClkSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtmClkSel in the PllConfig Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_SHIFT))

/**
 * The Write Macro for CtmClkSel in the PllConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtmClkSel in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK))

/**
 * The Read Modify Write Macro for CtmClkSel in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for CtmClkSel in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK))
/**
 * The Get Macro for CtmClkSel in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtmClkSel in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMCLKSEL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_MASK,GRG_PLL_PLLCONFIG_CTMCLKSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtmReset ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtmReset in the PllConfig Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CTMRESET_BF_SHIFT))

/**
 * The Write Macro for CtmReset in the PllConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CTMRESET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK))

/**
 * The Read Modify Write Macro for CtmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK,(value)))

/**
 * The Toggle Macro for CtmReset in the PllConfig Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG_REG_OFFSET,0,GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK))
/**
 * The Get Macro for CtmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CTMRESET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtmReset in the PllConfig Register
 */
#define GRG_PLL_PLLCONFIG_CTMRESET_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG_CTMRESET_BF_MASK,GRG_PLL_PLLCONFIG_CTMRESET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Clear ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Clear in the FreqTest Register
 * This does a mask and shift.
 */
#define GRG_PLL_FREQTEST_CLEAR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CLEAR_BF_MASK,GRG_PLL_FREQTEST_CLEAR_BF_SHIFT))

/**
 * The Write Macro for Clear in the FreqTest Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_FREQTEST_CLEAR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CLEAR_BF_MASK,GRG_PLL_FREQTEST_CLEAR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_CLEAR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CLEAR_BF_MASK))

/**
 * The Read Modify Write Macro for Clear in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_CLEAR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CLEAR_BF_MASK,(value)))

/**
 * The Toggle Macro for Clear in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_CLEAR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_CLEAR_BF_MASK))
/**
 * The Get Macro for Clear in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CLEAR_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_CLEAR_BF_MASK,GRG_PLL_FREQTEST_CLEAR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Clear in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_CLEAR_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_FREQTEST_CLEAR_BF_MASK,GRG_PLL_FREQTEST_CLEAR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Select ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Select in the FreqTest Register
 * This does a mask and shift.
 */
#define GRG_PLL_FREQTEST_SELECT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_SELECT_BF_MASK,GRG_PLL_FREQTEST_SELECT_BF_SHIFT))

/**
 * The Write Macro for Select in the FreqTest Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_FREQTEST_SELECT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_SELECT_BF_MASK,GRG_PLL_FREQTEST_SELECT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Select in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_SELECT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_SELECT_BF_MASK))

/**
 * The Read Modify Write Macro for Select in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_SELECT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_SELECT_BF_MASK,(value)))

/**
 * The Toggle Macro for Select in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_SELECT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_SELECT_BF_MASK))
/**
 * The Get Macro for Select in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_SELECT_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_SELECT_BF_MASK,GRG_PLL_FREQTEST_SELECT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Select in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_SELECT_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_FREQTEST_SELECT_BF_MASK,GRG_PLL_FREQTEST_SELECT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wdata ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wdata in the Wdata Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_WDATA_WDATA_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,GRG_I2CMDIO_WDATA_WDATA_BF_MASK,GRG_I2CMDIO_WDATA_WDATA_BF_SHIFT))

/**
 * The Write Macro for Wdata in the Wdata Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_WDATA_WDATA_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,GRG_I2CMDIO_WDATA_WDATA_BF_MASK,GRG_I2CMDIO_WDATA_WDATA_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wdata in the Wdata Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_WDATA_WDATA_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,GRG_I2CMDIO_WDATA_WDATA_BF_MASK))

/**
 * The Read Modify Write Macro for Wdata in the Wdata Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_WDATA_WDATA_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,GRG_I2CMDIO_WDATA_WDATA_BF_MASK,(value)))

/**
 * The Toggle Macro for Wdata in the Wdata Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_WDATA_WDATA_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_WDATA_REG_OFFSET,0,GRG_I2CMDIO_WDATA_WDATA_BF_MASK))
/**
 * The Get Macro for Wdata in the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_WDATA_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_WDATA_WDATA_BF_MASK,GRG_I2CMDIO_WDATA_WDATA_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wdata in the Wdata Register
 */
#define GRG_I2CMDIO_WDATA_WDATA_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_WDATA_WDATA_BF_MASK,GRG_I2CMDIO_WDATA_WDATA_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the Control Register
 * This does a mask and shift.
 */
#define GRG_I2CMDIO_CONTROL_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_GO_BF_MASK,GRG_I2CMDIO_CONTROL_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_I2CMDIO_CONTROL_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_GO_BF_MASK,GRG_I2CMDIO_CONTROL_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the Control Register
 * This does not do a shift.
 */
#define GRG_I2CMDIO_CONTROL_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_I2CMDIO_CONTROL_REG_OFFSET,0,GRG_I2CMDIO_CONTROL_GO_BF_MASK))
/**
 * The Get Macro for Go in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_GO_GET_BF(regValue) \
	(GET_BF(GRG_I2CMDIO_CONTROL_GO_BF_MASK,GRG_I2CMDIO_CONTROL_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the Control Register
 */
#define GRG_I2CMDIO_CONTROL_GO_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_I2CMDIO_CONTROL_GO_BF_MASK,GRG_I2CMDIO_CONTROL_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gen ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gen in the PllConfig2 Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG2_GEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,GRG_PLL_PLLCONFIG2_GEN_BF_MASK,GRG_PLL_PLLCONFIG2_GEN_BF_SHIFT))

/**
 * The Write Macro for Gen in the PllConfig2 Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG2_GEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,GRG_PLL_PLLCONFIG2_GEN_BF_MASK,GRG_PLL_PLLCONFIG2_GEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gen in the PllConfig2 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG2_GEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,GRG_PLL_PLLCONFIG2_GEN_BF_MASK))

/**
 * The Read Modify Write Macro for Gen in the PllConfig2 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG2_GEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,GRG_PLL_PLLCONFIG2_GEN_BF_MASK,(value)))

/**
 * The Toggle Macro for Gen in the PllConfig2 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG2_GEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG2_REG_OFFSET,0,GRG_PLL_PLLCONFIG2_GEN_BF_MASK))
/**
 * The Get Macro for Gen in the PllConfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_GEN_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG2_GEN_BF_MASK,GRG_PLL_PLLCONFIG2_GEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gen in the PllConfig2 Register
 */
#define GRG_PLL_PLLCONFIG2_GEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG2_GEN_BF_MASK,GRG_PLL_PLLCONFIG2_GEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gen ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gen in the PllConfig3 Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG3_GEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,GRG_PLL_PLLCONFIG3_GEN_BF_MASK,GRG_PLL_PLLCONFIG3_GEN_BF_SHIFT))

/**
 * The Write Macro for Gen in the PllConfig3 Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG3_GEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,GRG_PLL_PLLCONFIG3_GEN_BF_MASK,GRG_PLL_PLLCONFIG3_GEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gen in the PllConfig3 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG3_GEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,GRG_PLL_PLLCONFIG3_GEN_BF_MASK))

/**
 * The Read Modify Write Macro for Gen in the PllConfig3 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG3_GEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,GRG_PLL_PLLCONFIG3_GEN_BF_MASK,(value)))

/**
 * The Toggle Macro for Gen in the PllConfig3 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG3_GEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG3_REG_OFFSET,0,GRG_PLL_PLLCONFIG3_GEN_BF_MASK))
/**
 * The Get Macro for Gen in the PllConfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_GEN_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG3_GEN_BF_MASK,GRG_PLL_PLLCONFIG3_GEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gen in the PllConfig3 Register
 */
#define GRG_PLL_PLLCONFIG3_GEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG3_GEN_BF_MASK,GRG_PLL_PLLCONFIG3_GEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the FreqTest Register
 * This does a mask and shift.
 */
#define GRG_PLL_FREQTEST_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_GO_BF_MASK,GRG_PLL_FREQTEST_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the FreqTest Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_FREQTEST_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_GO_BF_MASK,GRG_PLL_FREQTEST_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_GO_BF_MASK))
/**
 * The Get Macro for Go in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_GO_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_GO_BF_MASK,GRG_PLL_FREQTEST_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_GO_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_FREQTEST_GO_BF_MASK,GRG_PLL_FREQTEST_GO_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Reset ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Reset in the FreqTest Register
 * This does a mask and shift.
 */
#define GRG_PLL_FREQTEST_RESET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_RESET_BF_MASK,GRG_PLL_FREQTEST_RESET_BF_SHIFT))

/**
 * The Write Macro for Reset in the FreqTest Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_FREQTEST_RESET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_RESET_BF_MASK,GRG_PLL_FREQTEST_RESET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Reset in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_RESET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_RESET_BF_MASK))

/**
 * The Read Modify Write Macro for Reset in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_RESET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_RESET_BF_MASK,(value)))

/**
 * The Toggle Macro for Reset in the FreqTest Register
 * This does not do a shift.
 */
#define GRG_PLL_FREQTEST_RESET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_FREQTEST_REG_OFFSET,0,GRG_PLL_FREQTEST_RESET_BF_MASK))
/**
 * The Get Macro for Reset in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_RESET_GET_BF(regValue) \
	(GET_BF(GRG_PLL_FREQTEST_RESET_BF_MASK,GRG_PLL_FREQTEST_RESET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Reset in the FreqTest Register
 */
#define GRG_PLL_FREQTEST_RESET_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_FREQTEST_RESET_BF_MASK,GRG_PLL_FREQTEST_RESET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Gen ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Gen in the PllConfig4 Register
 * This does a mask and shift.
 */
#define GRG_PLL_PLLCONFIG4_GEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,GRG_PLL_PLLCONFIG4_GEN_BF_MASK,GRG_PLL_PLLCONFIG4_GEN_BF_SHIFT))

/**
 * The Write Macro for Gen in the PllConfig4 Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_PLL_PLLCONFIG4_GEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,GRG_PLL_PLLCONFIG4_GEN_BF_MASK,GRG_PLL_PLLCONFIG4_GEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Gen in the PllConfig4 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG4_GEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,GRG_PLL_PLLCONFIG4_GEN_BF_MASK))

/**
 * The Read Modify Write Macro for Gen in the PllConfig4 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG4_GEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,GRG_PLL_PLLCONFIG4_GEN_BF_MASK,(value)))

/**
 * The Toggle Macro for Gen in the PllConfig4 Register
 * This does not do a shift.
 */
#define GRG_PLL_PLLCONFIG4_GEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_PLL_PLLCONFIG4_REG_OFFSET,0,GRG_PLL_PLLCONFIG4_GEN_BF_MASK))
/**
 * The Get Macro for Gen in the PllConfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_GEN_GET_BF(regValue) \
	(GET_BF(GRG_PLL_PLLCONFIG4_GEN_BF_MASK,GRG_PLL_PLLCONFIG4_GEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Gen in the PllConfig4 Register
 */
#define GRG_PLL_PLLCONFIG4_GEN_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_PLL_PLLCONFIG4_GEN_BF_MASK,GRG_PLL_PLLCONFIG4_GEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Drive ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Drive in the GpioDrive Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK,GRG_IOCFG_GPIODRIVE_DRIVE_BF_SHIFT))

/**
 * The Write Macro for Drive in the GpioDrive Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK,GRG_IOCFG_GPIODRIVE_DRIVE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Drive in the GpioDrive Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK))

/**
 * The Read Modify Write Macro for Drive in the GpioDrive Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK,(value)))

/**
 * The Toggle Macro for Drive in the GpioDrive Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_GPIODRIVE_REG_OFFSET,0,GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK))
/**
 * The Get Macro for Drive in the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK,GRG_IOCFG_GPIODRIVE_DRIVE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Drive in the GpioDrive Register
 */
#define GRG_IOCFG_GPIODRIVE_DRIVE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_GPIODRIVE_DRIVE_BF_MASK,GRG_IOCFG_GPIODRIVE_DRIVE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Pull ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Pull in the GpioPull Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_GPIOPULL_PULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,GRG_IOCFG_GPIOPULL_PULL_BF_MASK,GRG_IOCFG_GPIOPULL_PULL_BF_SHIFT))

/**
 * The Write Macro for Pull in the GpioPull Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_GPIOPULL_PULL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,GRG_IOCFG_GPIOPULL_PULL_BF_MASK,GRG_IOCFG_GPIOPULL_PULL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Pull in the GpioPull Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOPULL_PULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,GRG_IOCFG_GPIOPULL_PULL_BF_MASK))

/**
 * The Read Modify Write Macro for Pull in the GpioPull Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOPULL_PULL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,GRG_IOCFG_GPIOPULL_PULL_BF_MASK,(value)))

/**
 * The Toggle Macro for Pull in the GpioPull Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOPULL_PULL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_GPIOPULL_REG_OFFSET,0,GRG_IOCFG_GPIOPULL_PULL_BF_MASK))
/**
 * The Get Macro for Pull in the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_PULL_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_GPIOPULL_PULL_BF_MASK,GRG_IOCFG_GPIOPULL_PULL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Pull in the GpioPull Register
 */
#define GRG_IOCFG_GPIOPULL_PULL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_GPIOPULL_PULL_BF_MASK,GRG_IOCFG_GPIOPULL_PULL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Schmitt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Schmitt in the GpioSchmittSlew Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_SHIFT))

/**
 * The Write Macro for Schmitt in the GpioSchmittSlew Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Schmitt in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK))

/**
 * The Read Modify Write Macro for Schmitt in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK,(value)))

/**
 * The Toggle Macro for Schmitt in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK))
/**
 * The Get Macro for Schmitt in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Schmitt in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SCHMITT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Slew ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Slew in the GpioSchmittSlew Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_SHIFT))

/**
 * The Write Macro for Slew in the GpioSchmittSlew Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Slew in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK))

/**
 * The Read Modify Write Macro for Slew in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK,(value)))

/**
 * The Toggle Macro for Slew in the GpioSchmittSlew Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_GPIOSCHMITTSLEW_REG_OFFSET,0,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK))
/**
 * The Get Macro for Slew in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Slew in the GpioSchmittSlew Register
 */
#define GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_MASK,GRG_IOCFG_GPIOSCHMITTSLEW_SLEW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Mux ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Mux in the GpioMux Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_GPIOMUX_MUX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,GRG_IOCFG_GPIOMUX_MUX_BF_MASK,GRG_IOCFG_GPIOMUX_MUX_BF_SHIFT))

/**
 * The Write Macro for Mux in the GpioMux Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_GPIOMUX_MUX_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,GRG_IOCFG_GPIOMUX_MUX_BF_MASK,GRG_IOCFG_GPIOMUX_MUX_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Mux in the GpioMux Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOMUX_MUX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,GRG_IOCFG_GPIOMUX_MUX_BF_MASK))

/**
 * The Read Modify Write Macro for Mux in the GpioMux Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOMUX_MUX_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,GRG_IOCFG_GPIOMUX_MUX_BF_MASK,(value)))

/**
 * The Toggle Macro for Mux in the GpioMux Register
 * This does not do a shift.
 */
#define GRG_IOCFG_GPIOMUX_MUX_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_GPIOMUX_REG_OFFSET,0,GRG_IOCFG_GPIOMUX_MUX_BF_MASK))
/**
 * The Get Macro for Mux in the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_MUX_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_GPIOMUX_MUX_BF_MASK,GRG_IOCFG_GPIOMUX_MUX_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Mux in the GpioMux Register
 */
#define GRG_IOCFG_GPIOMUX_MUX_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_GPIOMUX_MUX_BF_MASK,GRG_IOCFG_GPIOMUX_MUX_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Enable ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Enable in the ClmTx Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_CLMTX_ENABLE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_ENABLE_BF_MASK,GRG_IOCFG_CLMTX_ENABLE_BF_SHIFT))

/**
 * The Write Macro for Enable in the ClmTx Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_CLMTX_ENABLE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_ENABLE_BF_MASK,GRG_IOCFG_CLMTX_ENABLE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Enable in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_ENABLE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_ENABLE_BF_MASK))

/**
 * The Read Modify Write Macro for Enable in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_ENABLE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_ENABLE_BF_MASK,(value)))

/**
 * The Toggle Macro for Enable in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_ENABLE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_ENABLE_BF_MASK))
/**
 * The Get Macro for Enable in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_ENABLE_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_CLMTX_ENABLE_BF_MASK,GRG_IOCFG_CLMTX_ENABLE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Enable in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_ENABLE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_CLMTX_ENABLE_BF_MASK,GRG_IOCFG_CLMTX_ENABLE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Slew ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Slew in the ClmTx Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_CLMTX_SLEW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_SLEW_BF_MASK,GRG_IOCFG_CLMTX_SLEW_BF_SHIFT))

/**
 * The Write Macro for Slew in the ClmTx Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_CLMTX_SLEW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_SLEW_BF_MASK,GRG_IOCFG_CLMTX_SLEW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Slew in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_SLEW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_SLEW_BF_MASK))

/**
 * The Read Modify Write Macro for Slew in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_SLEW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_SLEW_BF_MASK,(value)))

/**
 * The Toggle Macro for Slew in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_SLEW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_SLEW_BF_MASK))
/**
 * The Get Macro for Slew in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_SLEW_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_CLMTX_SLEW_BF_MASK,GRG_IOCFG_CLMTX_SLEW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Slew in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_SLEW_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_CLMTX_SLEW_BF_MASK,GRG_IOCFG_CLMTX_SLEW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Drive ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Drive in the ClmTx Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_CLMTX_DRIVE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_DRIVE_BF_MASK,GRG_IOCFG_CLMTX_DRIVE_BF_SHIFT))

/**
 * The Write Macro for Drive in the ClmTx Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_CLMTX_DRIVE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_DRIVE_BF_MASK,GRG_IOCFG_CLMTX_DRIVE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Drive in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_DRIVE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_DRIVE_BF_MASK))

/**
 * The Read Modify Write Macro for Drive in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_DRIVE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_DRIVE_BF_MASK,(value)))

/**
 * The Toggle Macro for Drive in the ClmTx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMTX_DRIVE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_CLMTX_REG_OFFSET,0,GRG_IOCFG_CLMTX_DRIVE_BF_MASK))
/**
 * The Get Macro for Drive in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_DRIVE_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_CLMTX_DRIVE_BF_MASK,GRG_IOCFG_CLMTX_DRIVE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Drive in the ClmTx Register
 */
#define GRG_IOCFG_CLMTX_DRIVE_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_CLMTX_DRIVE_BF_MASK,GRG_IOCFG_CLMTX_DRIVE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Pull ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Pull in the ClmRx Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_CLMRX_PULL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_PULL_BF_MASK,GRG_IOCFG_CLMRX_PULL_BF_SHIFT))

/**
 * The Write Macro for Pull in the ClmRx Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_CLMRX_PULL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_PULL_BF_MASK,GRG_IOCFG_CLMRX_PULL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Pull in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_PULL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_PULL_BF_MASK))

/**
 * The Read Modify Write Macro for Pull in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_PULL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_PULL_BF_MASK,(value)))

/**
 * The Toggle Macro for Pull in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_PULL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_PULL_BF_MASK))
/**
 * The Get Macro for Pull in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_PULL_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_CLMRX_PULL_BF_MASK,GRG_IOCFG_CLMRX_PULL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Pull in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_PULL_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_CLMRX_PULL_BF_MASK,GRG_IOCFG_CLMRX_PULL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Schmitt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Schmitt in the ClmRx Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_CLMRX_SCHMITT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_SCHMITT_BF_MASK,GRG_IOCFG_CLMRX_SCHMITT_BF_SHIFT))

/**
 * The Write Macro for Schmitt in the ClmRx Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_CLMRX_SCHMITT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_SCHMITT_BF_MASK,GRG_IOCFG_CLMRX_SCHMITT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Schmitt in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_SCHMITT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_SCHMITT_BF_MASK))

/**
 * The Read Modify Write Macro for Schmitt in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_SCHMITT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_SCHMITT_BF_MASK,(value)))

/**
 * The Toggle Macro for Schmitt in the ClmRx Register
 * This does not do a shift.
 */
#define GRG_IOCFG_CLMRX_SCHMITT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_CLMRX_REG_OFFSET,0,GRG_IOCFG_CLMRX_SCHMITT_BF_MASK))
/**
 * The Get Macro for Schmitt in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_SCHMITT_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_CLMRX_SCHMITT_BF_MASK,GRG_IOCFG_CLMRX_SCHMITT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Schmitt in the ClmRx Register
 */
#define GRG_IOCFG_CLMRX_SCHMITT_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_CLMRX_SCHMITT_BF_MASK,GRG_IOCFG_CLMRX_SCHMITT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Out0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Out0 in the RefClk Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_REFCLK_OUT0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT0_BF_MASK,GRG_IOCFG_REFCLK_OUT0_BF_SHIFT))

/**
 * The Write Macro for Out0 in the RefClk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_REFCLK_OUT0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT0_BF_MASK,GRG_IOCFG_REFCLK_OUT0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Out0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT0_BF_MASK))

/**
 * The Read Modify Write Macro for Out0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT0_BF_MASK,(value)))

/**
 * The Toggle Macro for Out0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT0_BF_MASK))
/**
 * The Get Macro for Out0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT0_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_REFCLK_OUT0_BF_MASK,GRG_IOCFG_REFCLK_OUT0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Out0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT0_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_REFCLK_OUT0_BF_MASK,GRG_IOCFG_REFCLK_OUT0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Out1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Out1 in the RefClk Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_REFCLK_OUT1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT1_BF_MASK,GRG_IOCFG_REFCLK_OUT1_BF_SHIFT))

/**
 * The Write Macro for Out1 in the RefClk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_REFCLK_OUT1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT1_BF_MASK,GRG_IOCFG_REFCLK_OUT1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Out1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT1_BF_MASK))

/**
 * The Read Modify Write Macro for Out1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT1_BF_MASK,(value)))

/**
 * The Toggle Macro for Out1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_OUT1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_OUT1_BF_MASK))
/**
 * The Get Macro for Out1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT1_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_REFCLK_OUT1_BF_MASK,GRG_IOCFG_REFCLK_OUT1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Out1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_OUT1_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_REFCLK_OUT1_BF_MASK,GRG_IOCFG_REFCLK_OUT1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The In0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for In0 in the RefClk Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_REFCLK_IN0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN0_BF_MASK,GRG_IOCFG_REFCLK_IN0_BF_SHIFT))

/**
 * The Write Macro for In0 in the RefClk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_REFCLK_IN0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN0_BF_MASK,GRG_IOCFG_REFCLK_IN0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for In0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN0_BF_MASK))

/**
 * The Read Modify Write Macro for In0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN0_BF_MASK,(value)))

/**
 * The Toggle Macro for In0 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN0_BF_MASK))
/**
 * The Get Macro for In0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN0_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_REFCLK_IN0_BF_MASK,GRG_IOCFG_REFCLK_IN0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for In0 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN0_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_REFCLK_IN0_BF_MASK,GRG_IOCFG_REFCLK_IN0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The In1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for In1 in the RefClk Register
 * This does a mask and shift.
 */
#define GRG_IOCFG_REFCLK_IN1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN1_BF_MASK,GRG_IOCFG_REFCLK_IN1_BF_SHIFT))

/**
 * The Write Macro for In1 in the RefClk Register
 * This shifts the value and does a read, mask, then write.
 */
#define GRG_IOCFG_REFCLK_IN1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN1_BF_MASK,GRG_IOCFG_REFCLK_IN1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for In1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN1_BF_MASK))

/**
 * The Read Modify Write Macro for In1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN1_BF_MASK,(value)))

/**
 * The Toggle Macro for In1 in the RefClk Register
 * This does not do a shift.
 */
#define GRG_IOCFG_REFCLK_IN1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),GRG_IOCFG_REFCLK_REG_OFFSET,0,GRG_IOCFG_REFCLK_IN1_BF_MASK))
/**
 * The Get Macro for In1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN1_GET_BF(regValue) \
	(GET_BF(GRG_IOCFG_REFCLK_IN1_BF_MASK,GRG_IOCFG_REFCLK_IN1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for In1 in the RefClk Register
 */
#define GRG_IOCFG_REFCLK_IN1_SET_BF(regValue,bfValue) \
	(SET_BF(GRG_IOCFG_REFCLK_IN1_BF_MASK,GRG_IOCFG_REFCLK_IN1_BF_SHIFT,(regValue),(bfValue)))

#endif
