//**********************************************************
// Generated by SpectaReg from PDTi (www.productive-eda.com)
// SpectaReg Revision: 579
// Generated from ViewFileTemplate at: comp_mmreg_macro.h.gen
// ViewFileTemplate Revision: 767
// Generation date: Tue Aug 21 23:26:32 GMT 2012
//**********************************************************

/**************************************************************************
 *  This is a GENERATED registerMap C/C++ header file for the
 *  XCSR Component.  Use the Macros in this file
 *  to read and write Registers and BitFields.
 **************************************************************************/

#ifndef __XCSR_MMREG_MACRO_H__
#define __XCSR_MMREG_MACRO_H__

#include "common_mmreg_access.h"

/* CMacroHeaderView.RegOffsetDefVP per Register (and subclasses) */
/**
 * Offset for the Id Register
 */
#define XCSR_XUSB_ID_REG_OFFSET 0  /*0x0*/
/**
 * Offset for the Rev Register
 */
#define XCSR_XUSB_REV_REG_OFFSET 4  /*0x4*/
/**
 * Offset for the ModEn Register
 */
#define XCSR_XUSB_MODEN_REG_OFFSET 8  /*0x8*/
/**
 * Offset for the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_REG_OFFSET 12  /*0xc*/
/**
 * Offset for the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_REG_OFFSET 16  /*0x10*/
/**
 * Offset for the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_REG_OFFSET 20  /*0x14*/
/**
 * Offset for the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_REG_OFFSET 24  /*0x18*/
/**
 * Offset for the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_REG_OFFSET 28  /*0x1c*/
/**
 * Offset for the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_REG_OFFSET 32  /*0x20*/
/**
 * Offset for the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_REG_OFFSET 36  /*0x24*/
/**
 * Offset for the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_REG_OFFSET 40  /*0x28*/
/**
 * Offset for the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_REG_OFFSET 44  /*0x2c*/
/**
 * Offset for the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_REG_OFFSET 48  /*0x30*/
/**
 * Offset for the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_REG_OFFSET 52  /*0x34*/
/**
 * Offset for the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_REG_OFFSET 56  /*0x38*/
/**
 * Offset for the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_REG_OFFSET 60  /*0x3c*/
/**
 * Offset for the Control Register
 */
#define XCSR_XSST_CONTROL_REG_OFFSET 72  /*0x48*/
/**
 * Offset for the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_REG_OFFSET 76  /*0x4c*/
/**
 * Offset for the SstStatus1 Register
 */
#define XCSR_XSST_SSTSTATUS1_REG_OFFSET 80  /*0x50*/
/**
 * Offset for the SstStatus0 Register
 */
#define XCSR_XSST_SSTSTATUS0_REG_OFFSET 84  /*0x54*/
/**
 * Offset for the Config0 Register
 */
#define XCSR_XICS_CONFIG0_REG_OFFSET 104  /*0x68*/
/**
 * Offset for the Config1 Register
 */
#define XCSR_XICS_CONFIG1_REG_OFFSET 108  /*0x6c*/
/**
 * Offset for the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REG_OFFSET 112  /*0x70*/
/**
 * Offset for the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_REG_OFFSET 116  /*0x74*/
/**
 * Offset for the Status Register
 */
#define XCSR_XICS_STATUS_REG_OFFSET 120  /*0x78*/
/**
 * Offset for the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_REG_OFFSET 124  /*0x7c*/
/**
 * Offset for the StatusQAcc1 Register
 */
#define XCSR_XICS_STATUSQACC1_REG_OFFSET 128  /*0x80*/
/**
 * Offset for the StatusQAcc2 Register
 */
#define XCSR_XICS_STATUSQACC2_REG_OFFSET 132  /*0x84*/
/**
 * Offset for the StatusQAllo Register
 */
#define XCSR_XICS_STATUSQALLO_REG_OFFSET 136  /*0x88*/
/**
 * Offset for the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_REG_OFFSET 140  /*0x8c*/
/**
 * Offset for the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_REG_OFFSET 144  /*0x90*/
/**
 * Offset for the QType Register
 */
#define XCSR_XFLC_QTYPE_REG_OFFSET 160  /*0xa0*/
/**
 * Offset for the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_REG_OFFSET 164  /*0xa4*/
/**
 * Offset for the Status Register
 */
#define XCSR_XFLC_STATUS_REG_OFFSET 168  /*0xa8*/
/**
 * Offset for the Config Register
 */
#define XCSR_XCRM_CONFIG_REG_OFFSET 176  /*0xb0*/
/**
 * Offset for the Status Register
 */
#define XCSR_XCRM_STATUS_REG_OFFSET 180  /*0xb4*/
/**
 * Offset for the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_REG_OFFSET 184  /*0xb8*/
/**
 * Offset for the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_REG_OFFSET 188  /*0xbc*/
/**
 * Offset for the Config Register
 */
#define XCSR_XCTM_CONFIG_REG_OFFSET 208  /*0xd0*/
/**
 * Offset for the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_REG_OFFSET 212  /*0xd4*/
/**
 * Offset for the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_REG_OFFSET 216  /*0xd8*/
/**
 * Offset for the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_REG_OFFSET 220  /*0xdc*/
/**
 * Offset for the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_REG_OFFSET 224  /*0xe0*/
/**
 * Offset for the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_REG_OFFSET 228  /*0xe4*/



/* CMacroHeaderView.RegArrayOffsetDefVP per Register (and subclasses) */


/* CMacroHeaderView.RegBfDefsVP per Register (and subclasses) */
/***********************************************************
  BitFields defs from the Id Register
***********************************************************/
/**
 * The Shift for Id in the Id Register
 */
#define XCSR_XUSB_ID_ID_BF_SHIFT 0
/**
 * The mask for Id in the Id Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XUSB_ID_ID_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Id in the Id Register
 */
#define XCSR_XUSB_ID_ID_BF_RESET 0x58435352

/***********************************************************
  BitFields defs from the Rev Register
***********************************************************/
/**
 * The Shift for CvsMajor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMAJOR_BF_SHIFT 8
/**
 * The Shift for CvsMinor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMINOR_BF_SHIFT 0
/**
 * The mask for CvsMajor in the Rev Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define XCSR_XUSB_REV_CVSMAJOR_BF_MASK 0x0000FF00


/**
 * The mask for CvsMinor in the Rev Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XCSR_XUSB_REV_CVSMINOR_BF_MASK 0x000000FF



/**
 * Reset value for CvsMajor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMAJOR_BF_RESET 0x00000001


/**
 * Reset value for CvsMinor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMINOR_BF_RESET 0x00000031

/***********************************************************
  BitFields defs from the ModEn Register
***********************************************************/
/**
 * The Shift for XutmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XUTMEN_BF_SHIFT 3
/**
 * The Shift for XurmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XURMEN_BF_SHIFT 2
/**
 * The Shift for XctmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCTMEN_BF_SHIFT 1
/**
 * The Shift for XcrmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCRMEN_BF_SHIFT 0
/**
 * The mask for XutmEn in the ModEn Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_MODEN_XUTMEN_BF_MASK 0x00000008


/**
 * The mask for XurmEn in the ModEn Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_MODEN_XURMEN_BF_MASK 0x00000004


/**
 * The mask for XctmEn in the ModEn Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_MODEN_XCTMEN_BF_MASK 0x00000002


/**
 * The mask for XcrmEn in the ModEn Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_MODEN_XCRMEN_BF_MASK 0x00000001



/**
 * Reset value for XutmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XUTMEN_BF_RESET 0x00000000


/**
 * Reset value for XurmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XURMEN_BF_RESET 0x00000000


/**
 * Reset value for XctmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCTMEN_BF_RESET 0x00000000


/**
 * Reset value for XcrmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCRMEN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntEn0 Register
***********************************************************/
/**
 * The Shift for Irq2XutmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_SHIFT 25
/**
 * The Shift for Irq2XutmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_SHIFT 24
/**
 * The Shift for Irq2XurmPktLimit in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_SHIFT 19
/**
 * The Shift for Irq2XurmCmdErr in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_SHIFT 18
/**
 * The Shift for Irq2XurmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_SHIFT 17
/**
 * The Shift for Irq2XurmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_SHIFT 16
/**
 * The Shift for Irq2XicsOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_SHIFT 11
/**
 * The Shift for Irq2XicsUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_SHIFT 10
/**
 * The Shift for Irq2XicsQidRet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_SHIFT 9
/**
 * The Shift for Irq2XicsQidNew in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_SHIFT 8
/**
 * The Shift for Irq2XicsQidAEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_SHIFT 7
/**
 * The Shift for Irq2XicsQidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_SHIFT 6
/**
 * The Shift for Irq2XicsSidEvent in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_SHIFT 5
/**
 * The Shift for Irq2XicsSidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_SHIFT 4
/**
 * The Shift for Irq0Lexrspqid in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_SHIFT 3
/**
 * The Shift for Irq1CpuRxEnet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_SHIFT 2
/**
 * The Shift for Irq1CpuRx in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_BF_SHIFT 1
/**
 * The Shift for Irq0LexCtrl in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_SHIFT 0
/**
 * The mask for Irq2XutmFifoOflow in the IntEn0 Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK 0x02000000


/**
 * The mask for Irq2XutmFifoUflow in the IntEn0 Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK 0x01000000


/**
 * The mask for Irq2XurmPktLimit in the IntEn0 Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK 0x00080000


/**
 * The mask for Irq2XurmCmdErr in the IntEn0 Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK 0x00040000


/**
 * The mask for Irq2XurmFifoOflow in the IntEn0 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK 0x00020000


/**
 * The mask for Irq2XurmFifoUflow in the IntEn0 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK 0x00010000


/**
 * The mask for Irq2XicsOflow in the IntEn0 Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq2XicsUflow in the IntEn0 Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq2XicsQidRet in the IntEn0 Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK 0x00000200


/**
 * The mask for Irq2XicsQidNew in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK 0x00000100


/**
 * The mask for Irq2XicsQidAEmpty in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK 0x00000080


/**
 * The mask for Irq2XicsQidEmpty in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK 0x00000040


/**
 * The mask for Irq2XicsSidEvent in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK 0x00000020


/**
 * The mask for Irq2XicsSidEmpty in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK 0x00000010


/**
 * The mask for Irq0Lexrspqid in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK 0x00000008


/**
 * The mask for Irq1CpuRxEnet in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK 0x00000004


/**
 * The mask for Irq1CpuRx in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK 0x00000002


/**
 * The mask for Irq0LexCtrl in the IntEn0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK 0x00000001



/**
 * Reset value for Irq2XutmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XutmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmPktLimit in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmCmdErr in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidRet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidNew in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidAEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEvent in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq0Lexrspqid in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRxEnet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRx in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexCtrl in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntEn1 Register
***********************************************************/
/**
 * The Shift for Irq3XflcEventLocal in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_SHIFT 17
/**
 * The Shift for Irq3XflcEventRemote in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_SHIFT 16
/**
 * The Shift for Irq3XctmPkt in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_SHIFT 14
/**
 * The Shift for Irq3XctmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT 13
/**
 * The Shift for Irq3XctmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT 12
/**
 * The Shift for Irq3XcrmTout in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_SHIFT 8
/**
 * The Shift for Irq3XcrmPldCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_SHIFT 7
/**
 * The Shift for Irq3XcrmFrmCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_SHIFT 6
/**
 * The Shift for Irq3XcrmFraming in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_SHIFT 5
/**
 * The Shift for Irq3XcrmDropFrm in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_SHIFT 4
/**
 * The Shift for Irq3XcrmAfifoSync in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_SHIFT 3
/**
 * The Shift for Irq3XcrmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT 2
/**
 * The Shift for Irq3XcrmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT 1
/**
 * The Shift for Irq3XcrmNotInSys in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_SHIFT 0
/**
 * The mask for Irq3XflcEventLocal in the IntEn1 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK 0x00020000


/**
 * The mask for Irq3XflcEventRemote in the IntEn1 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK 0x00010000


/**
 * The mask for Irq3XctmPkt in the IntEn1 Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK 0x00004000


/**
 * The mask for Irq3XctmAfifoOflow in the IntEn1 Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK 0x00002000


/**
 * The mask for Irq3XctmAfifoUflow in the IntEn1 Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK 0x00001000


/**
 * The mask for Irq3XcrmTout in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK 0x00000100


/**
 * The mask for Irq3XcrmPldCrc in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK 0x00000080


/**
 * The mask for Irq3XcrmFrmCrc in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK 0x00000040


/**
 * The mask for Irq3XcrmFraming in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK 0x00000020


/**
 * The mask for Irq3XcrmDropFrm in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK 0x00000010


/**
 * The mask for Irq3XcrmAfifoSync in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK 0x00000008


/**
 * The mask for Irq3XcrmAfifoOflow in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK 0x00000004


/**
 * The mask for Irq3XcrmAfifoUflow in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK 0x00000002


/**
 * The mask for Irq3XcrmNotInSys in the IntEn1 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK 0x00000001



/**
 * Reset value for Irq3XflcEventLocal in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_RESET 0x00000000


/**
 * Reset value for Irq3XflcEventRemote in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmPkt in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmTout in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmPldCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFrmCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFraming in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmDropFrm in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoSync in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmNotInSys in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntFlg0 Register
***********************************************************/
/**
 * The Shift for Irq2XutmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_SHIFT 25
/**
 * The Shift for Irq2XutmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_SHIFT 24
/**
 * The Shift for Irq2XurmPktLimit in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_SHIFT 19
/**
 * The Shift for Irq2XurmCmdErr in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_SHIFT 18
/**
 * The Shift for Irq2XurmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_SHIFT 17
/**
 * The Shift for Irq2XurmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_SHIFT 16
/**
 * The Shift for Irq2XicsOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_SHIFT 11
/**
 * The Shift for Irq2XicsUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_SHIFT 10
/**
 * The Shift for Irq2XicsQidRet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_SHIFT 9
/**
 * The Shift for Irq2XicsQidNew in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_SHIFT 8
/**
 * The Shift for Irq2XicsQidAEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_SHIFT 7
/**
 * The Shift for Irq2XicsQidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_SHIFT 6
/**
 * The Shift for Irq2XicsSidEvent in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_SHIFT 5
/**
 * The Shift for Irq2XicsSidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_SHIFT 4
/**
 * The Shift for Irq0Lexrspqid in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_SHIFT 3
/**
 * The Shift for Irq1CpuRxEnet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_SHIFT 2
/**
 * The Shift for Irq1CpuRx in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_SHIFT 1
/**
 * The Shift for Irq0LexCtrl in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_SHIFT 0
/**
 * The mask for Irq2XutmFifoOflow in the IntFlg0 Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_MASK 0x02000000


/**
 * The mask for Irq2XutmFifoUflow in the IntFlg0 Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_MASK 0x01000000


/**
 * The mask for Irq2XurmPktLimit in the IntFlg0 Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_MASK 0x00080000


/**
 * The mask for Irq2XurmCmdErr in the IntFlg0 Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_MASK 0x00040000


/**
 * The mask for Irq2XurmFifoOflow in the IntFlg0 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_MASK 0x00020000


/**
 * The mask for Irq2XurmFifoUflow in the IntFlg0 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_MASK 0x00010000


/**
 * The mask for Irq2XicsOflow in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq2XicsUflow in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq2XicsQidRet in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_MASK 0x00000200


/**
 * The mask for Irq2XicsQidNew in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_MASK 0x00000100


/**
 * The mask for Irq2XicsQidAEmpty in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_MASK 0x00000080


/**
 * The mask for Irq2XicsQidEmpty in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_MASK 0x00000040


/**
 * The mask for Irq2XicsSidEvent in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_MASK 0x00000020


/**
 * The mask for Irq2XicsSidEmpty in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_MASK 0x00000010


/**
 * The mask for Irq0Lexrspqid in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_MASK 0x00000008


/**
 * The mask for Irq1CpuRxEnet in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_MASK 0x00000004


/**
 * The mask for Irq1CpuRx in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_MASK 0x00000002


/**
 * The mask for Irq0LexCtrl in the IntFlg0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_MASK 0x00000001



/**
 * Reset value for Irq2XutmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XutmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmPktLimit in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmCmdErr in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidRet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidNew in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidAEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEvent in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq0Lexrspqid in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRxEnet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRx in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexCtrl in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntFlg1 Register
***********************************************************/
/**
 * The Shift for Irq3XflcEventLocal in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_SHIFT 17
/**
 * The Shift for Irq3XflcEventRemote in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_SHIFT 16
/**
 * The Shift for Irq3XctmPkt in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_SHIFT 14
/**
 * The Shift for Irq3XctmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT 13
/**
 * The Shift for Irq3XctmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT 12
/**
 * The Shift for Irq3XcrmTout in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_SHIFT 8
/**
 * The Shift for Irq3XcrmPldCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_SHIFT 7
/**
 * The Shift for Irq3XcrmFrmCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_SHIFT 6
/**
 * The Shift for Irq3XcrmFraming in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_SHIFT 5
/**
 * The Shift for Irq3XcrmDropFrm in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_SHIFT 4
/**
 * The Shift for Irq3XcrmAfifoSync in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_SHIFT 3
/**
 * The Shift for Irq3XcrmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT 2
/**
 * The Shift for Irq3XcrmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT 1
/**
 * The Shift for Irq3XcrmNotInSys in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_SHIFT 0
/**
 * The mask for Irq3XflcEventLocal in the IntFlg1 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_MASK 0x00020000


/**
 * The mask for Irq3XflcEventRemote in the IntFlg1 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_MASK 0x00010000


/**
 * The mask for Irq3XctmPkt in the IntFlg1 Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_MASK 0x00004000


/**
 * The mask for Irq3XctmAfifoOflow in the IntFlg1 Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_MASK 0x00002000


/**
 * The mask for Irq3XctmAfifoUflow in the IntFlg1 Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_MASK 0x00001000


/**
 * The mask for Irq3XcrmTout in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_MASK 0x00000100


/**
 * The mask for Irq3XcrmPldCrc in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_MASK 0x00000080


/**
 * The mask for Irq3XcrmFrmCrc in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_MASK 0x00000040


/**
 * The mask for Irq3XcrmFraming in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_MASK 0x00000020


/**
 * The mask for Irq3XcrmDropFrm in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_MASK 0x00000010


/**
 * The mask for Irq3XcrmAfifoSync in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_MASK 0x00000008


/**
 * The mask for Irq3XcrmAfifoOflow in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_MASK 0x00000004


/**
 * The mask for Irq3XcrmAfifoUflow in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_MASK 0x00000002


/**
 * The mask for Irq3XcrmNotInSys in the IntFlg1 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_MASK 0x00000001



/**
 * Reset value for Irq3XflcEventLocal in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_RESET 0x00000000


/**
 * Reset value for Irq3XflcEventRemote in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmPkt in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmTout in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmPldCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFrmCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFraming in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmDropFrm in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoSync in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmNotInSys in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntSrc0 Register
***********************************************************/
/**
 * The Shift for Irq2XutmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_SHIFT 25
/**
 * The Shift for Irq2XutmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_SHIFT 24
/**
 * The Shift for Irq2XurmPktLimit in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_SHIFT 19
/**
 * The Shift for Irq2XurmCmdErr in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_SHIFT 18
/**
 * The Shift for Irq2XurmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_SHIFT 17
/**
 * The Shift for Irq2XurmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_SHIFT 16
/**
 * The Shift for Irq2XicsOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_SHIFT 11
/**
 * The Shift for Irq2XicsUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_SHIFT 10
/**
 * The Shift for Irq2XicsQidRet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_SHIFT 9
/**
 * The Shift for Irq2XicsQidNew in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_SHIFT 8
/**
 * The Shift for Irq2XicsQidAEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_SHIFT 7
/**
 * The Shift for Irq2XicsQidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_SHIFT 6
/**
 * The Shift for Irq2XicsSidEvent in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_SHIFT 5
/**
 * The Shift for Irq2XicsSidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_SHIFT 4
/**
 * The Shift for Irq0Lexrspqid in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_SHIFT 3
/**
 * The Shift for Irq1CpuRxEnet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_SHIFT 2
/**
 * The Shift for Irq1CpuRx in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_SHIFT 1
/**
 * The Shift for Irq0LexCtrl in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_SHIFT 0
/**
 * The mask for Irq2XutmFifoOflow in the IntSrc0 Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_MASK 0x02000000


/**
 * The mask for Irq2XutmFifoUflow in the IntSrc0 Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_MASK 0x01000000


/**
 * The mask for Irq2XurmPktLimit in the IntSrc0 Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_MASK 0x00080000


/**
 * The mask for Irq2XurmCmdErr in the IntSrc0 Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_MASK 0x00040000


/**
 * The mask for Irq2XurmFifoOflow in the IntSrc0 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_MASK 0x00020000


/**
 * The mask for Irq2XurmFifoUflow in the IntSrc0 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_MASK 0x00010000


/**
 * The mask for Irq2XicsOflow in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq2XicsUflow in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq2XicsQidRet in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_MASK 0x00000200


/**
 * The mask for Irq2XicsQidNew in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_MASK 0x00000100


/**
 * The mask for Irq2XicsQidAEmpty in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_MASK 0x00000080


/**
 * The mask for Irq2XicsQidEmpty in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_MASK 0x00000040


/**
 * The mask for Irq2XicsSidEvent in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_MASK 0x00000020


/**
 * The mask for Irq2XicsSidEmpty in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_MASK 0x00000010


/**
 * The mask for Irq0Lexrspqid in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_MASK 0x00000008


/**
 * The mask for Irq1CpuRxEnet in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_MASK 0x00000004


/**
 * The mask for Irq1CpuRx in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_MASK 0x00000002


/**
 * The mask for Irq0LexCtrl in the IntSrc0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_MASK 0x00000001



/**
 * Reset value for Irq2XutmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XutmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmPktLimit in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmCmdErr in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidRet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidNew in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidAEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEvent in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq0Lexrspqid in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRxEnet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRx in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexCtrl in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntSrc1 Register
***********************************************************/
/**
 * The Shift for Irq3XflcEventLocal in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_SHIFT 17
/**
 * The Shift for Irq3XflcEventRemote in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_SHIFT 16
/**
 * The Shift for Irq3XctmPkt in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_SHIFT 14
/**
 * The Shift for Irq3XctmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT 13
/**
 * The Shift for Irq3XctmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT 12
/**
 * The Shift for Irq3XcrmTout in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_SHIFT 8
/**
 * The Shift for Irq3XcrmPldCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_SHIFT 7
/**
 * The Shift for Irq3XcrmFrmCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_SHIFT 6
/**
 * The Shift for Irq3XcrmFraming in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_SHIFT 5
/**
 * The Shift for Irq3XcrmDropFrm in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_SHIFT 4
/**
 * The Shift for Irq3XcrmAfifoSync in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_SHIFT 3
/**
 * The Shift for Irq3XcrmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT 2
/**
 * The Shift for Irq3XcrmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT 1
/**
 * The Shift for Irq3XcrmNotInSys in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_SHIFT 0
/**
 * The mask for Irq3XflcEventLocal in the IntSrc1 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_MASK 0x00020000


/**
 * The mask for Irq3XflcEventRemote in the IntSrc1 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_MASK 0x00010000


/**
 * The mask for Irq3XctmPkt in the IntSrc1 Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_MASK 0x00004000


/**
 * The mask for Irq3XctmAfifoOflow in the IntSrc1 Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_MASK 0x00002000


/**
 * The mask for Irq3XctmAfifoUflow in the IntSrc1 Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_MASK 0x00001000


/**
 * The mask for Irq3XcrmTout in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_MASK 0x00000100


/**
 * The mask for Irq3XcrmPldCrc in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_MASK 0x00000080


/**
 * The mask for Irq3XcrmFrmCrc in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_MASK 0x00000040


/**
 * The mask for Irq3XcrmFraming in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_MASK 0x00000020


/**
 * The mask for Irq3XcrmDropFrm in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_MASK 0x00000010


/**
 * The mask for Irq3XcrmAfifoSync in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_MASK 0x00000008


/**
 * The mask for Irq3XcrmAfifoOflow in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_MASK 0x00000004


/**
 * The mask for Irq3XcrmAfifoUflow in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_MASK 0x00000002


/**
 * The mask for Irq3XcrmNotInSys in the IntSrc1 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_MASK 0x00000001



/**
 * Reset value for Irq3XflcEventLocal in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_RESET 0x00000000


/**
 * Reset value for Irq3XflcEventRemote in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmPkt in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmTout in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmPldCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFrmCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFraming in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmDropFrm in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoSync in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmNotInSys in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntClr0 Register
***********************************************************/
/**
 * The Shift for Irq2XutmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_SHIFT 25
/**
 * The Shift for Irq2XutmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_SHIFT 24
/**
 * The Shift for Irq2XurmPktLimit in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_SHIFT 19
/**
 * The Shift for Irq2XurmCmdErr in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_SHIFT 18
/**
 * The Shift for Irq2XurmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_SHIFT 17
/**
 * The Shift for Irq2XurmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_SHIFT 16
/**
 * The Shift for Irq2XicsOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_SHIFT 11
/**
 * The Shift for Irq2XicsUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_SHIFT 10
/**
 * The Shift for Irq2XicsQidRet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_SHIFT 9
/**
 * The Shift for Irq2XicsQidNew in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_SHIFT 8
/**
 * The Shift for Irq2XicsQidAEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_SHIFT 7
/**
 * The Shift for Irq2XicsQidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_SHIFT 6
/**
 * The Shift for Irq2XicsSidEvent in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_SHIFT 5
/**
 * The Shift for Irq2XicsSidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_SHIFT 4
/**
 * The Shift for Irq0Lexrspqid in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_SHIFT 3
/**
 * The Shift for Irq1CpuRxEnet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_SHIFT 2
/**
 * The Shift for Irq1CpuRx in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_SHIFT 1
/**
 * The Shift for Irq0LexCtrl in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_SHIFT 0
/**
 * The mask for Irq2XutmFifoOflow in the IntClr0 Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_MASK 0x02000000


/**
 * The mask for Irq2XutmFifoUflow in the IntClr0 Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_MASK 0x01000000


/**
 * The mask for Irq2XurmPktLimit in the IntClr0 Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_MASK 0x00080000


/**
 * The mask for Irq2XurmCmdErr in the IntClr0 Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_MASK 0x00040000


/**
 * The mask for Irq2XurmFifoOflow in the IntClr0 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_MASK 0x00020000


/**
 * The mask for Irq2XurmFifoUflow in the IntClr0 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_MASK 0x00010000


/**
 * The mask for Irq2XicsOflow in the IntClr0 Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq2XicsUflow in the IntClr0 Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq2XicsQidRet in the IntClr0 Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_MASK 0x00000200


/**
 * The mask for Irq2XicsQidNew in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_MASK 0x00000100


/**
 * The mask for Irq2XicsQidAEmpty in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_MASK 0x00000080


/**
 * The mask for Irq2XicsQidEmpty in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_MASK 0x00000040


/**
 * The mask for Irq2XicsSidEvent in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_MASK 0x00000020


/**
 * The mask for Irq2XicsSidEmpty in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_MASK 0x00000010


/**
 * The mask for Irq0Lexrspqid in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_MASK 0x00000008


/**
 * The mask for Irq1CpuRxEnet in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_MASK 0x00000004


/**
 * The mask for Irq1CpuRx in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_MASK 0x00000002


/**
 * The mask for Irq0LexCtrl in the IntClr0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_MASK 0x00000001


/**
 * Reset value for Irq2XutmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XutmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmPktLimit in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmCmdErr in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XurmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidRet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidNew in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidAEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsQidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEvent in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_RESET 0x00000000


/**
 * Reset value for Irq2XicsSidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for Irq0Lexrspqid in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRxEnet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_RESET 0x00000000


/**
 * Reset value for Irq1CpuRx in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexCtrl in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntClr1 Register
***********************************************************/
/**
 * The Shift for Irq3XflcEventLocal in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_SHIFT 17
/**
 * The Shift for Irq3XflcEventRemote in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_SHIFT 16
/**
 * The Shift for Irq3XctmPkt in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_SHIFT 14
/**
 * The Shift for Irq3XctmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT 13
/**
 * The Shift for Irq3XctmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT 12
/**
 * The Shift for Irq3XcrmTout in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_SHIFT 8
/**
 * The Shift for Irq3XcrmPldCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_SHIFT 7
/**
 * The Shift for Irq3XcrmFrmCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_SHIFT 6
/**
 * The Shift for Irq3XcrmFraming in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_SHIFT 5
/**
 * The Shift for Irq3XcrmDropFrm in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_SHIFT 4
/**
 * The Shift for Irq3XcrmAfifoSync in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_SHIFT 3
/**
 * The Shift for Irq3XcrmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT 2
/**
 * The Shift for Irq3XcrmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT 1
/**
 * The Shift for Irq3XcrmNotInSys in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_SHIFT 0
/**
 * The mask for Irq3XflcEventLocal in the IntClr1 Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_MASK 0x00020000


/**
 * The mask for Irq3XflcEventRemote in the IntClr1 Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_MASK 0x00010000


/**
 * The mask for Irq3XctmPkt in the IntClr1 Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_MASK 0x00004000


/**
 * The mask for Irq3XctmAfifoOflow in the IntClr1 Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_MASK 0x00002000


/**
 * The mask for Irq3XctmAfifoUflow in the IntClr1 Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_MASK 0x00001000


/**
 * The mask for Irq3XcrmTout in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_MASK 0x00000100


/**
 * The mask for Irq3XcrmPldCrc in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_MASK 0x00000080


/**
 * The mask for Irq3XcrmFrmCrc in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_MASK 0x00000040


/**
 * The mask for Irq3XcrmFraming in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_MASK 0x00000020


/**
 * The mask for Irq3XcrmDropFrm in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_MASK 0x00000010


/**
 * The mask for Irq3XcrmAfifoSync in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_MASK 0x00000008


/**
 * The mask for Irq3XcrmAfifoOflow in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_MASK 0x00000004


/**
 * The mask for Irq3XcrmAfifoUflow in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_MASK 0x00000002


/**
 * The mask for Irq3XcrmNotInSys in the IntClr1 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_MASK 0x00000001



/**
 * Reset value for Irq3XflcEventLocal in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_RESET 0x00000000


/**
 * Reset value for Irq3XflcEventRemote in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmPkt in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XctmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmTout in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmPldCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFrmCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmFraming in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmDropFrm in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoSync in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq3XcrmNotInSys in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the SQidIntCtrl Register
***********************************************************/
/**
 * The Shift for Lexrspqid in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_SHIFT 6
/**
 * The Shift for CpuRxEnet in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_SHIFT 4
/**
 * The Shift for CpuRx in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_BF_SHIFT 2
/**
 * The Shift for LexCtrl in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_SHIFT 0

/**
 * The mask for Lexrspqid in the SQidIntCtrl Register
 * Binary value of mask is 00000000000000000000000011000000
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK 0x0000000c


/**
 * The mask for CpuRxEnet in the SQidIntCtrl Register
 * Binary value of mask is 00000000000000000000000000110000
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK 0x00000030


/**
 * The mask for CpuRx in the SQidIntCtrl Register
 * Binary value of mask is 00000000000000000000000000001100
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK 0x0000000C


/**
 * The mask for LexCtrl in the SQidIntCtrl Register
 * Binary value of mask is 00000000000000000000000000000011
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK 0x00000003


/**
 * Reset value for Lexrspqid in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_RESET 0x00000002


/**
 * Reset value for CpuRxEnet in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_RESET 0x00000002


/**
 * Reset value for CpuRx in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_BF_RESET 0x00000002


/**
 * Reset value for LexCtrl in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_RESET 0x00000002

/***********************************************************
  BitFields defs from the Scratch3 Register
***********************************************************/
/**
 * The Shift for Scratch in the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_BF_SHIFT 0
/**
 * The mask for Scratch in the Scratch3 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Scratch in the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Scratch2 Register
***********************************************************/
/**
 * The Shift for Scratch in the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_BF_SHIFT 0
/**
 * The mask for Scratch in the Scratch2 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Scratch in the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Scratch1 Register
***********************************************************/
/**
 * The Shift for Scratch in the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_BF_SHIFT 0
/**
 * The mask for Scratch in the Scratch1 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Scratch in the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Scratch0 Register
***********************************************************/
/**
 * The Shift for Scratch in the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_BF_SHIFT 0
/**
 * The mask for Scratch in the Scratch0 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Scratch in the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Control Register
***********************************************************/
/**
 * The Shift for WrFail in the Control Register
 */
#define XCSR_XSST_CONTROL_WRFAIL_BF_SHIFT 19
/**
 * The Shift for InSsn in the Control Register
 */
#define XCSR_XSST_CONTROL_INSSN_BF_SHIFT 18
/**
 * The Shift for DevAddr in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVADDR_BF_SHIFT 11
/**
 * The Shift for DevEndpt in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVENDPT_BF_SHIFT 7
/**
 * The Shift for AccMode in the Control Register
 */
#define XCSR_XSST_CONTROL_ACCMODE_BF_SHIFT 3
/**
 * The Shift for Go in the Control Register
 */
#define XCSR_XSST_CONTROL_GO_BF_SHIFT 2
/**
 * The Shift for InitDone in the Control Register
 */
#define XCSR_XSST_CONTROL_INITDONE_BF_SHIFT 1
/**
 * The Shift for Clear in the Control Register
 */
#define XCSR_XSST_CONTROL_CLEAR_BF_SHIFT 0
/**
 * The mask for WrFail in the Control Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XCSR_XSST_CONTROL_WRFAIL_BF_MASK 0x00080000


/**
 * The mask for InSsn in the Control Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define XCSR_XSST_CONTROL_INSSN_BF_MASK 0x00040000


/**
 * The mask for DevAddr in the Control Register
 * Binary value of mask is 00000000000000111111100000000000
 */
#define XCSR_XSST_CONTROL_DEVADDR_BF_MASK 0x0003F800


/**
 * The mask for DevEndpt in the Control Register
 * Binary value of mask is 00000000000000000000011110000000
 */
#define XCSR_XSST_CONTROL_DEVENDPT_BF_MASK 0x00000780


/**
 * The mask for AccMode in the Control Register
 * Binary value of mask is 00000000000000000000000001111000
 */
#define XCSR_XSST_CONTROL_ACCMODE_BF_MASK 0x00000078


/**
 * The mask for Go in the Control Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XSST_CONTROL_GO_BF_MASK 0x00000004


/**
 * The mask for InitDone in the Control Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XSST_CONTROL_INITDONE_BF_MASK 0x00000002


/**
 * The mask for Clear in the Control Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XSST_CONTROL_CLEAR_BF_MASK 0x00000001



/**
 * Reset value for WrFail in the Control Register
 */
#define XCSR_XSST_CONTROL_WRFAIL_BF_RESET 0x00000000


/**
 * Reset value for InSsn in the Control Register
 */
#define XCSR_XSST_CONTROL_INSSN_BF_RESET 0x00000000


/**
 * Reset value for DevAddr in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVADDR_BF_RESET 0x00000000


/**
 * Reset value for DevEndpt in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVENDPT_BF_RESET 0x00000000


/**
 * Reset value for AccMode in the Control Register
 */
#define XCSR_XSST_CONTROL_ACCMODE_BF_RESET 0x00000000


/**
 * Reset value for Go in the Control Register
 */
#define XCSR_XSST_CONTROL_GO_BF_RESET 0x00000000


/**
 * Reset value for InitDone in the Control Register
 */
#define XCSR_XSST_CONTROL_INITDONE_BF_RESET 0x00000000


/**
 * Reset value for Clear in the Control Register
 */
#define XCSR_XSST_CONTROL_CLEAR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the SstStatus2 Register
***********************************************************/
/**
 * The Shift for Vport in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_BF_SHIFT 9
/**
 * The Shift for Vfnen in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_BF_SHIFT 8
/**
 * The Shift for Split in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_BF_SHIFT 7
/**
 * The Shift for InSys in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_BF_SHIFT 6
/**
 * The Shift for Laval in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_BF_SHIFT 5
/**
 * The Shift for LAddr in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_BF_SHIFT 0
/**
 * The mask for Vport in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000111000000000
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_BF_MASK 0x00000E00


/**
 * The mask for Vfnen in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_BF_MASK 0x00000100


/**
 * The mask for Split in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_BF_MASK 0x00000080


/**
 * The mask for InSys in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_BF_MASK 0x00000040


/**
 * The mask for Laval in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_BF_MASK 0x00000020


/**
 * The mask for LAddr in the SstStatus2 Register
 * Binary value of mask is 00000000000000000000000000011111
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_BF_MASK 0x0000001F



/**
 * Reset value for Vport in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_BF_RESET 0x00000000


/**
 * Reset value for Vfnen in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_BF_RESET 0x00000000


/**
 * Reset value for Split in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_BF_RESET 0x00000000


/**
 * Reset value for InSys in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_BF_RESET 0x00000000


/**
 * Reset value for Laval in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_BF_RESET 0x00000000


/**
 * Reset value for LAddr in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the SstStatus1 Register
***********************************************************/
/**
 * The Shift for Msw in the SstStatus1 Register
 */
#define XCSR_XSST_SSTSTATUS1_MSW_BF_SHIFT 0
/**
 * The mask for Msw in the SstStatus1 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XSST_SSTSTATUS1_MSW_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Msw in the SstStatus1 Register
 */
#define XCSR_XSST_SSTSTATUS1_MSW_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the SstStatus0 Register
***********************************************************/
/**
 * The Shift for Lsw in the SstStatus0 Register
 */
#define XCSR_XSST_SSTSTATUS0_LSW_BF_SHIFT 0
/**
 * The mask for Lsw in the SstStatus0 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XSST_SSTSTATUS0_LSW_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Lsw in the SstStatus0 Register
 */
#define XCSR_XSST_SSTSTATUS0_LSW_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Config0 Register
***********************************************************/
/**
 * The Shift for EnetPktDropLevel in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_SHIFT 16
/**
 * The Shift for Clear in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_CLEAR_BF_SHIFT 8
/**
 * The Shift for QidAEmpty in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_BF_SHIFT 0
/**
 * The Shift for EnetPktDropLevel in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK 0x00FF0000
/**
 * The mask for Clear in the Config0 Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XICS_CONFIG0_CLEAR_BF_MASK 0x00000100

/**
 * The mask for QidAEmpty in the Config0 Register
 * Binary value of mask is 00000000000000000000000001111111
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK 0x0000007F

/**
 * Reset value for Clear in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_RESET 0x00000030

/**
 * Reset value for Clear in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_CLEAR_BF_RESET 0x00000000


/**
 * Reset value for QidAEmpty in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_BF_RESET 0x00000010

/***********************************************************
  BitFields defs from the Config1 Register
***********************************************************/
/**
 * The Shift for SidAEmptyH in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_SHIFT 20
/**
 * The Shift for SidAEmptyM in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_SHIFT 10
/**
 * The Shift for SidAEmptyL in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_SHIFT 0
/**
 * The mask for SidAEmptyH in the Config1 Register
 * Binary value of mask is 00111111111100000000000000000000
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK 0x3FF00000


/**
 * The mask for SidAEmptyM in the Config1 Register
 * Binary value of mask is 00000000000011111111110000000000
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK 0x000FFC00


/**
 * The mask for SidAEmptyL in the Config1 Register
 * Binary value of mask is 00000000000000000000001111111111
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK 0x000003FF



/**
 * Reset value for SidAEmptyH in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_RESET 0x000000C0


/**
 * Reset value for SidAEmptyM in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_RESET 0x00000140


/**
 * Reset value for SidAEmptyL in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_RESET 0x000001C0

/***********************************************************
  BitFields defs from the ControlQAcc Register
***********************************************************/
/**
 * The Shift for CrcValid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_BF_SHIFT 29
/**
 * The Shift for CrcDone in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_BF_SHIFT 28
/**
 * The Shift for Wqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WQERR_BF_SHIFT 27
/**
 * The Shift for Rqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RQERR_BF_SHIFT 26
/**
 * The Shift for Rderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RDERR_BF_SHIFT 25
/**
 * The Shift for Reop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOP_BF_SHIFT 24
/**
 * The Shift for Reof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOF_BF_SHIFT 23
/**
 * The Shift for Rsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOP_BF_SHIFT 22
/**
 * The Shift for Rsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOF_BF_SHIFT 21
/**
 * The Shift for Rbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_BF_SHIFT 18
/**
 * The Shift for Wderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WDERR_BF_SHIFT 17
/**
 * The Shift for Weop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOP_BF_SHIFT 16
/**
 * The Shift for Weof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOF_BF_SHIFT 15
/**
 * The Shift for Wsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOP_BF_SHIFT 14
/**
 * The Shift for Wsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOF_BF_SHIFT 13
/**
 * The Shift for Wbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_BF_SHIFT 10
/**
 * The Shift for Qid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_QID_BF_SHIFT 3
/**
 * The Shift for Nreq in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_NREQ_BF_SHIFT 2
/**
 * The Shift for WNR in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WNR_BF_SHIFT 1
/**
 * The Shift for Go in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_GO_BF_SHIFT 0
/**
 * The mask for CrcValid in the ControlQAcc Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_BF_MASK 0x20000000


/**
 * The mask for CrcDone in the ControlQAcc Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_BF_MASK 0x10000000


/**
 * The mask for Wqerr in the ControlQAcc Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_WQERR_BF_MASK 0x08000000


/**
 * The mask for Rqerr in the ControlQAcc Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_RQERR_BF_MASK 0x04000000


/**
 * The mask for Rderr in the ControlQAcc Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_RDERR_BF_MASK 0x02000000


/**
 * The mask for Reop in the ControlQAcc Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_REOP_BF_MASK 0x01000000


/**
 * The mask for Reof in the ControlQAcc Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_REOF_BF_MASK 0x00800000


/**
 * The mask for Rsop in the ControlQAcc Register
 * Binary value of mask is 00000000010000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_RSOP_BF_MASK 0x00400000


/**
 * The mask for Rsof in the ControlQAcc Register
 * Binary value of mask is 00000000001000000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_RSOF_BF_MASK 0x00200000


/**
 * The mask for Rbyte in the ControlQAcc Register
 * Binary value of mask is 00000000000111000000000000000000
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_BF_MASK 0x001C0000


/**
 * The mask for Wderr in the ControlQAcc Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XICS_CONTROLQACC_WDERR_BF_MASK 0x00020000


/**
 * The mask for Weop in the ControlQAcc Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XICS_CONTROLQACC_WEOP_BF_MASK 0x00010000


/**
 * The mask for Weof in the ControlQAcc Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define XCSR_XICS_CONTROLQACC_WEOF_BF_MASK 0x00008000


/**
 * The mask for Wsop in the ControlQAcc Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XICS_CONTROLQACC_WSOP_BF_MASK 0x00004000


/**
 * The mask for Wsof in the ControlQAcc Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XICS_CONTROLQACC_WSOF_BF_MASK 0x00002000


/**
 * The mask for Wbyte in the ControlQAcc Register
 * Binary value of mask is 00000000000000000001110000000000
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK 0x00001C00


/**
 * The mask for Qid in the ControlQAcc Register
 * Binary value of mask is 00000000000000000000001111111000
 */
#define XCSR_XICS_CONTROLQACC_QID_BF_MASK 0x000003F8


/**
 * The mask for Nreq in the ControlQAcc Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XICS_CONTROLQACC_NREQ_BF_MASK 0x00000004


/**
 * The mask for WNR in the ControlQAcc Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XICS_CONTROLQACC_WNR_BF_MASK 0x00000002


/**
 * The mask for Go in the ControlQAcc Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XICS_CONTROLQACC_GO_BF_MASK 0x00000001



/**
 * Reset value for CrcValid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_BF_RESET 0x00000000


/**
 * Reset value for CrcDone in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_BF_RESET 0x00000000


/**
 * Reset value for Wqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WQERR_BF_RESET 0x00000000


/**
 * Reset value for Rqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RQERR_BF_RESET 0x00000000


/**
 * Reset value for Rderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RDERR_BF_RESET 0x00000000


/**
 * Reset value for Reop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOP_BF_RESET 0x00000000


/**
 * Reset value for Reof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOF_BF_RESET 0x00000000


/**
 * Reset value for Rsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOP_BF_RESET 0x00000000


/**
 * Reset value for Rsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOF_BF_RESET 0x00000000


/**
 * Reset value for Rbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_BF_RESET 0x00000000


/**
 * Reset value for Wderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WDERR_BF_RESET 0x00000000


/**
 * Reset value for Weop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOP_BF_RESET 0x00000000


/**
 * Reset value for Weof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOF_BF_RESET 0x00000000


/**
 * Reset value for Wsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOP_BF_RESET 0x00000000


/**
 * Reset value for Wsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOF_BF_RESET 0x00000000


/**
 * Reset value for Wbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_BF_RESET 0x00000000


/**
 * Reset value for Qid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_QID_BF_RESET 0x00000000


/**
 * Reset value for Nreq in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_NREQ_BF_RESET 0x00000000


/**
 * Reset value for WNR in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WNR_BF_RESET 0x00000000


/**
 * Reset value for Go in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ControlQAllo Register
***********************************************************/
/**
 * The Shift for QRangeSel in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_SHIFT 16
/**
 * The Shift for NewQ in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_BF_SHIFT 9
/**
 * The Shift for NewQType in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_SHIFT 5
/**
 * The Shift for NewQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_SHIFT 4
/**
 * The Shift for RetQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_BF_SHIFT 3
/**
 * The Shift for FluQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_SHIFT 2
/**
 * The Shift for Qerr in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QERR_BF_SHIFT 1
/**
 * The Shift for Go in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_GO_BF_SHIFT 0
/**
 * The mask for QRangeSel in the ControlQAllo Register
 * Binary value of mask is 00000000000000110000000000000000
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK 0x00030000


/**
 * The mask for NewQ in the ControlQAllo Register
 * Binary value of mask is 00000000000000001111111000000000
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_BF_MASK 0x0000FE00


/**
 * The mask for NewQType in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000111100000
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK 0x000001E0


/**
 * The mask for NewQReq in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK 0x00000010


/**
 * The mask for RetQReq in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK 0x00000008


/**
 * The mask for FluQReq in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK 0x00000004


/**
 * The mask for Qerr in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XICS_CONTROLQALLO_QERR_BF_MASK 0x00000002


/**
 * The mask for Go in the ControlQAllo Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XICS_CONTROLQALLO_GO_BF_MASK 0x00000001



/**
 * Reset value for QRangeSel in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_RESET 0x00000000


/**
 * Reset value for NewQ in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_BF_RESET 0x00000000


/**
 * Reset value for NewQType in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_RESET 0x00000000


/**
 * Reset value for NewQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_RESET 0x00000000


/**
 * Reset value for RetQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_BF_RESET 0x00000000


/**
 * Reset value for FluQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_RESET 0x00000000


/**
 * Reset value for Qerr in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QERR_BF_RESET 0x00000000


/**
 * Reset value for Go in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Status Register
***********************************************************/
/**
 * The Shift for XicsLvl2 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL2_BF_SHIFT 29
/**
 * The Shift for XicsLvl1 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL1_BF_SHIFT 28
/**
 * The Shift for Statistics in the Status Register
 */
#define XCSR_XICS_STATUS_STATISTICS_BF_SHIFT 26
/**
 * The Shift for QidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_QIDFREECNT_BF_SHIFT 18
/**
 * The Shift for QidAEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_BF_SHIFT 17
/**
 * The Shift for QidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDEMPTY_BF_SHIFT 16
/**
 * The Shift for SidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_SIDFREECNT_BF_SHIFT 5
/**
 * The Shift for SidAEmptyH in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_BF_SHIFT 4
/**
 * The Shift for SidAEmptyM in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_BF_SHIFT 3
/**
 * The Shift for SidAEmptyL in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_BF_SHIFT 2
/**
 * The Shift for SidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_SIDEMPTY_BF_SHIFT 1
/**
 * The Shift for InitDone in the Status Register
 */
#define XCSR_XICS_STATUS_INITDONE_BF_SHIFT 0
/**
 * The mask for XicsLvl2 in the Status Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define XCSR_XICS_STATUS_XICSLVL2_BF_MASK 0x20000000


/**
 * The mask for XicsLvl1 in the Status Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define XCSR_XICS_STATUS_XICSLVL1_BF_MASK 0x10000000


/**
 * The mask for Statistics in the Status Register
 * Binary value of mask is 00001100000000000000000000000000
 */
#define XCSR_XICS_STATUS_STATISTICS_BF_MASK 0x0C000000


/**
 * The mask for QidFreeCnt in the Status Register
 * Binary value of mask is 00000011111111000000000000000000
 */
#define XCSR_XICS_STATUS_QIDFREECNT_BF_MASK 0x03FC0000


/**
 * The mask for QidAEmpty in the Status Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_BF_MASK 0x00020000


/**
 * The mask for QidEmpty in the Status Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XICS_STATUS_QIDEMPTY_BF_MASK 0x00010000


/**
 * The mask for SidFreeCnt in the Status Register
 * Binary value of mask is 00000000000000001111111111100000
 */
#define XCSR_XICS_STATUS_SIDFREECNT_BF_MASK 0x0000FFE0


/**
 * The mask for SidAEmptyH in the Status Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_BF_MASK 0x00000010


/**
 * The mask for SidAEmptyM in the Status Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_BF_MASK 0x00000008


/**
 * The mask for SidAEmptyL in the Status Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_BF_MASK 0x00000004


/**
 * The mask for SidEmpty in the Status Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XICS_STATUS_SIDEMPTY_BF_MASK 0x00000002


/**
 * The mask for InitDone in the Status Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XICS_STATUS_INITDONE_BF_MASK 0x00000001



/**
 * Reset value for XicsLvl2 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL2_BF_RESET 0x00000000


/**
 * Reset value for XicsLvl1 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL1_BF_RESET 0x00000000


/**
 * Reset value for Statistics in the Status Register
 */
#define XCSR_XICS_STATUS_STATISTICS_BF_RESET 0x00000000


/**
 * Reset value for QidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_QIDFREECNT_BF_RESET 0x00000000


/**
 * Reset value for QidAEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for QidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for SidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_SIDFREECNT_BF_RESET 0x00000000


/**
 * Reset value for SidAEmptyH in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_BF_RESET 0x00000000


/**
 * Reset value for SidAEmptyM in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_BF_RESET 0x00000000


/**
 * Reset value for SidAEmptyL in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_BF_RESET 0x00000000


/**
 * Reset value for SidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_SIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for InitDone in the Status Register
 */
#define XCSR_XICS_STATUS_INITDONE_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatusQAcc0 Register
***********************************************************/
/**
 * The Shift for WrdCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_BF_SHIFT 11
/**
 * The Shift for FrmCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_BF_SHIFT 0
/**
 * The mask for WrdCnt in the StatusQAcc0 Register
 * Binary value of mask is 00000001111111111111100000000000
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_BF_MASK 0x01FFF800


/**
 * The mask for FrmCnt in the StatusQAcc0 Register
 * Binary value of mask is 00000000000000000000011111111111
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_BF_MASK 0x000007FF



/**
 * Reset value for WrdCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_BF_RESET 0x00000000


/**
 * Reset value for FrmCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatusQAcc1 Register
***********************************************************/
/**
 * The Shift for Msw in the StatusQAcc1 Register
 */
#define XCSR_XICS_STATUSQACC1_MSW_BF_SHIFT 0
/**
 * The mask for Msw in the StatusQAcc1 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XICS_STATUSQACC1_MSW_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Msw in the StatusQAcc1 Register
 */
#define XCSR_XICS_STATUSQACC1_MSW_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatusQAcc2 Register
***********************************************************/
/**
 * The Shift for Lsw in the StatusQAcc2 Register
 */
#define XCSR_XICS_STATUSQACC2_LSW_BF_SHIFT 0
/**
 * The mask for Lsw in the StatusQAcc2 Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XICS_STATUSQACC2_LSW_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Lsw in the StatusQAcc2 Register
 */
#define XCSR_XICS_STATUSQACC2_LSW_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatusQAllo Register
***********************************************************/
/**
 * The Shift for Allo in the StatusQAllo Register
 */
#define XCSR_XICS_STATUSQALLO_ALLO_BF_SHIFT 0
/**
 * The mask for Allo in the StatusQAllo Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XCSR_XICS_STATUSQALLO_ALLO_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Allo in the StatusQAllo Register
 */
#define XCSR_XICS_STATUSQALLO_ALLO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the FreeCntLow Register
***********************************************************/
/**
 * The Shift for Qid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_QID_BF_SHIFT 16
/**
 * The Shift for Sid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_SID_BF_SHIFT 0
/**
 * The mask for Qid in the FreeCntLow Register
 * Binary value of mask is 00000000111111110000000000000000
 */
#define XCSR_XICS_FREECNTLOW_QID_BF_MASK 0x00FF0000


/**
 * The mask for Sid in the FreeCntLow Register
 * Binary value of mask is 00000000000000000000011111111111
 */
#define XCSR_XICS_FREECNTLOW_SID_BF_MASK 0x000007FF



/**
 * Reset value for Qid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_QID_BF_RESET 0x00000080


/**
 * Reset value for Sid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_SID_BF_RESET 0x00000400

/***********************************************************
  BitFields defs from the FlowErr Register
***********************************************************/
/**
 * The Shift for Event in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_EVENT_BF_SHIFT 12
/**
 * The Shift for Interface in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_INTERFACE_BF_SHIFT 8
/**
 * The Shift for Qid in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_QID_BF_SHIFT 0
/**
 * The mask for Event in the FlowErr Register
 * Binary value of mask is 00000000000000000011000000000000
 */
#define XCSR_XICS_FLOWERR_EVENT_BF_MASK 0x00003000


/**
 * The mask for Interface in the FlowErr Register
 * Binary value of mask is 00000000000000000000011100000000
 */
#define XCSR_XICS_FLOWERR_INTERFACE_BF_MASK 0x00000700


/**
 * The mask for Qid in the FlowErr Register
 * Binary value of mask is 00000000000000000000000001111111
 */
#define XCSR_XICS_FLOWERR_QID_BF_MASK 0x0000007F



/**
 * Reset value for Event in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_EVENT_BF_RESET 0x00000000


/**
 * Reset value for Interface in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_INTERFACE_BF_RESET 0x00000000


/**
 * Reset value for Qid in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_QID_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the QType Register
***********************************************************/
/**
 * The Shift for WrdCnt in the QType Register
 */
#define XCSR_XFLC_QTYPE_WRDCNT_BF_SHIFT 6
/**
 * The Shift for Type in the QType Register
 */
#define XCSR_XFLC_QTYPE_TYPE_BF_SHIFT 2
/**
 * The Shift for WNR in the QType Register
 */
#define XCSR_XFLC_QTYPE_WNR_BF_SHIFT 1
/**
 * The Shift for Go in the QType Register
 */
#define XCSR_XFLC_QTYPE_GO_BF_SHIFT 0
/**
 * The mask for WrdCnt in the QType Register
 * Binary value of mask is 00000000000011111111111111000000
 */
#define XCSR_XFLC_QTYPE_WRDCNT_BF_MASK 0x000FFFC0


/**
 * The mask for Type in the QType Register
 * Binary value of mask is 00000000000000000000000000111100
 */
#define XCSR_XFLC_QTYPE_TYPE_BF_MASK 0x0000003C


/**
 * The mask for WNR in the QType Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XFLC_QTYPE_WNR_BF_MASK 0x00000002


/**
 * The mask for Go in the QType Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XFLC_QTYPE_GO_BF_MASK 0x00000001



/**
 * Reset value for WrdCnt in the QType Register
 */
#define XCSR_XFLC_QTYPE_WRDCNT_BF_RESET 0x00000000


/**
 * Reset value for Type in the QType Register
 */
#define XCSR_XFLC_QTYPE_TYPE_BF_RESET 0x00000000


/**
 * Reset value for WNR in the QType Register
 */
#define XCSR_XFLC_QTYPE_WNR_BF_RESET 0x00000000


/**
 * Reset value for Go in the QType Register
 */
#define XCSR_XFLC_QTYPE_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the RxTableWacc Register
***********************************************************/
/**
 * The Shift for UpsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_BF_SHIFT 11
/**
 * The Shift for UpsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_BF_SHIFT 10
/**
 * The Shift for UpsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_BF_SHIFT 9
/**
 * The Shift for DnsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_BF_SHIFT 8
/**
 * The Shift for DnsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_BF_SHIFT 7
/**
 * The Shift for DnsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_BF_SHIFT 6
/**
 * The Shift for XicsLvl2 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_SHIFT 5
/**
 * The Shift for XicsLvl1 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_SHIFT 4
/**
 * The Shift for Vport in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_BF_SHIFT 1
/**
 * The Shift for Go in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_GO_BF_SHIFT 0
/**
 * The mask for UpsAcc in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK 0x00000800


/**
 * The mask for UpsPer in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK 0x00000400


/**
 * The mask for UpsAsy in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK 0x00000200


/**
 * The mask for DnsAcc in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK 0x00000100


/**
 * The mask for DnsPer in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK 0x00000080


/**
 * The mask for DnsAsy in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK 0x00000040


/**
 * The mask for XicsLvl2 in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK 0x00000020


/**
 * The mask for XicsLvl1 in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK 0x00000010


/**
 * The mask for Vport in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000000001110
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK 0x0000000E


/**
 * The mask for Go in the RxTableWacc Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XFLC_RXTABLEWACC_GO_BF_MASK 0x00000001



/**
 * Reset value for UpsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_BF_RESET 0x00000000


/**
 * Reset value for UpsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_BF_RESET 0x00000000


/**
 * Reset value for UpsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_BF_RESET 0x00000000


/**
 * Reset value for DnsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_BF_RESET 0x00000000


/**
 * Reset value for DnsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_BF_RESET 0x00000000


/**
 * Reset value for DnsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_BF_RESET 0x00000000


/**
 * Reset value for XicsLvl2 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_RESET 0x00000000


/**
 * Reset value for XicsLvl1 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_RESET 0x00000000


/**
 * Reset value for Vport in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_BF_RESET 0x00000001


/**
 * Reset value for Go in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Status Register
***********************************************************/
/**
 * The Shift for UpsAccVp7 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_BF_SHIFT 17
/**
 * The Shift for UpsAccVp6 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_BF_SHIFT 16
/**
 * The Shift for UpsAccVp5 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_BF_SHIFT 15
/**
 * The Shift for UpsAccVp4 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_BF_SHIFT 14
/**
 * The Shift for UpsAccVp3 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_BF_SHIFT 13
/**
 * The Shift for UpsAccVp2 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_BF_SHIFT 12
/**
 * The Shift for UpsAccVp1 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_BF_SHIFT 11
/**
 * The Shift for UpsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSPER_BF_SHIFT 10
/**
 * The Shift for UpsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSASY_BF_SHIFT 9
/**
 * The Shift for DnsAcc in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSACC_BF_SHIFT 8
/**
 * The Shift for DnsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSPER_BF_SHIFT 7
/**
 * The Shift for DnsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSASY_BF_SHIFT 6
/**
 * The Shift for BlkAccOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_BF_SHIFT 5
/**
 * The Shift for BlkAccIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCIN_BF_SHIFT 4
/**
 * The Shift for BlkPerOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_BF_SHIFT 3
/**
 * The Shift for BlkPerIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPERIN_BF_SHIFT 2
/**
 * The Shift for BlkAsyOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_BF_SHIFT 1
/**
 * The Shift for BlkAsyIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYIN_BF_SHIFT 0
/**
 * The mask for UpsAccVp7 in the Status Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_BF_MASK 0x00020000


/**
 * The mask for UpsAccVp6 in the Status Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_BF_MASK 0x00010000


/**
 * The mask for UpsAccVp5 in the Status Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_BF_MASK 0x00008000


/**
 * The mask for UpsAccVp4 in the Status Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_BF_MASK 0x00004000


/**
 * The mask for UpsAccVp3 in the Status Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_BF_MASK 0x00002000


/**
 * The mask for UpsAccVp2 in the Status Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_BF_MASK 0x00001000


/**
 * The mask for UpsAccVp1 in the Status Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_BF_MASK 0x00000800


/**
 * The mask for UpsPer in the Status Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XFLC_STATUS_UPSPER_BF_MASK 0x00000400


/**
 * The mask for UpsAsy in the Status Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XFLC_STATUS_UPSASY_BF_MASK 0x00000200


/**
 * The mask for DnsAcc in the Status Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XFLC_STATUS_DNSACC_BF_MASK 0x00000100


/**
 * The mask for DnsPer in the Status Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XFLC_STATUS_DNSPER_BF_MASK 0x00000080


/**
 * The mask for DnsAsy in the Status Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XFLC_STATUS_DNSASY_BF_MASK 0x00000040


/**
 * The mask for BlkAccOut in the Status Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_BF_MASK 0x00000020


/**
 * The mask for BlkAccIn in the Status Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XFLC_STATUS_BLKACCIN_BF_MASK 0x00000010


/**
 * The mask for BlkPerOut in the Status Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_BF_MASK 0x00000008


/**
 * The mask for BlkPerIn in the Status Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XFLC_STATUS_BLKPERIN_BF_MASK 0x00000004


/**
 * The mask for BlkAsyOut in the Status Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_BF_MASK 0x00000002


/**
 * The mask for BlkAsyIn in the Status Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XFLC_STATUS_BLKASYIN_BF_MASK 0x00000001



/**
 * Reset value for UpsAccVp7 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp6 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp5 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp4 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp3 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp2 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_BF_RESET 0x00000000


/**
 * Reset value for UpsAccVp1 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_BF_RESET 0x00000000


/**
 * Reset value for UpsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSPER_BF_RESET 0x00000000


/**
 * Reset value for UpsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSASY_BF_RESET 0x00000000


/**
 * Reset value for DnsAcc in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSACC_BF_RESET 0x00000000


/**
 * Reset value for DnsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSPER_BF_RESET 0x00000000


/**
 * Reset value for DnsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSASY_BF_RESET 0x00000000


/**
 * Reset value for BlkAccOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_BF_RESET 0x00000000


/**
 * Reset value for BlkAccIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCIN_BF_RESET 0x00000000


/**
 * Reset value for BlkPerOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_BF_RESET 0x00000000


/**
 * Reset value for BlkPerIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPERIN_BF_RESET 0x00000000


/**
 * Reset value for BlkAsyOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_BF_RESET 0x00000000


/**
 * Reset value for BlkAsyIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYIN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Config Register
***********************************************************/
/**
 * The Shift for EnetRxQid in the Config Register
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_BF_SHIFT 14
/**
 * The Shift for PktBufThresh in the Config Register
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_SHIFT 10
/**
 * The Shift for VportFilter in the Config Register
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_BF_SHIFT 9
/**
 * The Shift for SrdyTout in the Config Register
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_BF_SHIFT 1
/**
 * The Shift for SlowLink in the Config Register
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_BF_SHIFT 0
/**
 * The mask for EnetRxQid in the Config Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK 0x00004000


/**
 * The mask for PktBufThresh in the Config Register
 * Binary value of mask is 00000000000000000011110000000000
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK 0x00003C00


/**
 * The mask for VportFilter in the Config Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK 0x00000200


/**
 * The mask for SrdyTout in the Config Register
 * Binary value of mask is 00000000000000000000000111111110
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK 0x000001FE


/**
 * The mask for SlowLink in the Config Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK 0x00000001



/**
 * Reset value for EnetRxQid in the Config Register
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_BF_RESET 0x00000000


/**
 * Reset value for PktBufThresh in the Config Register
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_RESET 0x00000005


/**
 * Reset value for VportFilter in the Config Register
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_BF_RESET 0x00000000


/**
 * Reset value for SrdyTout in the Config Register
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_BF_RESET 0x00000000


/**
 * Reset value for SlowLink in the Config Register
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Status Register
***********************************************************/
/**
 * The Shift for PfifoCnt in the Status Register
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_BF_SHIFT 8
/**
 * The Shift for RetQReq in the Status Register
 */
#define XCSR_XCRM_STATUS_RETQREQ_BF_SHIFT 0
/**
 * The mask for PfifoCnt in the Status Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_BF_MASK 0x0000FF00


/**
 * The mask for RetQReq in the Status Register
 * Binary value of mask is 00000000000000000000000001111111
 */
#define XCSR_XCRM_STATUS_RETQREQ_BF_MASK 0x0000007F



/**
 * Reset value for PfifoCnt in the Status Register
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_BF_RESET 0x00000000


/**
 * Reset value for RetQReq in the Status Register
 */
#define XCSR_XCRM_STATUS_RETQREQ_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the QosStatus0 Register
***********************************************************/
/**
 * The Shift for TSStart in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_BF_SHIFT 16
/**
 * The Shift for TSEnd in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_BF_SHIFT 0
/**
 * The mask for TSStart in the QosStatus0 Register
 * Binary value of mask is 11111111111111110000000000000000
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_BF_MASK 0xFFFF0000


/**
 * The mask for TSEnd in the QosStatus0 Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_BF_MASK 0x0000FFFF



/**
 * Reset value for TSStart in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_BF_RESET 0x00000000


/**
 * Reset value for TSEnd in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the QosStatus1 Register
***********************************************************/
/**
 * The Shift for LatencyH in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_SHIFT 16
/**
 * The Shift for LatencyL in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_SHIFT 0
/**
 * The mask for LatencyH in the QosStatus1 Register
 * Binary value of mask is 11111111111111110000000000000000
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_MASK 0xFFFF0000


/**
 * The mask for LatencyL in the QosStatus1 Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_MASK 0x0000FFFF



/**
 * Reset value for LatencyH in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_RESET 0x00000000


/**
 * Reset value for LatencyL in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Config Register
***********************************************************/

/**
 * The Shift for Peridskip in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_BF_SHIFT 8

/**
 * The Shift for PeridskipDisable in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_SHIFT 7

/**
 * The Shift for Bufmode in the Config Register
 */
#define XCSR_XCTM_CONFIG_BUFMODE_BF_SHIFT 5
/**
 * The Shift for SofTxType in the Config Register
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_BF_SHIFT 3
/**
 * The Shift for Packetized in the Config Register
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_BF_SHIFT 2
/**
 * The Shift for ThrottleEn in the Config Register
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_BF_SHIFT 1
/**
 * The Shift for Running in the Config Register
 */
#define XCSR_XCTM_CONFIG_RUNNING_BF_SHIFT 0

/**
 * The mask for Peridskip in the Config Register
 * Binary value of mask is 00000000111111111111111100000000
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK 0x0000ff00

/**
 * The mask for PeridskipDisable in the Config Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK 0x00000080

/**
 * The mask for Bufmode in the Config Register
 * Binary value of mask is 00000000000000000000000001100000
 */
#define XCSR_XCTM_CONFIG_BUFMODE_BF_MASK 0x00000060


/**
 * The mask for SofTxType in the Config Register
 * Binary value of mask is 00000000000000000000000000011000
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK 0x00000018


/**
 * The mask for Packetized in the Config Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK 0x00000004


/**
 * The mask for ThrottleEn in the Config Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK 0x00000002


/**
 * The mask for Running in the Config Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XCTM_CONFIG_RUNNING_BF_MASK 0x00000001

/**
 * Reset value for Peridskip in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_BF_RESET 0x00000048


/**
 * Reset value for PeridskipDisable in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_RESET 0x00000000


/**
 * Reset value for Bufmode in the Config Register
 */
#define XCSR_XCTM_CONFIG_BUFMODE_BF_RESET 0x00000001


/**
 * Reset value for SofTxType in the Config Register
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_BF_RESET 0x00000002


/**
 * Reset value for Packetized in the Config Register
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_BF_RESET 0x00000000


/**
 * Reset value for ThrottleEn in the Config Register
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_BF_RESET 0x00000000


/**
 * Reset value for Running in the Config Register
 */
#define XCSR_XCTM_CONFIG_RUNNING_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ThshLevels Register
***********************************************************/
/**
 * The Shift for Frm in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_FRM_BF_SHIFT 16
/**
 * The Shift for Wrd in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_WRD_BF_SHIFT 8
/**
 * The Shift for Cyc in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_CYC_BF_SHIFT 0
/**
 * The mask for Frm in the ThshLevels Register
 * Binary value of mask is 00000000000111110000000000000000
 */
#define XCSR_XCTM_THSHLEVELS_FRM_BF_MASK 0x001F0000


/**
 * The mask for Wrd in the ThshLevels Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define XCSR_XCTM_THSHLEVELS_WRD_BF_MASK 0x0000FF00


/**
 * The mask for Cyc in the ThshLevels Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XCSR_XCTM_THSHLEVELS_CYC_BF_MASK 0x000000FF



/**
 * Reset value for Frm in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_FRM_BF_RESET 0x00000000


/**
 * Reset value for Wrd in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_WRD_BF_RESET 0x00000000


/**
 * Reset value for Cyc in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_CYC_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the ThshEpType Register
***********************************************************/
/**
 * The Shift for Isoc in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_BF_SHIFT 24
/**
 * The Shift for Intr in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_BF_SHIFT 16
/**
 * The Shift for Bulk in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_BF_SHIFT 8
/**
 * The Shift for Ctrl in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_BF_SHIFT 0
/**
 * The mask for Isoc in the ThshEpType Register
 * Binary value of mask is 11111111000000000000000000000000
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK 0xFF000000


/**
 * The mask for Intr in the ThshEpType Register
 * Binary value of mask is 00000000111111110000000000000000
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK 0x00FF0000


/**
 * The mask for Bulk in the ThshEpType Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK 0x0000FF00


/**
 * The mask for Ctrl in the ThshEpType Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK 0x000000FF



/**
 * Reset value for Isoc in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_BF_RESET 0x00000045


/**
 * Reset value for Intr in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_BF_RESET 0x00000045


/**
 * Reset value for Bulk in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_BF_RESET 0x00000023


/**
 * Reset value for Ctrl in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_BF_RESET 0x00000006

/***********************************************************
  BitFields defs from the SrcTxEn Register
***********************************************************/
/**
 * The Shift for Qos in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_QOS_BF_SHIFT 8
/**
 * The Shift for Xflc in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_XFLC_BF_SHIFT 7
/**
 * The Shift for SQaccbulk in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_BF_SHIFT 6
/**
 * The Shift for SQperiodic in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_SHIFT 5
/**
 * The Shift for SQasync in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_BF_SHIFT 4
/**
 * The Shift for SQcputxenet in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_SHIFT 3
/**
 * The Shift for SQcputxusb in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_SHIFT 2
/**
 * The Shift for SQcputx in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_BF_SHIFT 1
/**
 * The Shift for SQsof in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_BF_SHIFT 0
/**
 * The mask for Qos in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XCTM_SRCTXEN_QOS_BF_MASK 0x00000100


/**
 * The mask for Xflc in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XCSR_XCTM_SRCTXEN_XFLC_BF_MASK 0x00000080


/**
 * The mask for SQaccbulk in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK 0x00000040


/**
 * The mask for SQperiodic in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK 0x00000020


/**
 * The mask for SQasync in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK 0x00000010


/**
 * The mask for SQcputxenet in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK 0x00000008


/**
 * The mask for SQcputxusb in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK 0x00000004


/**
 * The mask for SQcputx in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK 0x00000002


/**
 * The mask for SQsof in the SrcTxEn Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK 0x00000001



/**
 * Reset value for Qos in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_QOS_BF_RESET 0x00000001


/**
 * Reset value for Xflc in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_XFLC_BF_RESET 0x00000001


/**
 * Reset value for SQaccbulk in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_BF_RESET 0x00000001


/**
 * Reset value for SQperiodic in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_RESET 0x00000001


/**
 * Reset value for SQasync in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_BF_RESET 0x00000001


/**
 * Reset value for SQcputxenet in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_RESET 0x00000001


/**
 * Reset value for SQcputxusb in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_RESET 0x00000001


/**
 * Reset value for SQcputx in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_BF_RESET 0x00000001


/**
 * Reset value for SQsof in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_BF_RESET 0x00000001

/***********************************************************
  BitFields defs from the QosConfig Register
***********************************************************/
/**
 * The Shift for Error in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_BF_SHIFT 10
/**
 * The Shift for IFGmode in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_BF_SHIFT 8
/**
 * The Shift for Iterations in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_SHIFT 6
/**
 * The Shift for PyldSize in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_SHIFT 4
/**
 * The Shift for Vport in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_BF_SHIFT 1
/**
 * The Shift for Go in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_GO_BF_SHIFT 0
/**
 * The mask for Error in the QosConfig Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_BF_MASK 0x00000400


/**
 * The mask for IFGmode in the QosConfig Register
 * Binary value of mask is 00000000000000000000001100000000
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK 0x00000300


/**
 * The mask for Iterations in the QosConfig Register
 * Binary value of mask is 00000000000000000000000011000000
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK 0x000000C0


/**
 * The mask for PyldSize in the QosConfig Register
 * Binary value of mask is 00000000000000000000000000110000
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK 0x00000030


/**
 * The mask for Vport in the QosConfig Register
 * Binary value of mask is 00000000000000000000000000001110
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK 0x0000000E


/**
 * The mask for Go in the QosConfig Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XCTM_QOSCONFIG_GO_BF_MASK 0x00000001



/**
 * Reset value for Error in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_BF_RESET 0x00000000


/**
 * Reset value for IFGmode in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_BF_RESET 0x00000000


/**
 * Reset value for Iterations in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_RESET 0x00000000


/**
 * Reset value for PyldSize in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_RESET 0x00000000


/**
 * Reset value for Vport in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_BF_RESET 0x00000001


/**
 * Reset value for Go in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_GO_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Corrupt Register
***********************************************************/
/**
 * The Shift for AddrEndpt in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_BF_SHIFT 21
/**
 * The Shift for AddrEndptEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_SHIFT 20
/**
 * The Shift for TagType in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_BF_SHIFT 15
/**
 * The Shift for TagTypeEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_SHIFT 14
/**
 * The Shift for Vport in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORT_BF_SHIFT 9
/**
 * The Shift for VportEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_BF_SHIFT 8
/**
 * The Shift for LnkDat in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_BF_SHIFT 6
/**
 * The Shift for LnkHdr in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_BF_SHIFT 5
/**
 * The Shift for DatN in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DATN_BF_SHIFT 4
/**
 * The Shift for Dat0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DAT0_BF_SHIFT 3
/**
 * The Shift for Hdr1 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR1_BF_SHIFT 2
/**
 * The Shift for Hdr0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR0_BF_SHIFT 1
/**
 * The Shift for Go in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_GO_BF_SHIFT 0
/**
 * The mask for AddrEndpt in the Corrupt Register
 * Binary value of mask is 11111111111000000000000000000000
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK 0xFFE00000


/**
 * The mask for AddrEndptEn in the Corrupt Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK 0x00100000


/**
 * The mask for TagType in the Corrupt Register
 * Binary value of mask is 00000000000001111000000000000000
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK 0x00078000


/**
 * The mask for TagTypeEn in the Corrupt Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK 0x00004000


/**
 * The mask for Vport in the Corrupt Register
 * Binary value of mask is 00000000000000000000111000000000
 */
#define XCSR_XCTM_CORRUPT_VPORT_BF_MASK 0x00000E00


/**
 * The mask for VportEn in the Corrupt Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK 0x00000100


/**
 * The mask for LnkDat in the Corrupt Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK 0x00000040


/**
 * The mask for LnkHdr in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK 0x00000020


/**
 * The mask for DatN in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XCSR_XCTM_CORRUPT_DATN_BF_MASK 0x00000010


/**
 * The mask for Dat0 in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XCSR_XCTM_CORRUPT_DAT0_BF_MASK 0x00000008


/**
 * The mask for Hdr1 in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XCSR_XCTM_CORRUPT_HDR1_BF_MASK 0x00000004


/**
 * The mask for Hdr0 in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XCSR_XCTM_CORRUPT_HDR0_BF_MASK 0x00000002


/**
 * The mask for Go in the Corrupt Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XCSR_XCTM_CORRUPT_GO_BF_MASK 0x00000001



/**
 * Reset value for AddrEndpt in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_BF_RESET 0x00000000


/**
 * Reset value for AddrEndptEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_RESET 0x00000000


/**
 * Reset value for TagType in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_BF_RESET 0x00000000


/**
 * Reset value for TagTypeEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_RESET 0x00000000


/**
 * Reset value for Vport in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORT_BF_RESET 0x00000000


/**
 * Reset value for VportEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_BF_RESET 0x00000000


/**
 * Reset value for LnkDat in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_BF_RESET 0x00000000


/**
 * Reset value for LnkHdr in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_BF_RESET 0x00000000


/**
 * Reset value for DatN in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DATN_BF_RESET 0x00000000


/**
 * Reset value for Dat0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DAT0_BF_RESET 0x00000000


/**
 * Reset value for Hdr1 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR1_BF_RESET 0x00000000


/**
 * Reset value for Hdr0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR0_BF_RESET 0x00000000


/**
 * Reset value for Go in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_GO_BF_RESET 0x00000000




/* CMacroHeaderView.RegRWMacroVP per Register (and subclasses) */

/*****************************************************************************
 The Id register is read-only
******************************************************************************/

/**
 * The Read Macro for the Id Register
 */
#define XCSR_XUSB_ID_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_ID_REG_OFFSET,0))

/*****************************************************************************
 The Rev register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rev Register
 */
#define XCSR_XUSB_REV_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_REV_REG_OFFSET,0))

/*****************************************************************************
 The ModEn register is read-write
******************************************************************************/

/**
 * The Read Macro for the ModEn Register
 */
#define XCSR_XUSB_MODEN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0))

/**
 * The Write Macro for the ModEn Register
 */
#define XCSR_XUSB_MODEN_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntEn0 register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0))

/**
 * The Write Macro for the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntEn1 register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0))

/**
 * The Write Macro for the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntFlg0 register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0))

/*****************************************************************************
 The IntFlg1 register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0))

/*****************************************************************************
 The IntSrc0 register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0))

/*****************************************************************************
 The IntSrc1 register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0))

/*****************************************************************************
 The IntClr0 register is write-only
******************************************************************************/

/**
 * The Write Macro for the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntClr1 register is write-only
******************************************************************************/

/**
 * The Write Macro for the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,(value)))

/*****************************************************************************
 The SQidIntCtrl register is read-write
******************************************************************************/

/**
 * The Read Macro for the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0))

/**
 * The Write Macro for the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Scratch3 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0))

/**
 * The Write Macro for the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Scratch2 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0))

/**
 * The Write Macro for the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Scratch1 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0))

/**
 * The Write Macro for the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Scratch0 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0))

/**
 * The Write Macro for the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Control register is read-write
******************************************************************************/

/**
 * The Read Macro for the Control Register
 */
#define XCSR_XSST_CONTROL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0))

/**
 * The Write Macro for the Control Register
 */
#define XCSR_XSST_CONTROL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The SstStatus2 register is read-only
******************************************************************************/

/**
 * The Read Macro for the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0))

/*****************************************************************************
 The SstStatus1 register is read-only
******************************************************************************/

/**
 * The Read Macro for the SstStatus1 Register
 */
#define XCSR_XSST_SSTSTATUS1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XSST_SSTSTATUS1_REG_OFFSET,0))

/*****************************************************************************
 The SstStatus0 register is read-only
******************************************************************************/

/**
 * The Read Macro for the SstStatus0 Register
 */
#define XCSR_XSST_SSTSTATUS0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XSST_SSTSTATUS0_REG_OFFSET,0))

/*****************************************************************************
 The Config0 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Config0 Register
 */
#define XCSR_XICS_CONFIG0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0))

/**
 * The Write Macro for the Config0 Register
 */
#define XCSR_XICS_CONFIG0_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Config1 register is read-write
******************************************************************************/

/**
 * The Read Macro for the Config1 Register
 */
#define XCSR_XICS_CONFIG1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0))

/**
 * The Write Macro for the Config1 Register
 */
#define XCSR_XICS_CONFIG1_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ControlQAcc register is read-write
******************************************************************************/

/**
 * The Read Macro for the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0))

/**
 * The Write Macro for the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ControlQAllo register is read-write
******************************************************************************/

/**
 * The Read Macro for the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0))

/**
 * The Write Macro for the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Status register is read-only
******************************************************************************/

/**
 * The Read Macro for the Status Register
 */
#define XCSR_XICS_STATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0))

/*****************************************************************************
 The StatusQAcc0 register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_STATUSQACC0_REG_OFFSET,0))

/*****************************************************************************
 The StatusQAcc1 register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatusQAcc1 Register
 */
#define XCSR_XICS_STATUSQACC1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_STATUSQACC1_REG_OFFSET,0))

/*****************************************************************************
 The StatusQAcc2 register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatusQAcc2 Register
 */
#define XCSR_XICS_STATUSQACC2_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_STATUSQACC2_REG_OFFSET,0))

/*****************************************************************************
 The StatusQAllo register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatusQAllo Register
 */
#define XCSR_XICS_STATUSQALLO_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_STATUSQALLO_REG_OFFSET,0))

/*****************************************************************************
 The FreeCntLow register is read-only
******************************************************************************/

/**
 * The Read Macro for the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_FREECNTLOW_REG_OFFSET,0))

/*****************************************************************************
 The FlowErr register is read-only
******************************************************************************/

/**
 * The Read Macro for the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0))

/*****************************************************************************
 The QType register is read-write
******************************************************************************/

/**
 * The Read Macro for the QType Register
 */
#define XCSR_XFLC_QTYPE_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0))

/**
 * The Write Macro for the QType Register
 */
#define XCSR_XFLC_QTYPE_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,(value)))

/*****************************************************************************
 The RxTableWacc register is read-write
******************************************************************************/

/**
 * The Read Macro for the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0))

/**
 * The Write Macro for the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Status register is read-only
******************************************************************************/

/**
 * The Read Macro for the Status Register
 */
#define XCSR_XFLC_STATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0))

/*****************************************************************************
 The Config register is read-write
******************************************************************************/

/**
 * The Read Macro for the Config Register
 */
#define XCSR_XCRM_CONFIG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0))

/**
 * The Write Macro for the Config Register
 */
#define XCSR_XCRM_CONFIG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Status register is read-only
******************************************************************************/

/**
 * The Read Macro for the Status Register
 */
#define XCSR_XCRM_STATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCRM_STATUS_REG_OFFSET,0))

/*****************************************************************************
 The QosStatus0 register is read-only
******************************************************************************/

/**
 * The Read Macro for the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCRM_QOSSTATUS0_REG_OFFSET,0))

/*****************************************************************************
 The QosStatus1 register is read-only
******************************************************************************/

/**
 * The Read Macro for the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCRM_QOSSTATUS1_REG_OFFSET,0))

/*****************************************************************************
 The Config register is read-write
******************************************************************************/

/**
 * The Read Macro for the Config Register
 */
#define XCSR_XCTM_CONFIG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0))

/**
 * The Write Macro for the Config Register
 */
#define XCSR_XCTM_CONFIG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ThshLevels register is read-write
******************************************************************************/

/**
 * The Read Macro for the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0))

/**
 * The Write Macro for the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,(value)))

/*****************************************************************************
 The ThshEpType register is read-write
******************************************************************************/

/**
 * The Read Macro for the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0))

/**
 * The Write Macro for the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,(value)))

/*****************************************************************************
 The SrcTxEn register is read-write
******************************************************************************/

/**
 * The Read Macro for the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0))

/**
 * The Write Macro for the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,(value)))

/*****************************************************************************
 The QosConfig register is read-write
******************************************************************************/

/**
 * The Read Macro for the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0))

/**
 * The Write Macro for the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Corrupt register is read-write
******************************************************************************/

/**
 * The Read Macro for the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0))

/**
 * The Write Macro for the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,(value)))


/* CMacroHeaderView.BfROMacroVP per ReadOnlyBitField (and subclasses) */

/******************************************************************************
 The Id ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Id in the Id Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_ID_ID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_ID_REG_OFFSET,0,XCSR_XUSB_ID_ID_BF_MASK,XCSR_XUSB_ID_ID_BF_SHIFT))

/**
 * The Read then Mask Macro for Id in the Id Register
 * This does not do a shift.
 */
#define XCSR_XUSB_ID_ID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_ID_REG_OFFSET,0,XCSR_XUSB_ID_ID_BF_MASK))

/**
 * The Get Macro for Id in the Id Register
 */
#define XCSR_XUSB_ID_ID_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_ID_ID_BF_MASK,XCSR_XUSB_ID_ID_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMinor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMinor in the Rev Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_REV_CVSMINOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_REV_REG_OFFSET,0,XCSR_XUSB_REV_CVSMINOR_BF_MASK,XCSR_XUSB_REV_CVSMINOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMinor in the Rev Register
 * This does not do a shift.
 */
#define XCSR_XUSB_REV_CVSMINOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_REV_REG_OFFSET,0,XCSR_XUSB_REV_CVSMINOR_BF_MASK))

/**
 * The Get Macro for CvsMinor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMINOR_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_REV_CVSMINOR_BF_MASK,XCSR_XUSB_REV_CVSMINOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMajor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMajor in the Rev Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_REV_CVSMAJOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_REV_REG_OFFSET,0,XCSR_XUSB_REV_CVSMAJOR_BF_MASK,XCSR_XUSB_REV_CVSMAJOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMajor in the Rev Register
 * This does not do a shift.
 */
#define XCSR_XUSB_REV_CVSMAJOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_REV_REG_OFFSET,0,XCSR_XUSB_REV_CVSMAJOR_BF_MASK))

/**
 * The Get Macro for CvsMajor in the Rev Register
 */
#define XCSR_XUSB_REV_CVSMAJOR_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_REV_CVSMAJOR_BF_MASK,XCSR_XUSB_REV_CVSMAJOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexCtrl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexCtrl in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexCtrl in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_MASK))

/**
 * The Get Macro for Irq0LexCtrl in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTFLG0_IRQ0LEXCTRL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1CpuRx ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1CpuRx in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1CpuRx in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_MASK))

/**
 * The Get Macro for Irq1CpuRx in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURX_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTFLG0_IRQ1CPURX_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1CpuRxEnet ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1CpuRxEnet in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1CpuRxEnet in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_MASK))

/**
 * The Get Macro for Irq1CpuRxEnet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ1CPURXENET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTFLG0_IRQ1CPURXENET_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsSidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsSidEmpty in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsSidEmpty in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsSidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsSidEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsSidEvent in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsSidEvent in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_MASK))

/**
 * The Get Macro for Irq2XicsSidEvent in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSSIDEVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidEmpty in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidEmpty in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidAEmpty in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidAEmpty in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidAEmpty in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidNew ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidNew in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidNew in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidNew in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDNEW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidRet ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidRet in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidRet in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidRet in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSQIDRET_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsUflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsUflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XicsUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsOflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsOflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XicsOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XICSOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmFifoUflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmFifoUflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XurmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmFifoOflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmFifoOflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XurmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmCmdErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmCmdErr in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmCmdErr in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_MASK))

/**
 * The Get Macro for Irq2XurmCmdErr in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMCMDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmPktLimit ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmPktLimit in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmPktLimit in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_MASK))

/**
 * The Get Macro for Irq2XurmPktLimit in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XURMPKTLIMIT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XutmFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XutmFifoUflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XutmFifoUflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XutmFifoUflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XutmFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XutmFifoOflow in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XutmFifoOflow in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XutmFifoOflow in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmNotInSys ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmNotInSys in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmNotInSys in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_MASK))

/**
 * The Get Macro for Irq3XcrmNotInSys in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMNOTINSYS_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoUflow in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoUflow in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoOflow in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoOflow in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoSync ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoSync in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoSync in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoSync in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmDropFrm ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmDropFrm in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmDropFrm in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_MASK))

/**
 * The Get Macro for Irq3XcrmDropFrm in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMDROPFRM_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmFraming ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmFraming in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmFraming in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_MASK))

/**
 * The Get Macro for Irq3XcrmFraming in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMFRAMING_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmFrmCrc ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmFrmCrc in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmFrmCrc in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmFrmCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMFRMCRC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmPldCrc ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmPldCrc in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmPldCrc in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmPldCrc in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMPLDCRC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmTout ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmTout in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmTout in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_MASK))

/**
 * The Get Macro for Irq3XcrmTout in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCRMTOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmAfifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmAfifoUflow in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmAfifoUflow in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XctmAfifoUflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmAfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmAfifoOflow in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmAfifoOflow in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XctmAfifoOflow in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmPkt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmPkt in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmPkt in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_MASK))

/**
 * The Get Macro for Irq3XctmPkt in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XCTMPKT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XflcEventRemote ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XflcEventRemote in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XflcEventRemote in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_MASK))

/**
 * The Get Macro for Irq3XflcEventRemote in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XflcEventLocal ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XflcEventLocal in the IntFlg1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XflcEventLocal in the IntFlg1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG1_REG_OFFSET,0,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_MASK))

/**
 * The Get Macro for Irq3XflcEventLocal in the IntFlg1 Register
 */
#define XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTFLG1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexCtrl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexCtrl in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexCtrl in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_MASK))

/**
 * The Get Macro for Irq0LexCtrl in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTSRC0_IRQ0LEXCTRL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1CpuRx ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1CpuRx in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1CpuRx in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_MASK))

/**
 * The Get Macro for Irq1CpuRx in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURX_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTSRC0_IRQ1CPURX_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1CpuRxEnet ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1CpuRxEnet in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1CpuRxEnet in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_MASK))

/**
 * The Get Macro for Irq1CpuRxEnet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ1CPURXENET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTSRC0_IRQ1CPURXENET_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsSidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsSidEmpty in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsSidEmpty in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsSidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsSidEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsSidEvent in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsSidEvent in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_MASK))

/**
 * The Get Macro for Irq2XicsSidEvent in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSSIDEVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidEmpty in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidEmpty in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidAEmpty in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidAEmpty in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidAEmpty in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidNew ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidNew in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidNew in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidNew in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDNEW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsQidRet ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsQidRet in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsQidRet in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_MASK))

/**
 * The Get Macro for Irq2XicsQidRet in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSQIDRET_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsUflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsUflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XicsUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XicsOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XicsOflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XicsOflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XicsOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XICSOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmFifoUflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmFifoUflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XurmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmFifoOflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmFifoOflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XurmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmCmdErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmCmdErr in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmCmdErr in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_MASK))

/**
 * The Get Macro for Irq2XurmCmdErr in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMCMDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XurmPktLimit ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XurmPktLimit in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XurmPktLimit in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_MASK))

/**
 * The Get Macro for Irq2XurmPktLimit in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XURMPKTLIMIT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XutmFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XutmFifoUflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XutmFifoUflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XutmFifoUflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq2XutmFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq2XutmFifoOflow in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq2XutmFifoOflow in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq2XutmFifoOflow in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmNotInSys ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmNotInSys in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmNotInSys in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_MASK))

/**
 * The Get Macro for Irq3XcrmNotInSys in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMNOTINSYS_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoUflow in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoUflow in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoOflow in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoOflow in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmAfifoSync ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmAfifoSync in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoSync in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmAfifoSync in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmDropFrm ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmDropFrm in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmDropFrm in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_MASK))

/**
 * The Get Macro for Irq3XcrmDropFrm in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMDROPFRM_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmFraming ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmFraming in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmFraming in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_MASK))

/**
 * The Get Macro for Irq3XcrmFraming in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMFRAMING_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmFrmCrc ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmFrmCrc in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmFrmCrc in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmFrmCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMFRMCRC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmPldCrc ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmPldCrc in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmPldCrc in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_MASK))

/**
 * The Get Macro for Irq3XcrmPldCrc in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMPLDCRC_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XcrmTout ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XcrmTout in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XcrmTout in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_MASK))

/**
 * The Get Macro for Irq3XcrmTout in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCRMTOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmAfifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmAfifoUflow in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmAfifoUflow in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XctmAfifoUflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmAfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmAfifoOflow in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmAfifoOflow in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq3XctmAfifoOflow in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XctmPkt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XctmPkt in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XctmPkt in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_MASK))

/**
 * The Get Macro for Irq3XctmPkt in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XCTMPKT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XflcEventRemote ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XflcEventRemote in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XflcEventRemote in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_MASK))

/**
 * The Get Macro for Irq3XflcEventRemote in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq3XflcEventLocal ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq3XflcEventLocal in the IntSrc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq3XflcEventLocal in the IntSrc1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC1_REG_OFFSET,0,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_MASK))

/**
 * The Get Macro for Irq3XflcEventLocal in the IntSrc1 Register
 */
#define XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTSRC1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(regValue)))

/******************************************************************************
 The InitDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InitDone in the Control Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_CONTROL_INITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_INITDONE_BF_MASK,XCSR_XSST_CONTROL_INITDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for InitDone in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_INITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_INITDONE_BF_MASK))

/**
 * The Get Macro for InitDone in the Control Register
 */
#define XCSR_XSST_CONTROL_INITDONE_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_INITDONE_BF_MASK,XCSR_XSST_CONTROL_INITDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The InSsn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InSsn in the Control Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_CONTROL_INSSN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_INSSN_BF_MASK,XCSR_XSST_CONTROL_INSSN_BF_SHIFT))

/**
 * The Read then Mask Macro for InSsn in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_INSSN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_INSSN_BF_MASK))

/**
 * The Get Macro for InSsn in the Control Register
 */
#define XCSR_XSST_CONTROL_INSSN_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_INSSN_BF_MASK,XCSR_XSST_CONTROL_INSSN_BF_SHIFT,(regValue)))

/******************************************************************************
 The WrFail ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for WrFail in the Control Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_CONTROL_WRFAIL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_WRFAIL_BF_MASK,XCSR_XSST_CONTROL_WRFAIL_BF_SHIFT))

/**
 * The Read then Mask Macro for WrFail in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_WRFAIL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_WRFAIL_BF_MASK))

/**
 * The Get Macro for WrFail in the Control Register
 */
#define XCSR_XSST_CONTROL_WRFAIL_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_WRFAIL_BF_MASK,XCSR_XSST_CONTROL_WRFAIL_BF_SHIFT,(regValue)))

/******************************************************************************
 The LAddr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for LAddr in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_LADDR_BF_MASK,XCSR_XSST_SSTSTATUS2_LADDR_BF_SHIFT))

/**
 * The Read then Mask Macro for LAddr in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_LADDR_BF_MASK))

/**
 * The Get Macro for LAddr in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LADDR_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_LADDR_BF_MASK,XCSR_XSST_SSTSTATUS2_LADDR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Laval ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Laval in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_LAVAL_BF_MASK,XCSR_XSST_SSTSTATUS2_LAVAL_BF_SHIFT))

/**
 * The Read then Mask Macro for Laval in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_LAVAL_BF_MASK))

/**
 * The Get Macro for Laval in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_LAVAL_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_LAVAL_BF_MASK,XCSR_XSST_SSTSTATUS2_LAVAL_BF_SHIFT,(regValue)))

/******************************************************************************
 The InSys ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InSys in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_INSYS_BF_MASK,XCSR_XSST_SSTSTATUS2_INSYS_BF_SHIFT))

/**
 * The Read then Mask Macro for InSys in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_INSYS_BF_MASK))

/**
 * The Get Macro for InSys in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_INSYS_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_INSYS_BF_MASK,XCSR_XSST_SSTSTATUS2_INSYS_BF_SHIFT,(regValue)))

/******************************************************************************
 The Split ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Split in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_SPLIT_BF_MASK,XCSR_XSST_SSTSTATUS2_SPLIT_BF_SHIFT))

/**
 * The Read then Mask Macro for Split in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_SPLIT_BF_MASK))

/**
 * The Get Macro for Split in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_SPLIT_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_SPLIT_BF_MASK,XCSR_XSST_SSTSTATUS2_SPLIT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Vfnen ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Vfnen in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_VFNEN_BF_MASK,XCSR_XSST_SSTSTATUS2_VFNEN_BF_SHIFT))

/**
 * The Read then Mask Macro for Vfnen in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_VFNEN_BF_MASK))

/**
 * The Get Macro for Vfnen in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VFNEN_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_VFNEN_BF_MASK,XCSR_XSST_SSTSTATUS2_VFNEN_BF_SHIFT,(regValue)))

/******************************************************************************
 The Vport ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Vport in the SstStatus2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_VPORT_BF_MASK,XCSR_XSST_SSTSTATUS2_VPORT_BF_SHIFT))

/**
 * The Read then Mask Macro for Vport in the SstStatus2 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS2_REG_OFFSET,0,XCSR_XSST_SSTSTATUS2_VPORT_BF_MASK))

/**
 * The Get Macro for Vport in the SstStatus2 Register
 */
#define XCSR_XSST_SSTSTATUS2_VPORT_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS2_VPORT_BF_MASK,XCSR_XSST_SSTSTATUS2_VPORT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Msw ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Msw in the SstStatus1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS1_MSW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS1_REG_OFFSET,0,XCSR_XSST_SSTSTATUS1_MSW_BF_MASK,XCSR_XSST_SSTSTATUS1_MSW_BF_SHIFT))

/**
 * The Read then Mask Macro for Msw in the SstStatus1 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS1_MSW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS1_REG_OFFSET,0,XCSR_XSST_SSTSTATUS1_MSW_BF_MASK))

/**
 * The Get Macro for Msw in the SstStatus1 Register
 */
#define XCSR_XSST_SSTSTATUS1_MSW_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS1_MSW_BF_MASK,XCSR_XSST_SSTSTATUS1_MSW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Lsw ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Lsw in the SstStatus0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XSST_SSTSTATUS0_LSW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_SSTSTATUS0_REG_OFFSET,0,XCSR_XSST_SSTSTATUS0_LSW_BF_MASK,XCSR_XSST_SSTSTATUS0_LSW_BF_SHIFT))

/**
 * The Read then Mask Macro for Lsw in the SstStatus0 Register
 * This does not do a shift.
 */
#define XCSR_XSST_SSTSTATUS0_LSW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_SSTSTATUS0_REG_OFFSET,0,XCSR_XSST_SSTSTATUS0_LSW_BF_MASK))

/**
 * The Get Macro for Lsw in the SstStatus0 Register
 */
#define XCSR_XSST_SSTSTATUS0_LSW_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_SSTSTATUS0_LSW_BF_MASK,XCSR_XSST_SSTSTATUS0_LSW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rbyte ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rbyte in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_RBYTE_BF_SHIFT))

/**
 * The Read then Mask Macro for Rbyte in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RBYTE_BF_MASK))

/**
 * The Get Macro for Rbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RBYTE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_RBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_RBYTE_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rsof ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rsof in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_RSOF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RSOF_BF_MASK,XCSR_XICS_CONTROLQACC_RSOF_BF_SHIFT))

/**
 * The Read then Mask Macro for Rsof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_RSOF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RSOF_BF_MASK))

/**
 * The Get Macro for Rsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOF_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_RSOF_BF_MASK,XCSR_XICS_CONTROLQACC_RSOF_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rsop ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rsop in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_RSOP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RSOP_BF_MASK,XCSR_XICS_CONTROLQACC_RSOP_BF_SHIFT))

/**
 * The Read then Mask Macro for Rsop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_RSOP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RSOP_BF_MASK))

/**
 * The Get Macro for Rsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RSOP_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_RSOP_BF_MASK,XCSR_XICS_CONTROLQACC_RSOP_BF_SHIFT,(regValue)))

/******************************************************************************
 The Reof ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Reof in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_REOF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_REOF_BF_MASK,XCSR_XICS_CONTROLQACC_REOF_BF_SHIFT))

/**
 * The Read then Mask Macro for Reof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_REOF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_REOF_BF_MASK))

/**
 * The Get Macro for Reof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOF_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_REOF_BF_MASK,XCSR_XICS_CONTROLQACC_REOF_BF_SHIFT,(regValue)))

/******************************************************************************
 The Reop ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Reop in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_REOP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_REOP_BF_MASK,XCSR_XICS_CONTROLQACC_REOP_BF_SHIFT))

/**
 * The Read then Mask Macro for Reop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_REOP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_REOP_BF_MASK))

/**
 * The Get Macro for Reop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_REOP_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_REOP_BF_MASK,XCSR_XICS_CONTROLQACC_REOP_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rderr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rderr in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_RDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RDERR_BF_MASK,XCSR_XICS_CONTROLQACC_RDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Rderr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_RDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RDERR_BF_MASK))

/**
 * The Get Macro for Rderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RDERR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_RDERR_BF_MASK,XCSR_XICS_CONTROLQACC_RDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Rqerr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Rqerr in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_RQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RQERR_BF_MASK,XCSR_XICS_CONTROLQACC_RQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Rqerr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_RQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_RQERR_BF_MASK))

/**
 * The Get Macro for Rqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_RQERR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_RQERR_BF_MASK,XCSR_XICS_CONTROLQACC_RQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Wqerr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Wqerr in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_WQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WQERR_BF_MASK,XCSR_XICS_CONTROLQACC_WQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Wqerr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WQERR_BF_MASK))

/**
 * The Get Macro for Wqerr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WQERR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WQERR_BF_MASK,XCSR_XICS_CONTROLQACC_WQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The CrcDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CrcDone in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_CRCDONE_BF_MASK,XCSR_XICS_CONTROLQACC_CRCDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for CrcDone in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_CRCDONE_BF_MASK))

/**
 * The Get Macro for CrcDone in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCDONE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_CRCDONE_BF_MASK,XCSR_XICS_CONTROLQACC_CRCDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The CrcValid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CrcValid in the ControlQAcc Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_CRCVALID_BF_MASK,XCSR_XICS_CONTROLQACC_CRCVALID_BF_SHIFT))

/**
 * The Read then Mask Macro for CrcValid in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_CRCVALID_BF_MASK))

/**
 * The Get Macro for CrcValid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_CRCVALID_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_CRCVALID_BF_MASK,XCSR_XICS_CONTROLQACC_CRCVALID_BF_SHIFT,(regValue)))

/******************************************************************************
 The Qerr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Qerr in the ControlQAllo Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQALLO_QERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QERR_BF_MASK,XCSR_XICS_CONTROLQALLO_QERR_BF_SHIFT))

/**
 * The Read then Mask Macro for Qerr in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_QERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QERR_BF_MASK))

/**
 * The Get Macro for Qerr in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QERR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_QERR_BF_MASK,XCSR_XICS_CONTROLQALLO_QERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The NewQ ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for NewQ in the ControlQAllo Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQ_BF_SHIFT))

/**
 * The Read then Mask Macro for NewQ in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQ_BF_MASK))

/**
 * The Get Macro for NewQ in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQ_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_NEWQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQ_BF_SHIFT,(regValue)))

/******************************************************************************
 The InitDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InitDone in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_INITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_INITDONE_BF_MASK,XCSR_XICS_STATUS_INITDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for InitDone in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_INITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_INITDONE_BF_MASK))

/**
 * The Get Macro for InitDone in the Status Register
 */
#define XCSR_XICS_STATUS_INITDONE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_INITDONE_BF_MASK,XCSR_XICS_STATUS_INITDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidEmpty in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_SIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDEMPTY_BF_MASK,XCSR_XICS_STATUS_SIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for SidEmpty in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_SIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDEMPTY_BF_MASK))

/**
 * The Get Macro for SidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_SIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_SIDEMPTY_BF_MASK,XCSR_XICS_STATUS_SIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidAEmptyL ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidAEmptyL in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYL_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYL_BF_SHIFT))

/**
 * The Read then Mask Macro for SidAEmptyL in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYL_BF_MASK))

/**
 * The Get Macro for SidAEmptyL in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYL_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_SIDAEMPTYL_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYL_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidAEmptyM ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidAEmptyM in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYM_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYM_BF_SHIFT))

/**
 * The Read then Mask Macro for SidAEmptyM in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYM_BF_MASK))

/**
 * The Get Macro for SidAEmptyM in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYM_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_SIDAEMPTYM_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYM_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidAEmptyH ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidAEmptyH in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYH_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYH_BF_SHIFT))

/**
 * The Read then Mask Macro for SidAEmptyH in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDAEMPTYH_BF_MASK))

/**
 * The Get Macro for SidAEmptyH in the Status Register
 */
#define XCSR_XICS_STATUS_SIDAEMPTYH_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_SIDAEMPTYH_BF_MASK,XCSR_XICS_STATUS_SIDAEMPTYH_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidFreeCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidFreeCnt in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_SIDFREECNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDFREECNT_BF_MASK,XCSR_XICS_STATUS_SIDFREECNT_BF_SHIFT))

/**
 * The Read then Mask Macro for SidFreeCnt in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_SIDFREECNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_SIDFREECNT_BF_MASK))

/**
 * The Get Macro for SidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_SIDFREECNT_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_SIDFREECNT_BF_MASK,XCSR_XICS_STATUS_SIDFREECNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidEmpty in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_QIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDEMPTY_BF_MASK,XCSR_XICS_STATUS_QIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for QidEmpty in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_QIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDEMPTY_BF_MASK))

/**
 * The Get Macro for QidEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_QIDEMPTY_BF_MASK,XCSR_XICS_STATUS_QIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidAEmpty in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDAEMPTY_BF_MASK,XCSR_XICS_STATUS_QIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for QidAEmpty in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDAEMPTY_BF_MASK))

/**
 * The Get Macro for QidAEmpty in the Status Register
 */
#define XCSR_XICS_STATUS_QIDAEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_QIDAEMPTY_BF_MASK,XCSR_XICS_STATUS_QIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidFreeCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidFreeCnt in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_QIDFREECNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDFREECNT_BF_MASK,XCSR_XICS_STATUS_QIDFREECNT_BF_SHIFT))

/**
 * The Read then Mask Macro for QidFreeCnt in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_QIDFREECNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_QIDFREECNT_BF_MASK))

/**
 * The Get Macro for QidFreeCnt in the Status Register
 */
#define XCSR_XICS_STATUS_QIDFREECNT_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_QIDFREECNT_BF_MASK,XCSR_XICS_STATUS_QIDFREECNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Statistics ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Statistics in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_STATISTICS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_STATISTICS_BF_MASK,XCSR_XICS_STATUS_STATISTICS_BF_SHIFT))

/**
 * The Read then Mask Macro for Statistics in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_STATISTICS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_STATISTICS_BF_MASK))

/**
 * The Get Macro for Statistics in the Status Register
 */
#define XCSR_XICS_STATUS_STATISTICS_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_STATISTICS_BF_MASK,XCSR_XICS_STATUS_STATISTICS_BF_SHIFT,(regValue)))

/******************************************************************************
 The XicsLvl1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for XicsLvl1 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_XICSLVL1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_XICSLVL1_BF_MASK,XCSR_XICS_STATUS_XICSLVL1_BF_SHIFT))

/**
 * The Read then Mask Macro for XicsLvl1 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_XICSLVL1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_XICSLVL1_BF_MASK))

/**
 * The Get Macro for XicsLvl1 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL1_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_XICSLVL1_BF_MASK,XCSR_XICS_STATUS_XICSLVL1_BF_SHIFT,(regValue)))

/******************************************************************************
 The XicsLvl2 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for XicsLvl2 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUS_XICSLVL2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_XICSLVL2_BF_MASK,XCSR_XICS_STATUS_XICSLVL2_BF_SHIFT))

/**
 * The Read then Mask Macro for XicsLvl2 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUS_XICSLVL2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUS_REG_OFFSET,0,XCSR_XICS_STATUS_XICSLVL2_BF_MASK))

/**
 * The Get Macro for XicsLvl2 in the Status Register
 */
#define XCSR_XICS_STATUS_XICSLVL2_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUS_XICSLVL2_BF_MASK,XCSR_XICS_STATUS_XICSLVL2_BF_SHIFT,(regValue)))

/******************************************************************************
 The FrmCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FrmCnt in the StatusQAcc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUSQACC0_REG_OFFSET,0,XCSR_XICS_STATUSQACC0_FRMCNT_BF_MASK,XCSR_XICS_STATUSQACC0_FRMCNT_BF_SHIFT))

/**
 * The Read then Mask Macro for FrmCnt in the StatusQAcc0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUSQACC0_REG_OFFSET,0,XCSR_XICS_STATUSQACC0_FRMCNT_BF_MASK))

/**
 * The Get Macro for FrmCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_FRMCNT_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUSQACC0_FRMCNT_BF_MASK,XCSR_XICS_STATUSQACC0_FRMCNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The WrdCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for WrdCnt in the StatusQAcc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUSQACC0_REG_OFFSET,0,XCSR_XICS_STATUSQACC0_WRDCNT_BF_MASK,XCSR_XICS_STATUSQACC0_WRDCNT_BF_SHIFT))

/**
 * The Read then Mask Macro for WrdCnt in the StatusQAcc0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUSQACC0_REG_OFFSET,0,XCSR_XICS_STATUSQACC0_WRDCNT_BF_MASK))

/**
 * The Get Macro for WrdCnt in the StatusQAcc0 Register
 */
#define XCSR_XICS_STATUSQACC0_WRDCNT_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUSQACC0_WRDCNT_BF_MASK,XCSR_XICS_STATUSQACC0_WRDCNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Msw ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Msw in the StatusQAcc1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUSQACC1_MSW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUSQACC1_REG_OFFSET,0,XCSR_XICS_STATUSQACC1_MSW_BF_MASK,XCSR_XICS_STATUSQACC1_MSW_BF_SHIFT))

/**
 * The Read then Mask Macro for Msw in the StatusQAcc1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUSQACC1_MSW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUSQACC1_REG_OFFSET,0,XCSR_XICS_STATUSQACC1_MSW_BF_MASK))

/**
 * The Get Macro for Msw in the StatusQAcc1 Register
 */
#define XCSR_XICS_STATUSQACC1_MSW_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUSQACC1_MSW_BF_MASK,XCSR_XICS_STATUSQACC1_MSW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Lsw ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Lsw in the StatusQAcc2 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUSQACC2_LSW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUSQACC2_REG_OFFSET,0,XCSR_XICS_STATUSQACC2_LSW_BF_MASK,XCSR_XICS_STATUSQACC2_LSW_BF_SHIFT))

/**
 * The Read then Mask Macro for Lsw in the StatusQAcc2 Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUSQACC2_LSW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUSQACC2_REG_OFFSET,0,XCSR_XICS_STATUSQACC2_LSW_BF_MASK))

/**
 * The Get Macro for Lsw in the StatusQAcc2 Register
 */
#define XCSR_XICS_STATUSQACC2_LSW_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUSQACC2_LSW_BF_MASK,XCSR_XICS_STATUSQACC2_LSW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Allo ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Allo in the StatusQAllo Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_STATUSQALLO_ALLO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_STATUSQALLO_REG_OFFSET,0,XCSR_XICS_STATUSQALLO_ALLO_BF_MASK,XCSR_XICS_STATUSQALLO_ALLO_BF_SHIFT))

/**
 * The Read then Mask Macro for Allo in the StatusQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_STATUSQALLO_ALLO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_STATUSQALLO_REG_OFFSET,0,XCSR_XICS_STATUSQALLO_ALLO_BF_MASK))

/**
 * The Get Macro for Allo in the StatusQAllo Register
 */
#define XCSR_XICS_STATUSQALLO_ALLO_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_STATUSQALLO_ALLO_BF_MASK,XCSR_XICS_STATUSQALLO_ALLO_BF_SHIFT,(regValue)))

/******************************************************************************
 The Qid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Qid in the FreeCntLow Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_FREECNTLOW_QID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_FREECNTLOW_REG_OFFSET,0,XCSR_XICS_FREECNTLOW_QID_BF_MASK,XCSR_XICS_FREECNTLOW_QID_BF_SHIFT))

/**
 * The Read then Mask Macro for Qid in the FreeCntLow Register
 * This does not do a shift.
 */
#define XCSR_XICS_FREECNTLOW_QID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_FREECNTLOW_REG_OFFSET,0,XCSR_XICS_FREECNTLOW_QID_BF_MASK))

/**
 * The Get Macro for Qid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_QID_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_FREECNTLOW_QID_BF_MASK,XCSR_XICS_FREECNTLOW_QID_BF_SHIFT,(regValue)))

/******************************************************************************
 The Interface ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Interface in the FlowErr Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_FLOWERR_INTERFACE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_INTERFACE_BF_MASK,XCSR_XICS_FLOWERR_INTERFACE_BF_SHIFT))

/**
 * The Read then Mask Macro for Interface in the FlowErr Register
 * This does not do a shift.
 */
#define XCSR_XICS_FLOWERR_INTERFACE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_INTERFACE_BF_MASK))

/**
 * The Get Macro for Interface in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_INTERFACE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_FLOWERR_INTERFACE_BF_MASK,XCSR_XICS_FLOWERR_INTERFACE_BF_SHIFT,(regValue)))

/******************************************************************************
 The Event ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Event in the FlowErr Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_FLOWERR_EVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_EVENT_BF_MASK,XCSR_XICS_FLOWERR_EVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for Event in the FlowErr Register
 * This does not do a shift.
 */
#define XCSR_XICS_FLOWERR_EVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_EVENT_BF_MASK))

/**
 * The Get Macro for Event in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_EVENT_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_FLOWERR_EVENT_BF_MASK,XCSR_XICS_FLOWERR_EVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The WrdCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for WrdCnt in the QType Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_QTYPE_WRDCNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WRDCNT_BF_MASK,XCSR_XFLC_QTYPE_WRDCNT_BF_SHIFT))

/**
 * The Read then Mask Macro for WrdCnt in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_WRDCNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WRDCNT_BF_MASK))

/**
 * The Get Macro for WrdCnt in the QType Register
 */
#define XCSR_XFLC_QTYPE_WRDCNT_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_QTYPE_WRDCNT_BF_MASK,XCSR_XFLC_QTYPE_WRDCNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkAsyIn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkAsyIn in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKASYIN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKASYIN_BF_MASK,XCSR_XFLC_STATUS_BLKASYIN_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkAsyIn in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKASYIN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKASYIN_BF_MASK))

/**
 * The Get Macro for BlkAsyIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYIN_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKASYIN_BF_MASK,XCSR_XFLC_STATUS_BLKASYIN_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkAsyOut ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkAsyOut in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKASYOUT_BF_MASK,XCSR_XFLC_STATUS_BLKASYOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkAsyOut in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKASYOUT_BF_MASK))

/**
 * The Get Macro for BlkAsyOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKASYOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKASYOUT_BF_MASK,XCSR_XFLC_STATUS_BLKASYOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkPerIn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkPerIn in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKPERIN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKPERIN_BF_MASK,XCSR_XFLC_STATUS_BLKPERIN_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkPerIn in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKPERIN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKPERIN_BF_MASK))

/**
 * The Get Macro for BlkPerIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPERIN_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKPERIN_BF_MASK,XCSR_XFLC_STATUS_BLKPERIN_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkPerOut ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkPerOut in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKPEROUT_BF_MASK,XCSR_XFLC_STATUS_BLKPEROUT_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkPerOut in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKPEROUT_BF_MASK))

/**
 * The Get Macro for BlkPerOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKPEROUT_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKPEROUT_BF_MASK,XCSR_XFLC_STATUS_BLKPEROUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkAccIn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkAccIn in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKACCIN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKACCIN_BF_MASK,XCSR_XFLC_STATUS_BLKACCIN_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkAccIn in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKACCIN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKACCIN_BF_MASK))

/**
 * The Get Macro for BlkAccIn in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCIN_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKACCIN_BF_MASK,XCSR_XFLC_STATUS_BLKACCIN_BF_SHIFT,(regValue)))

/******************************************************************************
 The BlkAccOut ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BlkAccOut in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKACCOUT_BF_MASK,XCSR_XFLC_STATUS_BLKACCOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for BlkAccOut in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_BLKACCOUT_BF_MASK))

/**
 * The Get Macro for BlkAccOut in the Status Register
 */
#define XCSR_XFLC_STATUS_BLKACCOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_BLKACCOUT_BF_MASK,XCSR_XFLC_STATUS_BLKACCOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The DnsAsy ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for DnsAsy in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_DNSASY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSASY_BF_MASK,XCSR_XFLC_STATUS_DNSASY_BF_SHIFT))

/**
 * The Read then Mask Macro for DnsAsy in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_DNSASY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSASY_BF_MASK))

/**
 * The Get Macro for DnsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSASY_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_DNSASY_BF_MASK,XCSR_XFLC_STATUS_DNSASY_BF_SHIFT,(regValue)))

/******************************************************************************
 The DnsPer ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for DnsPer in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_DNSPER_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSPER_BF_MASK,XCSR_XFLC_STATUS_DNSPER_BF_SHIFT))

/**
 * The Read then Mask Macro for DnsPer in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_DNSPER_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSPER_BF_MASK))

/**
 * The Get Macro for DnsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSPER_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_DNSPER_BF_MASK,XCSR_XFLC_STATUS_DNSPER_BF_SHIFT,(regValue)))

/******************************************************************************
 The DnsAcc ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for DnsAcc in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_DNSACC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSACC_BF_MASK,XCSR_XFLC_STATUS_DNSACC_BF_SHIFT))

/**
 * The Read then Mask Macro for DnsAcc in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_DNSACC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_DNSACC_BF_MASK))

/**
 * The Get Macro for DnsAcc in the Status Register
 */
#define XCSR_XFLC_STATUS_DNSACC_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_DNSACC_BF_MASK,XCSR_XFLC_STATUS_DNSACC_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAsy ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAsy in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSASY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSASY_BF_MASK,XCSR_XFLC_STATUS_UPSASY_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAsy in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSASY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSASY_BF_MASK))

/**
 * The Get Macro for UpsAsy in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSASY_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSASY_BF_MASK,XCSR_XFLC_STATUS_UPSASY_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsPer ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsPer in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSPER_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSPER_BF_MASK,XCSR_XFLC_STATUS_UPSPER_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsPer in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSPER_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSPER_BF_MASK))

/**
 * The Get Macro for UpsPer in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSPER_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSPER_BF_MASK,XCSR_XFLC_STATUS_UPSPER_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp1 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP1_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP1_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp1 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP1_BF_MASK))

/**
 * The Get Macro for UpsAccVp1 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP1_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP1_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP1_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp2 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp2 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP2_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP2_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp2 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP2_BF_MASK))

/**
 * The Get Macro for UpsAccVp2 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP2_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP2_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP2_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp3 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp3 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP3_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP3_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp3 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP3_BF_MASK))

/**
 * The Get Macro for UpsAccVp3 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP3_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP3_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP3_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp4 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp4 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP4_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP4_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp4 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP4_BF_MASK))

/**
 * The Get Macro for UpsAccVp4 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP4_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP4_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP4_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp5 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp5 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP5_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP5_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp5 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP5_BF_MASK))

/**
 * The Get Macro for UpsAccVp5 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP5_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP5_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP5_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp6 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp6 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP6_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP6_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp6 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP6_BF_MASK))

/**
 * The Get Macro for UpsAccVp6 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP6_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP6_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP6_BF_SHIFT,(regValue)))

/******************************************************************************
 The UpsAccVp7 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for UpsAccVp7 in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP7_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP7_BF_SHIFT))

/**
 * The Read then Mask Macro for UpsAccVp7 in the Status Register
 * This does not do a shift.
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_STATUS_REG_OFFSET,0,XCSR_XFLC_STATUS_UPSACCVP7_BF_MASK))

/**
 * The Get Macro for UpsAccVp7 in the Status Register
 */
#define XCSR_XFLC_STATUS_UPSACCVP7_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_STATUS_UPSACCVP7_BF_MASK,XCSR_XFLC_STATUS_UPSACCVP7_BF_SHIFT,(regValue)))

/******************************************************************************
 The RetQReq ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for RetQReq in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_STATUS_RETQREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_STATUS_REG_OFFSET,0,XCSR_XCRM_STATUS_RETQREQ_BF_MASK,XCSR_XCRM_STATUS_RETQREQ_BF_SHIFT))

/**
 * The Read then Mask Macro for RetQReq in the Status Register
 * This does not do a shift.
 */
#define XCSR_XCRM_STATUS_RETQREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_STATUS_REG_OFFSET,0,XCSR_XCRM_STATUS_RETQREQ_BF_MASK))

/**
 * The Get Macro for RetQReq in the Status Register
 */
#define XCSR_XCRM_STATUS_RETQREQ_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_STATUS_RETQREQ_BF_MASK,XCSR_XCRM_STATUS_RETQREQ_BF_SHIFT,(regValue)))

/******************************************************************************
 The PfifoCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PfifoCnt in the Status Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_STATUS_REG_OFFSET,0,XCSR_XCRM_STATUS_PFIFOCNT_BF_MASK,XCSR_XCRM_STATUS_PFIFOCNT_BF_SHIFT))

/**
 * The Read then Mask Macro for PfifoCnt in the Status Register
 * This does not do a shift.
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_STATUS_REG_OFFSET,0,XCSR_XCRM_STATUS_PFIFOCNT_BF_MASK))

/**
 * The Get Macro for PfifoCnt in the Status Register
 */
#define XCSR_XCRM_STATUS_PFIFOCNT_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_STATUS_PFIFOCNT_BF_MASK,XCSR_XCRM_STATUS_PFIFOCNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The TSEnd ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TSEnd in the QosStatus0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_QOSSTATUS0_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS0_TSEND_BF_MASK,XCSR_XCRM_QOSSTATUS0_TSEND_BF_SHIFT))

/**
 * The Read then Mask Macro for TSEnd in the QosStatus0 Register
 * This does not do a shift.
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_QOSSTATUS0_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS0_TSEND_BF_MASK))

/**
 * The Get Macro for TSEnd in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSEND_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_QOSSTATUS0_TSEND_BF_MASK,XCSR_XCRM_QOSSTATUS0_TSEND_BF_SHIFT,(regValue)))

/******************************************************************************
 The TSStart ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TSStart in the QosStatus0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_QOSSTATUS0_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS0_TSSTART_BF_MASK,XCSR_XCRM_QOSSTATUS0_TSSTART_BF_SHIFT))

/**
 * The Read then Mask Macro for TSStart in the QosStatus0 Register
 * This does not do a shift.
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_QOSSTATUS0_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS0_TSSTART_BF_MASK))

/**
 * The Get Macro for TSStart in the QosStatus0 Register
 */
#define XCSR_XCRM_QOSSTATUS0_TSSTART_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_QOSSTATUS0_TSSTART_BF_MASK,XCSR_XCRM_QOSSTATUS0_TSSTART_BF_SHIFT,(regValue)))

/******************************************************************************
 The LatencyL ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for LatencyL in the QosStatus1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_QOSSTATUS1_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_MASK,XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_SHIFT))

/**
 * The Read then Mask Macro for LatencyL in the QosStatus1 Register
 * This does not do a shift.
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_QOSSTATUS1_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_MASK))

/**
 * The Get Macro for LatencyL in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYL_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_MASK,XCSR_XCRM_QOSSTATUS1_LATENCYL_BF_SHIFT,(regValue)))

/******************************************************************************
 The LatencyH ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for LatencyH in the QosStatus1 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_QOSSTATUS1_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_MASK,XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_SHIFT))

/**
 * The Read then Mask Macro for LatencyH in the QosStatus1 Register
 * This does not do a shift.
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_QOSSTATUS1_REG_OFFSET,0,XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_MASK))

/**
 * The Get Macro for LatencyH in the QosStatus1 Register
 */
#define XCSR_XCRM_QOSSTATUS1_LATENCYH_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_MASK,XCSR_XCRM_QOSSTATUS1_LATENCYH_BF_SHIFT,(regValue)))

/******************************************************************************
 The Running ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Running in the Config Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCTM_CONFIG_RUNNING_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_RUNNING_BF_MASK,XCSR_XCTM_CONFIG_RUNNING_BF_SHIFT))

/**
 * The Read then Mask Macro for Running in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_RUNNING_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_RUNNING_BF_MASK))

/**
 * The Get Macro for Running in the Config Register
 */
#define XCSR_XCTM_CONFIG_RUNNING_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_RUNNING_BF_MASK,XCSR_XCTM_CONFIG_RUNNING_BF_SHIFT,(regValue)))

/******************************************************************************
 The Error ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Error in the QosConfig Register
 * This does a read, mask, then shift.
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ERROR_BF_MASK,XCSR_XCTM_QOSCONFIG_ERROR_BF_SHIFT))

/**
 * The Read then Mask Macro for Error in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ERROR_BF_MASK))

/**
 * The Get Macro for Error in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ERROR_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_ERROR_BF_MASK,XCSR_XCTM_QOSCONFIG_ERROR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Sid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Sid in the FreeCntLow Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_FREECNTLOW_SID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_FREECNTLOW_REG_OFFSET,0,XCSR_XICS_FREECNTLOW_SID_BF_MASK,XCSR_XICS_FREECNTLOW_SID_BF_SHIFT))

/**
 * The Read then Mask Macro for Sid in the FreeCntLow Register
 * This does not do a shift.
 */
#define XCSR_XICS_FREECNTLOW_SID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_FREECNTLOW_REG_OFFSET,0,XCSR_XICS_FREECNTLOW_SID_BF_MASK))

/**
 * The Get Macro for Sid in the FreeCntLow Register
 */
#define XCSR_XICS_FREECNTLOW_SID_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_FREECNTLOW_SID_BF_MASK,XCSR_XICS_FREECNTLOW_SID_BF_SHIFT,(regValue)))

/******************************************************************************
 The Qid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Qid in the FlowErr Register
 * This does a read, mask, then shift.
 */
#define XCSR_XICS_FLOWERR_QID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_QID_BF_MASK,XCSR_XICS_FLOWERR_QID_BF_SHIFT))

/**
 * The Read then Mask Macro for Qid in the FlowErr Register
 * This does not do a shift.
 */
#define XCSR_XICS_FLOWERR_QID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_FLOWERR_REG_OFFSET,0,XCSR_XICS_FLOWERR_QID_BF_MASK))

/**
 * The Get Macro for Qid in the FlowErr Register
 */
#define XCSR_XICS_FLOWERR_QID_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_FLOWERR_QID_BF_MASK,XCSR_XICS_FLOWERR_QID_BF_SHIFT,(regValue)))


/* CMacroHeaderView.BfRWMacroVP per ReadWriteBitField (and subclasses) */

/******************************************************************************
 The XcrmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XcrmEn in the ModEn Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_MODEN_XCRMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCRMEN_BF_MASK,XCSR_XUSB_MODEN_XCRMEN_BF_SHIFT))

/**
 * The Write Macro for XcrmEn in the ModEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_MODEN_XCRMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCRMEN_BF_MASK,XCSR_XUSB_MODEN_XCRMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XcrmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCRMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCRMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XcrmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCRMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCRMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XcrmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCRMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCRMEN_BF_MASK))
/**
 * The Get Macro for XcrmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCRMEN_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_MODEN_XCRMEN_BF_MASK,XCSR_XUSB_MODEN_XCRMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XcrmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCRMEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_MODEN_XCRMEN_BF_MASK,XCSR_XUSB_MODEN_XCRMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XctmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XctmEn in the ModEn Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_MODEN_XCTMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCTMEN_BF_MASK,XCSR_XUSB_MODEN_XCTMEN_BF_SHIFT))

/**
 * The Write Macro for XctmEn in the ModEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_MODEN_XCTMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCTMEN_BF_MASK,XCSR_XUSB_MODEN_XCTMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XctmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCTMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCTMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XctmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCTMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCTMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XctmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XCTMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XCTMEN_BF_MASK))
/**
 * The Get Macro for XctmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCTMEN_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_MODEN_XCTMEN_BF_MASK,XCSR_XUSB_MODEN_XCTMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XctmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XCTMEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_MODEN_XCTMEN_BF_MASK,XCSR_XUSB_MODEN_XCTMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XurmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XurmEn in the ModEn Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_MODEN_XURMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XURMEN_BF_MASK,XCSR_XUSB_MODEN_XURMEN_BF_SHIFT))

/**
 * The Write Macro for XurmEn in the ModEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_MODEN_XURMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XURMEN_BF_MASK,XCSR_XUSB_MODEN_XURMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XurmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XURMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XURMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XurmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XURMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XURMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XurmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XURMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XURMEN_BF_MASK))
/**
 * The Get Macro for XurmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XURMEN_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_MODEN_XURMEN_BF_MASK,XCSR_XUSB_MODEN_XURMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XurmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XURMEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_MODEN_XURMEN_BF_MASK,XCSR_XUSB_MODEN_XURMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XutmEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XutmEn in the ModEn Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_MODEN_XUTMEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XUTMEN_BF_MASK,XCSR_XUSB_MODEN_XUTMEN_BF_SHIFT))

/**
 * The Write Macro for XutmEn in the ModEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_MODEN_XUTMEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XUTMEN_BF_MASK,XCSR_XUSB_MODEN_XUTMEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XutmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XUTMEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XUTMEN_BF_MASK))

/**
 * The Read Modify Write Macro for XutmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XUTMEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XUTMEN_BF_MASK,(value)))

/**
 * The Toggle Macro for XutmEn in the ModEn Register
 * This does not do a shift.
 */
#define XCSR_XUSB_MODEN_XUTMEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_MODEN_REG_OFFSET,0,XCSR_XUSB_MODEN_XUTMEN_BF_MASK))
/**
 * The Get Macro for XutmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XUTMEN_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_MODEN_XUTMEN_BF_MASK,XCSR_XUSB_MODEN_XUTMEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XutmEn in the ModEn Register
 */
#define XCSR_XUSB_MODEN_XUTMEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_MODEN_XUTMEN_BF_MASK,XCSR_XUSB_MODEN_XUTMEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexCtrl ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexCtrl in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_SHIFT))

/**
 * The Write Macro for Irq0LexCtrl in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexCtrl in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexCtrl in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexCtrl in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK))
/**
 * The Get Macro for Irq0LexCtrl in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexCtrl in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXCTRL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXCTRL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1CpuRx ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1CpuRx in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_SHIFT))

/**
 * The Write Macro for Irq1CpuRx in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1CpuRx in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1CpuRx in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1CpuRx in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK))
/**
 * The Get Macro for Irq1CpuRx in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1CpuRx in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURX_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURX_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1CpuRxEnet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1CpuRxEnet in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_SHIFT))

/**
 * The Write Macro for Irq1CpuRxEnet in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1CpuRxEnet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1CpuRxEnet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1CpuRxEnet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK))
/**
 * The Get Macro for Irq1CpuRxEnet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1CpuRxEnet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ1CPURXENET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTEN0_IRQ1CPURXENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsSidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsSidEmpty in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsSidEmpty in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsSidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsSidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsSidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK))
/**
 * The Get Macro for Irq2XicsSidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsSidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsSidEvent ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsSidEvent in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsSidEvent in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsSidEvent in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsSidEvent in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsSidEvent in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK))
/**
 * The Get Macro for Irq2XicsSidEvent in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsSidEvent in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSSIDEVENT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsQidEmpty in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsQidEmpty in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsQidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsQidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsQidEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK))
/**
 * The Get Macro for Irq2XicsQidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsQidEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK))
/**
 * The Get Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsQidAEmpty in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidNew ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsQidNew in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsQidNew in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsQidNew in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsQidNew in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsQidNew in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK))
/**
 * The Get Macro for Irq2XicsQidNew in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsQidNew in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDNEW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidRet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsQidRet in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsQidRet in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsQidRet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsQidRet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsQidRet in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK))
/**
 * The Get Macro for Irq2XicsQidRet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsQidRet in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSQIDRET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsUflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsUflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XicsUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XicsOflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XicsOflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XicsOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XicsOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XicsOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XicsOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XicsOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XICSOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmFifoUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XurmFifoUflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XurmFifoUflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XurmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XurmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XurmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XurmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XurmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmFifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XurmFifoOflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XurmFifoOflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XurmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XurmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XurmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XurmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XurmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmCmdErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XurmCmdErr in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_SHIFT))

/**
 * The Write Macro for Irq2XurmCmdErr in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XurmCmdErr in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XurmCmdErr in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XurmCmdErr in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK))
/**
 * The Get Macro for Irq2XurmCmdErr in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XurmCmdErr in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMCMDERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmPktLimit ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XurmPktLimit in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_SHIFT))

/**
 * The Write Macro for Irq2XurmPktLimit in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XurmPktLimit in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XurmPktLimit in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XurmPktLimit in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK))
/**
 * The Get Macro for Irq2XurmPktLimit in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XurmPktLimit in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XURMPKTLIMIT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XutmFifoUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XutmFifoUflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XutmFifoUflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XutmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XutmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XutmFifoUflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XutmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XutmFifoUflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XutmFifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq2XutmFifoOflow in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq2XutmFifoOflow in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq2XutmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq2XutmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq2XutmFifoOflow in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for Irq2XutmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq2XutmFifoOflow in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmNotInSys ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmNotInSys in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmNotInSys in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmNotInSys in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmNotInSys in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmNotInSys in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK))
/**
 * The Get Macro for Irq3XcrmNotInSys in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmNotInSys in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMNOTINSYS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK))
/**
 * The Get Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoSync ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK))
/**
 * The Get Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmAfifoSync in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmDropFrm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmDropFrm in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmDropFrm in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmDropFrm in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmDropFrm in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmDropFrm in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK))
/**
 * The Get Macro for Irq3XcrmDropFrm in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmDropFrm in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMDROPFRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmFraming ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmFraming in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmFraming in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmFraming in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmFraming in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmFraming in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK))
/**
 * The Get Macro for Irq3XcrmFraming in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmFraming in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRAMING_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmFrmCrc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK))
/**
 * The Get Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmFrmCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMFRMCRC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmPldCrc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmPldCrc in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmPldCrc in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmPldCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmPldCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmPldCrc in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK))
/**
 * The Get Macro for Irq3XcrmPldCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmPldCrc in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMPLDCRC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmTout ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XcrmTout in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_SHIFT))

/**
 * The Write Macro for Irq3XcrmTout in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XcrmTout in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XcrmTout in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XcrmTout in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK))
/**
 * The Get Macro for Irq3XcrmTout in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XcrmTout in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCRMTOUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmAfifoUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK))
/**
 * The Get Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XctmAfifoUflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmAfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XctmAfifoOflow in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmPkt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XctmPkt in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_SHIFT))

/**
 * The Write Macro for Irq3XctmPkt in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XctmPkt in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XctmPkt in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XctmPkt in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK))
/**
 * The Get Macro for Irq3XctmPkt in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XctmPkt in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XCTMPKT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XCTMPKT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XflcEventRemote ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XflcEventRemote in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_SHIFT))

/**
 * The Write Macro for Irq3XflcEventRemote in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XflcEventRemote in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XflcEventRemote in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XflcEventRemote in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK))
/**
 * The Get Macro for Irq3XflcEventRemote in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XflcEventRemote in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XflcEventLocal ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq3XflcEventLocal in the IntEn1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_SHIFT))

/**
 * The Write Macro for Irq3XflcEventLocal in the IntEn1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq3XflcEventLocal in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK))

/**
 * The Read Modify Write Macro for Irq3XflcEventLocal in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq3XflcEventLocal in the IntEn1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN1_REG_OFFSET,0,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK))
/**
 * The Get Macro for Irq3XflcEventLocal in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq3XflcEventLocal in the IntEn1 Register
 */
#define XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTEN1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The LexCtrl ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for LexCtrl in the SQidIntCtrl Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_SHIFT))

/**
 * The Write Macro for LexCtrl in the SQidIntCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for LexCtrl in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK))

/**
 * The Read Modify Write Macro for LexCtrl in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK,(value)))

/**
 * The Toggle Macro for LexCtrl in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK))
/**
 * The Get Macro for LexCtrl in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for LexCtrl in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXCTRL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXCTRL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CpuRx ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CpuRx in the SQidIntCtrl Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_SHIFT))

/**
 * The Write Macro for CpuRx in the SQidIntCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CpuRx in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK))

/**
 * The Read Modify Write Macro for CpuRx in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK,(value)))

/**
 * The Toggle Macro for CpuRx in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK))
/**
 * The Get Macro for CpuRx in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CpuRx in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURX_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SQIDINTCTRL_CPURX_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURX_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CpuRxEnet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CpuRxEnet in the SQidIntCtrl Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_SHIFT))

/**
 * The Write Macro for CpuRxEnet in the SQidIntCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CpuRxEnet in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK))

/**
 * The Read Modify Write Macro for CpuRxEnet in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK,(value)))

/**
 * The Toggle Macro for CpuRxEnet in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK))
/**
 * The Get Macro for CpuRxEnet in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CpuRxEnet in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_CPURXENET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_MASK,XCSR_XUSB_SQIDINTCTRL_CPURXENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Scratch ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Scratch in the Scratch3 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH3_SCRATCH_BF_SHIFT))

/**
 * The Write Macro for Scratch in the Scratch3 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH3_SCRATCH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Scratch in the Scratch3 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK))

/**
 * The Read Modify Write Macro for Scratch in the Scratch3 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK,(value)))

/**
 * The Toggle Macro for Scratch in the Scratch3 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SCRATCH3_REG_OFFSET,0,XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK))
/**
 * The Get Macro for Scratch in the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH3_SCRATCH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Scratch in the Scratch3 Register
 */
#define XCSR_XUSB_SCRATCH3_SCRATCH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SCRATCH3_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH3_SCRATCH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Scratch ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Scratch in the Scratch2 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH2_SCRATCH_BF_SHIFT))

/**
 * The Write Macro for Scratch in the Scratch2 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH2_SCRATCH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Scratch in the Scratch2 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK))

/**
 * The Read Modify Write Macro for Scratch in the Scratch2 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK,(value)))

/**
 * The Toggle Macro for Scratch in the Scratch2 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SCRATCH2_REG_OFFSET,0,XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK))
/**
 * The Get Macro for Scratch in the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH2_SCRATCH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Scratch in the Scratch2 Register
 */
#define XCSR_XUSB_SCRATCH2_SCRATCH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SCRATCH2_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH2_SCRATCH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Scratch ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Scratch in the Scratch1 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH1_SCRATCH_BF_SHIFT))

/**
 * The Write Macro for Scratch in the Scratch1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH1_SCRATCH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Scratch in the Scratch1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK))

/**
 * The Read Modify Write Macro for Scratch in the Scratch1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK,(value)))

/**
 * The Toggle Macro for Scratch in the Scratch1 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SCRATCH1_REG_OFFSET,0,XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK))
/**
 * The Get Macro for Scratch in the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH1_SCRATCH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Scratch in the Scratch1 Register
 */
#define XCSR_XUSB_SCRATCH1_SCRATCH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SCRATCH1_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH1_SCRATCH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Scratch ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Scratch in the Scratch0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH0_SCRATCH_BF_SHIFT))

/**
 * The Write Macro for Scratch in the Scratch0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH0_SCRATCH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Scratch in the Scratch0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK))

/**
 * The Read Modify Write Macro for Scratch in the Scratch0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK,(value)))

/**
 * The Toggle Macro for Scratch in the Scratch0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SCRATCH0_REG_OFFSET,0,XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK))
/**
 * The Get Macro for Scratch in the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH0_SCRATCH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Scratch in the Scratch0 Register
 */
#define XCSR_XUSB_SCRATCH0_SCRATCH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SCRATCH0_SCRATCH_BF_MASK,XCSR_XUSB_SCRATCH0_SCRATCH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The AccMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for AccMode in the Control Register
 * This does a mask and shift.
 */
#define XCSR_XSST_CONTROL_ACCMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_ACCMODE_BF_MASK,XCSR_XSST_CONTROL_ACCMODE_BF_SHIFT))

/**
 * The Write Macro for AccMode in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XSST_CONTROL_ACCMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_ACCMODE_BF_MASK,XCSR_XSST_CONTROL_ACCMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_ACCMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_ACCMODE_BF_MASK))

/**
 * The Read Modify Write Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_ACCMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_ACCMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_ACCMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_ACCMODE_BF_MASK))
/**
 * The Get Macro for AccMode in the Control Register
 */
#define XCSR_XSST_CONTROL_ACCMODE_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_ACCMODE_BF_MASK,XCSR_XSST_CONTROL_ACCMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for AccMode in the Control Register
 */
#define XCSR_XSST_CONTROL_ACCMODE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XSST_CONTROL_ACCMODE_BF_MASK,XCSR_XSST_CONTROL_ACCMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DevEndpt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DevEndpt in the Control Register
 * This does a mask and shift.
 */
#define XCSR_XSST_CONTROL_DEVENDPT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVENDPT_BF_MASK,XCSR_XSST_CONTROL_DEVENDPT_BF_SHIFT))

/**
 * The Write Macro for DevEndpt in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XSST_CONTROL_DEVENDPT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVENDPT_BF_MASK,XCSR_XSST_CONTROL_DEVENDPT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVENDPT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVENDPT_BF_MASK))

/**
 * The Read Modify Write Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVENDPT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVENDPT_BF_MASK,(value)))

/**
 * The Toggle Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVENDPT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVENDPT_BF_MASK))
/**
 * The Get Macro for DevEndpt in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVENDPT_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_DEVENDPT_BF_MASK,XCSR_XSST_CONTROL_DEVENDPT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DevEndpt in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVENDPT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XSST_CONTROL_DEVENDPT_BF_MASK,XCSR_XSST_CONTROL_DEVENDPT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DevAddr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DevAddr in the Control Register
 * This does a mask and shift.
 */
#define XCSR_XSST_CONTROL_DEVADDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVADDR_BF_MASK,XCSR_XSST_CONTROL_DEVADDR_BF_SHIFT))

/**
 * The Write Macro for DevAddr in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XSST_CONTROL_DEVADDR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVADDR_BF_MASK,XCSR_XSST_CONTROL_DEVADDR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVADDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVADDR_BF_MASK))

/**
 * The Read Modify Write Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVADDR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVADDR_BF_MASK,(value)))

/**
 * The Toggle Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_DEVADDR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_DEVADDR_BF_MASK))
/**
 * The Get Macro for DevAddr in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVADDR_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_DEVADDR_BF_MASK,XCSR_XSST_CONTROL_DEVADDR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DevAddr in the Control Register
 */
#define XCSR_XSST_CONTROL_DEVADDR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XSST_CONTROL_DEVADDR_BF_MASK,XCSR_XSST_CONTROL_DEVADDR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The QidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for QidAEmpty in the Config0 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for QidAEmpty in the Config0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for QidAEmpty in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for QidAEmpty in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for QidAEmpty in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK))
/**
 * The Get Macro for QidAEmpty in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for QidAEmpty in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_QIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG0_QIDAEMPTY_BF_MASK,XCSR_XICS_CONFIG0_QIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SidAEmptyL ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SidAEmptyL in the Config1 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_SHIFT))

/**
 * The Write Macro for SidAEmptyL in the Config1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SidAEmptyL in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK))

/**
 * The Read Modify Write Macro for SidAEmptyL in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK,(value)))

/**
 * The Toggle Macro for SidAEmptyL in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK))
/**
 * The Get Macro for SidAEmptyL in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SidAEmptyL in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SidAEmptyM ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SidAEmptyM in the Config1 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_SHIFT))

/**
 * The Write Macro for SidAEmptyM in the Config1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SidAEmptyM in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK))

/**
 * The Read Modify Write Macro for SidAEmptyM in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK,(value)))

/**
 * The Toggle Macro for SidAEmptyM in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK))
/**
 * The Get Macro for SidAEmptyM in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SidAEmptyM in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYM_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SidAEmptyH ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SidAEmptyH in the Config1 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_SHIFT))

/**
 * The Write Macro for SidAEmptyH in the Config1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SidAEmptyH in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK))

/**
 * The Read Modify Write Macro for SidAEmptyH in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK,(value)))

/**
 * The Toggle Macro for SidAEmptyH in the Config1 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG1_REG_OFFSET,0,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK))
/**
 * The Get Macro for SidAEmptyH in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SidAEmptyH in the Config1 Register
 */
#define XCSR_XICS_CONFIG1_SIDAEMPTYH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_MASK,XCSR_XICS_CONFIG1_SIDAEMPTYH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The WNR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for WNR in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WNR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WNR_BF_MASK,XCSR_XICS_CONTROLQACC_WNR_BF_SHIFT))

/**
 * The Write Macro for WNR in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WNR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WNR_BF_MASK,XCSR_XICS_CONTROLQACC_WNR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for WNR in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WNR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WNR_BF_MASK))

/**
 * The Read Modify Write Macro for WNR in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WNR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WNR_BF_MASK,(value)))

/**
 * The Toggle Macro for WNR in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WNR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WNR_BF_MASK))
/**
 * The Get Macro for WNR in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WNR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WNR_BF_MASK,XCSR_XICS_CONTROLQACC_WNR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for WNR in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WNR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WNR_BF_MASK,XCSR_XICS_CONTROLQACC_WNR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Nreq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Nreq in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_NREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_NREQ_BF_MASK,XCSR_XICS_CONTROLQACC_NREQ_BF_SHIFT))

/**
 * The Write Macro for Nreq in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_NREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_NREQ_BF_MASK,XCSR_XICS_CONTROLQACC_NREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Nreq in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_NREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_NREQ_BF_MASK))

/**
 * The Read Modify Write Macro for Nreq in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_NREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_NREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for Nreq in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_NREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_NREQ_BF_MASK))
/**
 * The Get Macro for Nreq in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_NREQ_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_NREQ_BF_MASK,XCSR_XICS_CONTROLQACC_NREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Nreq in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_NREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_NREQ_BF_MASK,XCSR_XICS_CONTROLQACC_NREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Qid ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Qid in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_QID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_QID_BF_MASK,XCSR_XICS_CONTROLQACC_QID_BF_SHIFT))

/**
 * The Write Macro for Qid in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_QID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_QID_BF_MASK,XCSR_XICS_CONTROLQACC_QID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Qid in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_QID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_QID_BF_MASK))

/**
 * The Read Modify Write Macro for Qid in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_QID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_QID_BF_MASK,(value)))

/**
 * The Toggle Macro for Qid in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_QID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_QID_BF_MASK))
/**
 * The Get Macro for Qid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_QID_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_QID_BF_MASK,XCSR_XICS_CONTROLQACC_QID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Qid in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_QID_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_QID_BF_MASK,XCSR_XICS_CONTROLQACC_QID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wbyte ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wbyte in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_WBYTE_BF_SHIFT))

/**
 * The Write Macro for Wbyte in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_WBYTE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wbyte in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK))

/**
 * The Read Modify Write Macro for Wbyte in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK,(value)))

/**
 * The Toggle Macro for Wbyte in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK))
/**
 * The Get Macro for Wbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_WBYTE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wbyte in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WBYTE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WBYTE_BF_MASK,XCSR_XICS_CONTROLQACC_WBYTE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wsof ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wsof in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOF_BF_MASK,XCSR_XICS_CONTROLQACC_WSOF_BF_SHIFT))

/**
 * The Write Macro for Wsof in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WSOF_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOF_BF_MASK,XCSR_XICS_CONTROLQACC_WSOF_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wsof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOF_BF_MASK))

/**
 * The Read Modify Write Macro for Wsof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOF_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOF_BF_MASK,(value)))

/**
 * The Toggle Macro for Wsof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOF_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOF_BF_MASK))
/**
 * The Get Macro for Wsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOF_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WSOF_BF_MASK,XCSR_XICS_CONTROLQACC_WSOF_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wsof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOF_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WSOF_BF_MASK,XCSR_XICS_CONTROLQACC_WSOF_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wsop ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wsop in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOP_BF_MASK,XCSR_XICS_CONTROLQACC_WSOP_BF_SHIFT))

/**
 * The Write Macro for Wsop in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WSOP_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOP_BF_MASK,XCSR_XICS_CONTROLQACC_WSOP_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wsop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOP_BF_MASK))

/**
 * The Read Modify Write Macro for Wsop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOP_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOP_BF_MASK,(value)))

/**
 * The Toggle Macro for Wsop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WSOP_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WSOP_BF_MASK))
/**
 * The Get Macro for Wsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOP_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WSOP_BF_MASK,XCSR_XICS_CONTROLQACC_WSOP_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wsop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WSOP_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WSOP_BF_MASK,XCSR_XICS_CONTROLQACC_WSOP_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Weof ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Weof in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOF_BF_MASK,XCSR_XICS_CONTROLQACC_WEOF_BF_SHIFT))

/**
 * The Write Macro for Weof in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WEOF_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOF_BF_MASK,XCSR_XICS_CONTROLQACC_WEOF_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Weof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOF_BF_MASK))

/**
 * The Read Modify Write Macro for Weof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOF_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOF_BF_MASK,(value)))

/**
 * The Toggle Macro for Weof in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOF_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOF_BF_MASK))
/**
 * The Get Macro for Weof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOF_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WEOF_BF_MASK,XCSR_XICS_CONTROLQACC_WEOF_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Weof in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOF_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WEOF_BF_MASK,XCSR_XICS_CONTROLQACC_WEOF_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Weop ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Weop in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOP_BF_MASK,XCSR_XICS_CONTROLQACC_WEOP_BF_SHIFT))

/**
 * The Write Macro for Weop in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WEOP_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOP_BF_MASK,XCSR_XICS_CONTROLQACC_WEOP_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Weop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOP_BF_MASK))

/**
 * The Read Modify Write Macro for Weop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOP_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOP_BF_MASK,(value)))

/**
 * The Toggle Macro for Weop in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WEOP_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WEOP_BF_MASK))
/**
 * The Get Macro for Weop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOP_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WEOP_BF_MASK,XCSR_XICS_CONTROLQACC_WEOP_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Weop in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WEOP_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WEOP_BF_MASK,XCSR_XICS_CONTROLQACC_WEOP_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wderr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wderr in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_WDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WDERR_BF_MASK,XCSR_XICS_CONTROLQACC_WDERR_BF_SHIFT))

/**
 * The Write Macro for Wderr in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_WDERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WDERR_BF_MASK,XCSR_XICS_CONTROLQACC_WDERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wderr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WDERR_BF_MASK))

/**
 * The Read Modify Write Macro for Wderr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WDERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WDERR_BF_MASK,(value)))

/**
 * The Toggle Macro for Wderr in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_WDERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_WDERR_BF_MASK))
/**
 * The Get Macro for Wderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WDERR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_WDERR_BF_MASK,XCSR_XICS_CONTROLQACC_WDERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wderr in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_WDERR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_WDERR_BF_MASK,XCSR_XICS_CONTROLQACC_WDERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The FluQReq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for FluQReq in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_SHIFT))

/**
 * The Write Macro for FluQReq in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for FluQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK))

/**
 * The Read Modify Write Macro for FluQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for FluQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK))
/**
 * The Get Macro for FluQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for FluQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_FLUQREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_FLUQREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RetQReq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RetQReq in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_SHIFT))

/**
 * The Write Macro for RetQReq in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RetQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK))

/**
 * The Read Modify Write Macro for RetQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for RetQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK))
/**
 * The Get Macro for RetQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RetQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_RETQREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_RETQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_RETQREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The NewQReq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for NewQReq in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_SHIFT))

/**
 * The Write Macro for NewQReq in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for NewQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK))

/**
 * The Read Modify Write Macro for NewQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for NewQReq in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK))
/**
 * The Get Macro for NewQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for NewQReq in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The NewQType ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for NewQType in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_SHIFT))

/**
 * The Write Macro for NewQType in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for NewQType in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK))

/**
 * The Read Modify Write Macro for NewQType in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK,(value)))

/**
 * The Toggle Macro for NewQType in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK))
/**
 * The Get Macro for NewQType in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for NewQType in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_NEWQTYPE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_MASK,XCSR_XICS_CONTROLQALLO_NEWQTYPE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The QRangeSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for QRangeSel in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_SHIFT))

/**
 * The Write Macro for QRangeSel in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for QRangeSel in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK))

/**
 * The Read Modify Write Macro for QRangeSel in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK,(value)))

/**
 * The Toggle Macro for QRangeSel in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK))
/**
 * The Get Macro for QRangeSel in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for QRangeSel in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_QRANGESEL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_MASK,XCSR_XICS_CONTROLQALLO_QRANGESEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The WNR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for WNR in the QType Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_QTYPE_WNR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WNR_BF_MASK,XCSR_XFLC_QTYPE_WNR_BF_SHIFT))

/**
 * The Write Macro for WNR in the QType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_QTYPE_WNR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WNR_BF_MASK,XCSR_XFLC_QTYPE_WNR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for WNR in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_WNR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WNR_BF_MASK))

/**
 * The Read Modify Write Macro for WNR in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_WNR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WNR_BF_MASK,(value)))

/**
 * The Toggle Macro for WNR in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_WNR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_WNR_BF_MASK))
/**
 * The Get Macro for WNR in the QType Register
 */
#define XCSR_XFLC_QTYPE_WNR_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_QTYPE_WNR_BF_MASK,XCSR_XFLC_QTYPE_WNR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for WNR in the QType Register
 */
#define XCSR_XFLC_QTYPE_WNR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_QTYPE_WNR_BF_MASK,XCSR_XFLC_QTYPE_WNR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Type ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Type in the QType Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_QTYPE_TYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_TYPE_BF_MASK,XCSR_XFLC_QTYPE_TYPE_BF_SHIFT))

/**
 * The Write Macro for Type in the QType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_QTYPE_TYPE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_TYPE_BF_MASK,XCSR_XFLC_QTYPE_TYPE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Type in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_TYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_TYPE_BF_MASK))

/**
 * The Read Modify Write Macro for Type in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_TYPE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_TYPE_BF_MASK,(value)))

/**
 * The Toggle Macro for Type in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_TYPE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_TYPE_BF_MASK))
/**
 * The Get Macro for Type in the QType Register
 */
#define XCSR_XFLC_QTYPE_TYPE_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_QTYPE_TYPE_BF_MASK,XCSR_XFLC_QTYPE_TYPE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Type in the QType Register
 */
#define XCSR_XFLC_QTYPE_TYPE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_QTYPE_TYPE_BF_MASK,XCSR_XFLC_QTYPE_TYPE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Vport ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Vport in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK,XCSR_XFLC_RXTABLEWACC_VPORT_BF_SHIFT))

/**
 * The Write Macro for Vport in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK,XCSR_XFLC_RXTABLEWACC_VPORT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Vport in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK))

/**
 * The Read Modify Write Macro for Vport in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK,(value)))

/**
 * The Toggle Macro for Vport in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK))
/**
 * The Get Macro for Vport in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK,XCSR_XFLC_RXTABLEWACC_VPORT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Vport in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_VPORT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_VPORT_BF_MASK,XCSR_XFLC_RXTABLEWACC_VPORT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XicsLvl1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XicsLvl1 in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_SHIFT))

/**
 * The Write Macro for XicsLvl1 in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XicsLvl1 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK))

/**
 * The Read Modify Write Macro for XicsLvl1 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK,(value)))

/**
 * The Toggle Macro for XicsLvl1 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK))
/**
 * The Get Macro for XicsLvl1 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XicsLvl1 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL1_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The XicsLvl2 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for XicsLvl2 in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_SHIFT))

/**
 * The Write Macro for XicsLvl2 in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for XicsLvl2 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK))

/**
 * The Read Modify Write Macro for XicsLvl2 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK,(value)))

/**
 * The Toggle Macro for XicsLvl2 in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK))
/**
 * The Get Macro for XicsLvl2 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_SHIFT,(regValue)))
/**
 * The Set Macro for XicsLvl2 in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_XICSLVL2_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_MASK,XCSR_XFLC_RXTABLEWACC_XICSLVL2_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DnsAsy ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DnsAsy in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_SHIFT))

/**
 * The Write Macro for DnsAsy in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DnsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK))

/**
 * The Read Modify Write Macro for DnsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK,(value)))

/**
 * The Toggle Macro for DnsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK))
/**
 * The Get Macro for DnsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DnsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSASY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_DNSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSASY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DnsPer ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DnsPer in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_SHIFT))

/**
 * The Write Macro for DnsPer in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DnsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK))

/**
 * The Read Modify Write Macro for DnsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK,(value)))

/**
 * The Toggle Macro for DnsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK))
/**
 * The Get Macro for DnsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DnsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSPER_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_DNSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSPER_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DnsAcc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DnsAcc in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_SHIFT))

/**
 * The Write Macro for DnsAcc in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DnsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK))

/**
 * The Read Modify Write Macro for DnsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK,(value)))

/**
 * The Toggle Macro for DnsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK))
/**
 * The Get Macro for DnsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DnsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_DNSACC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_DNSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_DNSACC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The UpsAsy ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for UpsAsy in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_SHIFT))

/**
 * The Write Macro for UpsAsy in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for UpsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK))

/**
 * The Read Modify Write Macro for UpsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK,(value)))

/**
 * The Toggle Macro for UpsAsy in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK))
/**
 * The Get Macro for UpsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for UpsAsy in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSASY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_UPSASY_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSASY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The UpsPer ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for UpsPer in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_SHIFT))

/**
 * The Write Macro for UpsPer in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for UpsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK))

/**
 * The Read Modify Write Macro for UpsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK,(value)))

/**
 * The Toggle Macro for UpsPer in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK))
/**
 * The Get Macro for UpsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_SHIFT,(regValue)))
/**
 * The Set Macro for UpsPer in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSPER_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_UPSPER_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSPER_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The UpsAcc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for UpsAcc in the RxTableWacc Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_SHIFT))

/**
 * The Write Macro for UpsAcc in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for UpsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK))

/**
 * The Read Modify Write Macro for UpsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK,(value)))

/**
 * The Toggle Macro for UpsAcc in the RxTableWacc Register
 * This does not do a shift.
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK))
/**
 * The Get Macro for UpsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for UpsAcc in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_UPSACC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_UPSACC_BF_MASK,XCSR_XFLC_RXTABLEWACC_UPSACC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SlowLink ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SlowLink in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK,XCSR_XCRM_CONFIG_SLOWLINK_BF_SHIFT))

/**
 * The Write Macro for SlowLink in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK,XCSR_XCRM_CONFIG_SLOWLINK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SlowLink in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK))

/**
 * The Read Modify Write Macro for SlowLink in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK,(value)))

/**
 * The Toggle Macro for SlowLink in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK))
/**
 * The Get Macro for SlowLink in the Config Register
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK,XCSR_XCRM_CONFIG_SLOWLINK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SlowLink in the Config Register
 */
#define XCSR_XCRM_CONFIG_SLOWLINK_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCRM_CONFIG_SLOWLINK_BF_MASK,XCSR_XCRM_CONFIG_SLOWLINK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SrdyTout ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SrdyTout in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK,XCSR_XCRM_CONFIG_SRDYTOUT_BF_SHIFT))

/**
 * The Write Macro for SrdyTout in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK,XCSR_XCRM_CONFIG_SRDYTOUT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SrdyTout in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK))

/**
 * The Read Modify Write Macro for SrdyTout in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK,(value)))

/**
 * The Toggle Macro for SrdyTout in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK))
/**
 * The Get Macro for SrdyTout in the Config Register
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK,XCSR_XCRM_CONFIG_SRDYTOUT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SrdyTout in the Config Register
 */
#define XCSR_XCRM_CONFIG_SRDYTOUT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCRM_CONFIG_SRDYTOUT_BF_MASK,XCSR_XCRM_CONFIG_SRDYTOUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The VportFilter ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for VportFilter in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK,XCSR_XCRM_CONFIG_VPORTFILTER_BF_SHIFT))

/**
 * The Write Macro for VportFilter in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK,XCSR_XCRM_CONFIG_VPORTFILTER_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for VportFilter in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK))

/**
 * The Read Modify Write Macro for VportFilter in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK,(value)))

/**
 * The Toggle Macro for VportFilter in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK))
/**
 * The Get Macro for VportFilter in the Config Register
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK,XCSR_XCRM_CONFIG_VPORTFILTER_BF_SHIFT,(regValue)))
/**
 * The Set Macro for VportFilter in the Config Register
 */
#define XCSR_XCRM_CONFIG_VPORTFILTER_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCRM_CONFIG_VPORTFILTER_BF_MASK,XCSR_XCRM_CONFIG_VPORTFILTER_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PktBufThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PktBufThresh in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_SHIFT))

/**
 * The Write Macro for PktBufThresh in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PktBufThresh in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for PktBufThresh in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for PktBufThresh in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK))
/**
 * The Get Macro for PktBufThresh in the Config Register
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PktBufThresh in the Config Register
 */
#define XCSR_XCRM_CONFIG_PKTBUFTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_MASK,XCSR_XCRM_CONFIG_PKTBUFTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The EnetRxQid ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for EnetRxQid in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK,XCSR_XCRM_CONFIG_ENETRXQID_BF_SHIFT))

/**
 * The Write Macro for EnetRxQid in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK,XCSR_XCRM_CONFIG_ENETRXQID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for EnetRxQid in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK))

/**
 * The Read Modify Write Macro for EnetRxQid in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK,(value)))

/**
 * The Toggle Macro for EnetRxQid in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCRM_CONFIG_REG_OFFSET,0,XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK))
/**
 * The Get Macro for EnetRxQid in the Config Register
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_GET_BF(regValue) \
	(GET_BF(XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK,XCSR_XCRM_CONFIG_ENETRXQID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for EnetRxQid in the Config Register
 */
#define XCSR_XCRM_CONFIG_ENETRXQID_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCRM_CONFIG_ENETRXQID_BF_MASK,XCSR_XCRM_CONFIG_ENETRXQID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ThrottleEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ThrottleEn in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK,XCSR_XCTM_CONFIG_THROTTLEEN_BF_SHIFT))

/**
 * The Write Macro for ThrottleEn in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK,XCSR_XCTM_CONFIG_THROTTLEEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ThrottleEn in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK))

/**
 * The Read Modify Write Macro for ThrottleEn in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK,(value)))

/**
 * The Toggle Macro for ThrottleEn in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK))
/**
 * The Get Macro for ThrottleEn in the Config Register
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK,XCSR_XCTM_CONFIG_THROTTLEEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ThrottleEn in the Config Register
 */
#define XCSR_XCTM_CONFIG_THROTTLEEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_THROTTLEEN_BF_MASK,XCSR_XCTM_CONFIG_THROTTLEEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Packetized ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Packetized in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK,XCSR_XCTM_CONFIG_PACKETIZED_BF_SHIFT))

/**
 * The Write Macro for Packetized in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK,XCSR_XCTM_CONFIG_PACKETIZED_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Packetized in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK))

/**
 * The Read Modify Write Macro for Packetized in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK,(value)))

/**
 * The Toggle Macro for Packetized in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK))
/**
 * The Get Macro for Packetized in the Config Register
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK,XCSR_XCTM_CONFIG_PACKETIZED_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Packetized in the Config Register
 */
#define XCSR_XCTM_CONFIG_PACKETIZED_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_PACKETIZED_BF_MASK,XCSR_XCTM_CONFIG_PACKETIZED_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SofTxType ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SofTxType in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_SHIFT))

/**
 * The Write Macro for SofTxType in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SofTxType in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK))

/**
 * The Read Modify Write Macro for SofTxType in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK,(value)))

/**
 * The Toggle Macro for SofTxType in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK))
/**
 * The Get Macro for SofTxType in the Config Register
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SofTxType in the Config Register
 */
#define XCSR_XCTM_CONFIG_SOFTXTYPE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_SOFTXTYPE_BF_MASK,XCSR_XCTM_CONFIG_SOFTXTYPE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Bufmode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Bufmode in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_BUFMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_BUFMODE_BF_MASK,XCSR_XCTM_CONFIG_BUFMODE_BF_SHIFT))

/**
 * The Write Macro for Bufmode in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_BUFMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_BUFMODE_BF_MASK,XCSR_XCTM_CONFIG_BUFMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Bufmode in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_BUFMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_BUFMODE_BF_MASK))

/**
 * The Read Modify Write Macro for Bufmode in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_BUFMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_BUFMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for Bufmode in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_BUFMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_BUFMODE_BF_MASK))
/**
 * The Get Macro for Bufmode in the Config Register
 */
#define XCSR_XCTM_CONFIG_BUFMODE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_BUFMODE_BF_MASK,XCSR_XCTM_CONFIG_BUFMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Bufmode in the Config Register
 */
#define XCSR_XCTM_CONFIG_BUFMODE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_BUFMODE_BF_MASK,XCSR_XCTM_CONFIG_BUFMODE_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Peridskip ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Peridskip in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_BF_SHIFT))

/**
 * The Write Macro for Peridskip in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Peridskip in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_READMASK_BF(baseAddress)            \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK))

/**
 * The Read Modify Write Macro for PeridSkip in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK,(value)))

/**
 * The Toggle Macro for PeridSkip in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK))
/**
 * The Get Macro for Peridskip in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PeridSkip in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_PERIDSKIP_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_BF_SHIFT,(regValue),(bfValue)))



/******************************************************************************
 The PeridskipDisable ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PeridskipDisable in the Config Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_SHIFT))

/**
 * The Write Macro for PeridskipDisable in the Config Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISALBE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PeridskipDisable in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_READMASK_BF(baseAddress)            \
	(READMASK_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK))

/**
 * The Read Modify Write Macro for PeridSkipDisable in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK,(value)))

/**
 * The Toggle Macro for PeridSkipDisable in the Config Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CONFIG_REG_OFFSET,0,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK))
/**
 * The Get Macro for PeridskipDisable in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PeridSkipDisable in the Config Register
 */
#define XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_MASK,XCSR_XCTM_CONFIG_PERIDSKIP_DISABLE_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Cyc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Cyc in the ThshLevels Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHLEVELS_CYC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_CYC_BF_MASK,XCSR_XCTM_THSHLEVELS_CYC_BF_SHIFT))

/**
 * The Write Macro for Cyc in the ThshLevels Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHLEVELS_CYC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_CYC_BF_MASK,XCSR_XCTM_THSHLEVELS_CYC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Cyc in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_CYC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_CYC_BF_MASK))

/**
 * The Read Modify Write Macro for Cyc in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_CYC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_CYC_BF_MASK,(value)))

/**
 * The Toggle Macro for Cyc in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_CYC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_CYC_BF_MASK))
/**
 * The Get Macro for Cyc in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_CYC_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHLEVELS_CYC_BF_MASK,XCSR_XCTM_THSHLEVELS_CYC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Cyc in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_CYC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHLEVELS_CYC_BF_MASK,XCSR_XCTM_THSHLEVELS_CYC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wrd ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wrd in the ThshLevels Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHLEVELS_WRD_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_WRD_BF_MASK,XCSR_XCTM_THSHLEVELS_WRD_BF_SHIFT))

/**
 * The Write Macro for Wrd in the ThshLevels Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHLEVELS_WRD_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_WRD_BF_MASK,XCSR_XCTM_THSHLEVELS_WRD_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wrd in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_WRD_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_WRD_BF_MASK))

/**
 * The Read Modify Write Macro for Wrd in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_WRD_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_WRD_BF_MASK,(value)))

/**
 * The Toggle Macro for Wrd in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_WRD_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_WRD_BF_MASK))
/**
 * The Get Macro for Wrd in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_WRD_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHLEVELS_WRD_BF_MASK,XCSR_XCTM_THSHLEVELS_WRD_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wrd in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_WRD_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHLEVELS_WRD_BF_MASK,XCSR_XCTM_THSHLEVELS_WRD_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Frm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Frm in the ThshLevels Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHLEVELS_FRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_FRM_BF_MASK,XCSR_XCTM_THSHLEVELS_FRM_BF_SHIFT))

/**
 * The Write Macro for Frm in the ThshLevels Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHLEVELS_FRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_FRM_BF_MASK,XCSR_XCTM_THSHLEVELS_FRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Frm in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_FRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_FRM_BF_MASK))

/**
 * The Read Modify Write Macro for Frm in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_FRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_FRM_BF_MASK,(value)))

/**
 * The Toggle Macro for Frm in the ThshLevels Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHLEVELS_FRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHLEVELS_REG_OFFSET,0,XCSR_XCTM_THSHLEVELS_FRM_BF_MASK))
/**
 * The Get Macro for Frm in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_FRM_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHLEVELS_FRM_BF_MASK,XCSR_XCTM_THSHLEVELS_FRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Frm in the ThshLevels Register
 */
#define XCSR_XCTM_THSHLEVELS_FRM_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHLEVELS_FRM_BF_MASK,XCSR_XCTM_THSHLEVELS_FRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Ctrl ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Ctrl in the ThshEpType Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK,XCSR_XCTM_THSHEPTYPE_CTRL_BF_SHIFT))

/**
 * The Write Macro for Ctrl in the ThshEpType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK,XCSR_XCTM_THSHEPTYPE_CTRL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Ctrl in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK))

/**
 * The Read Modify Write Macro for Ctrl in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK,(value)))

/**
 * The Toggle Macro for Ctrl in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK))
/**
 * The Get Macro for Ctrl in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK,XCSR_XCTM_THSHEPTYPE_CTRL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Ctrl in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_CTRL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHEPTYPE_CTRL_BF_MASK,XCSR_XCTM_THSHEPTYPE_CTRL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Bulk ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Bulk in the ThshEpType Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK,XCSR_XCTM_THSHEPTYPE_BULK_BF_SHIFT))

/**
 * The Write Macro for Bulk in the ThshEpType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK,XCSR_XCTM_THSHEPTYPE_BULK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Bulk in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK))

/**
 * The Read Modify Write Macro for Bulk in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK,(value)))

/**
 * The Toggle Macro for Bulk in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK))
/**
 * The Get Macro for Bulk in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK,XCSR_XCTM_THSHEPTYPE_BULK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Bulk in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_BULK_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHEPTYPE_BULK_BF_MASK,XCSR_XCTM_THSHEPTYPE_BULK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Intr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Intr in the ThshEpType Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK,XCSR_XCTM_THSHEPTYPE_INTR_BF_SHIFT))

/**
 * The Write Macro for Intr in the ThshEpType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK,XCSR_XCTM_THSHEPTYPE_INTR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Intr in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK))

/**
 * The Read Modify Write Macro for Intr in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK,(value)))

/**
 * The Toggle Macro for Intr in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK))
/**
 * The Get Macro for Intr in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK,XCSR_XCTM_THSHEPTYPE_INTR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Intr in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_INTR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHEPTYPE_INTR_BF_MASK,XCSR_XCTM_THSHEPTYPE_INTR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Isoc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Isoc in the ThshEpType Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK,XCSR_XCTM_THSHEPTYPE_ISOC_BF_SHIFT))

/**
 * The Write Macro for Isoc in the ThshEpType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK,XCSR_XCTM_THSHEPTYPE_ISOC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Isoc in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK))

/**
 * The Read Modify Write Macro for Isoc in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK,(value)))

/**
 * The Toggle Macro for Isoc in the ThshEpType Register
 * This does not do a shift.
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_THSHEPTYPE_REG_OFFSET,0,XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK))
/**
 * The Get Macro for Isoc in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK,XCSR_XCTM_THSHEPTYPE_ISOC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Isoc in the ThshEpType Register
 */
#define XCSR_XCTM_THSHEPTYPE_ISOC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_THSHEPTYPE_ISOC_BF_MASK,XCSR_XCTM_THSHEPTYPE_ISOC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQsof ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQsof in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK,XCSR_XCTM_SRCTXEN_SQSOF_BF_SHIFT))

/**
 * The Write Macro for SQsof in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK,XCSR_XCTM_SRCTXEN_SQSOF_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQsof in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK))

/**
 * The Read Modify Write Macro for SQsof in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK,(value)))

/**
 * The Toggle Macro for SQsof in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK))
/**
 * The Get Macro for SQsof in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK,XCSR_XCTM_SRCTXEN_SQSOF_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQsof in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQSOF_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQSOF_BF_MASK,XCSR_XCTM_SRCTXEN_SQSOF_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQcputx ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQcputx in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_SHIFT))

/**
 * The Write Macro for SQcputx in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQcputx in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK))

/**
 * The Read Modify Write Macro for SQcputx in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK,(value)))

/**
 * The Toggle Macro for SQcputx in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK))
/**
 * The Get Macro for SQcputx in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQcputx in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTX_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQCPUTX_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTX_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQcputxusb ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQcputxusb in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_SHIFT))

/**
 * The Write Macro for SQcputxusb in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQcputxusb in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK))

/**
 * The Read Modify Write Macro for SQcputxusb in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK,(value)))

/**
 * The Toggle Macro for SQcputxusb in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK))
/**
 * The Get Macro for SQcputxusb in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQcputxusb in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXUSB_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXUSB_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQcputxenet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQcputxenet in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_SHIFT))

/**
 * The Write Macro for SQcputxenet in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQcputxenet in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK))

/**
 * The Read Modify Write Macro for SQcputxenet in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK,(value)))

/**
 * The Toggle Macro for SQcputxenet in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK))
/**
 * The Get Macro for SQcputxenet in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQcputxenet in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQCPUTXENET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_MASK,XCSR_XCTM_SRCTXEN_SQCPUTXENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQasync ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQasync in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK,XCSR_XCTM_SRCTXEN_SQASYNC_BF_SHIFT))

/**
 * The Write Macro for SQasync in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK,XCSR_XCTM_SRCTXEN_SQASYNC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQasync in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK))

/**
 * The Read Modify Write Macro for SQasync in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK,(value)))

/**
 * The Toggle Macro for SQasync in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK))
/**
 * The Get Macro for SQasync in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK,XCSR_XCTM_SRCTXEN_SQASYNC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQasync in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQASYNC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQASYNC_BF_MASK,XCSR_XCTM_SRCTXEN_SQASYNC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQperiodic ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQperiodic in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_SHIFT))

/**
 * The Write Macro for SQperiodic in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQperiodic in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK))

/**
 * The Read Modify Write Macro for SQperiodic in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK,(value)))

/**
 * The Toggle Macro for SQperiodic in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK))
/**
 * The Get Macro for SQperiodic in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQperiodic in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQPERIODIC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_MASK,XCSR_XCTM_SRCTXEN_SQPERIODIC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The SQaccbulk ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for SQaccbulk in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_SHIFT))

/**
 * The Write Macro for SQaccbulk in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for SQaccbulk in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK))

/**
 * The Read Modify Write Macro for SQaccbulk in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK,(value)))

/**
 * The Toggle Macro for SQaccbulk in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK))
/**
 * The Get Macro for SQaccbulk in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for SQaccbulk in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_SQACCBULK_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_SQACCBULK_BF_MASK,XCSR_XCTM_SRCTXEN_SQACCBULK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Xflc ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Xflc in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_XFLC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_XFLC_BF_MASK,XCSR_XCTM_SRCTXEN_XFLC_BF_SHIFT))

/**
 * The Write Macro for Xflc in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_XFLC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_XFLC_BF_MASK,XCSR_XCTM_SRCTXEN_XFLC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Xflc in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_XFLC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_XFLC_BF_MASK))

/**
 * The Read Modify Write Macro for Xflc in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_XFLC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_XFLC_BF_MASK,(value)))

/**
 * The Toggle Macro for Xflc in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_XFLC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_XFLC_BF_MASK))
/**
 * The Get Macro for Xflc in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_XFLC_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_XFLC_BF_MASK,XCSR_XCTM_SRCTXEN_XFLC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Xflc in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_XFLC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_XFLC_BF_MASK,XCSR_XCTM_SRCTXEN_XFLC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Qos ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Qos in the SrcTxEn Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_SRCTXEN_QOS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_QOS_BF_MASK,XCSR_XCTM_SRCTXEN_QOS_BF_SHIFT))

/**
 * The Write Macro for Qos in the SrcTxEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_SRCTXEN_QOS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_QOS_BF_MASK,XCSR_XCTM_SRCTXEN_QOS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Qos in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_QOS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_QOS_BF_MASK))

/**
 * The Read Modify Write Macro for Qos in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_QOS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_QOS_BF_MASK,(value)))

/**
 * The Toggle Macro for Qos in the SrcTxEn Register
 * This does not do a shift.
 */
#define XCSR_XCTM_SRCTXEN_QOS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_SRCTXEN_REG_OFFSET,0,XCSR_XCTM_SRCTXEN_QOS_BF_MASK))
/**
 * The Get Macro for Qos in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_QOS_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_SRCTXEN_QOS_BF_MASK,XCSR_XCTM_SRCTXEN_QOS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Qos in the SrcTxEn Register
 */
#define XCSR_XCTM_SRCTXEN_QOS_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_SRCTXEN_QOS_BF_MASK,XCSR_XCTM_SRCTXEN_QOS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Vport ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Vport in the QosConfig Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK,XCSR_XCTM_QOSCONFIG_VPORT_BF_SHIFT))

/**
 * The Write Macro for Vport in the QosConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK,XCSR_XCTM_QOSCONFIG_VPORT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Vport in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK))

/**
 * The Read Modify Write Macro for Vport in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK,(value)))

/**
 * The Toggle Macro for Vport in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK))
/**
 * The Get Macro for Vport in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK,XCSR_XCTM_QOSCONFIG_VPORT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Vport in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_VPORT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_QOSCONFIG_VPORT_BF_MASK,XCSR_XCTM_QOSCONFIG_VPORT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PyldSize ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PyldSize in the QosConfig Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_SHIFT))

/**
 * The Write Macro for PyldSize in the QosConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PyldSize in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK))

/**
 * The Read Modify Write Macro for PyldSize in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK,(value)))

/**
 * The Toggle Macro for PyldSize in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK))
/**
 * The Get Macro for PyldSize in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PyldSize in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_PYLDSIZE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_MASK,XCSR_XCTM_QOSCONFIG_PYLDSIZE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Iterations ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Iterations in the QosConfig Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_SHIFT))

/**
 * The Write Macro for Iterations in the QosConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Iterations in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK))

/**
 * The Read Modify Write Macro for Iterations in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK,(value)))

/**
 * The Toggle Macro for Iterations in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK))
/**
 * The Get Macro for Iterations in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Iterations in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_ITERATIONS_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_MASK,XCSR_XCTM_QOSCONFIG_ITERATIONS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The IFGmode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for IFGmode in the QosConfig Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_SHIFT))

/**
 * The Write Macro for IFGmode in the QosConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for IFGmode in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK))

/**
 * The Read Modify Write Macro for IFGmode in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for IFGmode in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK))
/**
 * The Get Macro for IFGmode in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for IFGmode in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_IFGMODE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_QOSCONFIG_IFGMODE_BF_MASK,XCSR_XCTM_QOSCONFIG_IFGMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Hdr0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Hdr0 in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_HDR0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR0_BF_MASK,XCSR_XCTM_CORRUPT_HDR0_BF_SHIFT))

/**
 * The Write Macro for Hdr0 in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_HDR0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR0_BF_MASK,XCSR_XCTM_CORRUPT_HDR0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Hdr0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR0_BF_MASK))

/**
 * The Read Modify Write Macro for Hdr0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR0_BF_MASK,(value)))

/**
 * The Toggle Macro for Hdr0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR0_BF_MASK))
/**
 * The Get Macro for Hdr0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR0_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_HDR0_BF_MASK,XCSR_XCTM_CORRUPT_HDR0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Hdr0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR0_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_HDR0_BF_MASK,XCSR_XCTM_CORRUPT_HDR0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Hdr1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Hdr1 in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_HDR1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR1_BF_MASK,XCSR_XCTM_CORRUPT_HDR1_BF_SHIFT))

/**
 * The Write Macro for Hdr1 in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_HDR1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR1_BF_MASK,XCSR_XCTM_CORRUPT_HDR1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Hdr1 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR1_BF_MASK))

/**
 * The Read Modify Write Macro for Hdr1 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR1_BF_MASK,(value)))

/**
 * The Toggle Macro for Hdr1 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_HDR1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_HDR1_BF_MASK))
/**
 * The Get Macro for Hdr1 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR1_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_HDR1_BF_MASK,XCSR_XCTM_CORRUPT_HDR1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Hdr1 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_HDR1_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_HDR1_BF_MASK,XCSR_XCTM_CORRUPT_HDR1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Dat0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Dat0 in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_DAT0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DAT0_BF_MASK,XCSR_XCTM_CORRUPT_DAT0_BF_SHIFT))

/**
 * The Write Macro for Dat0 in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_DAT0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DAT0_BF_MASK,XCSR_XCTM_CORRUPT_DAT0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Dat0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DAT0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DAT0_BF_MASK))

/**
 * The Read Modify Write Macro for Dat0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DAT0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DAT0_BF_MASK,(value)))

/**
 * The Toggle Macro for Dat0 in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DAT0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DAT0_BF_MASK))
/**
 * The Get Macro for Dat0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DAT0_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_DAT0_BF_MASK,XCSR_XCTM_CORRUPT_DAT0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Dat0 in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DAT0_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_DAT0_BF_MASK,XCSR_XCTM_CORRUPT_DAT0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DatN ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DatN in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_DATN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DATN_BF_MASK,XCSR_XCTM_CORRUPT_DATN_BF_SHIFT))

/**
 * The Write Macro for DatN in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_DATN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DATN_BF_MASK,XCSR_XCTM_CORRUPT_DATN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DatN in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DATN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DATN_BF_MASK))

/**
 * The Read Modify Write Macro for DatN in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DATN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DATN_BF_MASK,(value)))

/**
 * The Toggle Macro for DatN in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_DATN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_DATN_BF_MASK))
/**
 * The Get Macro for DatN in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DATN_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_DATN_BF_MASK,XCSR_XCTM_CORRUPT_DATN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DatN in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_DATN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_DATN_BF_MASK,XCSR_XCTM_CORRUPT_DATN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The LnkHdr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for LnkHdr in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK,XCSR_XCTM_CORRUPT_LNKHDR_BF_SHIFT))

/**
 * The Write Macro for LnkHdr in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK,XCSR_XCTM_CORRUPT_LNKHDR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for LnkHdr in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK))

/**
 * The Read Modify Write Macro for LnkHdr in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK,(value)))

/**
 * The Toggle Macro for LnkHdr in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK))
/**
 * The Get Macro for LnkHdr in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK,XCSR_XCTM_CORRUPT_LNKHDR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for LnkHdr in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKHDR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_LNKHDR_BF_MASK,XCSR_XCTM_CORRUPT_LNKHDR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The LnkDat ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for LnkDat in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK,XCSR_XCTM_CORRUPT_LNKDAT_BF_SHIFT))

/**
 * The Write Macro for LnkDat in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK,XCSR_XCTM_CORRUPT_LNKDAT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for LnkDat in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK))

/**
 * The Read Modify Write Macro for LnkDat in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK,(value)))

/**
 * The Toggle Macro for LnkDat in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK))
/**
 * The Get Macro for LnkDat in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK,XCSR_XCTM_CORRUPT_LNKDAT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for LnkDat in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_LNKDAT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_LNKDAT_BF_MASK,XCSR_XCTM_CORRUPT_LNKDAT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The VportEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for VportEn in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK,XCSR_XCTM_CORRUPT_VPORTEN_BF_SHIFT))

/**
 * The Write Macro for VportEn in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK,XCSR_XCTM_CORRUPT_VPORTEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for VportEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK))

/**
 * The Read Modify Write Macro for VportEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK,(value)))

/**
 * The Toggle Macro for VportEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK))
/**
 * The Get Macro for VportEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK,XCSR_XCTM_CORRUPT_VPORTEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for VportEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORTEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_VPORTEN_BF_MASK,XCSR_XCTM_CORRUPT_VPORTEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Vport ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Vport in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_VPORT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORT_BF_MASK,XCSR_XCTM_CORRUPT_VPORT_BF_SHIFT))

/**
 * The Write Macro for Vport in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_VPORT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORT_BF_MASK,XCSR_XCTM_CORRUPT_VPORT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Vport in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORT_BF_MASK))

/**
 * The Read Modify Write Macro for Vport in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORT_BF_MASK,(value)))

/**
 * The Toggle Macro for Vport in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_VPORT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_VPORT_BF_MASK))
/**
 * The Get Macro for Vport in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORT_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_VPORT_BF_MASK,XCSR_XCTM_CORRUPT_VPORT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Vport in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_VPORT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_VPORT_BF_MASK,XCSR_XCTM_CORRUPT_VPORT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TagTypeEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TagTypeEn in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_SHIFT))

/**
 * The Write Macro for TagTypeEn in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TagTypeEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK))

/**
 * The Read Modify Write Macro for TagTypeEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK,(value)))

/**
 * The Toggle Macro for TagTypeEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK))
/**
 * The Get Macro for TagTypeEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TagTypeEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPEEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPEEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TagType ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TagType in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPE_BF_SHIFT))

/**
 * The Write Macro for TagType in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TagType in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK))

/**
 * The Read Modify Write Macro for TagType in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK,(value)))

/**
 * The Toggle Macro for TagType in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK))
/**
 * The Get Macro for TagType in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TagType in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_TAGTYPE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_TAGTYPE_BF_MASK,XCSR_XCTM_CORRUPT_TAGTYPE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The AddrEndptEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for AddrEndptEn in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_SHIFT))

/**
 * The Write Macro for AddrEndptEn in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for AddrEndptEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK))

/**
 * The Read Modify Write Macro for AddrEndptEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK,(value)))

/**
 * The Toggle Macro for AddrEndptEn in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK))
/**
 * The Get Macro for AddrEndptEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for AddrEndptEn in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPTEN_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPTEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The AddrEndpt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for AddrEndpt in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_SHIFT))

/**
 * The Write Macro for AddrEndpt in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for AddrEndpt in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK))

/**
 * The Read Modify Write Macro for AddrEndpt in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK,(value)))

/**
 * The Toggle Macro for AddrEndpt in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK))
/**
 * The Get Macro for AddrEndpt in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for AddrEndpt in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_ADDRENDPT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_ADDRENDPT_BF_MASK,XCSR_XCTM_CORRUPT_ADDRENDPT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Clear ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Clear in the Control Register
 * This does a mask and shift.
 */
#define XCSR_XSST_CONTROL_CLEAR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_CLEAR_BF_MASK,XCSR_XSST_CONTROL_CLEAR_BF_SHIFT))

/**
 * The Write Macro for Clear in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XSST_CONTROL_CLEAR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_CLEAR_BF_MASK,XCSR_XSST_CONTROL_CLEAR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_CLEAR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_CLEAR_BF_MASK))

/**
 * The Read Modify Write Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_CLEAR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_CLEAR_BF_MASK,(value)))

/**
 * The Toggle Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_CLEAR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_CLEAR_BF_MASK))
/**
 * The Get Macro for Clear in the Control Register
 */
#define XCSR_XSST_CONTROL_CLEAR_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_CLEAR_BF_MASK,XCSR_XSST_CONTROL_CLEAR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Clear in the Control Register
 */
#define XCSR_XSST_CONTROL_CLEAR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XSST_CONTROL_CLEAR_BF_MASK,XCSR_XSST_CONTROL_CLEAR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the Control Register
 * This does a mask and shift.
 */
#define XCSR_XSST_CONTROL_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_GO_BF_MASK,XCSR_XSST_CONTROL_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XSST_CONTROL_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_GO_BF_MASK,XCSR_XSST_CONTROL_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XCSR_XSST_CONTROL_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XSST_CONTROL_REG_OFFSET,0,XCSR_XSST_CONTROL_GO_BF_MASK))
/**
 * The Get Macro for Go in the Control Register
 */
#define XCSR_XSST_CONTROL_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XSST_CONTROL_GO_BF_MASK,XCSR_XSST_CONTROL_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the Control Register
 */
#define XCSR_XSST_CONTROL_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XSST_CONTROL_GO_BF_MASK,XCSR_XSST_CONTROL_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The EnetPktDropLevel ReadWriteBitField
******************************************************************************/
/**
 * The Read Macro for ENETPKTDROPLEVEL in the Config0 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_SHIFT))

/**
 * The Write Macro for ENETPKTDROPLEVEL in the Config0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK))

/**
 * The Read Modify Write Macro for ENETPKTDROPLEVEL in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK,(value)))

/**
 * The Toggle Macro for ENETPKTDROPLEVEL in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK))
/**
 * The Get Macro for ENETPKTDROPLEVEL in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ENETPKTDROPLEVEL in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_MASK,XCSR_XICS_CONFIG0_ENETPKTDROPLEVEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Clear ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Clear in the Config0 Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONFIG0_CLEAR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_CLEAR_BF_MASK,XCSR_XICS_CONFIG0_CLEAR_BF_SHIFT))

/**
 * The Write Macro for Clear in the Config0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONFIG0_CLEAR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_CLEAR_BF_MASK,XCSR_XICS_CONFIG0_CLEAR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_CLEAR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_CLEAR_BF_MASK))

/**
 * The Read Modify Write Macro for Clear in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_CLEAR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_CLEAR_BF_MASK,(value)))

/**
 * The Toggle Macro for Clear in the Config0 Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONFIG0_CLEAR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONFIG0_REG_OFFSET,0,XCSR_XICS_CONFIG0_CLEAR_BF_MASK))
/**
 * The Get Macro for Clear in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_CLEAR_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONFIG0_CLEAR_BF_MASK,XCSR_XICS_CONFIG0_CLEAR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Clear in the Config0 Register
 */
#define XCSR_XICS_CONFIG0_CLEAR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONFIG0_CLEAR_BF_MASK,XCSR_XICS_CONFIG0_CLEAR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the ControlQAcc Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQACC_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_GO_BF_MASK,XCSR_XICS_CONTROLQACC_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the ControlQAcc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQACC_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_GO_BF_MASK,XCSR_XICS_CONTROLQACC_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the ControlQAcc Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQACC_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQACC_REG_OFFSET,0,XCSR_XICS_CONTROLQACC_GO_BF_MASK))
/**
 * The Get Macro for Go in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQACC_GO_BF_MASK,XCSR_XICS_CONTROLQACC_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the ControlQAcc Register
 */
#define XCSR_XICS_CONTROLQACC_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQACC_GO_BF_MASK,XCSR_XICS_CONTROLQACC_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the ControlQAllo Register
 * This does a mask and shift.
 */
#define XCSR_XICS_CONTROLQALLO_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_GO_BF_MASK,XCSR_XICS_CONTROLQALLO_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the ControlQAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XICS_CONTROLQALLO_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_GO_BF_MASK,XCSR_XICS_CONTROLQALLO_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the ControlQAllo Register
 * This does not do a shift.
 */
#define XCSR_XICS_CONTROLQALLO_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XICS_CONTROLQALLO_REG_OFFSET,0,XCSR_XICS_CONTROLQALLO_GO_BF_MASK))
/**
 * The Get Macro for Go in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XICS_CONTROLQALLO_GO_BF_MASK,XCSR_XICS_CONTROLQALLO_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the ControlQAllo Register
 */
#define XCSR_XICS_CONTROLQALLO_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XICS_CONTROLQALLO_GO_BF_MASK,XCSR_XICS_CONTROLQALLO_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the QType Register
 * This does a mask and shift.
 */
#define XCSR_XFLC_QTYPE_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_GO_BF_MASK,XCSR_XFLC_QTYPE_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the QType Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_QTYPE_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_GO_BF_MASK,XCSR_XFLC_QTYPE_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the QType Register
 * This does not do a shift.
 */
#define XCSR_XFLC_QTYPE_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XFLC_QTYPE_REG_OFFSET,0,XCSR_XFLC_QTYPE_GO_BF_MASK))
/**
 * The Get Macro for Go in the QType Register
 */
#define XCSR_XFLC_QTYPE_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XFLC_QTYPE_GO_BF_MASK,XCSR_XFLC_QTYPE_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the QType Register
 */
#define XCSR_XFLC_QTYPE_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_QTYPE_GO_BF_MASK,XCSR_XFLC_QTYPE_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the QosConfig Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_QOSCONFIG_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_GO_BF_MASK,XCSR_XCTM_QOSCONFIG_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the QosConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_QOSCONFIG_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_GO_BF_MASK,XCSR_XCTM_QOSCONFIG_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the QosConfig Register
 * This does not do a shift.
 */
#define XCSR_XCTM_QOSCONFIG_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_QOSCONFIG_REG_OFFSET,0,XCSR_XCTM_QOSCONFIG_GO_BF_MASK))
/**
 * The Get Macro for Go in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_QOSCONFIG_GO_BF_MASK,XCSR_XCTM_QOSCONFIG_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the QosConfig Register
 */
#define XCSR_XCTM_QOSCONFIG_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_QOSCONFIG_GO_BF_MASK,XCSR_XCTM_QOSCONFIG_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the Corrupt Register
 * This does a mask and shift.
 */
#define XCSR_XCTM_CORRUPT_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_GO_BF_MASK,XCSR_XCTM_CORRUPT_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the Corrupt Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XCTM_CORRUPT_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_GO_BF_MASK,XCSR_XCTM_CORRUPT_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the Corrupt Register
 * This does not do a shift.
 */
#define XCSR_XCTM_CORRUPT_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XCTM_CORRUPT_REG_OFFSET,0,XCSR_XCTM_CORRUPT_GO_BF_MASK))
/**
 * The Get Macro for Go in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_GO_GET_BF(regValue) \
	(GET_BF(XCSR_XCTM_CORRUPT_GO_BF_MASK,XCSR_XCTM_CORRUPT_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the Corrupt Register
 */
#define XCSR_XCTM_CORRUPT_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XCTM_CORRUPT_GO_BF_MASK,XCSR_XCTM_CORRUPT_GO_BF_SHIFT,(regValue),(bfValue)))


/* CMacroHeaderView.BfWOMacroVP per WriteOnlyBitField (and subclasses) */

/******************************************************************************
 The Irq0LexCtrl WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexCtrl in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexCtrl in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_MASK,XCSR_XUSB_INTCLR0_IRQ0LEXCTRL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1CpuRx WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1CpuRx in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURX_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1CpuRx in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURX_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_MASK,XCSR_XUSB_INTCLR0_IRQ1CPURX_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1CpuRxEnet WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1CpuRxEnet in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURXENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1CpuRxEnet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ1CPURXENET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_MASK,XCSR_XUSB_INTCLR0_IRQ1CPURXENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsSidEmpty WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsSidEmpty in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsSidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsSidEvent WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsSidEvent in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsSidEvent in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSSIDEVENT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidEmpty WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsQidEmpty in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsQidEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidAEmpty WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsQidAEmpty in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsQidAEmpty in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidNew WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsQidNew in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsQidNew in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDNEW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsQidRet WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsQidRet in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsQidRet in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSQIDRET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsUflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XicsOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XicsOflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XicsOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XICSOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmFifoUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XurmFifoUflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XurmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmFifoOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XurmFifoOflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XurmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmCmdErr WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XurmCmdErr in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XurmCmdErr in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMCMDERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XurmPktLimit WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XurmPktLimit in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XurmPktLimit in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XURMPKTLIMIT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XutmFifoUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XutmFifoUflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XutmFifoUflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq2XutmFifoOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq2XutmFifoOflow in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq2XutmFifoOflow in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR0_IRQ2XUTMFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmNotInSys WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmNotInSys in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmNotInSys in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMNOTINSYS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmAfifoUflow in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmAfifoOflow in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmAfifoSync WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmAfifoSync in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmAfifoSync in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMAFIFOSYNC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmDropFrm WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmDropFrm in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmDropFrm in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMDROPFRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmFraming WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmFraming in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmFraming in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMFRAMING_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmFrmCrc WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmFrmCrc in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmFrmCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMFRMCRC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmPldCrc WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmPldCrc in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmPldCrc in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMPLDCRC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XcrmTout WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XcrmTout in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XcrmTout in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCRMTOUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmAfifoUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XctmAfifoUflow in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XctmAfifoUflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmAfifoOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XctmAfifoOflow in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XctmAfifoOflow in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XctmPkt WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XctmPkt in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XctmPkt in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XCTMPKT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XflcEventRemote WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XflcEventRemote in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XflcEventRemote in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTREMOTE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq3XflcEventLocal WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq3XflcEventLocal in the IntClr1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR1_REG_OFFSET,0,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq3XflcEventLocal in the IntClr1 Register
 */
#define XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_MASK,XCSR_XUSB_INTCLR1_IRQ3XFLCEVENTLOCAL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Go in the RxTableWacc Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XFLC_RXTABLEWACC_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XFLC_RXTABLEWACC_REG_OFFSET,0,XCSR_XFLC_RXTABLEWACC_GO_BF_MASK,XCSR_XFLC_RXTABLEWACC_GO_BF_SHIFT,(value)))
/**
 * The Set Macro for Go in the RxTableWacc Register
 */
#define XCSR_XFLC_RXTABLEWACC_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XFLC_RXTABLEWACC_GO_BF_MASK,XCSR_XFLC_RXTABLEWACC_GO_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Irq0Lexrspqid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0Lexrspqid in the IntFlg0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0Lexrspqid in the IntFlg0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTFLG0_REG_OFFSET,0,XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_MASK))

/**
 * The Get Macro for Irq0Lexrspqid in the IntFlg0 Register
 */
#define XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTFLG0_IRQ0LEXRSPQID_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0Lexrspqid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0Lexrspqid in the IntSrc0 Register
 * This does a read, mask, then shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0Lexrspqid in the IntSrc0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTSRC0_REG_OFFSET,0,XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_MASK))

/**
 * The Get Macro for Irq0Lexrspqid in the IntSrc0 Register
 */
#define XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTSRC0_IRQ0LEXRSPQID_BF_SHIFT,(regValue)))



/******************************************************************************
 The Irq0Lexrspqid ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0Lexrspqid in the IntEn0 Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_SHIFT))

/**
 * The Write Macro for Irq0Lexrspqid in the IntEn0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0Lexrspqid in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0Lexrspqid in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0Lexrspqid in the IntEn0 Register
 * This does not do a shift.
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_INTEN0_REG_OFFSET,0,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK))
/**
 * The Get Macro for Irq0Lexrspqid in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0Lexrspqid in the IntEn0 Register
 */
#define XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTEN0_IRQ0LEXRSPQID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Lexrspqid ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Lexrspqid in the SQidIntCtrl Register
 * This does a mask and shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_SHIFT))

/**
 * The Write Macro for Lexrspqid in the SQidIntCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Lexrspqid in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK))

/**
 * The Read Modify Write Macro for Lexrspqid in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK,(value)))

/**
 * The Toggle Macro for Lexrspqid in the SQidIntCtrl Register
 * This does not do a shift.
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XCSR_XUSB_SQIDINTCTRL_REG_OFFSET,0,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK))
/**
 * The Get Macro for Lexrspqid in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_GET_BF(regValue) \
	(GET_BF(XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Lexrspqid in the SQidIntCtrl Register
 */
#define XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_MASK,XCSR_XUSB_SQIDINTCTRL_LEXRSPQID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0Lexrspqid WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0Lexrspqid in the IntClr0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XCSR_XUSB_INTCLR0_REG_OFFSET,0,XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0Lexrspqid in the IntClr0 Register
 */
#define XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_SET_BF(regValue,bfValue) \
	(SET_BF(XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_MASK,XCSR_XUSB_INTCLR0_IRQ0LEXRSPQID_BF_SHIFT,(regValue),(bfValue)))

#endif
