//**********************************************************
// Generated by SpectaReg from PDTi (www.productive-eda.com)
// SpectaReg Revision: 579
// Generated from ViewFileTemplate at: comp_mmreg_macro.h.gen
// ViewFileTemplate Revision: 767
// Generation date: Wed Aug 29 20:38:01 GMT 2012
//**********************************************************

/**************************************************************************
 *  This is a GENERATED registerMap C/C++ header file for the
 *  XLR Component.  Use the Macros in this file
 *  to read and write Registers and BitFields.
 **************************************************************************/

#ifndef __XLR_MMREG_MACRO_H__
#define __XLR_MMREG_MACRO_H__

#include "common_mmreg_access.h"

/* CMacroHeaderView.RegOffsetDefVP per Register (and subclasses) */
/**
 * Offset for the Id Register
 */
#define XLR_XLR_ID_REG_OFFSET 0  /*0x0*/
/**
 * Offset for the Rev Register
 */
#define XLR_XLR_REV_REG_OFFSET 4  /*0x4*/
/**
 * Offset for the IntEn Register
 */
#define XLR_XLR_INTEN_REG_OFFSET 8  /*0x8*/
/**
 * Offset for the IntFlg Register
 */
#define XLR_XLR_INTFLG_REG_OFFSET 12  /*0xc*/
/**
 * Offset for the IntSrc Register
 */
#define XLR_XLR_INTSRC_REG_OFFSET 16  /*0x10*/
/**
 * Offset for the IntClr Register
 */
#define XLR_XLR_INTCLR_REG_OFFSET 20  /*0x14*/
/**
 * Offset for the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_REG_OFFSET 24  /*0x18*/
/**
 * Offset for the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_REG_OFFSET 28  /*0x1c*/
/**
 * Offset for the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_REG_OFFSET 32  /*0x20*/
/**
 * Offset for the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_REG_OFFSET 36  /*0x24*/
/**
 * Offset for the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_REG_OFFSET 40  /*0x28*/
/**
 * Offset for the RexQSel Register
 */
#define XLR_XLR_REXQSEL_REG_OFFSET 44  /*0x2C*/
/**
 * Offset for the Control Register
 */
#define XLR_XMST_CONTROL_REG_OFFSET 64  /*0x40*/
/**
 * Offset for the Rstatus Register
 */
#define XLR_XMST_RSTATUS_REG_OFFSET 68  /*0x44*/
/**
 * Offset for the MidAllo Register
 */
#define XLR_XMST_MIDALLO_REG_OFFSET 72  /*0x48*/


/* CMacroHeaderView.RegArrayOffsetDefVP per Register (and subclasses) */


/* CMacroHeaderView.RegBfDefsVP per Register (and subclasses) */
/***********************************************************
  BitFields defs from the Id Register
***********************************************************/
/**
 * The Shift for Id in the Id Register
 */
#define XLR_XLR_ID_ID_BF_SHIFT 0
/**
 * The mask for Id in the Id Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define XLR_XLR_ID_ID_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Id in the Id Register
 */
#define XLR_XLR_ID_ID_BF_RESET 0x5F584C52

/***********************************************************
  BitFields defs from the Rev Register
***********************************************************/
/**
 * The Shift for CvsMajor in the Rev Register
 */
#define XLR_XLR_REV_CVSMAJOR_BF_SHIFT 8
/**
 * The Shift for CvsMinor in the Rev Register
 */
#define XLR_XLR_REV_CVSMINOR_BF_SHIFT 0
/**
 * The mask for CvsMajor in the Rev Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define XLR_XLR_REV_CVSMAJOR_BF_MASK 0x0000FF00


/**
 * The mask for CvsMinor in the Rev Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XLR_XLR_REV_CVSMINOR_BF_MASK 0x000000FF



/**
 * Reset value for CvsMajor in the Rev Register
 */
#define XLR_XLR_REV_CVSMAJOR_BF_RESET 0x00000001


/**
 * Reset value for CvsMinor in the Rev Register
 */
#define XLR_XLR_REV_CVSMINOR_BF_RESET 0x0000000D

/***********************************************************
  BitFields defs from the IntEn Register
***********************************************************/
/**
 * The Shift for Irq1StatCntErrOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_SHIFT 11
/**
 * The Shift for Irq1StatCntFlcOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT 10
/**
 * The Shift for Irq1StatCntOutOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT 9
/**
 * The Shift for Irq1StatCntInOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_SHIFT 8
/**
 * The Shift for Irq0LexRlsFifoUflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT 4
/**
 * The Shift for Irq0LexRlsFifoOflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT 3
/**
 * The Shift for Irq0LexRty0Rty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_SHIFT 2
/**
 * The Shift for Irq0LexRty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_BF_SHIFT 1
/**
 * The Shift for Irq0LexRty0 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_BF_SHIFT 0
/**
 * The mask for Irq1StatCntErrOverflow in the IntEn Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq1StatCntFlcOverflow in the IntEn Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq1StatCntOutOverflow in the IntEn Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK 0x00000200


/**
 * The mask for Irq1StatCntInOverflow in the IntEn Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK 0x00000100


/**
 * The mask for Irq0LexRlsFifoUflow in the IntEn Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK 0x00000010


/**
 * The mask for Irq0LexRlsFifoOflow in the IntEn Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK 0x00000008


/**
 * The mask for Irq0LexRty0Rty1 in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK 0x00000004


/**
 * The mask for Irq0LexRty1 in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK 0x00000002


/**
 * The mask for Irq0LexRty0 in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK 0x00000001



/**
 * Reset value for Irq1StatCntErrOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntFlcOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntOutOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntInOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoUflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoOflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0Rty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntFlg Register
***********************************************************/
/**
 * The Shift for Irq1StatCntErrOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_SHIFT 11
/**
 * The Shift for Irq1StatCntFlcOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT 10
/**
 * The Shift for Irq1StatCntOutOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT 9
/**
 * The Shift for Irq1StatCntInOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_SHIFT 8
/**
 * The Shift for Irq0LexRlsFifoUflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT 4
/**
 * The Shift for Irq0LexRlsFifoOflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT 3
/**
 * The Shift for Irq0LexRty0Rty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_SHIFT 2
/**
 * The Shift for Irq0LexRty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_SHIFT 1
/**
 * The Shift for Irq0LexRty0 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_SHIFT 0
/**
 * The mask for Irq1StatCntErrOverflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq1StatCntFlcOverflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq1StatCntOutOverflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_MASK 0x00000200


/**
 * The mask for Irq1StatCntInOverflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_MASK 0x00000100


/**
 * The mask for Irq0LexRlsFifoUflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_MASK 0x00000010


/**
 * The mask for Irq0LexRlsFifoOflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_MASK 0x00000008


/**
 * The mask for Irq0LexRty0Rty1 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_MASK 0x00000004


/**
 * The mask for Irq0LexRty1 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_MASK 0x00000002


/**
 * The mask for Irq0LexRty0 in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_MASK 0x00000001



/**
 * Reset value for Irq1StatCntErrOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntFlcOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntOutOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntInOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoUflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoOflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0Rty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntSrc Register
***********************************************************/
/**
 * The Shift for Irq1StatCntErrOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_SHIFT 11
/**
 * The Shift for Irq1StatCntFlcOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT 10
/**
 * The Shift for Irq1StatCntOutOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT 9
/**
 * The Shift for Irq1StatCntInOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_SHIFT 8
/**
 * The Shift for Irq0LexRlsFifoUflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT 4
/**
 * The Shift for Irq0LexRlsFifoOflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT 3
/**
 * The Shift for Irq0LexRty0Rty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_SHIFT 2
/**
 * The Shift for Irq0LexRty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_SHIFT 1
/**
 * The Shift for Irq0LexRty0 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_SHIFT 0
/**
 * The mask for Irq1StatCntErrOverflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq1StatCntFlcOverflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq1StatCntOutOverflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_MASK 0x00000200


/**
 * The mask for Irq1StatCntInOverflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_MASK 0x00000100


/**
 * The mask for Irq0LexRlsFifoUflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_MASK 0x00000010


/**
 * The mask for Irq0LexRlsFifoOflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_MASK 0x00000008


/**
 * The mask for Irq0LexRty0Rty1 in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_MASK 0x00000004


/**
 * The mask for Irq0LexRty1 in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_MASK 0x00000002


/**
 * The mask for Irq0LexRty0 in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_MASK 0x00000001



/**
 * Reset value for Irq1StatCntErrOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntFlcOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntOutOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntInOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoUflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoOflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0Rty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntClr Register
***********************************************************/
/**
 * The Shift for Irq1StatCntErrOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_SHIFT 11
/**
 * The Shift for Irq1StatCntFlcOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT 10
/**
 * The Shift for Irq1StatCntOutOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT 9
/**
 * The Shift for Irq1StatCntInOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_SHIFT 8
/**
 * The Shift for Irq0LexRlsFifoUflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT 4
/**
 * The Shift for Irq0LexRlsFifoOflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT 3
/**
 * The Shift for Irq0LexRty0Rty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_SHIFT 2
/**
 * The Shift for Irq0LexRty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_SHIFT 1
/**
 * The Shift for Irq0LexRty0 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_SHIFT 0
/**
 * The mask for Irq1StatCntErrOverflow in the IntClr Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_MASK 0x00000800


/**
 * The mask for Irq1StatCntFlcOverflow in the IntClr Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_MASK 0x00000400


/**
 * The mask for Irq1StatCntOutOverflow in the IntClr Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_MASK 0x00000200


/**
 * The mask for Irq1StatCntInOverflow in the IntClr Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_MASK 0x00000100


/**
 * The mask for Irq0LexRlsFifoUflow in the IntClr Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_MASK 0x00000010


/**
 * The mask for Irq0LexRlsFifoOflow in the IntClr Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_MASK 0x00000008


/**
 * The mask for Irq0LexRty0Rty1 in the IntClr Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_MASK 0x00000004


/**
 * The mask for Irq0LexRty1 in the IntClr Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_MASK 0x00000002


/**
 * The mask for Irq0LexRty0 in the IntClr Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_MASK 0x00000001



/**
 * Reset value for Irq1StatCntErrOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntFlcOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntOutOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq1StatCntInOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoUflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRlsFifoOflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0Rty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_RESET 0x00000000


/**
 * Reset value for Irq0LexRty0 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatCntIn Register
***********************************************************/
/**
 * The Shift for CtrlOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_BF_SHIFT 31
/**
 * The Shift for Ctrl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRL_BF_SHIFT 25
/**
 * The Shift for IntrpOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_BF_SHIFT 24
/**
 * The Shift for Intrp in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRP_BF_SHIFT 18
/**
 * The Shift for IsoOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_BF_SHIFT 17
/**
 * The Shift for Iso in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISO_BF_SHIFT 9
/**
 * The Shift for BulkOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_BF_SHIFT 8
/**
 * The Shift for Bulk in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULK_BF_SHIFT 0
/**
 * The mask for CtrlOvfl in the StatCntIn Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_BF_MASK 0x80000000


/**
 * The mask for Ctrl in the StatCntIn Register
 * Binary value of mask is 01111110000000000000000000000000
 */
#define XLR_XLR_STATCNTIN_CTRL_BF_MASK 0x7E000000


/**
 * The mask for IntrpOvfl in the StatCntIn Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_BF_MASK 0x01000000


/**
 * The mask for Intrp in the StatCntIn Register
 * Binary value of mask is 00000000111111000000000000000000
 */
#define XLR_XLR_STATCNTIN_INTRP_BF_MASK 0x00FC0000


/**
 * The mask for IsoOvfl in the StatCntIn Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_BF_MASK 0x00020000


/**
 * The mask for Iso in the StatCntIn Register
 * Binary value of mask is 00000000000000011111111000000000
 */
#define XLR_XLR_STATCNTIN_ISO_BF_MASK 0x0001FE00


/**
 * The mask for BulkOvfl in the StatCntIn Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_BF_MASK 0x00000100


/**
 * The mask for Bulk in the StatCntIn Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XLR_XLR_STATCNTIN_BULK_BF_MASK 0x000000FF



/**
 * Reset value for CtrlOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_BF_RESET 0x00000000


/**
 * Reset value for Ctrl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRL_BF_RESET 0x00000000


/**
 * Reset value for IntrpOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_BF_RESET 0x00000000


/**
 * Reset value for Intrp in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRP_BF_RESET 0x00000000


/**
 * Reset value for IsoOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_BF_RESET 0x00000000


/**
 * Reset value for Iso in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISO_BF_RESET 0x00000000


/**
 * Reset value for BulkOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_BF_RESET 0x00000000


/**
 * Reset value for Bulk in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULK_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatCntOut Register
***********************************************************/
/**
 * The Shift for CtrlOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_BF_SHIFT 31
/**
 * The Shift for Ctrl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRL_BF_SHIFT 25
/**
 * The Shift for IntrpOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_BF_SHIFT 24
/**
 * The Shift for Intrp in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRP_BF_SHIFT 18
/**
 * The Shift for IsoOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_BF_SHIFT 17
/**
 * The Shift for Iso in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISO_BF_SHIFT 9
/**
 * The Shift for BulkOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_BF_SHIFT 8
/**
 * The Shift for Bulk in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULK_BF_SHIFT 0
/**
 * The mask for CtrlOvfl in the StatCntOut Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_BF_MASK 0x80000000


/**
 * The mask for Ctrl in the StatCntOut Register
 * Binary value of mask is 01111110000000000000000000000000
 */
#define XLR_XLR_STATCNTOUT_CTRL_BF_MASK 0x7E000000


/**
 * The mask for IntrpOvfl in the StatCntOut Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_BF_MASK 0x01000000


/**
 * The mask for Intrp in the StatCntOut Register
 * Binary value of mask is 00000000111111000000000000000000
 */
#define XLR_XLR_STATCNTOUT_INTRP_BF_MASK 0x00FC0000


/**
 * The mask for IsoOvfl in the StatCntOut Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_BF_MASK 0x00020000


/**
 * The mask for Iso in the StatCntOut Register
 * Binary value of mask is 00000000000000011111111000000000
 */
#define XLR_XLR_STATCNTOUT_ISO_BF_MASK 0x0001FE00


/**
 * The mask for BulkOvfl in the StatCntOut Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_BF_MASK 0x00000100


/**
 * The mask for Bulk in the StatCntOut Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XLR_XLR_STATCNTOUT_BULK_BF_MASK 0x000000FF



/**
 * Reset value for CtrlOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_BF_RESET 0x00000000


/**
 * Reset value for Ctrl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRL_BF_RESET 0x00000000


/**
 * Reset value for IntrpOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_BF_RESET 0x00000000


/**
 * Reset value for Intrp in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRP_BF_RESET 0x00000000


/**
 * Reset value for IsoOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_BF_RESET 0x00000000


/**
 * Reset value for Iso in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISO_BF_RESET 0x00000000


/**
 * Reset value for BulkOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_BF_RESET 0x00000000


/**
 * Reset value for Bulk in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULK_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatCntFlc Register
***********************************************************/
/**
 * The Shift for IsoOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_SHIFT 15
/**
 * The Shift for IsoOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_BF_SHIFT 12
/**
 * The Shift for BulkOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_SHIFT 11
/**
 * The Shift for BulkOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_BF_SHIFT 8
/**
 * The Shift for IsoInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_BF_SHIFT 7
/**
 * The Shift for IsoIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOIN_BF_SHIFT 4
/**
 * The Shift for BulkInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_BF_SHIFT 3
/**
 * The Shift for BulkIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKIN_BF_SHIFT 0
/**
 * The mask for IsoOutOvfl in the StatCntFlc Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_MASK 0x00008000


/**
 * The mask for IsoOut in the StatCntFlc Register
 * Binary value of mask is 00000000000000000111000000000000
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_BF_MASK 0x00007000


/**
 * The mask for BulkOutOvfl in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_MASK 0x00000800


/**
 * The mask for BulkOut in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000011100000000
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_BF_MASK 0x00000700


/**
 * The mask for IsoInOvfl in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_BF_MASK 0x00000080


/**
 * The mask for IsoIn in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000000001110000
 */
#define XLR_XLR_STATCNTFLC_ISOIN_BF_MASK 0x00000070


/**
 * The mask for BulkInOvfl in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_BF_MASK 0x00000008


/**
 * The mask for BulkIn in the StatCntFlc Register
 * Binary value of mask is 00000000000000000000000000000111
 */
#define XLR_XLR_STATCNTFLC_BULKIN_BF_MASK 0x00000007



/**
 * Reset value for IsoOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_RESET 0x00000000


/**
 * Reset value for IsoOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_BF_RESET 0x00000000


/**
 * Reset value for BulkOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_RESET 0x00000000


/**
 * Reset value for BulkOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_BF_RESET 0x00000000


/**
 * Reset value for IsoInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_BF_RESET 0x00000000


/**
 * Reset value for IsoIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOIN_BF_RESET 0x00000000


/**
 * Reset value for BulkInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_BF_RESET 0x00000000


/**
 * Reset value for BulkIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKIN_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the StatCntErr Register
***********************************************************/
/**
 * The Shift for BabelOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_BF_SHIFT 29
/**
 * The Shift for Babel in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABEL_BF_SHIFT 25
/**
 * The Shift for BitStuffOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_SHIFT 24
/**
 * The Shift for BitStuff in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_BF_SHIFT 20
/**
 * The Shift for PidOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_BF_SHIFT 19
/**
 * The Shift for Pid in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PID_BF_SHIFT 15
/**
 * The Shift for Crc5Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_BF_SHIFT 14
/**
 * The Shift for Crc5 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5_BF_SHIFT 10
/**
 * The Shift for Crc16Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_BF_SHIFT 9
/**
 * The Shift for Crc16 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16_BF_SHIFT 5
/**
 * The Shift for LinkOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_BF_SHIFT 4
/**
 * The Shift for Link in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINK_BF_SHIFT 0
/**
 * The mask for BabelOvfl in the StatCntErr Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_BF_MASK 0x20000000


/**
 * The mask for Babel in the StatCntErr Register
 * Binary value of mask is 00011110000000000000000000000000
 */
#define XLR_XLR_STATCNTERR_BABEL_BF_MASK 0x1E000000


/**
 * The mask for BitStuffOvfl in the StatCntErr Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_MASK 0x01000000


/**
 * The mask for BitStuff in the StatCntErr Register
 * Binary value of mask is 00000000111100000000000000000000
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_BF_MASK 0x00F00000


/**
 * The mask for PidOvfl in the StatCntErr Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_BF_MASK 0x00080000


/**
 * The mask for Pid in the StatCntErr Register
 * Binary value of mask is 00000000000001111000000000000000
 */
#define XLR_XLR_STATCNTERR_PID_BF_MASK 0x00078000


/**
 * The mask for Crc5Ovfl in the StatCntErr Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_BF_MASK 0x00004000


/**
 * The mask for Crc5 in the StatCntErr Register
 * Binary value of mask is 00000000000000000011110000000000
 */
#define XLR_XLR_STATCNTERR_CRC5_BF_MASK 0x00003C00


/**
 * The mask for Crc16Ovfl in the StatCntErr Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_BF_MASK 0x00000200


/**
 * The mask for Crc16 in the StatCntErr Register
 * Binary value of mask is 00000000000000000000000111100000
 */
#define XLR_XLR_STATCNTERR_CRC16_BF_MASK 0x000001E0


/**
 * The mask for LinkOvfl in the StatCntErr Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_BF_MASK 0x00000010


/**
 * The mask for Link in the StatCntErr Register
 * Binary value of mask is 00000000000000000000000000001111
 */
#define XLR_XLR_STATCNTERR_LINK_BF_MASK 0x0000000F



/**
 * Reset value for BabelOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_BF_RESET 0x00000000


/**
 * Reset value for Babel in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABEL_BF_RESET 0x00000000


/**
 * Reset value for BitStuffOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_RESET 0x00000000


/**
 * Reset value for BitStuff in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_BF_RESET 0x00000000


/**
 * Reset value for PidOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_BF_RESET 0x00000000


/**
 * Reset value for Pid in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PID_BF_RESET 0x00000000


/**
 * Reset value for Crc5Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_BF_RESET 0x00000000


/**
 * Reset value for Crc5 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5_BF_RESET 0x00000000


/**
 * Reset value for Crc16Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_BF_RESET 0x00000000


/**
 * Reset value for Crc16 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16_BF_RESET 0x00000000


/**
 * Reset value for LinkOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_BF_RESET 0x00000000


/**
 * Reset value for Link in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINK_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the LexCtrl Register
***********************************************************/
/**
 * The Shift for Enable in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ENABLE_BF_SHIFT 31
/**
 * The Shift for FwdSetupsToCpu in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_SHIFT 30
/**
 * The Shift for FwdSofDnstrm in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_SHIFT 29
/**
 * The Shift for Testmode in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODE_BF_SHIFT 27
/**
 * The Shift for CtrlPKtTglChkEn in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_SHIFT 26
/**
 * The Shift for ThrottleSel in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_BF_SHIFT 24
/**
 * The Shift for ThrottleBulk in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_BF_SHIFT 23
/**
 * The Shift for TestModeQID in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_BF_SHIFT 16
/**
 * The Shift for RlsSts in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSSTS_BF_SHIFT 14
/**
 * The Shift for RlsRty0 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY0_BF_SHIFT 13
/**
 * The Shift for RlsRty1 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY1_BF_SHIFT 12
/**
 * The Shift for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_SHIFT 10
/**
 * The Shift for oNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_BF_SHIFT 8
/**
 * The Shift for iNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_BF_SHIFT 0
/**
 * The mask for Enable in the LexCtrl Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_ENABLE_BF_MASK 0x80000000


/**
 * The mask for FwdSetupsToCpu in the LexCtrl Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK 0x40000000


/**
 * The mask for FwdSofDnstrm in the LexCtrl Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK 0x20000000


/**
 * The mask for Testmode in the LexCtrl Register
 * Binary value of mask is 00011000000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_TESTMODE_BF_MASK 0x18000000


/**
 * The mask for CtrlPKtTglChkEn in the LexCtrl Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK 0x04000000


/**
 * The mask for ThrottleSel in the LexCtrl Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK 0x01000000


/**
 * The mask for ThrottleBulk in the LexCtrl Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK 0x00800000


/**
 * The mask for TestModeQID in the LexCtrl Register
 * Binary value of mask is 00000000011111110000000000000000
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK 0x007F0000


/**
 * The mask for RlsSts in the LexCtrl Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define XLR_XLR_LEXCTRL_RLSSTS_BF_MASK 0x00004000


/**
 * The mask for RlsRty0 in the LexCtrl Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define XLR_XLR_LEXCTRL_RLSRTY0_BF_MASK 0x00002000


/**
 * The mask for RlsRty1 in the LexCtrl Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define XLR_XLR_LEXCTRL_RLSRTY1_BF_MASK 0x00001000

/**
 * The mask for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK 0x00000c00

/**
 * The mask for oNtfyMax in the LexCtrl Register
 * Binary value of mask is 00000000000000000000001100000000
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_BF_MASK 0x00000300


/**
 * The mask for iNtfyMax in the LexCtrl Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_BF_MASK 0x000000FF



/**
 * Reset value for Enable in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ENABLE_BF_RESET 0x00000000


/**
 * Reset value for FwdSetupsToCpu in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_RESET 0x00000000


/**
 * Reset value for FwdSofDnstrm in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_RESET 0x00000001


/**
 * Reset value for Testmode in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODE_BF_RESET 0x00000000


/**
 * Reset value for CtrlPKtTglChkEn in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_RESET 0x00000001


/**
 * Reset value for ThrottleSel in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_BF_RESET 0x00000001


/**
 * Reset value for ThrottleBulk in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_BF_RESET 0x00000000


/**
 * Reset value for TestModeQID in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_BF_RESET 0x00000000


/**
 * Reset value for RlsSts in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSSTS_BF_RESET 0x00000000


/**
 * Reset value for RlsRty0 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY0_BF_RESET 0x00000000


/**
 * Reset value for RlsRty1 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY1_BF_RESET 0x00000000

/**
 * Reset value for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_RESET 0x00000000

/**
 * Reset value for oNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_BF_RESET 0x00000000


/**
 * Reset value for iNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_BF_RESET 0x00000000


/***********************************************************
  BitFields defs from the Rexqsel Register
***********************************************************/
/**
 * The Shift for Qsel in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_QSEL_BF_SHIFT 0

/**
 * The Shift for Eco2_Bypass in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_BF_SHIFT 16

/**
 * The mask for Qsel in the Rexqsel Register
 * Binary value of mask is 00000000000000000000001111111111
 */
#define XLR_XLR_REXQSEL_QSEL_BF_MASK 0x000003ff

/**
 * The mask for Eco2_Bypass in the Rexqsel Register
 * Binary value of mask is 00000000000000000000000000000011
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK 0x00000003

/**
 * Reset value for Qsel in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_QSEL_BF_RESET 0x00000399

/**
 * Reset value for Eco2_Bypass in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_BF_RESET 0x00000003

/***********************************************************
  BitFields defs from the Control Register
***********************************************************/
/**
 * The Shift for Wmask in the Control Register
 */
#define XLR_XMST_CONTROL_WMASK_BF_SHIFT 23
/**
 * The Shift for Wstatus in the Control Register
 */
#define XLR_XMST_CONTROL_WSTATUS_BF_SHIFT 18
/**
 * The Shift for InSsn in the Control Register
 */
#define XLR_XMST_CONTROL_INSSN_BF_SHIFT 17
/**
 * The Shift for DevAddr in the Control Register
 */
#define XLR_XMST_CONTROL_DEVADDR_BF_SHIFT 10
/**
 * The Shift for DevEndpt in the Control Register
 */
#define XLR_XMST_CONTROL_DEVENDPT_BF_SHIFT 6
/**
 * The Shift for AccMode in the Control Register
 */
#define XLR_XMST_CONTROL_ACCMODE_BF_SHIFT 3
/**
 * The Shift for Go in the Control Register
 */
#define XLR_XMST_CONTROL_GO_BF_SHIFT 2
/**
 * The Shift for InitDone in the Control Register
 */
#define XLR_XMST_CONTROL_INITDONE_BF_SHIFT 1
/**
 * The Shift for Clear in the Control Register
 */
#define XLR_XMST_CONTROL_CLEAR_BF_SHIFT 0
/**
 * The mask for Wmask in the Control Register
 * Binary value of mask is 00000011100000000000000000000000
 */
#define XLR_XMST_CONTROL_WMASK_BF_MASK 0x03800000


/**
 * The mask for Wstatus in the Control Register
 * Binary value of mask is 00000000011111000000000000000000
 */
#define XLR_XMST_CONTROL_WSTATUS_BF_MASK 0x007C0000


/**
 * The mask for InSsn in the Control Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define XLR_XMST_CONTROL_INSSN_BF_MASK 0x00020000


/**
 * The mask for DevAddr in the Control Register
 * Binary value of mask is 00000000000000011111110000000000
 */
#define XLR_XMST_CONTROL_DEVADDR_BF_MASK 0x0001FC00


/**
 * The mask for DevEndpt in the Control Register
 * Binary value of mask is 00000000000000000000001111000000
 */
#define XLR_XMST_CONTROL_DEVENDPT_BF_MASK 0x000003C0


/**
 * The mask for AccMode in the Control Register
 * Binary value of mask is 00000000000000000000000000111000
 */
#define XLR_XMST_CONTROL_ACCMODE_BF_MASK 0x00000038


/**
 * The mask for Go in the Control Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define XLR_XMST_CONTROL_GO_BF_MASK 0x00000004


/**
 * The mask for InitDone in the Control Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XMST_CONTROL_INITDONE_BF_MASK 0x00000002


/**
 * The mask for Clear in the Control Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XMST_CONTROL_CLEAR_BF_MASK 0x00000001



/**
 * Reset value for Wmask in the Control Register
 */
#define XLR_XMST_CONTROL_WMASK_BF_RESET 0x00000000


/**
 * Reset value for Wstatus in the Control Register
 */
#define XLR_XMST_CONTROL_WSTATUS_BF_RESET 0x00000000


/**
 * Reset value for InSsn in the Control Register
 */
#define XLR_XMST_CONTROL_INSSN_BF_RESET 0x00000000


/**
 * Reset value for DevAddr in the Control Register
 */
#define XLR_XMST_CONTROL_DEVADDR_BF_RESET 0x00000000


/**
 * Reset value for DevEndpt in the Control Register
 */
#define XLR_XMST_CONTROL_DEVENDPT_BF_RESET 0x00000000


/**
 * Reset value for AccMode in the Control Register
 */
#define XLR_XMST_CONTROL_ACCMODE_BF_RESET 0x00000000


/**
 * Reset value for Go in the Control Register
 */
#define XLR_XMST_CONTROL_GO_BF_RESET 0x00000000


/**
 * Reset value for InitDone in the Control Register
 */
#define XLR_XMST_CONTROL_INITDONE_BF_RESET 0x00000000


/**
 * Reset value for Clear in the Control Register
 */
#define XLR_XMST_CONTROL_CLEAR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the Rstatus Register
***********************************************************/
/**
 * The Shift for MsaEn in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSAEN_BF_SHIFT 11
/**
 * The Shift for LatRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_LATRDATA_BF_SHIFT 7
/**
 * The Shift for MptRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MPTRDATA_BF_SHIFT 3
/**
 * The Shift for MstRstatus in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_BF_SHIFT 0
/**
 * The mask for MsaEn in the Rstatus Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XMST_RSTATUS_MSAEN_BF_MASK 0x00000800


/**
 * The mask for LatRdata in the Rstatus Register
 * Binary value of mask is 00000000000000000000011110000000
 */
#define XLR_XMST_RSTATUS_LATRDATA_BF_MASK 0x00000780


/**
 * The mask for MptRdata in the Rstatus Register
 * Binary value of mask is 00000000000000000000000001111000
 */
#define XLR_XMST_RSTATUS_MPTRDATA_BF_MASK 0x00000078


/**
 * The mask for MstRstatus in the Rstatus Register
 * Binary value of mask is 00000000000000000000000000000111
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_BF_MASK 0x00000007



/**
 * Reset value for MsaEn in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSAEN_BF_RESET 0x00000000


/**
 * Reset value for LatRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_LATRDATA_BF_RESET 0x00000000


/**
 * Reset value for MptRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MPTRDATA_BF_RESET 0x00000000


/**
 * Reset value for MstRstatus in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MidAllo Register
***********************************************************/
/**
 * The Shift for FreeIDcnt in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_BF_SHIFT 12
/**
 * The Shift for IDerr in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_IDERR_BF_SHIFT 11
/**
 * The Shift for NewID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWID_BF_SHIFT 7
/**
 * The Shift for NewIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_BF_SHIFT 6
/**
 * The Shift for RetID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETID_BF_SHIFT 2
/**
 * The Shift for RetIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETIDREQ_BF_SHIFT 1
/**
 * The Shift for Go in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_GO_BF_SHIFT 0
/**
 * The mask for FreeIDcnt in the MidAllo Register
 * Binary value of mask is 00000000000000011111000000000000
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_BF_MASK 0x0001F000


/**
 * The mask for IDerr in the MidAllo Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define XLR_XMST_MIDALLO_IDERR_BF_MASK 0x00000800


/**
 * The mask for NewID in the MidAllo Register
 * Binary value of mask is 00000000000000000000011110000000
 */
#define XLR_XMST_MIDALLO_NEWID_BF_MASK 0x00000780


/**
 * The mask for NewIDreq in the MidAllo Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK 0x00000040


/**
 * The mask for RetID in the MidAllo Register
 * Binary value of mask is 00000000000000000000000000111100
 */
#define XLR_XMST_MIDALLO_RETID_BF_MASK 0x0000003C


/**
 * The mask for RetIDreq in the MidAllo Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define XLR_XMST_MIDALLO_RETIDREQ_BF_MASK 0x00000002


/**
 * The mask for Go in the MidAllo Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define XLR_XMST_MIDALLO_GO_BF_MASK 0x00000001



/**
 * Reset value for FreeIDcnt in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_BF_RESET 0x00000000


/**
 * Reset value for IDerr in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_IDERR_BF_RESET 0x00000000


/**
 * Reset value for NewID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWID_BF_RESET 0x00000000


/**
 * Reset value for NewIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_BF_RESET 0x00000000


/**
 * Reset value for RetID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETID_BF_RESET 0x00000000


/**
 * Reset value for RetIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETIDREQ_BF_RESET 0x00000000


/**
 * Reset value for Go in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_GO_BF_RESET 0x00000000




/* CMacroHeaderView.RegRWMacroVP per Register (and subclasses) */

/*****************************************************************************
 The Id register is read-only
******************************************************************************/

/**
 * The Read Macro for the Id Register
 */
#define XLR_XLR_ID_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_ID_REG_OFFSET,0))

/*****************************************************************************
 The Rev register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rev Register
 */
#define XLR_XLR_REV_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_REV_REG_OFFSET,0))

/*****************************************************************************
 The IntEn register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntEn Register
 */
#define XLR_XLR_INTEN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0))

/**
 * The Write Macro for the IntEn Register
 */
#define XLR_XLR_INTEN_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntFlg register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntFlg Register
 */
#define XLR_XLR_INTFLG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0))

/*****************************************************************************
 The IntSrc register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntSrc Register
 */
#define XLR_XLR_INTSRC_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0))

/*****************************************************************************
 The IntClr register is write-only
******************************************************************************/

/**
 * The Write Macro for the IntClr Register
 */
#define XLR_XLR_INTCLR_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,(value)))

/*****************************************************************************
 The StatCntIn register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0))

/*****************************************************************************
 The StatCntOut register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0))

/*****************************************************************************
 The StatCntFlc register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0))

/*****************************************************************************
 The StatCntErr register is read-only
******************************************************************************/

/**
 * The Read Macro for the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0))

/*****************************************************************************
 The LexCtrl register is read-write
******************************************************************************/

/**
 * The Read Macro for the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0))

/**
 * The Write Macro for the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Rexqsel register is read-write
******************************************************************************/

/**
 * The Read Macro for the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0))

/**
 * The Write Macro for the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,(value)))


/*****************************************************************************
 The Control register is read-write
******************************************************************************/

/**
 * The Read Macro for the Control Register
 */
#define XLR_XMST_CONTROL_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0))

/**
 * The Write Macro for the Control Register
 */
#define XLR_XMST_CONTROL_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,(value)))

/*****************************************************************************
 The Rstatus register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rstatus Register
 */
#define XLR_XMST_RSTATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0))

/*****************************************************************************
 The MidAllo register is read-write
******************************************************************************/

/**
 * The Read Macro for the MidAllo Register
 */
#define XLR_XMST_MIDALLO_READ_REG(baseAddress) \
	(READ_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0))

/**
 * The Write Macro for the MidAllo Register
 */
#define XLR_XMST_MIDALLO_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,(value)))


/* CMacroHeaderView.BfROMacroVP per ReadOnlyBitField (and subclasses) */

/******************************************************************************
 The Id ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Id in the Id Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_ID_ID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_ID_REG_OFFSET,0,XLR_XLR_ID_ID_BF_MASK,XLR_XLR_ID_ID_BF_SHIFT))

/**
 * The Read then Mask Macro for Id in the Id Register
 * This does not do a shift.
 */
#define XLR_XLR_ID_ID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_ID_REG_OFFSET,0,XLR_XLR_ID_ID_BF_MASK))

/**
 * The Get Macro for Id in the Id Register
 */
#define XLR_XLR_ID_ID_GET_BF(regValue) \
	(GET_BF(XLR_XLR_ID_ID_BF_MASK,XLR_XLR_ID_ID_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMinor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMinor in the Rev Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_REV_CVSMINOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_REV_REG_OFFSET,0,XLR_XLR_REV_CVSMINOR_BF_MASK,XLR_XLR_REV_CVSMINOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMinor in the Rev Register
 * This does not do a shift.
 */
#define XLR_XLR_REV_CVSMINOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_REV_REG_OFFSET,0,XLR_XLR_REV_CVSMINOR_BF_MASK))

/**
 * The Get Macro for CvsMinor in the Rev Register
 */
#define XLR_XLR_REV_CVSMINOR_GET_BF(regValue) \
	(GET_BF(XLR_XLR_REV_CVSMINOR_BF_MASK,XLR_XLR_REV_CVSMINOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMajor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMajor in the Rev Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_REV_CVSMAJOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_REV_REG_OFFSET,0,XLR_XLR_REV_CVSMAJOR_BF_MASK,XLR_XLR_REV_CVSMAJOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMajor in the Rev Register
 * This does not do a shift.
 */
#define XLR_XLR_REV_CVSMAJOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_REV_REG_OFFSET,0,XLR_XLR_REV_CVSMAJOR_BF_MASK))

/**
 * The Get Macro for CvsMajor in the Rev Register
 */
#define XLR_XLR_REV_CVSMAJOR_GET_BF(regValue) \
	(GET_BF(XLR_XLR_REV_CVSMAJOR_BF_MASK,XLR_XLR_REV_CVSMAJOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty0 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty0 in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty0 in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_MASK))

/**
 * The Get Macro for Irq0LexRty0 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY0_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty1 in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty1 in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_MASK))

/**
 * The Get Macro for Irq0LexRty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY1_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty0Rty1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty0Rty1 in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty0Rty1 in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_MASK))

/**
 * The Get Macro for Irq0LexRty0Rty1 in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRTY0RTY1_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRlsFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRlsFifoOflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq0LexRlsFifoOflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRlsFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRlsFifoUflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoUflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq0LexRlsFifoUflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntInOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntInOverflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntInOverflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntInOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntOutOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntOutOverflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntOutOverflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntOutOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntFlcOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntFlcOverflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntFlcOverflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntFlcOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntErrOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntErrOverflow in the IntFlg Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntErrOverflow in the IntFlg Register
 * This does not do a shift.
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTFLG_REG_OFFSET,0,XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntErrOverflow in the IntFlg Register
 */
#define XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTFLG_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty0 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty0 in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty0 in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_MASK))

/**
 * The Get Macro for Irq0LexRty0 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY0_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty1 in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty1 in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_MASK))

/**
 * The Get Macro for Irq0LexRty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY1_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRty0Rty1 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRty0Rty1 in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRty0Rty1 in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_MASK))

/**
 * The Get Macro for Irq0LexRty0Rty1 in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRTY0RTY1_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRlsFifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRlsFifoOflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoOflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for Irq0LexRlsFifoOflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq0LexRlsFifoUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq0LexRlsFifoUflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoUflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_MASK))

/**
 * The Get Macro for Irq0LexRlsFifoUflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntInOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntInOverflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntInOverflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntInOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntOutOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntOutOverflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntOutOverflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntOutOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntFlcOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntFlcOverflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntFlcOverflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntFlcOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq1StatCntErrOverflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq1StatCntErrOverflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq1StatCntErrOverflow in the IntSrc Register
 * This does not do a shift.
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTSRC_REG_OFFSET,0,XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_MASK))

/**
 * The Get Macro for Irq1StatCntErrOverflow in the IntSrc Register
 */
#define XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTSRC_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkOvfl in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_BULKOVFL_BF_MASK,XLR_XLR_STATCNTIN_BULKOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkOvfl in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_BULKOVFL_BF_MASK))

/**
 * The Get Macro for BulkOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULKOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_BULKOVFL_BF_MASK,XLR_XLR_STATCNTIN_BULKOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Iso ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Iso in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_ISO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_ISO_BF_MASK,XLR_XLR_STATCNTIN_ISO_BF_SHIFT))

/**
 * The Read then Mask Macro for Iso in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_ISO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_ISO_BF_MASK))

/**
 * The Get Macro for Iso in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISO_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_ISO_BF_MASK,XLR_XLR_STATCNTIN_ISO_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoOvfl in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_ISOOVFL_BF_MASK,XLR_XLR_STATCNTIN_ISOOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoOvfl in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_ISOOVFL_BF_MASK))

/**
 * The Get Macro for IsoOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_ISOOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_ISOOVFL_BF_MASK,XLR_XLR_STATCNTIN_ISOOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Intrp ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Intrp in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_INTRP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_INTRP_BF_MASK,XLR_XLR_STATCNTIN_INTRP_BF_SHIFT))

/**
 * The Read then Mask Macro for Intrp in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_INTRP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_INTRP_BF_MASK))

/**
 * The Get Macro for Intrp in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRP_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_INTRP_BF_MASK,XLR_XLR_STATCNTIN_INTRP_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntrpOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntrpOvfl in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_INTRPOVFL_BF_MASK,XLR_XLR_STATCNTIN_INTRPOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IntrpOvfl in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_INTRPOVFL_BF_MASK))

/**
 * The Get Macro for IntrpOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_INTRPOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_INTRPOVFL_BF_MASK,XLR_XLR_STATCNTIN_INTRPOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Ctrl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Ctrl in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_CTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_CTRL_BF_MASK,XLR_XLR_STATCNTIN_CTRL_BF_SHIFT))

/**
 * The Read then Mask Macro for Ctrl in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_CTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_CTRL_BF_MASK))

/**
 * The Get Macro for Ctrl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_CTRL_BF_MASK,XLR_XLR_STATCNTIN_CTRL_BF_SHIFT,(regValue)))

/******************************************************************************
 The CtrlOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CtrlOvfl in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_CTRLOVFL_BF_MASK,XLR_XLR_STATCNTIN_CTRLOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for CtrlOvfl in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_CTRLOVFL_BF_MASK))

/**
 * The Get Macro for CtrlOvfl in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_CTRLOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_CTRLOVFL_BF_MASK,XLR_XLR_STATCNTIN_CTRLOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkOvfl in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_BULKOVFL_BF_MASK,XLR_XLR_STATCNTOUT_BULKOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkOvfl in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_BULKOVFL_BF_MASK))

/**
 * The Get Macro for BulkOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULKOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_BULKOVFL_BF_MASK,XLR_XLR_STATCNTOUT_BULKOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Iso ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Iso in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_ISO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_ISO_BF_MASK,XLR_XLR_STATCNTOUT_ISO_BF_SHIFT))

/**
 * The Read then Mask Macro for Iso in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_ISO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_ISO_BF_MASK))

/**
 * The Get Macro for Iso in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISO_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_ISO_BF_MASK,XLR_XLR_STATCNTOUT_ISO_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoOvfl in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_ISOOVFL_BF_MASK,XLR_XLR_STATCNTOUT_ISOOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoOvfl in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_ISOOVFL_BF_MASK))

/**
 * The Get Macro for IsoOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_ISOOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_ISOOVFL_BF_MASK,XLR_XLR_STATCNTOUT_ISOOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Intrp ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Intrp in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_INTRP_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_INTRP_BF_MASK,XLR_XLR_STATCNTOUT_INTRP_BF_SHIFT))

/**
 * The Read then Mask Macro for Intrp in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_INTRP_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_INTRP_BF_MASK))

/**
 * The Get Macro for Intrp in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRP_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_INTRP_BF_MASK,XLR_XLR_STATCNTOUT_INTRP_BF_SHIFT,(regValue)))

/******************************************************************************
 The IntrpOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IntrpOvfl in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_INTRPOVFL_BF_MASK,XLR_XLR_STATCNTOUT_INTRPOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IntrpOvfl in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_INTRPOVFL_BF_MASK))

/**
 * The Get Macro for IntrpOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_INTRPOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_INTRPOVFL_BF_MASK,XLR_XLR_STATCNTOUT_INTRPOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Ctrl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Ctrl in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_CTRL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_CTRL_BF_MASK,XLR_XLR_STATCNTOUT_CTRL_BF_SHIFT))

/**
 * The Read then Mask Macro for Ctrl in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_CTRL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_CTRL_BF_MASK))

/**
 * The Get Macro for Ctrl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_CTRL_BF_MASK,XLR_XLR_STATCNTOUT_CTRL_BF_SHIFT,(regValue)))

/******************************************************************************
 The CtrlOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CtrlOvfl in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_CTRLOVFL_BF_MASK,XLR_XLR_STATCNTOUT_CTRLOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for CtrlOvfl in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_CTRLOVFL_BF_MASK))

/**
 * The Get Macro for CtrlOvfl in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_CTRLOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_CTRLOVFL_BF_MASK,XLR_XLR_STATCNTOUT_CTRLOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkInOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkInOvfl in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKINOVFL_BF_MASK,XLR_XLR_STATCNTFLC_BULKINOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkInOvfl in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKINOVFL_BF_MASK))

/**
 * The Get Macro for BulkInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKINOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_BULKINOVFL_BF_MASK,XLR_XLR_STATCNTFLC_BULKINOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoIn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoIn in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_ISOIN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOIN_BF_MASK,XLR_XLR_STATCNTFLC_ISOIN_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoIn in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_ISOIN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOIN_BF_MASK))

/**
 * The Get Macro for IsoIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOIN_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_ISOIN_BF_MASK,XLR_XLR_STATCNTFLC_ISOIN_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoInOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoInOvfl in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOINOVFL_BF_MASK,XLR_XLR_STATCNTFLC_ISOINOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoInOvfl in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOINOVFL_BF_MASK))

/**
 * The Get Macro for IsoInOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOINOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_ISOINOVFL_BF_MASK,XLR_XLR_STATCNTFLC_ISOINOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkOut ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkOut in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKOUT_BF_MASK,XLR_XLR_STATCNTFLC_BULKOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkOut in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKOUT_BF_MASK))

/**
 * The Get Macro for BulkOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUT_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_BULKOUT_BF_MASK,XLR_XLR_STATCNTFLC_BULKOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkOutOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkOutOvfl in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_MASK,XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkOutOvfl in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_MASK))

/**
 * The Get Macro for BulkOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKOUTOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_MASK,XLR_XLR_STATCNTFLC_BULKOUTOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoOut ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoOut in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOOUT_BF_MASK,XLR_XLR_STATCNTFLC_ISOOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoOut in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOOUT_BF_MASK))

/**
 * The Get Macro for IsoOut in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUT_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_ISOOUT_BF_MASK,XLR_XLR_STATCNTFLC_ISOOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The IsoOutOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IsoOutOvfl in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_MASK,XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for IsoOutOvfl in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_MASK))

/**
 * The Get Macro for IsoOutOvfl in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_ISOOUTOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_MASK,XLR_XLR_STATCNTFLC_ISOOUTOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The LinkOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for LinkOvfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_LINKOVFL_BF_MASK,XLR_XLR_STATCNTERR_LINKOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for LinkOvfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_LINKOVFL_BF_MASK))

/**
 * The Get Macro for LinkOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINKOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_LINKOVFL_BF_MASK,XLR_XLR_STATCNTERR_LINKOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Crc16 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Crc16 in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_CRC16_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC16_BF_MASK,XLR_XLR_STATCNTERR_CRC16_BF_SHIFT))

/**
 * The Read then Mask Macro for Crc16 in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_CRC16_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC16_BF_MASK))

/**
 * The Get Macro for Crc16 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_CRC16_BF_MASK,XLR_XLR_STATCNTERR_CRC16_BF_SHIFT,(regValue)))

/******************************************************************************
 The Crc16Ovfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Crc16Ovfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC16OVFL_BF_MASK,XLR_XLR_STATCNTERR_CRC16OVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for Crc16Ovfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC16OVFL_BF_MASK))

/**
 * The Get Macro for Crc16Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC16OVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_CRC16OVFL_BF_MASK,XLR_XLR_STATCNTERR_CRC16OVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Crc5 ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Crc5 in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_CRC5_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC5_BF_MASK,XLR_XLR_STATCNTERR_CRC5_BF_SHIFT))

/**
 * The Read then Mask Macro for Crc5 in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_CRC5_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC5_BF_MASK))

/**
 * The Get Macro for Crc5 in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_CRC5_BF_MASK,XLR_XLR_STATCNTERR_CRC5_BF_SHIFT,(regValue)))

/******************************************************************************
 The Crc5Ovfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Crc5Ovfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC5OVFL_BF_MASK,XLR_XLR_STATCNTERR_CRC5OVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for Crc5Ovfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_CRC5OVFL_BF_MASK))

/**
 * The Get Macro for Crc5Ovfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_CRC5OVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_CRC5OVFL_BF_MASK,XLR_XLR_STATCNTERR_CRC5OVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Pid ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Pid in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_PID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_PID_BF_MASK,XLR_XLR_STATCNTERR_PID_BF_SHIFT))

/**
 * The Read then Mask Macro for Pid in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_PID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_PID_BF_MASK))

/**
 * The Get Macro for Pid in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PID_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_PID_BF_MASK,XLR_XLR_STATCNTERR_PID_BF_SHIFT,(regValue)))

/******************************************************************************
 The PidOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PidOvfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_PIDOVFL_BF_MASK,XLR_XLR_STATCNTERR_PIDOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for PidOvfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_PIDOVFL_BF_MASK))

/**
 * The Get Macro for PidOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_PIDOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_PIDOVFL_BF_MASK,XLR_XLR_STATCNTERR_PIDOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The BitStuff ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BitStuff in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BITSTUFF_BF_MASK,XLR_XLR_STATCNTERR_BITSTUFF_BF_SHIFT))

/**
 * The Read then Mask Macro for BitStuff in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BITSTUFF_BF_MASK))

/**
 * The Get Macro for BitStuff in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFF_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_BITSTUFF_BF_MASK,XLR_XLR_STATCNTERR_BITSTUFF_BF_SHIFT,(regValue)))

/******************************************************************************
 The BitStuffOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BitStuffOvfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_MASK,XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BitStuffOvfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_MASK))

/**
 * The Get Macro for BitStuffOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BITSTUFFOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_MASK,XLR_XLR_STATCNTERR_BITSTUFFOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The Babel ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Babel in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_BABEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BABEL_BF_MASK,XLR_XLR_STATCNTERR_BABEL_BF_SHIFT))

/**
 * The Read then Mask Macro for Babel in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_BABEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BABEL_BF_MASK))

/**
 * The Get Macro for Babel in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABEL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_BABEL_BF_MASK,XLR_XLR_STATCNTERR_BABEL_BF_SHIFT,(regValue)))

/******************************************************************************
 The BabelOvfl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BabelOvfl in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BABELOVFL_BF_MASK,XLR_XLR_STATCNTERR_BABELOVFL_BF_SHIFT))

/**
 * The Read then Mask Macro for BabelOvfl in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_BABELOVFL_BF_MASK))

/**
 * The Get Macro for BabelOvfl in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_BABELOVFL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_BABELOVFL_BF_MASK,XLR_XLR_STATCNTERR_BABELOVFL_BF_SHIFT,(regValue)))

/******************************************************************************
 The iNtfyMax ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for iNtfyMax in the LexCtrl Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_INTFYMAX_BF_MASK,XLR_XLR_LEXCTRL_INTFYMAX_BF_SHIFT))

/**
 * The Read then Mask Macro for iNtfyMax in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_INTFYMAX_BF_MASK))

/**
 * The Get Macro for iNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_INTFYMAX_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_INTFYMAX_BF_MASK,XLR_XLR_LEXCTRL_INTFYMAX_BF_SHIFT,(regValue)))

/******************************************************************************
 The oNtfyMax ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for oNtfyMax in the LexCtrl Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ONTFYMAX_BF_MASK,XLR_XLR_LEXCTRL_ONTFYMAX_BF_SHIFT))

/**
 * The Read then Mask Macro for oNtfyMax in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ONTFYMAX_BF_MASK))

/**
 * The Get Macro for oNtfyMax in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ONTFYMAX_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_ONTFYMAX_BF_MASK,XLR_XLR_LEXCTRL_ONTFYMAX_BF_SHIFT,(regValue)))

/******************************************************************************
 The Lexctrlsel ReadWriteBitField
******************************************************************************/
/**
 * The Read Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_READ_BF(baseAddress) \
        (READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_SHIFT))
/**
 * The Write Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_WRITE_BF(baseAddress, value) \
        (WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_SHIFT,(value)))
/**
 * The Read then Mask Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_READMASK_BF(baseAddress) \
        (READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK))
/**
 * The Read Modify Write Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_READMODWRITE_BF(baseAddress,value) \
        (READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK,(value)))
/**
 * The Toggle Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_TOGGLE_BF(baseAddress) \
        (TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK))
/**
 * The Get Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_GET_BF(regValue) \
        (GET_BF(XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Lexctrlsel in the LexCtrl Register
*/
#define XLR_XLR_LEXCTRL_LEXCTRLSEL_SET_BF(regValue,bfValue) \
        (SET_BF(XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_MASK,XLR_XLR_LEXCTRL_LEXCTRLSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RlsSts ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for RlsSts in the LexCtrl Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_LEXCTRL_RLSSTS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_RLSSTS_BF_MASK,XLR_XLR_LEXCTRL_RLSSTS_BF_SHIFT))

/**
 * The Read then Mask Macro for RlsSts in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_RLSSTS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_RLSSTS_BF_MASK))

/**
 * The Get Macro for RlsSts in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSSTS_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_RLSSTS_BF_MASK,XLR_XLR_LEXCTRL_RLSSTS_BF_SHIFT,(regValue)))

/******************************************************************************
 The InitDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InitDone in the Control Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_CONTROL_INITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_INITDONE_BF_MASK,XLR_XMST_CONTROL_INITDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for InitDone in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_INITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_INITDONE_BF_MASK))

/**
 * The Get Macro for InitDone in the Control Register
 */
#define XLR_XMST_CONTROL_INITDONE_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_INITDONE_BF_MASK,XLR_XMST_CONTROL_INITDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The InSsn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for InSsn in the Control Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_CONTROL_INSSN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_INSSN_BF_MASK,XLR_XMST_CONTROL_INSSN_BF_SHIFT))

/**
 * The Read then Mask Macro for InSsn in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_INSSN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_INSSN_BF_MASK))

/**
 * The Get Macro for InSsn in the Control Register
 */
#define XLR_XMST_CONTROL_INSSN_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_INSSN_BF_MASK,XLR_XMST_CONTROL_INSSN_BF_SHIFT,(regValue)))

/******************************************************************************
 The MstRstatus ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MstRstatus in the Rstatus Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MSTRSTATUS_BF_MASK,XLR_XMST_RSTATUS_MSTRSTATUS_BF_SHIFT))

/**
 * The Read then Mask Macro for MstRstatus in the Rstatus Register
 * This does not do a shift.
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MSTRSTATUS_BF_MASK))

/**
 * The Get Macro for MstRstatus in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSTRSTATUS_GET_BF(regValue) \
	(GET_BF(XLR_XMST_RSTATUS_MSTRSTATUS_BF_MASK,XLR_XMST_RSTATUS_MSTRSTATUS_BF_SHIFT,(regValue)))

/******************************************************************************
 The MptRdata ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MptRdata in the Rstatus Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_RSTATUS_MPTRDATA_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MPTRDATA_BF_MASK,XLR_XMST_RSTATUS_MPTRDATA_BF_SHIFT))

/**
 * The Read then Mask Macro for MptRdata in the Rstatus Register
 * This does not do a shift.
 */
#define XLR_XMST_RSTATUS_MPTRDATA_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MPTRDATA_BF_MASK))

/**
 * The Get Macro for MptRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MPTRDATA_GET_BF(regValue) \
	(GET_BF(XLR_XMST_RSTATUS_MPTRDATA_BF_MASK,XLR_XMST_RSTATUS_MPTRDATA_BF_SHIFT,(regValue)))

/******************************************************************************
 The LatRdata ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for LatRdata in the Rstatus Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_RSTATUS_LATRDATA_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_LATRDATA_BF_MASK,XLR_XMST_RSTATUS_LATRDATA_BF_SHIFT))

/**
 * The Read then Mask Macro for LatRdata in the Rstatus Register
 * This does not do a shift.
 */
#define XLR_XMST_RSTATUS_LATRDATA_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_LATRDATA_BF_MASK))

/**
 * The Get Macro for LatRdata in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_LATRDATA_GET_BF(regValue) \
	(GET_BF(XLR_XMST_RSTATUS_LATRDATA_BF_MASK,XLR_XMST_RSTATUS_LATRDATA_BF_SHIFT,(regValue)))

/******************************************************************************
 The MsaEn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MsaEn in the Rstatus Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_RSTATUS_MSAEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MSAEN_BF_MASK,XLR_XMST_RSTATUS_MSAEN_BF_SHIFT))

/**
 * The Read then Mask Macro for MsaEn in the Rstatus Register
 * This does not do a shift.
 */
#define XLR_XMST_RSTATUS_MSAEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_RSTATUS_REG_OFFSET,0,XLR_XMST_RSTATUS_MSAEN_BF_MASK))

/**
 * The Get Macro for MsaEn in the Rstatus Register
 */
#define XLR_XMST_RSTATUS_MSAEN_GET_BF(regValue) \
	(GET_BF(XLR_XMST_RSTATUS_MSAEN_BF_MASK,XLR_XMST_RSTATUS_MSAEN_BF_SHIFT,(regValue)))

/******************************************************************************
 The NewID ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for NewID in the MidAllo Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_MIDALLO_NEWID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWID_BF_MASK,XLR_XMST_MIDALLO_NEWID_BF_SHIFT))

/**
 * The Read then Mask Macro for NewID in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_NEWID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWID_BF_MASK))

/**
 * The Get Macro for NewID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWID_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_NEWID_BF_MASK,XLR_XMST_MIDALLO_NEWID_BF_SHIFT,(regValue)))

/******************************************************************************
 The IDerr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IDerr in the MidAllo Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_MIDALLO_IDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_IDERR_BF_MASK,XLR_XMST_MIDALLO_IDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for IDerr in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_IDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_IDERR_BF_MASK))

/**
 * The Get Macro for IDerr in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_IDERR_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_IDERR_BF_MASK,XLR_XMST_MIDALLO_IDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The FreeIDcnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for FreeIDcnt in the MidAllo Register
 * This does a read, mask, then shift.
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_FREEIDCNT_BF_MASK,XLR_XMST_MIDALLO_FREEIDCNT_BF_SHIFT))

/**
 * The Read then Mask Macro for FreeIDcnt in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_FREEIDCNT_BF_MASK))

/**
 * The Get Macro for FreeIDcnt in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_FREEIDCNT_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_FREEIDCNT_BF_MASK,XLR_XMST_MIDALLO_FREEIDCNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The Bulk ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Bulk in the StatCntIn Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTIN_BULK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_BULK_BF_MASK,XLR_XLR_STATCNTIN_BULK_BF_SHIFT))

/**
 * The Read then Mask Macro for Bulk in the StatCntIn Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTIN_BULK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTIN_REG_OFFSET,0,XLR_XLR_STATCNTIN_BULK_BF_MASK))

/**
 * The Get Macro for Bulk in the StatCntIn Register
 */
#define XLR_XLR_STATCNTIN_BULK_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTIN_BULK_BF_MASK,XLR_XLR_STATCNTIN_BULK_BF_SHIFT,(regValue)))

/******************************************************************************
 The Bulk ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Bulk in the StatCntOut Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTOUT_BULK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_BULK_BF_MASK,XLR_XLR_STATCNTOUT_BULK_BF_SHIFT))

/**
 * The Read then Mask Macro for Bulk in the StatCntOut Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTOUT_BULK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTOUT_REG_OFFSET,0,XLR_XLR_STATCNTOUT_BULK_BF_MASK))

/**
 * The Get Macro for Bulk in the StatCntOut Register
 */
#define XLR_XLR_STATCNTOUT_BULK_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTOUT_BULK_BF_MASK,XLR_XLR_STATCNTOUT_BULK_BF_SHIFT,(regValue)))

/******************************************************************************
 The BulkIn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for BulkIn in the StatCntFlc Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTFLC_BULKIN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKIN_BF_MASK,XLR_XLR_STATCNTFLC_BULKIN_BF_SHIFT))

/**
 * The Read then Mask Macro for BulkIn in the StatCntFlc Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTFLC_BULKIN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTFLC_REG_OFFSET,0,XLR_XLR_STATCNTFLC_BULKIN_BF_MASK))

/**
 * The Get Macro for BulkIn in the StatCntFlc Register
 */
#define XLR_XLR_STATCNTFLC_BULKIN_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTFLC_BULKIN_BF_MASK,XLR_XLR_STATCNTFLC_BULKIN_BF_SHIFT,(regValue)))

/******************************************************************************
 The Link ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Link in the StatCntErr Register
 * This does a read, mask, then shift.
 */
#define XLR_XLR_STATCNTERR_LINK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_LINK_BF_MASK,XLR_XLR_STATCNTERR_LINK_BF_SHIFT))

/**
 * The Read then Mask Macro for Link in the StatCntErr Register
 * This does not do a shift.
 */
#define XLR_XLR_STATCNTERR_LINK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_STATCNTERR_REG_OFFSET,0,XLR_XLR_STATCNTERR_LINK_BF_MASK))

/**
 * The Get Macro for Link in the StatCntErr Register
 */
#define XLR_XLR_STATCNTERR_LINK_GET_BF(regValue) \
	(GET_BF(XLR_XLR_STATCNTERR_LINK_BF_MASK,XLR_XLR_STATCNTERR_LINK_BF_SHIFT,(regValue)))


/* CMacroHeaderView.BfRWMacroVP per ReadWriteBitField (and subclasses) */

/******************************************************************************
 The Irq0LexRty0 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexRty0 in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_SHIFT))

/**
 * The Write Macro for Irq0LexRty0 in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexRty0 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexRty0 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexRty0 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK))
/**
 * The Get Macro for Irq0LexRty0 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexRty0 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRty1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexRty1 in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_SHIFT))

/**
 * The Write Macro for Irq0LexRty1 in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexRty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexRty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexRty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK))
/**
 * The Get Macro for Irq0LexRty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexRty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY1_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRty0Rty1 ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexRty0Rty1 in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_SHIFT))

/**
 * The Write Macro for Irq0LexRty0Rty1 in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexRty0Rty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexRty0Rty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexRty0Rty1 in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK))
/**
 * The Get Macro for Irq0LexRty0Rty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexRty0Rty1 in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRTY0RTY1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRlsFifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexRlsFifoOflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq0LexRlsFifoOflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexRlsFifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexRlsFifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for Irq0LexRlsFifoOflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexRlsFifoOflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRlsFifoUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq0LexRlsFifoUflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq0LexRlsFifoUflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq0LexRlsFifoUflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq0LexRlsFifoUflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq0LexRlsFifoUflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK))
/**
 * The Get Macro for Irq0LexRlsFifoUflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq0LexRlsFifoUflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTEN_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntInOverflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1StatCntInOverflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq1StatCntInOverflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1StatCntInOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1StatCntInOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1StatCntInOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK))
/**
 * The Get Macro for Irq1StatCntInOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1StatCntInOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntOutOverflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1StatCntOutOverflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq1StatCntOutOverflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1StatCntOutOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1StatCntOutOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1StatCntOutOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK))
/**
 * The Get Macro for Irq1StatCntOutOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1StatCntOutOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntFlcOverflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1StatCntFlcOverflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq1StatCntFlcOverflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1StatCntFlcOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1StatCntFlcOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1StatCntFlcOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK))
/**
 * The Get Macro for Irq1StatCntFlcOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1StatCntFlcOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntErrOverflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Irq1StatCntErrOverflow in the IntEn Register
 * This does a mask and shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_SHIFT))

/**
 * The Write Macro for Irq1StatCntErrOverflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Irq1StatCntErrOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for Irq1StatCntErrOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for Irq1StatCntErrOverflow in the IntEn Register
 * This does not do a shift.
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_INTEN_REG_OFFSET,0,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK))
/**
 * The Get Macro for Irq1StatCntErrOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_GET_BF(regValue) \
	(GET_BF(XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Irq1StatCntErrOverflow in the IntEn Register
 */
#define XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTEN_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TestModeQID ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TestModeQID in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK,XLR_XLR_LEXCTRL_TESTMODEQID_BF_SHIFT))

/**
 * The Write Macro for TestModeQID in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK,XLR_XLR_LEXCTRL_TESTMODEQID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TestModeQID in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK))

/**
 * The Read Modify Write Macro for TestModeQID in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK,(value)))

/**
 * The Toggle Macro for TestModeQID in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK))
/**
 * The Get Macro for TestModeQID in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK,XLR_XLR_LEXCTRL_TESTMODEQID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TestModeQID in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODEQID_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_TESTMODEQID_BF_MASK,XLR_XLR_LEXCTRL_TESTMODEQID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ThrottleBulk ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ThrottleBulk in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_SHIFT))

/**
 * The Write Macro for ThrottleBulk in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ThrottleBulk in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK))

/**
 * The Read Modify Write Macro for ThrottleBulk in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK,(value)))

/**
 * The Toggle Macro for ThrottleBulk in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK))
/**
 * The Get Macro for ThrottleBulk in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ThrottleBulk in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLEBULK_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_THROTTLEBULK_BF_MASK,XLR_XLR_LEXCTRL_THROTTLEBULK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ThrottleSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ThrottleSel in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK,XLR_XLR_LEXCTRL_THROTTLESEL_BF_SHIFT))

/**
 * The Write Macro for ThrottleSel in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK,XLR_XLR_LEXCTRL_THROTTLESEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ThrottleSel in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK))

/**
 * The Read Modify Write Macro for ThrottleSel in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK,(value)))

/**
 * The Toggle Macro for ThrottleSel in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK))
/**
 * The Get Macro for ThrottleSel in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK,XLR_XLR_LEXCTRL_THROTTLESEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ThrottleSel in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_THROTTLESEL_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_THROTTLESEL_BF_MASK,XLR_XLR_LEXCTRL_THROTTLESEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The CtrlPKtTglChkEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for CtrlPKtTglChkEn in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_SHIFT))

/**
 * The Write Macro for CtrlPKtTglChkEn in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for CtrlPKtTglChkEn in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK))

/**
 * The Read Modify Write Macro for CtrlPKtTglChkEn in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK,(value)))

/**
 * The Toggle Macro for CtrlPKtTglChkEn in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK))
/**
 * The Get Macro for CtrlPKtTglChkEn in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for CtrlPKtTglChkEn in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_MASK,XLR_XLR_LEXCTRL_CTRLPKTTGLCHKEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Testmode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Testmode in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODE_BF_MASK,XLR_XLR_LEXCTRL_TESTMODE_BF_SHIFT))

/**
 * The Write Macro for Testmode in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_TESTMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODE_BF_MASK,XLR_XLR_LEXCTRL_TESTMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Testmode in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODE_BF_MASK))

/**
 * The Read Modify Write Macro for Testmode in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for Testmode in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_TESTMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_TESTMODE_BF_MASK))
/**
 * The Get Macro for Testmode in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODE_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_TESTMODE_BF_MASK,XLR_XLR_LEXCTRL_TESTMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Testmode in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_TESTMODE_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_TESTMODE_BF_MASK,XLR_XLR_LEXCTRL_TESTMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The FwdSofDnstrm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for FwdSofDnstrm in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_SHIFT))

/**
 * The Write Macro for FwdSofDnstrm in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for FwdSofDnstrm in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK))

/**
 * The Read Modify Write Macro for FwdSofDnstrm in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK,(value)))

/**
 * The Toggle Macro for FwdSofDnstrm in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK))
/**
 * The Get Macro for FwdSofDnstrm in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for FwdSofDnstrm in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSOFDNSTRM_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_MASK,XLR_XLR_LEXCTRL_FWDSOFDNSTRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The FwdSetupsToCpu ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for FwdSetupsToCpu in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_SHIFT))

/**
 * The Write Macro for FwdSetupsToCpu in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for FwdSetupsToCpu in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK))

/**
 * The Read Modify Write Macro for FwdSetupsToCpu in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK,(value)))

/**
 * The Toggle Macro for FwdSetupsToCpu in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK))
/**
 * The Get Macro for FwdSetupsToCpu in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_SHIFT,(regValue)))
/**
 * The Set Macro for FwdSetupsToCpu in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_MASK,XLR_XLR_LEXCTRL_FWDSETUPSTOCPU_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Enable ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Enable in the LexCtrl Register
 * This does a mask and shift.
 */
#define XLR_XLR_LEXCTRL_ENABLE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ENABLE_BF_MASK,XLR_XLR_LEXCTRL_ENABLE_BF_SHIFT))

/**
 * The Write Macro for Enable in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_ENABLE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ENABLE_BF_MASK,XLR_XLR_LEXCTRL_ENABLE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Enable in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_ENABLE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ENABLE_BF_MASK))

/**
 * The Read Modify Write Macro for Enable in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_ENABLE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ENABLE_BF_MASK,(value)))

/**
 * The Toggle Macro for Enable in the LexCtrl Register
 * This does not do a shift.
 */
#define XLR_XLR_LEXCTRL_ENABLE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_ENABLE_BF_MASK))
/**
 * The Get Macro for Enable in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ENABLE_GET_BF(regValue) \
	(GET_BF(XLR_XLR_LEXCTRL_ENABLE_BF_MASK,XLR_XLR_LEXCTRL_ENABLE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Enable in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_ENABLE_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_ENABLE_BF_MASK,XLR_XLR_LEXCTRL_ENABLE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The AccMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for AccMode in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_ACCMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_ACCMODE_BF_MASK,XLR_XMST_CONTROL_ACCMODE_BF_SHIFT))

/**
 * The Write Macro for AccMode in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_ACCMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_ACCMODE_BF_MASK,XLR_XMST_CONTROL_ACCMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_ACCMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_ACCMODE_BF_MASK))

/**
 * The Read Modify Write Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_ACCMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_ACCMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for AccMode in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_ACCMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_ACCMODE_BF_MASK))
/**
 * The Get Macro for AccMode in the Control Register
 */
#define XLR_XMST_CONTROL_ACCMODE_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_ACCMODE_BF_MASK,XLR_XMST_CONTROL_ACCMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for AccMode in the Control Register
 */
#define XLR_XMST_CONTROL_ACCMODE_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_ACCMODE_BF_MASK,XLR_XMST_CONTROL_ACCMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DevEndpt ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DevEndpt in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_DEVENDPT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVENDPT_BF_MASK,XLR_XMST_CONTROL_DEVENDPT_BF_SHIFT))

/**
 * The Write Macro for DevEndpt in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_DEVENDPT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVENDPT_BF_MASK,XLR_XMST_CONTROL_DEVENDPT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVENDPT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVENDPT_BF_MASK))

/**
 * The Read Modify Write Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVENDPT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVENDPT_BF_MASK,(value)))

/**
 * The Toggle Macro for DevEndpt in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVENDPT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVENDPT_BF_MASK))
/**
 * The Get Macro for DevEndpt in the Control Register
 */
#define XLR_XMST_CONTROL_DEVENDPT_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_DEVENDPT_BF_MASK,XLR_XMST_CONTROL_DEVENDPT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DevEndpt in the Control Register
 */
#define XLR_XMST_CONTROL_DEVENDPT_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_DEVENDPT_BF_MASK,XLR_XMST_CONTROL_DEVENDPT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The DevAddr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for DevAddr in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_DEVADDR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVADDR_BF_MASK,XLR_XMST_CONTROL_DEVADDR_BF_SHIFT))

/**
 * The Write Macro for DevAddr in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_DEVADDR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVADDR_BF_MASK,XLR_XMST_CONTROL_DEVADDR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVADDR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVADDR_BF_MASK))

/**
 * The Read Modify Write Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVADDR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVADDR_BF_MASK,(value)))

/**
 * The Toggle Macro for DevAddr in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_DEVADDR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_DEVADDR_BF_MASK))
/**
 * The Get Macro for DevAddr in the Control Register
 */
#define XLR_XMST_CONTROL_DEVADDR_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_DEVADDR_BF_MASK,XLR_XMST_CONTROL_DEVADDR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for DevAddr in the Control Register
 */
#define XLR_XMST_CONTROL_DEVADDR_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_DEVADDR_BF_MASK,XLR_XMST_CONTROL_DEVADDR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wstatus ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wstatus in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_WSTATUS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WSTATUS_BF_MASK,XLR_XMST_CONTROL_WSTATUS_BF_SHIFT))

/**
 * The Write Macro for Wstatus in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_WSTATUS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WSTATUS_BF_MASK,XLR_XMST_CONTROL_WSTATUS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wstatus in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WSTATUS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WSTATUS_BF_MASK))

/**
 * The Read Modify Write Macro for Wstatus in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WSTATUS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WSTATUS_BF_MASK,(value)))

/**
 * The Toggle Macro for Wstatus in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WSTATUS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WSTATUS_BF_MASK))
/**
 * The Get Macro for Wstatus in the Control Register
 */
#define XLR_XMST_CONTROL_WSTATUS_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_WSTATUS_BF_MASK,XLR_XMST_CONTROL_WSTATUS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wstatus in the Control Register
 */
#define XLR_XMST_CONTROL_WSTATUS_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_WSTATUS_BF_MASK,XLR_XMST_CONTROL_WSTATUS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Wmask ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Wmask in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_WMASK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WMASK_BF_MASK,XLR_XMST_CONTROL_WMASK_BF_SHIFT))

/**
 * The Write Macro for Wmask in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_WMASK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WMASK_BF_MASK,XLR_XMST_CONTROL_WMASK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Wmask in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WMASK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WMASK_BF_MASK))

/**
 * The Read Modify Write Macro for Wmask in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WMASK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WMASK_BF_MASK,(value)))

/**
 * The Toggle Macro for Wmask in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_WMASK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_WMASK_BF_MASK))
/**
 * The Get Macro for Wmask in the Control Register
 */
#define XLR_XMST_CONTROL_WMASK_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_WMASK_BF_MASK,XLR_XMST_CONTROL_WMASK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Wmask in the Control Register
 */
#define XLR_XMST_CONTROL_WMASK_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_WMASK_BF_MASK,XLR_XMST_CONTROL_WMASK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Qsel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Qsel in the Rexqsel Register
 * This does a mask and shift.
 */
#define XLR_XLR_REXQSEL_QSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_QSEL_BF_MASK,XLR_XLR_REXQSEL_QSEL_BF_SHIFT))

/**
 * The Write Macro for Qsel in the Rexqsel Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_REXQSEL_QSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_QSEL_BF_MASK,XLR_XLR_REXQSEL_QSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Qsel in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_QSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_QSEL_BF_MASK))

/**
 * The Read Modify Write Macro for Qsel in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_QSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_QSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for Qsel in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_QSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_QSEL_BF_MASK))
/**
 * The Get Macro for Qsel in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_QSEL_GET_BF(regValue) \
	(GET_BF(XLR_XLR_REXQSEL_QSEL_BF_MASK,XLR_XLR_REXQSEL_QSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Qsel in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_QSEL_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_REXQSEL_QSEL_BF_MASK,XLR_XLR_REXQSEL_QSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The eco2_bypass ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for eco2_bypass in the Rexqsel Register
 * This does a mask and shift.
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_READ_BF(baseAddress) \
  (READ_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_SHIFT))

/**
 * The Write Macro for eco2_bypass in the Rexqsel Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_WRITE_BF(baseAddress, value) \
  (WRITE_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for eco2_bypass in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_READMASK_BF(baseAddress) \
  (READMASK_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK))

/**
 * The Read Modify Write Macro for eco2_bypass in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_READMODWRITE_BF(baseAddress,value) \
  (READMODWRITE_REG((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK,(value)))

/**
 * The Toggle Macro for eco2_bypass in the Rexqsel Register
 * This does not do a shift.
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_TOGGLE_BF(baseAddress) \
  (TOGGLE_BF((baseAddress),XLR_XLR_REXQSEL_REG_OFFSET,0,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK))
/**
 * The Get Macro for eco2_bypass in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_GET_BF(regValue) \
  (GET_BF(XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for eco2_bypass in the Rexqsel Register
 */
#define XLR_XLR_REXQSEL_ECO2_BYPASS_SET_BF(regValue,bfValue) \
  (SET_BF(XLR_XLR_REXQSEL_ECO2_BYPASS_BF_MASK,XLR_XLR_REXQSEL_ECO2_BYPASS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RetIDreq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RetIDreq in the MidAllo Register
 * This does a mask and shift.
 */
#define XLR_XMST_MIDALLO_RETIDREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETIDREQ_BF_MASK,XLR_XMST_MIDALLO_RETIDREQ_BF_SHIFT))

/**
 * The Write Macro for RetIDreq in the MidAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_MIDALLO_RETIDREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETIDREQ_BF_MASK,XLR_XMST_MIDALLO_RETIDREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RetIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETIDREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETIDREQ_BF_MASK))

/**
 * The Read Modify Write Macro for RetIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETIDREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETIDREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for RetIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETIDREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETIDREQ_BF_MASK))
/**
 * The Get Macro for RetIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETIDREQ_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_RETIDREQ_BF_MASK,XLR_XMST_MIDALLO_RETIDREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RetIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETIDREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_MIDALLO_RETIDREQ_BF_MASK,XLR_XMST_MIDALLO_RETIDREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RetID ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RetID in the MidAllo Register
 * This does a mask and shift.
 */
#define XLR_XMST_MIDALLO_RETID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETID_BF_MASK,XLR_XMST_MIDALLO_RETID_BF_SHIFT))

/**
 * The Write Macro for RetID in the MidAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_MIDALLO_RETID_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETID_BF_MASK,XLR_XMST_MIDALLO_RETID_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RetID in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETID_BF_MASK))

/**
 * The Read Modify Write Macro for RetID in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETID_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETID_BF_MASK,(value)))

/**
 * The Toggle Macro for RetID in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_RETID_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_RETID_BF_MASK))
/**
 * The Get Macro for RetID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETID_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_RETID_BF_MASK,XLR_XMST_MIDALLO_RETID_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RetID in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_RETID_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_MIDALLO_RETID_BF_MASK,XLR_XMST_MIDALLO_RETID_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The NewIDreq ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for NewIDreq in the MidAllo Register
 * This does a mask and shift.
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK,XLR_XMST_MIDALLO_NEWIDREQ_BF_SHIFT))

/**
 * The Write Macro for NewIDreq in the MidAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK,XLR_XMST_MIDALLO_NEWIDREQ_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for NewIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK))

/**
 * The Read Modify Write Macro for NewIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK,(value)))

/**
 * The Toggle Macro for NewIDreq in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK))
/**
 * The Get Macro for NewIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK,XLR_XMST_MIDALLO_NEWIDREQ_BF_SHIFT,(regValue)))
/**
 * The Set Macro for NewIDreq in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_NEWIDREQ_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_MIDALLO_NEWIDREQ_BF_MASK,XLR_XMST_MIDALLO_NEWIDREQ_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Clear ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Clear in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_CLEAR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_CLEAR_BF_MASK,XLR_XMST_CONTROL_CLEAR_BF_SHIFT))

/**
 * The Write Macro for Clear in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_CLEAR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_CLEAR_BF_MASK,XLR_XMST_CONTROL_CLEAR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_CLEAR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_CLEAR_BF_MASK))

/**
 * The Read Modify Write Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_CLEAR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_CLEAR_BF_MASK,(value)))

/**
 * The Toggle Macro for Clear in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_CLEAR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_CLEAR_BF_MASK))
/**
 * The Get Macro for Clear in the Control Register
 */
#define XLR_XMST_CONTROL_CLEAR_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_CLEAR_BF_MASK,XLR_XMST_CONTROL_CLEAR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Clear in the Control Register
 */
#define XLR_XMST_CONTROL_CLEAR_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_CLEAR_BF_MASK,XLR_XMST_CONTROL_CLEAR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the Control Register
 * This does a mask and shift.
 */
#define XLR_XMST_CONTROL_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_GO_BF_MASK,XLR_XMST_CONTROL_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the Control Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_CONTROL_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_GO_BF_MASK,XLR_XMST_CONTROL_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the Control Register
 * This does not do a shift.
 */
#define XLR_XMST_CONTROL_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_CONTROL_REG_OFFSET,0,XLR_XMST_CONTROL_GO_BF_MASK))
/**
 * The Get Macro for Go in the Control Register
 */
#define XLR_XMST_CONTROL_GO_GET_BF(regValue) \
	(GET_BF(XLR_XMST_CONTROL_GO_BF_MASK,XLR_XMST_CONTROL_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the Control Register
 */
#define XLR_XMST_CONTROL_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_CONTROL_GO_BF_MASK,XLR_XMST_CONTROL_GO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the MidAllo Register
 * This does a mask and shift.
 */
#define XLR_XMST_MIDALLO_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_GO_BF_MASK,XLR_XMST_MIDALLO_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the MidAllo Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XMST_MIDALLO_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_GO_BF_MASK,XLR_XMST_MIDALLO_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the MidAllo Register
 * This does not do a shift.
 */
#define XLR_XMST_MIDALLO_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),XLR_XMST_MIDALLO_REG_OFFSET,0,XLR_XMST_MIDALLO_GO_BF_MASK))
/**
 * The Get Macro for Go in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_GO_GET_BF(regValue) \
	(GET_BF(XLR_XMST_MIDALLO_GO_BF_MASK,XLR_XMST_MIDALLO_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the MidAllo Register
 */
#define XLR_XMST_MIDALLO_GO_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XMST_MIDALLO_GO_BF_MASK,XLR_XMST_MIDALLO_GO_BF_SHIFT,(regValue),(bfValue)))


/* CMacroHeaderView.BfWOMacroVP per WriteOnlyBitField (and subclasses) */

/******************************************************************************
 The Irq0LexRty0 WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexRty0 in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexRty0 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY0_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRty1 WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexRty1 in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexRty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY1_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRty0Rty1 WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexRty0Rty1 in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexRty0Rty1 in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRTY0RTY1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRlsFifoOflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexRlsFifoOflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexRlsFifoOflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq0LexRlsFifoUflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq0LexRlsFifoUflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq0LexRlsFifoUflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ0LEXRLSFIFOUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntInOverflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1StatCntInOverflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1StatCntInOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTINOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntOutOverflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1StatCntOutOverflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1StatCntOutOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTOUTOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntFlcOverflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1StatCntFlcOverflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1StatCntFlcOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTFLCOVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Irq1StatCntErrOverflow WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for Irq1StatCntErrOverflow in the IntClr Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_INTCLR_REG_OFFSET,0,XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(value)))
/**
 * The Set Macro for Irq1StatCntErrOverflow in the IntClr Register
 */
#define XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_MASK,XLR_XLR_INTCLR_IRQ1STATCNTERROVERFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RlsRty1 WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for RlsRty1 in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_RLSRTY1_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_RLSRTY1_BF_MASK,XLR_XLR_LEXCTRL_RLSRTY1_BF_SHIFT,(value)))
/**
 * The Set Macro for RlsRty1 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY1_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_RLSRTY1_BF_MASK,XLR_XLR_LEXCTRL_RLSRTY1_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RlsRty0 WriteOnlyBitField
******************************************************************************/

/**
 * The Write Macro for RlsRty0 in the LexCtrl Register
 * This shifts the value and does a read, mask, then write.
 */
#define XLR_XLR_LEXCTRL_RLSRTY0_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),XLR_XLR_LEXCTRL_REG_OFFSET,0,XLR_XLR_LEXCTRL_RLSRTY0_BF_MASK,XLR_XLR_LEXCTRL_RLSRTY0_BF_SHIFT,(value)))
/**
 * The Set Macro for RlsRty0 in the LexCtrl Register
 */
#define XLR_XLR_LEXCTRL_RLSRTY0_SET_BF(regValue,bfValue) \
	(SET_BF(XLR_XLR_LEXCTRL_RLSRTY0_BF_MASK,XLR_XLR_LEXCTRL_RLSRTY0_BF_SHIFT,(regValue),(bfValue)))


#endif
