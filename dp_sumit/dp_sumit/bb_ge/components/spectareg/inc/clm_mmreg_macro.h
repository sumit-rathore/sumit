//**********************************************************
// Generated by SpectaReg from PDTi (www.productive-eda.com)
// SpectaReg Revision: 579
// Generated from ViewFileTemplate at: comp_mmreg_macro.h.gen
// ViewFileTemplate Revision: 767
// Generation date: Wed Jun 27 23:41:23 GMT 2012
//**********************************************************

/**************************************************************************
 *  This is a GENERATED registerMap C/C++ header file for the
 *  Clm Component.  Use the Macros in this file
 *  to read and write Registers and BitFields.
 **************************************************************************/

#ifndef __CLM_MMREG_MACRO_H__
#define __CLM_MMREG_MACRO_H__

#include "common_mmreg_access.h"

/* CMacroHeaderView.RegOffsetDefVP per Register (and subclasses) */
/**
 * Offset for the Id Register
 */
#define CLM_CLM_ID_REG_OFFSET 0  /*0x0*/
/**
 * Offset for the Rev Register
 */
#define CLM_CLM_REV_REG_OFFSET 4  /*0x4*/
/**
 * Offset for the IntEn Register
 */
#define CLM_CLM_INTEN_REG_OFFSET 8  /*0x8*/
/**
 * Offset for the IntSrc Register
 */
#define CLM_CLM_INTSRC_REG_OFFSET 12  /*0xc*/
/**
 * Offset for the IntFlg Register
 */
#define CLM_CLM_INTFLG_REG_OFFSET 16  /*0x10*/
/**
 * Offset for the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_REG_OFFSET 20  /*0x14*/
/**
 * Offset for the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_REG_OFFSET 24  /*0x18*/
/**
 * Offset for the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_REG_OFFSET 28  /*0x1c*/
/**
 * Offset for the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_REG_OFFSET 32  /*0x20*/
/**
 * Offset for the MacSrcLsw Register
 */
#define CLM_CLM_MACSRCLSW_REG_OFFSET 36  /*0x24*/
/**
 * Offset for the MacSrcMsw Register
 */
#define CLM_CLM_MACSRCMSW_REG_OFFSET 40  /*0x28*/
/**
 * Offset for the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_REG_OFFSET 44  /*0x2C*/
/**
 * Offset for the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_REG_OFFSET 48  /*0x30*/
/**
 * Offset for the MacRdDstLsw Register
 */
#define CLM_CLM_MACRDDSTLSW_REG_OFFSET 52  /*0x34*/
/**
 * Offset for the MacRdDstMsw Register
 */
#define CLM_CLM_MACRDDSTMSW_REG_OFFSET 56  /*0x38*/
/**
 * Offset for the TxStats Register
 */
#define CLM_CLM_TXSTATS_REG_OFFSET 60  /*0x3C*/
/**
 * Offset for the RxStats Register
 */
#define CLM_CLM_RXSTATS_REG_OFFSET 64  /*0x40*/
/**
 * Offset for the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_REG_OFFSET 68  /*0x44*/
/**
 * Offset for the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_REG_OFFSET 72  /*0x48*/
/**
 * Offset for the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_REG_OFFSET 76  /*0x4C*/
/**
 * Offset for the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_REG_OFFSET 80  /*0x50*/
/**
 * Offset for the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_REG_OFFSET 84  /*0x54*/



/* CMacroHeaderView.RegArrayOffsetDefVP per Register (and subclasses) */


/* CMacroHeaderView.RegBfDefsVP per Register (and subclasses) */
/***********************************************************
  BitFields defs from the Id Register
***********************************************************/
/**
 * The Shift for Id in the Id Register
 */
#define CLM_CLM_ID_ID_BF_SHIFT 0
/**
 * The mask for Id in the Id Register
 * Binary value of mask is 11111111111111111111111111111111
 */
#define CLM_CLM_ID_ID_BF_MASK 0xFFFFFFFF



/**
 * Reset value for Id in the Id Register
 */
#define CLM_CLM_ID_ID_BF_RESET 0x5F434C4D

/***********************************************************
  BitFields defs from the Rev Register
***********************************************************/
/**
 * The Shift for Irq in the Rev Register
 */
#define CLM_CLM_REV_IRQ_BF_SHIFT 31
/**
 * The Shift for CvsMajor in the Rev Register
 */
#define CLM_CLM_REV_CVSMAJOR_BF_SHIFT 8
/**
 * The Shift for CvsMinor in the Rev Register
 */
#define CLM_CLM_REV_CVSMINOR_BF_SHIFT 0
/**
 * The mask for Irq in the Rev Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_REV_IRQ_BF_MASK 0x80000000


/**
 * The mask for CvsMajor in the Rev Register
 * Binary value of mask is 00000000000000001111111100000000
 */
#define CLM_CLM_REV_CVSMAJOR_BF_MASK 0x0000FF00


/**
 * The mask for CvsMinor in the Rev Register
 * Binary value of mask is 00000000000000000000000011111111
 */
#define CLM_CLM_REV_CVSMINOR_BF_MASK 0x000000FF



/**
 * Reset value for Irq in the Rev Register
 */
#define CLM_CLM_REV_IRQ_BF_RESET 0x00000000


/**
 * Reset value for CvsMajor in the Rev Register
 */
#define CLM_CLM_REV_CVSMAJOR_BF_RESET 0x00000001


/**
 * Reset value for CvsMinor in the Rev Register
 */
#define CLM_CLM_REV_CVSMINOR_BF_RESET 0x00000024

/***********************************************************
  BitFields defs from the IntEn Register
***********************************************************/
/**
 * The Shift for MlpRxSfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_SHIFT 31
/**
 * The Shift for MlpRxAfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_SHIFT 30
/**
 * The Shift for MlpRxSeqErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_BF_SHIFT 29
/**
 * The Shift for MlpRxPldErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_BF_SHIFT 28
/**
 * The Shift for MlpRxHdrErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_BF_SHIFT 27
/**
 * The Shift for MlpRxFcDropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_BF_SHIFT 26
/**
 * The Shift for MlpTxToCntLvl in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_SHIFT 25
/**
 * The Shift for MlpTxW4RErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_BF_SHIFT 24
/**
 * The Shift for MlpTxRtyErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_BF_SHIFT 23
/**
 * The Shift for MlpTxRtyWrn in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_BF_SHIFT 22
/**
 * The Shift for MlpTxVp0LenErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_BF_SHIFT 21
/**
 * The Shift for MlpTxVpdropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_BF_SHIFT 20
/**
 * The Shift for MlpTxIcsFluQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_SHIFT 19
/**
 * The Shift for MlpTxIcsRetQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_BF_SHIFT 18
/**
 * The Shift for MlpTxIcsNewQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_SHIFT 17
/**
 * The Shift for MlpTxIcsQidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_SHIFT 16
/**
 * The Shift for MlpTxIcsQidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_SHIFT 15
/**
 * The Shift for MlpTxIcsSidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_SHIFT 14
/**
 * The Shift for MlpTxIcsSidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_SHIFT 13
/**
 * The Shift for MlpTxIcsUflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_BF_SHIFT 12
/**
 * The Shift for MlpTxIcsOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_BF_SHIFT 11
/**
 * The Shift for MlpTxIcsInitDone in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_BF_SHIFT 10
/**
 * The Shift for MlpLinkEvent in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_BF_SHIFT 9
/**
 * The Shift for PhyDfrmErrCrcEnet in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_SHIFT 8
/**
 * The Shift for PhyDfrmErrCrcUsb in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_SHIFT 7
/**
 * The Shift for PhyDfrmErrTout in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_SHIFT 6
/**
 * The Shift for PhyDfrmErrIpf in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_BF_SHIFT 5
/**
 * The Shift for PhyDfrmErrFrm in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_BF_SHIFT 4
/**
 * The Shift for RxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATS_BF_SHIFT 3
/**
 * The Shift for TxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATS_BF_SHIFT 2
/**
 * The Shift for RxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATSETR_BF_SHIFT 1
/**
 * The Shift for TxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATSETR_BF_SHIFT 0
/**
 * The mask for MlpRxSfifoOflow in the IntEn Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK 0x80000000


/**
 * The mask for MlpRxAfifoOflow in the IntEn Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK 0x40000000


/**
 * The mask for MlpRxSeqErr in the IntEn Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK 0x20000000


/**
 * The mask for MlpRxPldErr in the IntEn Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK 0x10000000


/**
 * The mask for MlpRxHdrErr in the IntEn Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK 0x08000000


/**
 * The mask for MlpRxFcDropErr in the IntEn Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK 0x04000000


/**
 * The mask for MlpTxToCntLvl in the IntEn Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK 0x02000000


/**
 * The mask for MlpTxW4RErr in the IntEn Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK 0x01000000


/**
 * The mask for MlpTxRtyErr in the IntEn Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK 0x00800000


/**
 * The mask for MlpTxRtyWrn in the IntEn Register
 * Binary value of mask is 00000000010000000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK 0x00400000


/**
 * The mask for MlpTxVp0LenErr in the IntEn Register
 * Binary value of mask is 00000000001000000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK 0x00200000


/**
 * The mask for MlpTxVpdropErr in the IntEn Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK 0x00100000


/**
 * The mask for MlpTxIcsFluQErr in the IntEn Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK 0x00080000


/**
 * The mask for MlpTxIcsRetQErr in the IntEn Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK 0x00040000


/**
 * The mask for MlpTxIcsNewQErr in the IntEn Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK 0x00020000


/**
 * The mask for MlpTxIcsQidAEmpty in the IntEn Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK 0x00010000


/**
 * The mask for MlpTxIcsQidEmpty in the IntEn Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK 0x00008000


/**
 * The mask for MlpTxIcsSidAEmpty in the IntEn Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK 0x00004000


/**
 * The mask for MlpTxIcsSidEmpty in the IntEn Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK 0x00002000


/**
 * The mask for MlpTxIcsUflow in the IntEn Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK 0x00001000


/**
 * The mask for MlpTxIcsOflow in the IntEn Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for MlpTxIcsInitDone in the IntEn Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK 0x00000400


/**
 * The mask for MlpLinkEvent in the IntEn Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK 0x00000200


/**
 * The mask for PhyDfrmErrCrcEnet in the IntEn Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK 0x00000100


/**
 * The mask for PhyDfrmErrCrcUsb in the IntEn Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK 0x00000080


/**
 * The mask for PhyDfrmErrTout in the IntEn Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK 0x00000040


/**
 * The mask for PhyDfrmErrIpf in the IntEn Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK 0x00000020


/**
 * The mask for PhyDfrmErrFrm in the IntEn Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK 0x00000010


/**
 * The mask for RxStats in the IntEn Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define CLM_CLM_INTEN_RXSTATS_BF_MASK 0x00000008


/**
 * The mask for TxStats in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define CLM_CLM_INTEN_TXSTATS_BF_MASK 0x00000004


/**
 * The mask for RxStatsETR in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define CLM_CLM_INTEN_RXSTATSETR_BF_MASK 0x00000002


/**
 * The mask for TxStatsETR in the IntEn Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_INTEN_TXSTATSETR_BF_MASK 0x00000001



/**
 * Reset value for MlpRxSfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxAfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxPldErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxHdrErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxToCntLvl in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrn in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVp0LenErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpdropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsFluQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsRetQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsNewQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsUflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsInitDone in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_BF_RESET 0x00000000


/**
 * Reset value for MlpLinkEvent in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcEnet in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcUsb in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrTout in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrIpf in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrFrm in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_BF_RESET 0x00000000


/**
 * Reset value for RxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATS_BF_RESET 0x00000000


/**
 * Reset value for TxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATS_BF_RESET 0x00000000


/**
 * Reset value for RxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATSETR_BF_RESET 0x00000000


/**
 * Reset value for TxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATSETR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntSrc Register
***********************************************************/
/**
 * The Shift for MlpRxSfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_SHIFT 31
/**
 * The Shift for MlpRxAfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_SHIFT 30
/**
 * The Shift for MlpRxSeqErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_BF_SHIFT 29
/**
 * The Shift for MlpRxPldErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_BF_SHIFT 28
/**
 * The Shift for MlpRxHdrErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_BF_SHIFT 27
/**
 * The Shift for MlpRxFcDropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_SHIFT 26
/**
 * The Shift for MlpTxToCntLvl in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_SHIFT 25
/**
 * The Shift for MlpTxW4RErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_BF_SHIFT 24
/**
 * The Shift for MlpTxRtyErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_BF_SHIFT 23
/**
 * The Shift for MlpTxRtyWrn in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_BF_SHIFT 22
/**
 * The Shift for MlpTxVp0LenErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_SHIFT 21
/**
 * The Shift for MlpTxVpdropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_SHIFT 20
/**
 * The Shift for MlpTxIcsFluQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_SHIFT 19
/**
 * The Shift for MlpTxIcsRetQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_SHIFT 18
/**
 * The Shift for MlpTxIcsNewQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_SHIFT 17
/**
 * The Shift for MlpTxIcsQidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_SHIFT 16
/**
 * The Shift for MlpTxIcsQidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_SHIFT 15
/**
 * The Shift for MlpTxIcsSidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_SHIFT 14
/**
 * The Shift for MlpTxIcsSidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_SHIFT 13
/**
 * The Shift for MlpTxIcsUflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_SHIFT 12
/**
 * The Shift for MlpTxIcsOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_SHIFT 11
/**
 * The Shift for MlpTxIcsInitDone in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_SHIFT 10
/**
 * The Shift for MlpLinkEvent in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_BF_SHIFT 9
/**
 * The Shift for PhyDfrmErrCrcEnet in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_SHIFT 8
/**
 * The Shift for PhyDfrmErrCrcUsb in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_SHIFT 7
/**
 * The Shift for PhyDfrmErrTout in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_SHIFT 6
/**
 * The Shift for PhyDfrmErrIpf in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_SHIFT 5
/**
 * The Shift for PhyDfrmErrFrm in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_SHIFT 4
/**
 * The Shift for RxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATS_BF_SHIFT 3
/**
 * The Shift for TxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATS_BF_SHIFT 2
/**
 * The Shift for RxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATSETR_BF_SHIFT 1
/**
 * The Shift for TxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATSETR_BF_SHIFT 0
/**
 * The mask for MlpRxSfifoOflow in the IntSrc Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_MASK 0x80000000


/**
 * The mask for MlpRxAfifoOflow in the IntSrc Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_MASK 0x40000000


/**
 * The mask for MlpRxSeqErr in the IntSrc Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_BF_MASK 0x20000000


/**
 * The mask for MlpRxPldErr in the IntSrc Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_BF_MASK 0x10000000


/**
 * The mask for MlpRxHdrErr in the IntSrc Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_BF_MASK 0x08000000


/**
 * The mask for MlpRxFcDropErr in the IntSrc Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_MASK 0x04000000


/**
 * The mask for MlpTxToCntLvl in the IntSrc Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_MASK 0x02000000


/**
 * The mask for MlpTxW4RErr in the IntSrc Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_BF_MASK 0x01000000


/**
 * The mask for MlpTxRtyErr in the IntSrc Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_BF_MASK 0x00800000


/**
 * The mask for MlpTxRtyWrn in the IntSrc Register
 * Binary value of mask is 00000000010000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_BF_MASK 0x00400000


/**
 * The mask for MlpTxVp0LenErr in the IntSrc Register
 * Binary value of mask is 00000000001000000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_MASK 0x00200000


/**
 * The mask for MlpTxVpdropErr in the IntSrc Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_MASK 0x00100000


/**
 * The mask for MlpTxIcsFluQErr in the IntSrc Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_MASK 0x00080000


/**
 * The mask for MlpTxIcsRetQErr in the IntSrc Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_MASK 0x00040000


/**
 * The mask for MlpTxIcsNewQErr in the IntSrc Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_MASK 0x00020000


/**
 * The mask for MlpTxIcsQidAEmpty in the IntSrc Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_MASK 0x00010000


/**
 * The mask for MlpTxIcsQidEmpty in the IntSrc Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_MASK 0x00008000


/**
 * The mask for MlpTxIcsSidAEmpty in the IntSrc Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_MASK 0x00004000


/**
 * The mask for MlpTxIcsSidEmpty in the IntSrc Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_MASK 0x00002000


/**
 * The mask for MlpTxIcsUflow in the IntSrc Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_MASK 0x00001000


/**
 * The mask for MlpTxIcsOflow in the IntSrc Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for MlpTxIcsInitDone in the IntSrc Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_MASK 0x00000400


/**
 * The mask for MlpLinkEvent in the IntSrc Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_BF_MASK 0x00000200


/**
 * The mask for PhyDfrmErrCrcEnet in the IntSrc Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_MASK 0x00000100


/**
 * The mask for PhyDfrmErrCrcUsb in the IntSrc Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_MASK 0x00000080


/**
 * The mask for PhyDfrmErrTout in the IntSrc Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_MASK 0x00000040


/**
 * The mask for PhyDfrmErrIpf in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_MASK 0x00000020


/**
 * The mask for PhyDfrmErrFrm in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_MASK 0x00000010


/**
 * The mask for RxStats in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define CLM_CLM_INTSRC_RXSTATS_BF_MASK 0x00000008


/**
 * The mask for TxStats in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define CLM_CLM_INTSRC_TXSTATS_BF_MASK 0x00000004


/**
 * The mask for RxStatsETR in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define CLM_CLM_INTSRC_RXSTATSETR_BF_MASK 0x00000002


/**
 * The mask for TxStatsETR in the IntSrc Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_INTSRC_TXSTATSETR_BF_MASK 0x00000001



/**
 * Reset value for MlpRxSfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxAfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxPldErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxHdrErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxToCntLvl in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrn in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVp0LenErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpdropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsFluQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsRetQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsNewQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsUflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsInitDone in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_RESET 0x00000000


/**
 * Reset value for MlpLinkEvent in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcEnet in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcUsb in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrTout in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrIpf in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrFrm in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_RESET 0x00000000


/**
 * Reset value for RxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATS_BF_RESET 0x00000000


/**
 * Reset value for TxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATS_BF_RESET 0x00000000


/**
 * Reset value for RxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATSETR_BF_RESET 0x00000000


/**
 * Reset value for TxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATSETR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the IntFlg Register
***********************************************************/
/**
 * The Shift for MlpRxSfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_SHIFT 31
/**
 * The Shift for MlpRxAfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_SHIFT 30
/**
 * The Shift for MlpRxSeqErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_BF_SHIFT 29
/**
 * The Shift for MlpRxPldErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_BF_SHIFT 28
/**
 * The Shift for MlpRxHdrErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_BF_SHIFT 27
/**
 * The Shift for MlpRxFcDropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_SHIFT 26
/**
 * The Shift for MlpTxToCntLvl in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_SHIFT 25
/**
 * The Shift for MlpTxW4RErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_BF_SHIFT 24
/**
 * The Shift for MlpTxRtyErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_BF_SHIFT 23
/**
 * The Shift for MlpTxRtyWrn in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_BF_SHIFT 22
/**
 * The Shift for MlpTxVp0LenErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_SHIFT 21
/**
 * The Shift for MlpTxVpdropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_SHIFT 20
/**
 * The Shift for MlpTxIcsFluQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_SHIFT 19
/**
 * The Shift for MlpTxIcsRetQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_SHIFT 18
/**
 * The Shift for MlpTxIcsNewQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_SHIFT 17
/**
 * The Shift for MlpTxIcsQidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_SHIFT 16
/**
 * The Shift for MlpTxIcsQidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_SHIFT 15
/**
 * The Shift for MlpTxIcsSidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_SHIFT 14
/**
 * The Shift for MlpTxIcsSidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_SHIFT 13
/**
 * The Shift for MlpTxIcsUflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_SHIFT 12
/**
 * The Shift for MlpTxIcsOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_SHIFT 11
/**
 * The Shift for MlpTxIcsInitDone in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_SHIFT 10
/**
 * The Shift for MlpLinkEvent in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_BF_SHIFT 9
/**
 * The Shift for PhyDfrmErrCrcEnet in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_SHIFT 8
/**
 * The Shift for PhyDfrmErrCrcUsb in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_SHIFT 7
/**
 * The Shift for PhyDfrmErrTout in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_SHIFT 6
/**
 * The Shift for PhyDfrmErrIpf in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_SHIFT 5
/**
 * The Shift for PhyDfrmErrFrm in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_SHIFT 4
/**
 * The Shift for RxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATS_BF_SHIFT 3
/**
 * The Shift for TxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATS_BF_SHIFT 2
/**
 * The Shift for RxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATSETR_BF_SHIFT 1
/**
 * The Shift for TxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATSETR_BF_SHIFT 0
/**
 * The mask for MlpRxSfifoOflow in the IntFlg Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK 0x80000000


/**
 * The mask for MlpRxAfifoOflow in the IntFlg Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK 0x40000000


/**
 * The mask for MlpRxSeqErr in the IntFlg Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK 0x20000000


/**
 * The mask for MlpRxPldErr in the IntFlg Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK 0x10000000


/**
 * The mask for MlpRxHdrErr in the IntFlg Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK 0x08000000


/**
 * The mask for MlpRxFcDropErr in the IntFlg Register
 * Binary value of mask is 00000100000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK 0x04000000


/**
 * The mask for MlpTxToCntLvl in the IntFlg Register
 * Binary value of mask is 00000010000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK 0x02000000


/**
 * The mask for MlpTxW4RErr in the IntFlg Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK 0x01000000


/**
 * The mask for MlpTxRtyErr in the IntFlg Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK 0x00800000


/**
 * The mask for MlpTxRtyWrn in the IntFlg Register
 * Binary value of mask is 00000000010000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK 0x00400000


/**
 * The mask for MlpTxVp0LenErr in the IntFlg Register
 * Binary value of mask is 00000000001000000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK 0x00200000


/**
 * The mask for MlpTxVpdropErr in the IntFlg Register
 * Binary value of mask is 00000000000100000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK 0x00100000


/**
 * The mask for MlpTxIcsFluQErr in the IntFlg Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK 0x00080000


/**
 * The mask for MlpTxIcsRetQErr in the IntFlg Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK 0x00040000


/**
 * The mask for MlpTxIcsNewQErr in the IntFlg Register
 * Binary value of mask is 00000000000000100000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK 0x00020000


/**
 * The mask for MlpTxIcsQidAEmpty in the IntFlg Register
 * Binary value of mask is 00000000000000010000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK 0x00010000


/**
 * The mask for MlpTxIcsQidEmpty in the IntFlg Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK 0x00008000


/**
 * The mask for MlpTxIcsSidAEmpty in the IntFlg Register
 * Binary value of mask is 00000000000000000100000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK 0x00004000


/**
 * The mask for MlpTxIcsSidEmpty in the IntFlg Register
 * Binary value of mask is 00000000000000000010000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK 0x00002000


/**
 * The mask for MlpTxIcsUflow in the IntFlg Register
 * Binary value of mask is 00000000000000000001000000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK 0x00001000


/**
 * The mask for MlpTxIcsOflow in the IntFlg Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK 0x00000800


/**
 * The mask for MlpTxIcsInitDone in the IntFlg Register
 * Binary value of mask is 00000000000000000000010000000000
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK 0x00000400


/**
 * The mask for MlpLinkEvent in the IntFlg Register
 * Binary value of mask is 00000000000000000000001000000000
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK 0x00000200


/**
 * The mask for PhyDfrmErrCrcEnet in the IntFlg Register
 * Binary value of mask is 00000000000000000000000100000000
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK 0x00000100


/**
 * The mask for PhyDfrmErrCrcUsb in the IntFlg Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK 0x00000080


/**
 * The mask for PhyDfrmErrTout in the IntFlg Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK 0x00000040


/**
 * The mask for PhyDfrmErrIpf in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK 0x00000020


/**
 * The mask for PhyDfrmErrFrm in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK 0x00000010


/**
 * The mask for RxStats in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define CLM_CLM_INTFLG_RXSTATS_BF_MASK 0x00000008


/**
 * The mask for TxStats in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000100
 */
#define CLM_CLM_INTFLG_TXSTATS_BF_MASK 0x00000004


/**
 * The mask for RxStatsETR in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define CLM_CLM_INTFLG_RXSTATSETR_BF_MASK 0x00000002


/**
 * The mask for TxStatsETR in the IntFlg Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_INTFLG_TXSTATSETR_BF_MASK 0x00000001



/**
 * Reset value for MlpRxSfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxAfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxPldErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxHdrErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxToCntLvl in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrn in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVp0LenErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpdropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsFluQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsRetQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsNewQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsQidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsSidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsUflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxIcsInitDone in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_RESET 0x00000000


/**
 * Reset value for MlpLinkEvent in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcEnet in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcUsb in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrTout in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrIpf in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrFrm in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_RESET 0x00000000


/**
 * Reset value for RxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATS_BF_RESET 0x00000000


/**
 * Reset value for TxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATS_BF_RESET 0x00000000


/**
 * Reset value for RxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATSETR_BF_RESET 0x00000000


/**
 * Reset value for TxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATSETR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MlpConfig0 Register
***********************************************************/
/**
 * The Shift for TxVportEn in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_SHIFT 2
/**
 * The Shift for TxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_BF_SHIFT 1
/**
 * The Shift for RxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_BF_SHIFT 0
/**
 * The mask for TxVportEn in the MlpConfig0 Register
 * Binary value of mask is 00000000000000000000001111111100
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK 0x000003FC


/**
 * The mask for TxEnable in the MlpConfig0 Register
 * Binary value of mask is 00000000000000000000000000000010
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK 0x00000002


/**
 * The mask for RxEnable in the MlpConfig0 Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK 0x00000001



/**
 * Reset value for TxVportEn in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_RESET 0x00000001


/**
 * Reset value for TxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_BF_RESET 0x00000000


/**
 * Reset value for RxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MlpConfig1 Register
***********************************************************/
/**
 * The Shift for ToCntThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_SHIFT 27
/**
 * The Shift for TxQidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_SHIFT 23
/**
 * The Shift for TxSidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_SHIFT 15
/**
 * The Shift for TxW4RThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_SHIFT 7
/**
 * The Shift for TxW4RVpWatch in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_SHIFT 4
/**
 * The Shift for TxW4RLimit in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_SHIFT 0
/**
 * The mask for ToCntThresh in the MlpConfig1 Register
 * Binary value of mask is 01111000000000000000000000000000
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK 0x78000000


/**
 * The mask for TxQidThresh in the MlpConfig1 Register
 * Binary value of mask is 00000111100000000000000000000000
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK 0x07800000


/**
 * The mask for TxSidThresh in the MlpConfig1 Register
 * Binary value of mask is 00000000011111111000000000000000
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK 0x007F8000


/**
 * The mask for TxW4RThresh in the MlpConfig1 Register
 * Binary value of mask is 00000000000000000111111110000000
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK 0x00007F80


/**
 * The mask for TxW4RVpWatch in the MlpConfig1 Register
 * Binary value of mask is 00000000000000000000000001110000
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK 0x00000070


/**
 * The mask for TxW4RLimit in the MlpConfig1 Register
 * Binary value of mask is 00000000000000000000000000001111
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK 0x0000000F



/**
 * Reset value for ToCntThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_RESET 0x00000004


/**
 * Reset value for TxQidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_RESET 0x00000000


/**
 * Reset value for TxSidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_RESET 0x00000026


/**
 * Reset value for TxW4RThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_RESET 0x00000007


/**
 * Reset value for TxW4RVpWatch in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_RESET 0x00000001


/**
 * Reset value for TxW4RLimit in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_RESET 0x00000003

/***********************************************************
  BitFields defs from the PhyConfig Register
***********************************************************/
/**
 * The Shift for ParL2Frm in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_BF_SHIFT 30
/**
 * The Shift for ParToutThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_SHIFT 22
/**
 * The Shift for ParFrmThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_SHIFT 14
/**
 * The Shift for ParIdleThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_SHIFT 9
/**
 * The Shift for ParIfgMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_BF_SHIFT 7
/**
 * The Shift for ParIpfPack in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_BF_SHIFT 6
/**
 * The Shift for ParRedBit in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_BF_SHIFT 5
/**
 * The Shift for ParMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARMODE_BF_SHIFT 1
/**
 * The Shift for ParReady in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREADY_BF_SHIFT 0
/**
 * The mask for ParL2Frm in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000000010000
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK 0x40000000


/**
 * The mask for ParToutThresh in the PhyConfig Register
 * Binary value of mask is 00111111110000000000000000000000
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK 0x3FC00000


/**
 * The mask for ParFrmThresh in the PhyConfig Register
 * Binary value of mask is 00000000001111111100000000000000
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK 0x003FC000


/**
 * The mask for ParIdleThresh in the PhyConfig Register
 * Binary value of mask is 00000000000000000011111000000000
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK 0x00003E00


/**
 * The mask for ParIfgMode in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000110000000
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK 0x00000180


/**
 * The mask for ParIpfPack in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000001000000
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK 0x00000040


/**
 * The mask for ParRedBit in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000000100000
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK 0x00000020


/**
 * The mask for ParMode in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000000001110
 */
#define CLM_CLM_PHYCONFIG_PARMODE_BF_MASK 0x0000001E


/**
 * The mask for ParReady in the PhyConfig Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_PHYCONFIG_PARREADY_BF_MASK 0x00000001



/**
 * Reset value for ParL2Frm in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_BF_RESET 0x00000000


/**
 * Reset value for ParToutThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_RESET 0x00000004


/**
 * Reset value for ParFrmThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_RESET 0x00000040


/**
 * Reset value for ParIdleThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_RESET 0x00000000


/**
 * Reset value for ParIfgMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_BF_RESET 0x00000000


/**
 * Reset value for ParIpfPack in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_BF_RESET 0x00000001


/**
 * Reset value for ParRedBit in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_BF_RESET 0x00000000


/**
 * Reset value for ParMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARMODE_BF_RESET 0x00000005


/**
 * Reset value for ParReady in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREADY_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the EtherType Register
***********************************************************/
/**
 * The Shift for Eco in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_ECO_BF_SHIFT 31
/**
 * The Shift for Ifg in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_IFG_BF_SHIFT 16
/**
 * The Shift for Type in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_TYPE_BF_SHIFT 0
/**
 * The mask for Eco in the EtherType Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_ETHERTYPE_ECO_BF_MASK 0x80000000


/**
 * The mask for Ifg in the EtherType Register
 * Binary value of mask is 00000000111111110000000000000000
 */
#define CLM_CLM_ETHERTYPE_IFG_BF_MASK 0x0FFF0000


/**
 * The mask for Type in the EtherType Register
 * Binary value of mask is 00000000000000001111111111111111
 */
#define CLM_CLM_ETHERTYPE_TYPE_BF_MASK 0x0000FFFF



/**
 * Reset value for Eco in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_ECO_BF_RESET 0x00000000


/**
 * Reset value for Ifg in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_IFG_BF_RESET 0x00000000


/**
 * Reset value for Type in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_TYPE_BF_RESET 0x0000FFFF

/***********************************************************
  BitFields defs from the MacSrcLsw Register
***********************************************************/
/**
 * The Shift for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_SRC_BF_SHIFT 0
/**
 * The mask for Src in the MacSrc Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACSRCLSW_SRC_BF_MASK 0x00FFFFFF



/**
 * Reset value for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_SRC_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MacSrcMsw Register
***********************************************************/
/**
 * The Shift for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_SRC_BF_SHIFT 0
/**
 * The mask for Src in the MacSrc Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACSRCMSW_SRC_BF_MASK 0x00FFFFFF



/**
 * Reset value for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_SRC_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MacDstLsw Register
***********************************************************/
/**
 * The Shift for Go in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_GO_BF_SHIFT 29
/**
 * The Shift for WNR in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_WNR_BF_SHIFT 28
/**
 * The Shift for Vport in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_VPORT_BF_SHIFT 25
/**
 * The Shift for Multi in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_MULTI_BF_SHIFT 24
/**
 * The Shift for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_DST_BF_SHIFT 0
/**
 * The mask for Go in the MacDst Register
 * Binary value of mask is 00100000000000000000000000000000
 */
#define CLM_CLM_MACDSTLSW_GO_BF_MASK 0x20000000


/**
 * The mask for WNR in the MacDst Register
 * Binary value of mask is 00010000000000000000000000000000
 */
#define CLM_CLM_MACDSTLSW_WNR_BF_MASK 0x10000000


/**
 * The mask for Vport in the MacDst Register
 * Binary value of mask is 00001110000000000000000000000000
 */
#define CLM_CLM_MACDSTLSW_VPORT_BF_MASK 0x0E000000


/**
 * The mask for Multi in the MacDst Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define CLM_CLM_MACDSTLSW_MULTI_BF_MASK 0x01000000


/**
 * The mask for Dst in the MacDst Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACDSTLSW_DST_BF_MASK 0x00FFFFFF



/**
 * Reset value for Go in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_GO_BF_RESET 0x00000000


/**
 * Reset value for WNR in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_WNR_BF_RESET 0x00000000


/**
 * Reset value for Vport in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_VPORT_BF_RESET 0x00000000


/**
 * Reset value for Multi in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_MULTI_BF_RESET 0x00000000


/**
 * Reset value for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_DST_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MacDstMsw Register
***********************************************************/
/**
 * The Shift for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_DST_BF_SHIFT 0

/**
 * The mask for Dst in the MacDst Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACDSTMSW_DST_BF_MASK 0x00FFFFFF

/**
 * Reset value for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_DST_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MacRdDstLsw Register
***********************************************************/
/**
 * The Shift for Multi in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_BF_SHIFT 24
/**
 * The Shift for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_DST_BF_SHIFT 0
/**
 * The mask for Multi in the MacRdDst Register
 * Binary value of mask is 00000001000000000000000000000000
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_BF_MASK 0x01000000


/**
 * The mask for Dst in the MacRdDst Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACRDDSTLSW_DST_BF_MASK 0x00FFFFFF



/**
 * Reset value for Multi in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_BF_RESET 0x00000000


/**
 * Reset value for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_DST_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MacRdDstMsw Register
***********************************************************/
/**
 * The Shift for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTMSW_DST_BF_SHIFT 0

/**
 * The mask for Dst in the MacRdDst Register
 * Binary value of mask is 00000000111111111111111111111111
 */
#define CLM_CLM_MACRDDSTMSW_DST_BF_MASK 0x00FFFFFF

/**
 * Reset value for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTMSW_DST_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the TxStats Register
***********************************************************/
/**
 * The Shift for TagSel in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGSEL_BF_SHIFT 28
/**
 * The Shift for TagTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_SHIFT 27
/**
 * The Shift for TagType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPE_BF_SHIFT 16
/**
 * The Shift for AllTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_SHIFT 15
/**
 * The Shift for AllType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPE_BF_SHIFT 0
/**
 * The mask for TagSel in the TxStats Register
 * Binary value of mask is 11110000000000000000000000000000
 */
#define CLM_CLM_TXSTATS_TAGSEL_BF_MASK 0xF0000000


/**
 * The mask for TagTypeOflow in the TxStats Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_MASK 0x08000000


/**
 * The mask for TagType in the TxStats Register
 * Binary value of mask is 00000111111111110000000000000000
 */
#define CLM_CLM_TXSTATS_TAGTYPE_BF_MASK 0x07FF0000


/**
 * The mask for AllTypeOflow in the TxStats Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_MASK 0x00008000


/**
 * The mask for AllType in the TxStats Register
 * Binary value of mask is 00000000000000000111111111111111
 */
#define CLM_CLM_TXSTATS_ALLTYPE_BF_MASK 0x00007FFF



/**
 * Reset value for TagSel in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGSEL_BF_RESET 0x00000000


/**
 * Reset value for TagTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_RESET 0x00000000


/**
 * Reset value for TagType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPE_BF_RESET 0x00000000


/**
 * Reset value for AllTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_RESET 0x00000000


/**
 * Reset value for AllType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPE_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the RxStats Register
***********************************************************/
/**
 * The Shift for TagSel in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGSEL_BF_SHIFT 28
/**
 * The Shift for TagTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_SHIFT 27
/**
 * The Shift for TagType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPE_BF_SHIFT 16
/**
 * The Shift for AllTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_SHIFT 15
/**
 * The Shift for AllType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPE_BF_SHIFT 0
/**
 * The mask for TagSel in the RxStats Register
 * Binary value of mask is 11110000000000000000000000000000
 */
#define CLM_CLM_RXSTATS_TAGSEL_BF_MASK 0xF0000000


/**
 * The mask for TagTypeOflow in the RxStats Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_MASK 0x08000000


/**
 * The mask for TagType in the RxStats Register
 * Binary value of mask is 00000111111111110000000000000000
 */
#define CLM_CLM_RXSTATS_TAGTYPE_BF_MASK 0x07FF0000


/**
 * The mask for AllTypeOflow in the RxStats Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_MASK 0x00008000


/**
 * The mask for AllType in the RxStats Register
 * Binary value of mask is 00000000000000000111111111111111
 */
#define CLM_CLM_RXSTATS_ALLTYPE_BF_MASK 0x00007FFF



/**
 * Reset value for TagSel in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGSEL_BF_RESET 0x00000000


/**
 * Reset value for TagTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_RESET 0x00000000


/**
 * Reset value for TagType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPE_BF_RESET 0x00000000


/**
 * Reset value for AllTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_RESET 0x00000000


/**
 * Reset value for AllType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPE_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the TxStatsETR Register
***********************************************************/
/**
 * The Shift for MlpTxToCntLvl in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_SHIFT 20
/**
 * The Shift for MlpTxVpW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_SHIFT 19
/**
 * The Shift for MlpTxVpW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_SHIFT 16
/**
 * The Shift for MlpTxW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_SHIFT 15
/**
 * The Shift for MlpTxW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_SHIFT 12
/**
 * The Shift for MlpTxRtyErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_SHIFT 11
/**
 * The Shift for MlpTxRtyErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_SHIFT 8
/**
 * The Shift for MlpTxRtyWrnOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_SHIFT 7
/**
 * The Shift for MlpTxRtyWrn in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_SHIFT 4
/**
 * The Shift for MlpTxVpDropErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_SHIFT 3
/**
 * The Shift for MlpTxVpDropErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_SHIFT 0
/**
 * The mask for MlpTxToCntLvl in the TxStatsETR Register
 * Binary value of mask is 00000000111100000000000000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_MASK 0x00F00000


/**
 * The mask for MlpTxVpW4RErrOflow in the TxStatsETR Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_MASK 0x00080000


/**
 * The mask for MlpTxVpW4RErr in the TxStatsETR Register
 * Binary value of mask is 00000000000001110000000000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_MASK 0x00070000


/**
 * The mask for MlpTxW4RErrOflow in the TxStatsETR Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_MASK 0x00008000


/**
 * The mask for MlpTxW4RErr in the TxStatsETR Register
 * Binary value of mask is 00000000000000000111000000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_MASK 0x00007000


/**
 * The mask for MlpTxRtyErrOflow in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_MASK 0x00000800


/**
 * The mask for MlpTxRtyErr in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000011100000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_MASK 0x00000700


/**
 * The mask for MlpTxRtyWrnOflow in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_MASK 0x00000080


/**
 * The mask for MlpTxRtyWrn in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000000001110000
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_MASK 0x00000070


/**
 * The mask for MlpTxVpDropErrOflow in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_MASK 0x00000008


/**
 * The mask for MlpTxVpDropErr in the TxStatsETR Register
 * Binary value of mask is 00000000000000000000000000000111
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_MASK 0x00000007



/**
 * Reset value for MlpTxToCntLvl in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrnOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrn in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpDropErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpDropErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the RxStatsETR Register
***********************************************************/
/**
 * The Shift for PhyDfrmErrFrmOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_SHIFT 31
/**
 * The Shift for PhyDfrmErrFrm in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_SHIFT 28
/**
 * The Shift for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_SHIFT 27
/**
 * The Shift for PhyDfrmErrCrcUsb in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_SHIFT 24
/**
 * The Shift for PhyDfrmErrIpfOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_SHIFT 23
/**
 * The Shift for PhyDfrmErrIpf in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_SHIFT 20
/**
 * The Shift for PhyDfrmErrToutOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_SHIFT 19
/**
 * The Shift for PhyDfrmErrTout in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_SHIFT 16
/**
 * The Shift for MlpRxSeqErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_SHIFT 15
/**
 * The Shift for MlpRxSeqErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_SHIFT 12
/**
 * The Shift for MlpRxPldErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_SHIFT 11
/**
 * The Shift for MlpRxPldErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_SHIFT 8
/**
 * The Shift for MlpRxHdrErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_SHIFT 7
/**
 * The Shift for MlpRxHdrErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_SHIFT 4
/**
 * The Shift for MlpRxFcDropErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_SHIFT 3
/**
 * The Shift for MlpRxFcDropErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_SHIFT 0
/**
 * The mask for PhyDfrmErrFrmOflow in the RxStatsETR Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_MASK 0x80000000


/**
 * The mask for PhyDfrmErrFrm in the RxStatsETR Register
 * Binary value of mask is 01110000000000000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_MASK 0x70000000


/**
 * The mask for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 * Binary value of mask is 00001000000000000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_MASK 0x08000000


/**
 * The mask for PhyDfrmErrCrcUsb in the RxStatsETR Register
 * Binary value of mask is 00000111000000000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_MASK 0x07000000


/**
 * The mask for PhyDfrmErrIpfOflow in the RxStatsETR Register
 * Binary value of mask is 00000000100000000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_MASK 0x00800000


/**
 * The mask for PhyDfrmErrIpf in the RxStatsETR Register
 * Binary value of mask is 00000000011100000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_MASK 0x00700000


/**
 * The mask for PhyDfrmErrToutOflow in the RxStatsETR Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_MASK 0x00080000


/**
 * The mask for PhyDfrmErrTout in the RxStatsETR Register
 * Binary value of mask is 00000000000001110000000000000000
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_MASK 0x00070000


/**
 * The mask for MlpRxSeqErrOflow in the RxStatsETR Register
 * Binary value of mask is 00000000000000001000000000000000
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_MASK 0x00008000


/**
 * The mask for MlpRxSeqErr in the RxStatsETR Register
 * Binary value of mask is 00000000000000000111000000000000
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_MASK 0x00007000


/**
 * The mask for MlpRxPldErrOflow in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000100000000000
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_MASK 0x00000800


/**
 * The mask for MlpRxPldErr in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000011100000000
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_MASK 0x00000700


/**
 * The mask for MlpRxHdrErrOflow in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000000010000000
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_MASK 0x00000080


/**
 * The mask for MlpRxHdrErr in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000000001110000
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_MASK 0x00000070


/**
 * The mask for MlpRxFcDropErrOflow in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000000000001000
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_MASK 0x00000008


/**
 * The mask for MlpRxFcDropErr in the RxStatsETR Register
 * Binary value of mask is 00000000000000000000000000000111
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_MASK 0x00000007



/**
 * Reset value for PhyDfrmErrFrmOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrFrm in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrCrcUsb in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrIpfOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrIpf in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrToutOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_RESET 0x00000000


/**
 * Reset value for PhyDfrmErrTout in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxPldErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxPldErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxHdrErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxHdrErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MlpStatus Register
***********************************************************/
/**
 * The Shift for VpLinkStatus in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_SHIFT 1
/**
 * The Shift for IcsInitDone in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_BF_SHIFT 0
/**
 * The mask for VpLinkStatus in the MlpStatus Register
 * Binary value of mask is 00000000000000000000000011111110
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_MASK 0x000000FE


/**
 * The mask for IcsInitDone in the MlpStatus Register
 * Binary value of mask is 00000000000000000000000000000001
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_BF_MASK 0x00000001



/**
 * Reset value for VpLinkStatus in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_RESET 0x00000000


/**
 * Reset value for IcsInitDone in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MlpIcsStatus Register
***********************************************************/
/**
 * The Shift for QidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_SHIFT 31
/**
 * The Shift for QidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_SHIFT 30
/**
 * The Shift for QidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_SHIFT 25
/**
 * The Shift for QidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_SHIFT 20
/**
 * The Shift for SidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_SHIFT 19
/**
 * The Shift for SidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_SHIFT 18
/**
 * The Shift for SidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_SHIFT 9
/**
 * The Shift for SidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_SHIFT 0
/**
 * The mask for QidEmpty in the MlpIcsStatus Register
 * Binary value of mask is 10000000000000000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_MASK 0x80000000


/**
 * The mask for QidAEmpty in the MlpIcsStatus Register
 * Binary value of mask is 01000000000000000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_MASK 0x40000000


/**
 * The mask for QidFreeCnt in the MlpIcsStatus Register
 * Binary value of mask is 00111110000000000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_MASK 0x3E000000


/**
 * The mask for QidFreeCntLow in the MlpIcsStatus Register
 * Binary value of mask is 00000001111100000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_MASK 0x01F00000


/**
 * The mask for SidEmpty in the MlpIcsStatus Register
 * Binary value of mask is 00000000000010000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_MASK 0x00080000


/**
 * The mask for SidAEmpty in the MlpIcsStatus Register
 * Binary value of mask is 00000000000001000000000000000000
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_MASK 0x00040000


/**
 * The mask for SidFreeCnt in the MlpIcsStatus Register
 * Binary value of mask is 00000000000000111111111000000000
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_MASK 0x0003FE00


/**
 * The mask for SidFreeCntLow in the MlpIcsStatus Register
 * Binary value of mask is 00000000000000000000000111111111
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_MASK 0x000001FF



/**
 * Reset value for QidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for QidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for QidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_RESET 0x00000000


/**
 * Reset value for QidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_RESET 0x00000000


/**
 * Reset value for SidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_RESET 0x00000000


/**
 * Reset value for SidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_RESET 0x00000000


/**
 * Reset value for SidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_RESET 0x00000000


/**
 * Reset value for SidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_RESET 0x00000000

/***********************************************************
  BitFields defs from the MlpVpHold Register
***********************************************************/
/**
 * The Shift for MlpRxPldErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_SHIFT 18
/**
 * The Shift for MlpRxSeqErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_SHIFT 15
/**
 * The Shift for MlpRxFcDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_SHIFT 12
/**
 * The Shift for MlpTxW4RErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_SHIFT 9
/**
 * The Shift for MlpTxRtyErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_SHIFT 6
/**
 * The Shift for MlpTxRtyWrn in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_SHIFT 3
/**
 * The Shift for MlpTxVpDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_SHIFT 0
/**
 * The mask for MlpRxPldErr in the MlpVpHold Register
 * Binary value of mask is 00000000000111000000000000000000
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_MASK 0x001C0000


/**
 * The mask for MlpRxSeqErr in the MlpVpHold Register
 * Binary value of mask is 00000000000000111000000000000000
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_MASK 0x00038000


/**
 * The mask for MlpRxFcDropErr in the MlpVpHold Register
 * Binary value of mask is 00000000000000000111000000000000
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_MASK 0x00007000


/**
 * The mask for MlpTxW4RErr in the MlpVpHold Register
 * Binary value of mask is 00000000000000000000111000000000
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_MASK 0x00000E00


/**
 * The mask for MlpTxRtyErr in the MlpVpHold Register
 * Binary value of mask is 00000000000000000000000111000000
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_MASK 0x000001C0


/**
 * The mask for MlpTxRtyWrn in the MlpVpHold Register
 * Binary value of mask is 00000000000000000000000000111000
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_MASK 0x00000038


/**
 * The mask for MlpTxVpDropErr in the MlpVpHold Register
 * Binary value of mask is 00000000000000000000000000000111
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_MASK 0x00000007



/**
 * Reset value for MlpRxPldErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxSeqErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_RESET 0x00000000


/**
 * Reset value for MlpRxFcDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxW4RErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_RESET 0x00000000


/**
 * Reset value for MlpTxRtyWrn in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_RESET 0x00000000


/**
 * Reset value for MlpTxVpDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_RESET 0x00000000




/* CMacroHeaderView.RegRWMacroVP per Register (and subclasses) */

/*****************************************************************************
 The Id register is read-only
******************************************************************************/

/**
 * The Read Macro for the Id Register
 */
#define CLM_CLM_ID_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_ID_REG_OFFSET,0))

/*****************************************************************************
 The Rev register is read-only
******************************************************************************/

/**
 * The Read Macro for the Rev Register
 */
#define CLM_CLM_REV_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_REV_REG_OFFSET,0))

/*****************************************************************************
 The IntEn register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntEn Register
 */
#define CLM_CLM_INTEN_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0))

/**
 * The Write Macro for the IntEn Register
 */
#define CLM_CLM_INTEN_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,(value)))

/*****************************************************************************
 The IntSrc register is read-only
******************************************************************************/

/**
 * The Read Macro for the IntSrc Register
 */
#define CLM_CLM_INTSRC_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0))

/*****************************************************************************
 The IntFlg register is read-write
******************************************************************************/

/**
 * The Read Macro for the IntFlg Register
 */
#define CLM_CLM_INTFLG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0))

/**
 * The Write Macro for the IntFlg Register
 */
#define CLM_CLM_INTFLG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MlpConfig0 register is read-write
******************************************************************************/

/**
 * The Read Macro for the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0))

/**
 * The Write Macro for the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MlpConfig1 register is read-write
******************************************************************************/

/**
 * The Read Macro for the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0))

/**
 * The Write Macro for the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,(value)))

/*****************************************************************************
 The PhyConfig register is read-write
******************************************************************************/

/**
 * The Read Macro for the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0))

/**
 * The Write Macro for the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,(value)))

/*****************************************************************************
 The EtherType register is read-write
******************************************************************************/

/**
 * The Read Macro for the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0))

/**
 * The Write Macro for the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MacSrcLsw register is read-write
******************************************************************************/

/**
 * The Read Macro for the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0))

/**
 * The Write Macro for the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,(value)))
/*****************************************************************************
 The MacSrcMsw register is read-write
******************************************************************************/

/**
 * The Read Macro for the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0))

/**
 * The Write Macro for the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MacDstLsw register is read-write
******************************************************************************/

/**
 * The Read Macro for the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0))

/**
 * The Write Macro for the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MacDstMsw register is read-write
******************************************************************************/

/**
 * The Read Macro for the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0))

/**
 * The Write Macro for the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,(value)))

/*****************************************************************************
 The MacRdDst register is read-only
******************************************************************************/

/**
 * The Read Macro for the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACRDDSTLSW_REG_OFFSET,0))

/*****************************************************************************
 The MacRdDst register is read-only
******************************************************************************/

/**
 * The Read Macro for the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTMSW_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MACRDDSTMSW_REG_OFFSET,0))

/*****************************************************************************
 The TxStats register is read-write
******************************************************************************/

/**
 * The Read Macro for the TxStats Register
 */
#define CLM_CLM_TXSTATS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0))

/**
 * The Write Macro for the TxStats Register
 */
#define CLM_CLM_TXSTATS_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,(value)))

/*****************************************************************************
 The RxStats register is read-write
******************************************************************************/

/**
 * The Read Macro for the RxStats Register
 */
#define CLM_CLM_RXSTATS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0))

/**
 * The Write Macro for the RxStats Register
 */
#define CLM_CLM_RXSTATS_WRITE_REG(baseAddress, value) \
	(WRITE_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,(value)))

/*****************************************************************************
 The TxStatsETR register is read-only
******************************************************************************/

/**
 * The Read Macro for the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0))

/*****************************************************************************
 The RxStatsETR register is read-only
******************************************************************************/

/**
 * The Read Macro for the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0))

/*****************************************************************************
 The MlpStatus register is read-only
******************************************************************************/

/**
 * The Read Macro for the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MLPSTATUS_REG_OFFSET,0))

/*****************************************************************************
 The MlpIcsStatus register is read-only
******************************************************************************/

/**
 * The Read Macro for the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0))

/*****************************************************************************
 The MlpVpHold register is read-only
******************************************************************************/

/**
 * The Read Macro for the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_READ_REG(baseAddress) \
	(READ_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0))


/* CMacroHeaderView.BfROMacroVP per ReadOnlyBitField (and subclasses) */

/******************************************************************************
 The Id ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Id in the Id Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_ID_ID_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_ID_REG_OFFSET,0,CLM_CLM_ID_ID_BF_MASK,CLM_CLM_ID_ID_BF_SHIFT))

/**
 * The Read then Mask Macro for Id in the Id Register
 * This does not do a shift.
 */
#define CLM_CLM_ID_ID_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_ID_REG_OFFSET,0,CLM_CLM_ID_ID_BF_MASK))

/**
 * The Get Macro for Id in the Id Register
 */
#define CLM_CLM_ID_ID_GET_BF(regValue) \
	(GET_BF(CLM_CLM_ID_ID_BF_MASK,CLM_CLM_ID_ID_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMinor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMinor in the Rev Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_REV_CVSMINOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_CVSMINOR_BF_MASK,CLM_CLM_REV_CVSMINOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMinor in the Rev Register
 * This does not do a shift.
 */
#define CLM_CLM_REV_CVSMINOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_CVSMINOR_BF_MASK))

/**
 * The Get Macro for CvsMinor in the Rev Register
 */
#define CLM_CLM_REV_CVSMINOR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_REV_CVSMINOR_BF_MASK,CLM_CLM_REV_CVSMINOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The CvsMajor ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for CvsMajor in the Rev Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_REV_CVSMAJOR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_CVSMAJOR_BF_MASK,CLM_CLM_REV_CVSMAJOR_BF_SHIFT))

/**
 * The Read then Mask Macro for CvsMajor in the Rev Register
 * This does not do a shift.
 */
#define CLM_CLM_REV_CVSMAJOR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_CVSMAJOR_BF_MASK))

/**
 * The Get Macro for CvsMajor in the Rev Register
 */
#define CLM_CLM_REV_CVSMAJOR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_REV_CVSMAJOR_BF_MASK,CLM_CLM_REV_CVSMAJOR_BF_SHIFT,(regValue)))

/******************************************************************************
 The Irq ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Irq in the Rev Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_REV_IRQ_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_IRQ_BF_MASK,CLM_CLM_REV_IRQ_BF_SHIFT))

/**
 * The Read then Mask Macro for Irq in the Rev Register
 * This does not do a shift.
 */
#define CLM_CLM_REV_IRQ_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_REV_REG_OFFSET,0,CLM_CLM_REV_IRQ_BF_MASK))

/**
 * The Get Macro for Irq in the Rev Register
 */
#define CLM_CLM_REV_IRQ_GET_BF(regValue) \
	(GET_BF(CLM_CLM_REV_IRQ_BF_MASK,CLM_CLM_REV_IRQ_BF_SHIFT,(regValue)))

/******************************************************************************
 The TxStatsETR ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TxStatsETR in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_TXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_TXSTATSETR_BF_MASK,CLM_CLM_INTSRC_TXSTATSETR_BF_SHIFT))

/**
 * The Read then Mask Macro for TxStatsETR in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_TXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_TXSTATSETR_BF_MASK))

/**
 * The Get Macro for TxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_TXSTATSETR_BF_MASK,CLM_CLM_INTSRC_TXSTATSETR_BF_SHIFT,(regValue)))

/******************************************************************************
 The RxStatsETR ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for RxStatsETR in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_RXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_RXSTATSETR_BF_MASK,CLM_CLM_INTSRC_RXSTATSETR_BF_SHIFT))

/**
 * The Read then Mask Macro for RxStatsETR in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_RXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_RXSTATSETR_BF_MASK))

/**
 * The Get Macro for RxStatsETR in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_RXSTATSETR_BF_MASK,CLM_CLM_INTSRC_RXSTATSETR_BF_SHIFT,(regValue)))

/******************************************************************************
 The TxStats ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TxStats in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_TXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_TXSTATS_BF_MASK,CLM_CLM_INTSRC_TXSTATS_BF_SHIFT))

/**
 * The Read then Mask Macro for TxStats in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_TXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_TXSTATS_BF_MASK))

/**
 * The Get Macro for TxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_TXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_TXSTATS_BF_MASK,CLM_CLM_INTSRC_TXSTATS_BF_SHIFT,(regValue)))

/******************************************************************************
 The RxStats ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for RxStats in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_RXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_RXSTATS_BF_MASK,CLM_CLM_INTSRC_RXSTATS_BF_SHIFT))

/**
 * The Read then Mask Macro for RxStats in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_RXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_RXSTATS_BF_MASK))

/**
 * The Get Macro for RxStats in the IntSrc Register
 */
#define CLM_CLM_INTSRC_RXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_RXSTATS_BF_MASK,CLM_CLM_INTSRC_RXSTATS_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrFrm ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrFrm in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrFrm in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrFrm in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRFRM_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRFRM_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrIpf ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrIpf in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrIpf in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrIpf in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRIPF_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRIPF_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrTout ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrTout in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrTout in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrTout in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRTOUT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRTOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrCrcUsb ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrCrcUsb in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcUsb in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrCrcUsb in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrCrcEnet ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrCrcEnet in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcEnet in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrCrcEnet in the IntSrc Register
 */
#define CLM_CLM_INTSRC_PHYDFRMERRCRCENET_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTSRC_PHYDFRMERRCRCENET_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpLinkEvent ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpLinkEvent in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPLINKEVENT_BF_MASK,CLM_CLM_INTSRC_MLPLINKEVENT_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpLinkEvent in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPLINKEVENT_BF_MASK))

/**
 * The Get Macro for MlpLinkEvent in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPLINKEVENT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPLINKEVENT_BF_MASK,CLM_CLM_INTSRC_MLPLINKEVENT_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsInitDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsInitDone in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsInitDone in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_MASK))

/**
 * The Get Macro for MlpTxIcsInitDone in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSINITDONE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTSRC_MLPTXICSINITDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsOflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsOflow in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxIcsOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPTXICSOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsUflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsUflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsUflow in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxIcsUflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSUFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTSRC_MLPTXICSUFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsSidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsSidEmpty in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsSidEmpty in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_MASK))

/**
 * The Get Macro for MlpTxIcsSidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSSIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsSidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsSidAEmpty in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsSidAEmpty in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_MASK))

/**
 * The Get Macro for MlpTxIcsSidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSSIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsQidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsQidEmpty in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsQidEmpty in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_MASK))

/**
 * The Get Macro for MlpTxIcsQidEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSQIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsQidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsQidAEmpty in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsQidAEmpty in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_MASK))

/**
 * The Get Macro for MlpTxIcsQidAEmpty in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTSRC_MLPTXICSQIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsNewQErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsNewQErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsNewQErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_MASK))

/**
 * The Get Macro for MlpTxIcsNewQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSNEWQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSNEWQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsRetQErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsRetQErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsRetQErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_MASK))

/**
 * The Get Macro for MlpTxIcsRetQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSRETQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSRETQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxIcsFluQErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxIcsFluQErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxIcsFluQErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_MASK))

/**
 * The Get Macro for MlpTxIcsFluQErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXICSFLUQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTSRC_MLPTXICSFLUQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpdropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpdropErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpdropErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_MASK))

/**
 * The Get Macro for MlpTxVpdropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVPDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTSRC_MLPTXVPDROPERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVp0LenErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVp0LenErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVp0LenErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_MASK))

/**
 * The Get Macro for MlpTxVp0LenErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXVP0LENERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTSRC_MLPTXVP0LENERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyWrn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyWrn in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTSRC_MLPTXRTYWRN_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyWrn in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXRTYWRN_BF_MASK))

/**
 * The Get Macro for MlpTxRtyWrn in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYWRN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTSRC_MLPTXRTYWRN_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXRTYERR_BF_MASK,CLM_CLM_INTSRC_MLPTXRTYERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXRTYERR_BF_MASK))

/**
 * The Get Macro for MlpTxRtyErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXRTYERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXRTYERR_BF_MASK,CLM_CLM_INTSRC_MLPTXRTYERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxW4RErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxW4RErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXW4RERR_BF_MASK,CLM_CLM_INTSRC_MLPTXW4RERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxW4RErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXW4RERR_BF_MASK))

/**
 * The Get Macro for MlpTxW4RErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXW4RERR_BF_MASK,CLM_CLM_INTSRC_MLPTXW4RERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxToCntLvl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxToCntLvl in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxToCntLvl in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_MASK))

/**
 * The Get Macro for MlpTxToCntLvl in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPTXTOCNTLVL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTSRC_MLPTXTOCNTLVL_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxFcDropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxFcDropErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxFcDropErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_MASK))

/**
 * The Get Macro for MlpRxFcDropErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXFCDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTSRC_MLPRXFCDROPERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxHdrErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxHdrErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXHDRERR_BF_MASK,CLM_CLM_INTSRC_MLPRXHDRERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxHdrErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXHDRERR_BF_MASK))

/**
 * The Get Macro for MlpRxHdrErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXHDRERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXHDRERR_BF_MASK,CLM_CLM_INTSRC_MLPRXHDRERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxPldErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxPldErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXPLDERR_BF_MASK,CLM_CLM_INTSRC_MLPRXPLDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxPldErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXPLDERR_BF_MASK))

/**
 * The Get Macro for MlpRxPldErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXPLDERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXPLDERR_BF_MASK,CLM_CLM_INTSRC_MLPRXPLDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxSeqErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxSeqErr in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXSEQERR_BF_MASK,CLM_CLM_INTSRC_MLPRXSEQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxSeqErr in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXSEQERR_BF_MASK))

/**
 * The Get Macro for MlpRxSeqErr in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSEQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXSEQERR_BF_MASK,CLM_CLM_INTSRC_MLPRXSEQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxAfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxAfifoOflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxAfifoOflow in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxAfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPRXAFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxSfifoOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxSfifoOflow in the IntSrc Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxSfifoOflow in the IntSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTSRC_REG_OFFSET,0,CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxSfifoOflow in the IntSrc Register
 */
#define CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTSRC_MLPRXSFIFOOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The Dst ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Dst in the MacRdDst Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MACRDDSTLSW_DST_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACRDDSTLSW_REG_OFFSET,0,CLM_CLM_MACRDDSTLSW_DST_BF_MASK,CLM_CLM_MACRDDSTLSW_DST_BF_SHIFT))

/**
 * The Read then Mask Macro for Dst in the MacRdDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACRDDSTLSW_DST_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACRDDSTLSW_REG_OFFSET,0,CLM_CLM_MACRDDSTLSW_DST_BF_MASK))

/**
 * The Get Macro for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_DST_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACRDDSTLSW_DST_BF_MASK,CLM_CLM_MACRDDSTLSW_DST_BF_SHIFT,(regValue)))

/******************************************************************************
 The Multi ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Multi in the MacRdDst Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACRDDSTLSW_REG_OFFSET,0,CLM_CLM_MACRDDSTLSW_MULTI_BF_MASK,CLM_CLM_MACRDDSTLSW_MULTI_BF_SHIFT))

/**
 * The Read then Mask Macro for Multi in the MacRdDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACRDDSTLSW_REG_OFFSET,0,CLM_CLM_MACRDDSTLSW_MULTI_BF_MASK))

/**
 * The Get Macro for Multi in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTLSW_MULTI_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACRDDSTLSW_MULTI_BF_MASK,CLM_CLM_MACRDDSTLSW_MULTI_BF_SHIFT,(regValue)))

/******************************************************************************
 The Dst ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for Dst in the MacRdDst Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MACRDDSTMSW_DST_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACRDDSTMSW_REG_OFFSET,0,CLM_CLM_MACRDDSTMSW_DST_BF_MASK,CLM_CLM_MACRDDSTMSW_DST_BF_SHIFT))

/**
 * The Read then Mask Macro for Dst in the MacRdDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACRDDSTMSW_DST_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACRDDSTMSW_REG_OFFSET,0,CLM_CLM_MACRDDSTMSW_DST_BF_MASK))

/**
 * The Get Macro for Dst in the MacRdDst Register
 */
#define CLM_CLM_MACRDDSTMSW_DST_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACRDDSTMSW_DST_BF_MASK,CLM_CLM_MACRDDSTMSW_DST_BF_SHIFT,(regValue)))

/******************************************************************************
 The AllTypeOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for AllTypeOflow in the TxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_MASK,CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for AllTypeOflow in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_MASK))

/**
 * The Get Macro for AllTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPEOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_MASK,CLM_CLM_TXSTATS_ALLTYPEOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The TagType ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TagType in the TxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATS_TAGTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGTYPE_BF_MASK,CLM_CLM_TXSTATS_TAGTYPE_BF_SHIFT))

/**
 * The Read then Mask Macro for TagType in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_TAGTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGTYPE_BF_MASK))

/**
 * The Get Macro for TagType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATS_TAGTYPE_BF_MASK,CLM_CLM_TXSTATS_TAGTYPE_BF_SHIFT,(regValue)))

/******************************************************************************
 The TagTypeOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TagTypeOflow in the TxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_MASK,CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for TagTypeOflow in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_MASK))

/**
 * The Get Macro for TagTypeOflow in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGTYPEOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_MASK,CLM_CLM_TXSTATS_TAGTYPEOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The AllTypeOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for AllTypeOflow in the RxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_MASK,CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for AllTypeOflow in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_MASK))

/**
 * The Get Macro for AllTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPEOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_MASK,CLM_CLM_RXSTATS_ALLTYPEOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The TagType ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TagType in the RxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATS_TAGTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGTYPE_BF_MASK,CLM_CLM_RXSTATS_TAGTYPE_BF_SHIFT))

/**
 * The Read then Mask Macro for TagType in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_TAGTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGTYPE_BF_MASK))

/**
 * The Get Macro for TagType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATS_TAGTYPE_BF_MASK,CLM_CLM_RXSTATS_TAGTYPE_BF_SHIFT,(regValue)))

/******************************************************************************
 The TagTypeOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for TagTypeOflow in the RxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_MASK,CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for TagTypeOflow in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_MASK))

/**
 * The Get Macro for TagTypeOflow in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGTYPEOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_MASK,CLM_CLM_RXSTATS_TAGTYPEOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpDropErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpDropErrOflow in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpDropErrOflow in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxVpDropErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPDROPERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyWrn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyWrn in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyWrn in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_MASK))

/**
 * The Get Macro for MlpTxRtyWrn in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYWRN_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyWrnOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyWrnOflow in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyWrnOflow in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxRtyWrnOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYWRNOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyErr in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyErr in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_MASK))

/**
 * The Get Macro for MlpTxRtyErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyErrOflow in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyErrOflow in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxRtyErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXRTYERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxW4RErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxW4RErr in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxW4RErr in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_MASK))

/**
 * The Get Macro for MlpTxW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXW4RERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxW4RErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxW4RErrOflow in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxW4RErrOflow in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXW4RERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpW4RErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpW4RErr in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpW4RErr in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_MASK))

/**
 * The Get Macro for MlpTxVpW4RErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPW4RERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpW4RErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpW4RErrOflow in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpW4RErrOflow in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpTxVpW4RErrOflow in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPW4RERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxToCntLvl ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxToCntLvl in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxToCntLvl in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_MASK))

/**
 * The Get Macro for MlpTxToCntLvl in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXTOCNTLVL_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxFcDropErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxFcDropErrOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxFcDropErrOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxFcDropErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXFCDROPERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxHdrErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxHdrErr in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxHdrErr in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_MASK))

/**
 * The Get Macro for MlpRxHdrErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXHDRERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxHdrErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxHdrErrOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxHdrErrOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxHdrErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXHDRERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxPldErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxPldErr in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxPldErr in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_MASK))

/**
 * The Get Macro for MlpRxPldErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXPLDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxPldErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxPldErrOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxPldErrOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxPldErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXPLDERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxSeqErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxSeqErr in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxSeqErr in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_MASK))

/**
 * The Get Macro for MlpRxSeqErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXSEQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxSeqErrOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxSeqErrOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxSeqErrOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_MASK))

/**
 * The Get Macro for MlpRxSeqErrOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXSEQERROFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrTout ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrTout in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrTout in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrTout in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUT_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrToutOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrToutOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrToutOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrToutOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRTOUTOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrIpf ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrIpf in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrIpf in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrIpf in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRIPF_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrIpfOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrIpfOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrIpfOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrIpfOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRIPFOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrCrcUsb ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrCrcUsb in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcUsb in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrCrcUsb in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrCrcUsbOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrCrcUsbOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRCRCUSBOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrFrm ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrFrm in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrFrm in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrFrm in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRFRM_BF_SHIFT,(regValue)))

/******************************************************************************
 The PhyDfrmErrFrmOflow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for PhyDfrmErrFrmOflow in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for PhyDfrmErrFrmOflow in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_MASK))

/**
 * The Get Macro for PhyDfrmErrFrmOflow in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_MASK,CLM_CLM_RXSTATSETR_PHYDFRMERRFRMOFLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The IcsInitDone ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for IcsInitDone in the MlpStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPSTATUS_REG_OFFSET,0,CLM_CLM_MLPSTATUS_ICSINITDONE_BF_MASK,CLM_CLM_MLPSTATUS_ICSINITDONE_BF_SHIFT))

/**
 * The Read then Mask Macro for IcsInitDone in the MlpStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPSTATUS_REG_OFFSET,0,CLM_CLM_MLPSTATUS_ICSINITDONE_BF_MASK))

/**
 * The Get Macro for IcsInitDone in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_ICSINITDONE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPSTATUS_ICSINITDONE_BF_MASK,CLM_CLM_MLPSTATUS_ICSINITDONE_BF_SHIFT,(regValue)))

/******************************************************************************
 The VpLinkStatus ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for VpLinkStatus in the MlpStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPSTATUS_REG_OFFSET,0,CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_MASK,CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_SHIFT))

/**
 * The Read then Mask Macro for VpLinkStatus in the MlpStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPSTATUS_REG_OFFSET,0,CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_MASK))

/**
 * The Get Macro for VpLinkStatus in the MlpStatus Register
 */
#define CLM_CLM_MLPSTATUS_VPLINKSTATUS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_MASK,CLM_CLM_MLPSTATUS_VPLINKSTATUS_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidFreeCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidFreeCnt in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_SHIFT))

/**
 * The Read then Mask Macro for SidFreeCnt in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_MASK))

/**
 * The Get Macro for SidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDFREECNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidAEmpty in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for SidAEmpty in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_MASK))

/**
 * The Get Macro for SidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidEmpty in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for SidEmpty in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_MASK))

/**
 * The Get Macro for SidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidFreeCntLow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidFreeCntLow in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for QidFreeCntLow in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_MASK))

/**
 * The Get Macro for QidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDFREECNTLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidFreeCnt ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidFreeCnt in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_SHIFT))

/**
 * The Read then Mask Macro for QidFreeCnt in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_MASK))

/**
 * The Get Macro for QidFreeCnt in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDFREECNT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDFREECNT_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidAEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidAEmpty in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for QidAEmpty in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_MASK))

/**
 * The Get Macro for QidAEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDAEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The QidEmpty ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for QidEmpty in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_SHIFT))

/**
 * The Read then Mask Macro for QidEmpty in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_MASK))

/**
 * The Get Macro for QidEmpty in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_QIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_MASK,CLM_CLM_MLPICSSTATUS_QIDEMPTY_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyWrn ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyWrn in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyWrn in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_MASK))

/**
 * The Get Macro for MlpTxRtyWrn in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXRTYWRN_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxRtyErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxRtyErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxRtyErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_MASK))

/**
 * The Get Macro for MlpTxRtyErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXRTYERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXRTYERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxW4RErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxW4RErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxW4RErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_MASK))

/**
 * The Get Macro for MlpTxW4RErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXW4RERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxFcDropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxFcDropErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxFcDropErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_MASK))

/**
 * The Get Macro for MlpRxFcDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXFCDROPERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxSeqErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxSeqErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxSeqErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_MASK))

/**
 * The Get Macro for MlpRxSeqErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXSEQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXSEQERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxPldErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxPldErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxPldErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_MASK))

/**
 * The Get Macro for MlpRxPldErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPRXPLDERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPRXPLDERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The AllType ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for AllType in the TxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATS_ALLTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_ALLTYPE_BF_MASK,CLM_CLM_TXSTATS_ALLTYPE_BF_SHIFT))

/**
 * The Read then Mask Macro for AllType in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_ALLTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_ALLTYPE_BF_MASK))

/**
 * The Get Macro for AllType in the TxStats Register
 */
#define CLM_CLM_TXSTATS_ALLTYPE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATS_ALLTYPE_BF_MASK,CLM_CLM_TXSTATS_ALLTYPE_BF_SHIFT,(regValue)))

/******************************************************************************
 The AllType ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for AllType in the RxStats Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATS_ALLTYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_ALLTYPE_BF_MASK,CLM_CLM_RXSTATS_ALLTYPE_BF_SHIFT))

/**
 * The Read then Mask Macro for AllType in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_ALLTYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_ALLTYPE_BF_MASK))

/**
 * The Get Macro for AllType in the RxStats Register
 */
#define CLM_CLM_RXSTATS_ALLTYPE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATS_ALLTYPE_BF_MASK,CLM_CLM_RXSTATS_ALLTYPE_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpDropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpDropErr in the TxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpDropErr in the TxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATSETR_REG_OFFSET,0,CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_MASK))

/**
 * The Get Macro for MlpTxVpDropErr in the TxStatsETR Register
 */
#define CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_MASK,CLM_CLM_TXSTATSETR_MLPTXVPDROPERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpRxFcDropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpRxFcDropErr in the RxStatsETR Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpRxFcDropErr in the RxStatsETR Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATSETR_REG_OFFSET,0,CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_MASK))

/**
 * The Get Macro for MlpRxFcDropErr in the RxStatsETR Register
 */
#define CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_MASK,CLM_CLM_RXSTATSETR_MLPRXFCDROPERR_BF_SHIFT,(regValue)))

/******************************************************************************
 The SidFreeCntLow ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for SidFreeCntLow in the MlpIcsStatus Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_SHIFT))

/**
 * The Read then Mask Macro for SidFreeCntLow in the MlpIcsStatus Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPICSSTATUS_REG_OFFSET,0,CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_MASK))

/**
 * The Get Macro for SidFreeCntLow in the MlpIcsStatus Register
 */
#define CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_MASK,CLM_CLM_MLPICSSTATUS_SIDFREECNTLOW_BF_SHIFT,(regValue)))

/******************************************************************************
 The MlpTxVpDropErr ReadOnlyBitField
******************************************************************************/
/**
 * The Read Macro for MlpTxVpDropErr in the MlpVpHold Register
 * This does a read, mask, then shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_SHIFT))

/**
 * The Read then Mask Macro for MlpTxVpDropErr in the MlpVpHold Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPVPHOLD_REG_OFFSET,0,CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_MASK))

/**
 * The Get Macro for MlpTxVpDropErr in the MlpVpHold Register
 */
#define CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_MASK,CLM_CLM_MLPVPHOLD_MLPTXVPDROPERR_BF_SHIFT,(regValue)))


/* CMacroHeaderView.BfRWMacroVP per ReadWriteBitField (and subclasses) */

/******************************************************************************
 The TxStatsETR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxStatsETR in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_TXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATSETR_BF_MASK,CLM_CLM_INTEN_TXSTATSETR_BF_SHIFT))

/**
 * The Write Macro for TxStatsETR in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_TXSTATSETR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATSETR_BF_MASK,CLM_CLM_INTEN_TXSTATSETR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATSETR_BF_MASK))

/**
 * The Read Modify Write Macro for TxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATSETR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATSETR_BF_MASK,(value)))

/**
 * The Toggle Macro for TxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATSETR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATSETR_BF_MASK))
/**
 * The Get Macro for TxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_TXSTATSETR_BF_MASK,CLM_CLM_INTEN_TXSTATSETR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATSETR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_TXSTATSETR_BF_MASK,CLM_CLM_INTEN_TXSTATSETR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RxStatsETR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RxStatsETR in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_RXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATSETR_BF_MASK,CLM_CLM_INTEN_RXSTATSETR_BF_SHIFT))

/**
 * The Write Macro for RxStatsETR in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_RXSTATSETR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATSETR_BF_MASK,CLM_CLM_INTEN_RXSTATSETR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATSETR_BF_MASK))

/**
 * The Read Modify Write Macro for RxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATSETR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATSETR_BF_MASK,(value)))

/**
 * The Toggle Macro for RxStatsETR in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATSETR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATSETR_BF_MASK))
/**
 * The Get Macro for RxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_RXSTATSETR_BF_MASK,CLM_CLM_INTEN_RXSTATSETR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RxStatsETR in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATSETR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_RXSTATSETR_BF_MASK,CLM_CLM_INTEN_RXSTATSETR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxStats ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxStats in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_TXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATS_BF_MASK,CLM_CLM_INTEN_TXSTATS_BF_SHIFT))

/**
 * The Write Macro for TxStats in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_TXSTATS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATS_BF_MASK,CLM_CLM_INTEN_TXSTATS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATS_BF_MASK))

/**
 * The Read Modify Write Macro for TxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATS_BF_MASK,(value)))

/**
 * The Toggle Macro for TxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_TXSTATS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_TXSTATS_BF_MASK))
/**
 * The Get Macro for TxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_TXSTATS_BF_MASK,CLM_CLM_INTEN_TXSTATS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_TXSTATS_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_TXSTATS_BF_MASK,CLM_CLM_INTEN_TXSTATS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RxStats ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RxStats in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_RXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATS_BF_MASK,CLM_CLM_INTEN_RXSTATS_BF_SHIFT))

/**
 * The Write Macro for RxStats in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_RXSTATS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATS_BF_MASK,CLM_CLM_INTEN_RXSTATS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATS_BF_MASK))

/**
 * The Read Modify Write Macro for RxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATS_BF_MASK,(value)))

/**
 * The Toggle Macro for RxStats in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_RXSTATS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_RXSTATS_BF_MASK))
/**
 * The Get Macro for RxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_RXSTATS_BF_MASK,CLM_CLM_INTEN_RXSTATS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RxStats in the IntEn Register
 */
#define CLM_CLM_INTEN_RXSTATS_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_RXSTATS_BF_MASK,CLM_CLM_INTEN_RXSTATS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrFrm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrFrm in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrFrm in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrFrm in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrFrm in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrFrm in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrFrm in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrFrm in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRFRM_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRFRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrIpf ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrIpf in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrIpf in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrIpf in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrIpf in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrIpf in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrIpf in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrIpf in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRIPF_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRIPF_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrTout ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrTout in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrTout in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrTout in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrTout in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrTout in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrTout in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrTout in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRTOUT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRTOUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrCrcUsb ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrCrcUsb in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrCrcUsb in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcUsb in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrCrcUsb in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrCrcUsb in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrCrcUsb in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrCrcUsb in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCUSB_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrCrcEnet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrCrcEnet in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrCrcEnet in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcEnet in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrCrcEnet in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrCrcEnet in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrCrcEnet in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrCrcEnet in the IntEn Register
 */
#define CLM_CLM_INTEN_PHYDFRMERRCRCENET_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTEN_PHYDFRMERRCRCENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpLinkEvent ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpLinkEvent in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK,CLM_CLM_INTEN_MLPLINKEVENT_BF_SHIFT))

/**
 * The Write Macro for MlpLinkEvent in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK,CLM_CLM_INTEN_MLPLINKEVENT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpLinkEvent in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK))

/**
 * The Read Modify Write Macro for MlpLinkEvent in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpLinkEvent in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK))
/**
 * The Get Macro for MlpLinkEvent in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK,CLM_CLM_INTEN_MLPLINKEVENT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpLinkEvent in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPLINKEVENT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPLINKEVENT_BF_MASK,CLM_CLM_INTEN_MLPLINKEVENT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsInitDone ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsInitDone in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsInitDone in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsInitDone in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsInitDone in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsInitDone in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK))
/**
 * The Get Macro for MlpTxIcsInitDone in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsInitDone in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSINITDONE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTEN_MLPTXICSINITDONE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsOflow in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsOflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK))
/**
 * The Get Macro for MlpTxIcsOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsUflow in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsUflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsUflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsUflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsUflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK))
/**
 * The Get Macro for MlpTxIcsUflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsUflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTEN_MLPTXICSUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsSidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsSidEmpty in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsSidEmpty in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsSidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsSidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsSidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsSidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsSidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsSidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsSidAEmpty in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsSidAEmpty in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsSidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsSidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsSidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsSidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsSidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSSIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsQidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsQidEmpty in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsQidEmpty in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsQidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsQidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsQidEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsQidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsQidEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsQidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsQidAEmpty in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsQidAEmpty in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsQidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsQidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsQidAEmpty in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsQidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsQidAEmpty in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTEN_MLPTXICSQIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsNewQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsNewQErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsNewQErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsNewQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsNewQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsNewQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsNewQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsNewQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSNEWQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSNEWQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsRetQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsRetQErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsRetQErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsRetQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsRetQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsRetQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsRetQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsRetQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSRETQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSRETQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsFluQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsFluQErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsFluQErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsFluQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsFluQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsFluQErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsFluQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsFluQErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXICSFLUQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTEN_MLPTXICSFLUQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxVpdropErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxVpdropErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxVpdropErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxVpdropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxVpdropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxVpdropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK))
/**
 * The Get Macro for MlpTxVpdropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxVpdropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVPDROPERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTEN_MLPTXVPDROPERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxVp0LenErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxVp0LenErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxVp0LenErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxVp0LenErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxVp0LenErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxVp0LenErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK))
/**
 * The Get Macro for MlpTxVp0LenErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxVp0LenErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXVP0LENERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTEN_MLPTXVP0LENERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxRtyWrn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxRtyWrn in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTEN_MLPTXRTYWRN_BF_SHIFT))

/**
 * The Write Macro for MlpTxRtyWrn in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTEN_MLPTXRTYWRN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxRtyWrn in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxRtyWrn in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxRtyWrn in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK))
/**
 * The Get Macro for MlpTxRtyWrn in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTEN_MLPTXRTYWRN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxRtyWrn in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYWRN_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTEN_MLPTXRTYWRN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxRtyErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxRtyErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK,CLM_CLM_INTEN_MLPTXRTYERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxRtyErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK,CLM_CLM_INTEN_MLPTXRTYERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxRtyErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxRtyErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxRtyErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK))
/**
 * The Get Macro for MlpTxRtyErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK,CLM_CLM_INTEN_MLPTXRTYERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxRtyErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXRTYERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXRTYERR_BF_MASK,CLM_CLM_INTEN_MLPTXRTYERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxW4RErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxW4RErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK,CLM_CLM_INTEN_MLPTXW4RERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxW4RErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK,CLM_CLM_INTEN_MLPTXW4RERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxW4RErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxW4RErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxW4RErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK))
/**
 * The Get Macro for MlpTxW4RErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK,CLM_CLM_INTEN_MLPTXW4RERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxW4RErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXW4RERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXW4RERR_BF_MASK,CLM_CLM_INTEN_MLPTXW4RERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxToCntLvl ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxToCntLvl in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_SHIFT))

/**
 * The Write Macro for MlpTxToCntLvl in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxToCntLvl in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxToCntLvl in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxToCntLvl in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK))
/**
 * The Get Macro for MlpTxToCntLvl in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxToCntLvl in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPTXTOCNTLVL_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTEN_MLPTXTOCNTLVL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxFcDropErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxFcDropErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxFcDropErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxFcDropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxFcDropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxFcDropErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK))
/**
 * The Get Macro for MlpRxFcDropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxFcDropErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXFCDROPERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTEN_MLPRXFCDROPERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxHdrErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxHdrErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK,CLM_CLM_INTEN_MLPRXHDRERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxHdrErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK,CLM_CLM_INTEN_MLPRXHDRERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxHdrErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxHdrErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxHdrErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK))
/**
 * The Get Macro for MlpRxHdrErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK,CLM_CLM_INTEN_MLPRXHDRERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxHdrErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXHDRERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXHDRERR_BF_MASK,CLM_CLM_INTEN_MLPRXHDRERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxPldErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxPldErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK,CLM_CLM_INTEN_MLPRXPLDERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxPldErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK,CLM_CLM_INTEN_MLPRXPLDERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxPldErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxPldErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxPldErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK))
/**
 * The Get Macro for MlpRxPldErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK,CLM_CLM_INTEN_MLPRXPLDERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxPldErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXPLDERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXPLDERR_BF_MASK,CLM_CLM_INTEN_MLPRXPLDERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxSeqErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxSeqErr in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK,CLM_CLM_INTEN_MLPRXSEQERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxSeqErr in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK,CLM_CLM_INTEN_MLPRXSEQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxSeqErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxSeqErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxSeqErr in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK))
/**
 * The Get Macro for MlpRxSeqErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK,CLM_CLM_INTEN_MLPRXSEQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxSeqErr in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSEQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXSEQERR_BF_MASK,CLM_CLM_INTEN_MLPRXSEQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxAfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxAfifoOflow in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpRxAfifoOflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxAfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxAfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxAfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for MlpRxAfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxAfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxSfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxSfifoOflow in the IntEn Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpRxSfifoOflow in the IntEn Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxSfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxSfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxSfifoOflow in the IntEn Register
 * This does not do a shift.
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTEN_REG_OFFSET,0,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for MlpRxSfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxSfifoOflow in the IntEn Register
 */
#define CLM_CLM_INTEN_MLPRXSFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTEN_MLPRXSFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxStatsETR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxStatsETR in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_TXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATSETR_BF_MASK,CLM_CLM_INTFLG_TXSTATSETR_BF_SHIFT))

/**
 * The Write Macro for TxStatsETR in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_TXSTATSETR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATSETR_BF_MASK,CLM_CLM_INTFLG_TXSTATSETR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATSETR_BF_MASK))

/**
 * The Read Modify Write Macro for TxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATSETR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATSETR_BF_MASK,(value)))

/**
 * The Toggle Macro for TxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATSETR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATSETR_BF_MASK))
/**
 * The Get Macro for TxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_TXSTATSETR_BF_MASK,CLM_CLM_INTFLG_TXSTATSETR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATSETR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_TXSTATSETR_BF_MASK,CLM_CLM_INTFLG_TXSTATSETR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RxStatsETR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RxStatsETR in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_RXSTATSETR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATSETR_BF_MASK,CLM_CLM_INTFLG_RXSTATSETR_BF_SHIFT))

/**
 * The Write Macro for RxStatsETR in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_RXSTATSETR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATSETR_BF_MASK,CLM_CLM_INTFLG_RXSTATSETR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATSETR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATSETR_BF_MASK))

/**
 * The Read Modify Write Macro for RxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATSETR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATSETR_BF_MASK,(value)))

/**
 * The Toggle Macro for RxStatsETR in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATSETR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATSETR_BF_MASK))
/**
 * The Get Macro for RxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATSETR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_RXSTATSETR_BF_MASK,CLM_CLM_INTFLG_RXSTATSETR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RxStatsETR in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATSETR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_RXSTATSETR_BF_MASK,CLM_CLM_INTFLG_RXSTATSETR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxStats ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxStats in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_TXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATS_BF_MASK,CLM_CLM_INTFLG_TXSTATS_BF_SHIFT))

/**
 * The Write Macro for TxStats in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_TXSTATS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATS_BF_MASK,CLM_CLM_INTFLG_TXSTATS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATS_BF_MASK))

/**
 * The Read Modify Write Macro for TxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATS_BF_MASK,(value)))

/**
 * The Toggle Macro for TxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_TXSTATS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_TXSTATS_BF_MASK))
/**
 * The Get Macro for TxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_TXSTATS_BF_MASK,CLM_CLM_INTFLG_TXSTATS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_TXSTATS_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_TXSTATS_BF_MASK,CLM_CLM_INTFLG_TXSTATS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RxStats ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RxStats in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_RXSTATS_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATS_BF_MASK,CLM_CLM_INTFLG_RXSTATS_BF_SHIFT))

/**
 * The Write Macro for RxStats in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_RXSTATS_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATS_BF_MASK,CLM_CLM_INTFLG_RXSTATS_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATS_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATS_BF_MASK))

/**
 * The Read Modify Write Macro for RxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATS_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATS_BF_MASK,(value)))

/**
 * The Toggle Macro for RxStats in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_RXSTATS_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_RXSTATS_BF_MASK))
/**
 * The Get Macro for RxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATS_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_RXSTATS_BF_MASK,CLM_CLM_INTFLG_RXSTATS_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RxStats in the IntFlg Register
 */
#define CLM_CLM_INTFLG_RXSTATS_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_RXSTATS_BF_MASK,CLM_CLM_INTFLG_RXSTATS_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrFrm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrFrm in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrFrm in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrFrm in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrFrm in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrFrm in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrFrm in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrFrm in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRFRM_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRFRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrIpf ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrIpf in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrIpf in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrIpf in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrIpf in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrIpf in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrIpf in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrIpf in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRIPF_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRIPF_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrTout ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrTout in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrTout in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrTout in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrTout in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrTout in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrTout in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrTout in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRTOUT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRTOUT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrCrcUsb ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrCrcUsb in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCUSB_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The PhyDfrmErrCrcEnet ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_SHIFT))

/**
 * The Write Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK))

/**
 * The Read Modify Write Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK,(value)))

/**
 * The Toggle Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK))
/**
 * The Get Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_SHIFT,(regValue)))
/**
 * The Set Macro for PhyDfrmErrCrcEnet in the IntFlg Register
 */
#define CLM_CLM_INTFLG_PHYDFRMERRCRCENET_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_MASK,CLM_CLM_INTFLG_PHYDFRMERRCRCENET_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpLinkEvent ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpLinkEvent in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK,CLM_CLM_INTFLG_MLPLINKEVENT_BF_SHIFT))

/**
 * The Write Macro for MlpLinkEvent in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK,CLM_CLM_INTFLG_MLPLINKEVENT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpLinkEvent in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK))

/**
 * The Read Modify Write Macro for MlpLinkEvent in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpLinkEvent in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK))
/**
 * The Get Macro for MlpLinkEvent in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK,CLM_CLM_INTFLG_MLPLINKEVENT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpLinkEvent in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPLINKEVENT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPLINKEVENT_BF_MASK,CLM_CLM_INTFLG_MLPLINKEVENT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsInitDone ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsInitDone in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsInitDone in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsInitDone in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsInitDone in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsInitDone in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK))
/**
 * The Get Macro for MlpTxIcsInitDone in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsInitDone in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSINITDONE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_MASK,CLM_CLM_INTFLG_MLPTXICSINITDONE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsOflow in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsOflow in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK))
/**
 * The Get Macro for MlpTxIcsOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsUflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsUflow in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsUflow in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsUflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsUflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsUflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK))
/**
 * The Get Macro for MlpTxIcsUflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsUflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSUFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_MASK,CLM_CLM_INTFLG_MLPTXICSUFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsSidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsSidEmpty in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsSidEmpty in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsSidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsSidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsSidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsSidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsSidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsSidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsSidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSSIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsQidEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsQidEmpty in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsQidEmpty in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsQidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsQidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsQidEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsQidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsQidEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsQidAEmpty ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK))
/**
 * The Get Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsQidAEmpty in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_MASK,CLM_CLM_INTFLG_MLPTXICSQIDAEMPTY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsNewQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsNewQErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsNewQErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsNewQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsNewQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsNewQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsNewQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsNewQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSNEWQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSNEWQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsRetQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsRetQErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsRetQErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsRetQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsRetQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsRetQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsRetQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsRetQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSRETQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSRETQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxIcsFluQErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxIcsFluQErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxIcsFluQErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxIcsFluQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxIcsFluQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxIcsFluQErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK))
/**
 * The Get Macro for MlpTxIcsFluQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxIcsFluQErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXICSFLUQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_MASK,CLM_CLM_INTFLG_MLPTXICSFLUQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxVpdropErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxVpdropErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxVpdropErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxVpdropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxVpdropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxVpdropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK))
/**
 * The Get Macro for MlpTxVpdropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxVpdropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVPDROPERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVPDROPERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxVp0LenErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxVp0LenErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxVp0LenErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxVp0LenErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxVp0LenErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxVp0LenErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK))
/**
 * The Get Macro for MlpTxVp0LenErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxVp0LenErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXVP0LENERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_MASK,CLM_CLM_INTFLG_MLPTXVP0LENERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxRtyWrn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxRtyWrn in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_SHIFT))

/**
 * The Write Macro for MlpTxRtyWrn in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxRtyWrn in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxRtyWrn in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxRtyWrn in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK))
/**
 * The Get Macro for MlpTxRtyWrn in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxRtyWrn in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYWRN_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXRTYWRN_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYWRN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxRtyErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxRtyErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxRtyErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxRtyErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxRtyErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxRtyErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK))
/**
 * The Get Macro for MlpTxRtyErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxRtyErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXRTYERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXRTYERR_BF_MASK,CLM_CLM_INTFLG_MLPTXRTYERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxW4RErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxW4RErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK,CLM_CLM_INTFLG_MLPTXW4RERR_BF_SHIFT))

/**
 * The Write Macro for MlpTxW4RErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK,CLM_CLM_INTFLG_MLPTXW4RERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxW4RErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxW4RErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxW4RErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK))
/**
 * The Get Macro for MlpTxW4RErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK,CLM_CLM_INTFLG_MLPTXW4RERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxW4RErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXW4RERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXW4RERR_BF_MASK,CLM_CLM_INTFLG_MLPTXW4RERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpTxToCntLvl ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpTxToCntLvl in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_SHIFT))

/**
 * The Write Macro for MlpTxToCntLvl in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpTxToCntLvl in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK))

/**
 * The Read Modify Write Macro for MlpTxToCntLvl in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpTxToCntLvl in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK))
/**
 * The Get Macro for MlpTxToCntLvl in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpTxToCntLvl in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPTXTOCNTLVL_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_MASK,CLM_CLM_INTFLG_MLPTXTOCNTLVL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxFcDropErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxFcDropErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxFcDropErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxFcDropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxFcDropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxFcDropErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK))
/**
 * The Get Macro for MlpRxFcDropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxFcDropErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXFCDROPERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_MASK,CLM_CLM_INTFLG_MLPRXFCDROPERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxHdrErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxHdrErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK,CLM_CLM_INTFLG_MLPRXHDRERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxHdrErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK,CLM_CLM_INTFLG_MLPRXHDRERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxHdrErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxHdrErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxHdrErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK))
/**
 * The Get Macro for MlpRxHdrErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK,CLM_CLM_INTFLG_MLPRXHDRERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxHdrErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXHDRERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXHDRERR_BF_MASK,CLM_CLM_INTFLG_MLPRXHDRERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxPldErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxPldErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK,CLM_CLM_INTFLG_MLPRXPLDERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxPldErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK,CLM_CLM_INTFLG_MLPRXPLDERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxPldErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxPldErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxPldErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK))
/**
 * The Get Macro for MlpRxPldErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK,CLM_CLM_INTFLG_MLPRXPLDERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxPldErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXPLDERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXPLDERR_BF_MASK,CLM_CLM_INTFLG_MLPRXPLDERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxSeqErr ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxSeqErr in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK,CLM_CLM_INTFLG_MLPRXSEQERR_BF_SHIFT))

/**
 * The Write Macro for MlpRxSeqErr in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK,CLM_CLM_INTFLG_MLPRXSEQERR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxSeqErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxSeqErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxSeqErr in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK))
/**
 * The Get Macro for MlpRxSeqErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK,CLM_CLM_INTFLG_MLPRXSEQERR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxSeqErr in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSEQERR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXSEQERR_BF_MASK,CLM_CLM_INTFLG_MLPRXSEQERR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxAfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxAfifoOflow in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpRxAfifoOflow in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxAfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxAfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxAfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for MlpRxAfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxAfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXAFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The MlpRxSfifoOflow ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for MlpRxSfifoOflow in the IntFlg Register
 * This does a mask and shift.
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_SHIFT))

/**
 * The Write Macro for MlpRxSfifoOflow in the IntFlg Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for MlpRxSfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK))

/**
 * The Read Modify Write Macro for MlpRxSfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK,(value)))

/**
 * The Toggle Macro for MlpRxSfifoOflow in the IntFlg Register
 * This does not do a shift.
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_INTFLG_REG_OFFSET,0,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK))
/**
 * The Get Macro for MlpRxSfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_GET_BF(regValue) \
	(GET_BF(CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_SHIFT,(regValue)))
/**
 * The Set Macro for MlpRxSfifoOflow in the IntFlg Register
 */
#define CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_MASK,CLM_CLM_INTFLG_MLPRXSFIFOOFLOW_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The RxEnable ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for RxEnable in the MlpConfig0 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_RXENABLE_BF_SHIFT))

/**
 * The Write Macro for RxEnable in the MlpConfig0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_RXENABLE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for RxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK))

/**
 * The Read Modify Write Macro for RxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK,(value)))

/**
 * The Toggle Macro for RxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK))
/**
 * The Get Macro for RxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_RXENABLE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for RxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_RXENABLE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG0_RXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_RXENABLE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxEnable ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxEnable in the MlpConfig0 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_TXENABLE_BF_SHIFT))

/**
 * The Write Macro for TxEnable in the MlpConfig0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_TXENABLE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK))

/**
 * The Read Modify Write Macro for TxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK,(value)))

/**
 * The Toggle Macro for TxEnable in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK))
/**
 * The Get Macro for TxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_TXENABLE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxEnable in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXENABLE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG0_TXENABLE_BF_MASK,CLM_CLM_MLPCONFIG0_TXENABLE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxVportEn ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxVportEn in the MlpConfig0 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_SHIFT))

/**
 * The Write Macro for TxVportEn in the MlpConfig0 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxVportEn in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK))

/**
 * The Read Modify Write Macro for TxVportEn in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK,(value)))

/**
 * The Toggle Macro for TxVportEn in the MlpConfig0 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG0_REG_OFFSET,0,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK))
/**
 * The Get Macro for TxVportEn in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxVportEn in the MlpConfig0 Register
 */
#define CLM_CLM_MLPCONFIG0_TXVPORTEN_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_MASK,CLM_CLM_MLPCONFIG0_TXVPORTEN_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxW4RLimit ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxW4RLimit in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_SHIFT))

/**
 * The Write Macro for TxW4RLimit in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxW4RLimit in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK))

/**
 * The Read Modify Write Macro for TxW4RLimit in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK,(value)))

/**
 * The Toggle Macro for TxW4RLimit in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK))
/**
 * The Get Macro for TxW4RLimit in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxW4RLimit in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RLIMIT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RLIMIT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxW4RVpWatch ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxW4RVpWatch in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_SHIFT))

/**
 * The Write Macro for TxW4RVpWatch in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxW4RVpWatch in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK))

/**
 * The Read Modify Write Macro for TxW4RVpWatch in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK,(value)))

/**
 * The Toggle Macro for TxW4RVpWatch in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK))
/**
 * The Get Macro for TxW4RVpWatch in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxW4RVpWatch in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RVPWATCH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxW4RThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxW4RThresh in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_SHIFT))

/**
 * The Write Macro for TxW4RThresh in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxW4RThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for TxW4RThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for TxW4RThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK))
/**
 * The Get Macro for TxW4RThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxW4RThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXW4RTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXW4RTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxSidThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxSidThresh in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_SHIFT))

/**
 * The Write Macro for TxSidThresh in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxSidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for TxSidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for TxSidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK))
/**
 * The Get Macro for TxSidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxSidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXSIDTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXSIDTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TxQidThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TxQidThresh in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_SHIFT))

/**
 * The Write Macro for TxQidThresh in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TxQidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for TxQidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for TxQidThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK))
/**
 * The Get Macro for TxQidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TxQidThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TXQIDTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TXQIDTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ToCntThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ToCntThresh in the MlpConfig1 Register
 * This does a mask and shift.
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_SHIFT))

/**
 * The Write Macro for ToCntThresh in the MlpConfig1 Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ToCntThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for ToCntThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for ToCntThresh in the MlpConfig1 Register
 * This does not do a shift.
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MLPCONFIG1_REG_OFFSET,0,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK))
/**
 * The Get Macro for ToCntThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ToCntThresh in the MlpConfig1 Register
 */
#define CLM_CLM_MLPCONFIG1_TOCNTTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_MASK,CLM_CLM_MLPCONFIG1_TOCNTTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParReady ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParReady in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARREADY_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREADY_BF_MASK,CLM_CLM_PHYCONFIG_PARREADY_BF_SHIFT))

/**
 * The Write Macro for ParReady in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARREADY_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREADY_BF_MASK,CLM_CLM_PHYCONFIG_PARREADY_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParReady in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREADY_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREADY_BF_MASK))

/**
 * The Read Modify Write Macro for ParReady in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREADY_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREADY_BF_MASK,(value)))

/**
 * The Toggle Macro for ParReady in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREADY_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREADY_BF_MASK))
/**
 * The Get Macro for ParReady in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREADY_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARREADY_BF_MASK,CLM_CLM_PHYCONFIG_PARREADY_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParReady in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREADY_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARREADY_BF_MASK,CLM_CLM_PHYCONFIG_PARREADY_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParMode in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARMODE_BF_SHIFT))

/**
 * The Write Macro for ParMode in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARMODE_BF_MASK))

/**
 * The Read Modify Write Macro for ParMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for ParMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARMODE_BF_MASK))
/**
 * The Get Macro for ParMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARMODE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARMODE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParRedBit ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParRedBit in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK,CLM_CLM_PHYCONFIG_PARREDBIT_BF_SHIFT))

/**
 * The Write Macro for ParRedBit in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK,CLM_CLM_PHYCONFIG_PARREDBIT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParRedBit in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK))

/**
 * The Read Modify Write Macro for ParRedBit in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK,(value)))

/**
 * The Toggle Macro for ParRedBit in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK))
/**
 * The Get Macro for ParRedBit in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK,CLM_CLM_PHYCONFIG_PARREDBIT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParRedBit in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARREDBIT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARREDBIT_BF_MASK,CLM_CLM_PHYCONFIG_PARREDBIT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParIpfPack ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParIpfPack in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_SHIFT))

/**
 * The Write Macro for ParIpfPack in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParIpfPack in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK))

/**
 * The Read Modify Write Macro for ParIpfPack in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK,(value)))

/**
 * The Toggle Macro for ParIpfPack in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK))
/**
 * The Get Macro for ParIpfPack in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParIpfPack in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIPFPACK_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARIPFPACK_BF_MASK,CLM_CLM_PHYCONFIG_PARIPFPACK_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParIfgMode ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParIfgMode in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_SHIFT))

/**
 * The Write Macro for ParIfgMode in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParIfgMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK))

/**
 * The Read Modify Write Macro for ParIfgMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK,(value)))

/**
 * The Toggle Macro for ParIfgMode in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK))
/**
 * The Get Macro for ParIfgMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParIfgMode in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIFGMODE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARIFGMODE_BF_MASK,CLM_CLM_PHYCONFIG_PARIFGMODE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParIdleThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParIdleThresh in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_SHIFT))

/**
 * The Write Macro for ParIdleThresh in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParIdleThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for ParIdleThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for ParIdleThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK))
/**
 * The Get Macro for ParIdleThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParIdleThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARIDLETHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARIDLETHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParFrmThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParFrmThresh in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_SHIFT))

/**
 * The Write Macro for ParFrmThresh in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParFrmThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for ParFrmThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for ParFrmThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK))
/**
 * The Get Macro for ParFrmThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParFrmThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARFRMTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARFRMTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParToutThresh ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParToutThresh in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_SHIFT))

/**
 * The Write Macro for ParToutThresh in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParToutThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK))

/**
 * The Read Modify Write Macro for ParToutThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK,(value)))

/**
 * The Toggle Macro for ParToutThresh in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK))
/**
 * The Get Macro for ParToutThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParToutThresh in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARTOUTTHRESH_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_MASK,CLM_CLM_PHYCONFIG_PARTOUTTHRESH_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The ParL2Frm ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for ParL2Frm in the PhyConfig Register
 * This does a mask and shift.
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK,CLM_CLM_PHYCONFIG_PARL2FRM_BF_SHIFT))

/**
 * The Write Macro for ParL2Frm in the PhyConfig Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK,CLM_CLM_PHYCONFIG_PARL2FRM_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for ParL2Frm in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK))

/**
 * The Read Modify Write Macro for ParL2Frm in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK,(value)))

/**
 * The Toggle Macro for ParL2Frm in the PhyConfig Register
 * This does not do a shift.
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_PHYCONFIG_REG_OFFSET,0,CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK))
/**
 * The Get Macro for ParL2Frm in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_GET_BF(regValue) \
	(GET_BF(CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK,CLM_CLM_PHYCONFIG_PARL2FRM_BF_SHIFT,(regValue)))
/**
 * The Set Macro for ParL2Frm in the PhyConfig Register
 */
#define CLM_CLM_PHYCONFIG_PARL2FRM_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_PHYCONFIG_PARL2FRM_BF_MASK,CLM_CLM_PHYCONFIG_PARL2FRM_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Eco ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Eco in the EtherType Register
 * This does a mask and shift.
 */
#define CLM_CLM_ETHERTYPE_ECO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_ECO_BF_MASK,CLM_CLM_ETHERTYPE_ECO_BF_SHIFT))

/**
 * The Write Macro for Eco in the EtherType Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_ETHERTYPE_ECO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_ECO_BF_MASK,CLM_CLM_ETHERTYPE_ECO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Eco in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_ECO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_ECO_BF_MASK))

/**
 * The Read Modify Write Macro for Eco in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_ECO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_ECO_BF_MASK,(value)))

/**
 * The Toggle Macro for Eco in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_ECO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_ECO_BF_MASK))
/**
 * The Get Macro for Eco in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_ECO_GET_BF(regValue) \
	(GET_BF(CLM_CLM_ETHERTYPE_ECO_BF_MASK,CLM_CLM_ETHERTYPE_ECO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Eco in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_ECO_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_ETHERTYPE_ECO_BF_MASK,CLM_CLM_ETHERTYPE_ECO_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Ifg ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Ifg in the EtherType Register
 * This does a mask and shift.
 */
#define CLM_CLM_ETHERTYPE_IFG_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_IFG_BF_MASK,CLM_CLM_ETHERTYPE_IFG_BF_SHIFT))

/**
 * The Write Macro for Ifg in the EtherType Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_ETHERTYPE_IFG_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_IFG_BF_MASK,CLM_CLM_ETHERTYPE_IFG_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Ifg in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_IFG_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_IFG_BF_MASK))

/**
 * The Read Modify Write Macro for Ifg in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_IFG_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_IFG_BF_MASK,(value)))

/**
 * The Toggle Macro for Ifg in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_IFG_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_IFG_BF_MASK))
/**
 * The Get Macro for Ifg in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_IFG_GET_BF(regValue) \
	(GET_BF(CLM_CLM_ETHERTYPE_IFG_BF_MASK,CLM_CLM_ETHERTYPE_IFG_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Ifg in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_IFG_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_ETHERTYPE_IFG_BF_MASK,CLM_CLM_ETHERTYPE_IFG_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Type ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Type in the EtherType Register
 * This does a mask and shift.
 */
#define CLM_CLM_ETHERTYPE_TYPE_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_TYPE_BF_MASK,CLM_CLM_ETHERTYPE_TYPE_BF_SHIFT))

/**
 * The Write Macro for Type in the EtherType Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_ETHERTYPE_TYPE_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_TYPE_BF_MASK,CLM_CLM_ETHERTYPE_TYPE_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Type in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_TYPE_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_TYPE_BF_MASK))

/**
 * The Read Modify Write Macro for Type in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_TYPE_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_TYPE_BF_MASK,(value)))

/**
 * The Toggle Macro for Type in the EtherType Register
 * This does not do a shift.
 */
#define CLM_CLM_ETHERTYPE_TYPE_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_ETHERTYPE_REG_OFFSET,0,CLM_CLM_ETHERTYPE_TYPE_BF_MASK))
/**
 * The Get Macro for Type in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_TYPE_GET_BF(regValue) \
	(GET_BF(CLM_CLM_ETHERTYPE_TYPE_BF_MASK,CLM_CLM_ETHERTYPE_TYPE_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Type in the EtherType Register
 */
#define CLM_CLM_ETHERTYPE_TYPE_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_ETHERTYPE_TYPE_BF_MASK,CLM_CLM_ETHERTYPE_TYPE_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Lsw Src ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Src in the MacSrc Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACSRCLSW_SRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,CLM_CLM_MACSRCLSW_SRC_BF_MASK,CLM_CLM_MACSRCLSW_SRC_BF_SHIFT))

/**
 * The Write Macro for Src in the MacSrc Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACSRCLSW_SRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,CLM_CLM_MACSRCLSW_SRC_BF_MASK,CLM_CLM_MACSRCLSW_SRC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCLSW_SRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,CLM_CLM_MACSRCLSW_SRC_BF_MASK))

/**
 * The Read Modify Write Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCLSW_SRC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,CLM_CLM_MACSRCLSW_SRC_BF_MASK,(value)))

/**
 * The Toggle Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCLSW_SRC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACSRCLSW_REG_OFFSET,0,CLM_CLM_MACSRCLSW_SRC_BF_MASK))
/**
 * The Get Macro for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_SRC_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACSRCLSW_SRC_BF_MASK,CLM_CLM_MACSRCLSW_SRC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCLSW_SRC_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACSRCLSW_SRC_BF_MASK,CLM_CLM_MACSRCLSW_SRC_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Msw Src ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Src in the MacSrc Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACSRCMSW_SRC_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,CLM_CLM_MACSRCMSW_SRC_BF_MASK,CLM_CLM_MACSRCMSW_SRC_BF_SHIFT))

/**
 * The Write Macro for Src in the MacSrc Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACSRCMSW_SRC_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,CLM_CLM_MACSRCMSW_SRC_BF_MASK,CLM_CLM_MACSRCMSW_SRC_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCMSW_SRC_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,CLM_CLM_MACSRCMSW_SRC_BF_MASK))

/**
 * The Read Modify Write Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCMSW_SRC_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,CLM_CLM_MACSRCMSW_SRC_BF_MASK,(value)))

/**
 * The Toggle Macro for Src in the MacSrc Register
 * This does not do a shift.
 */
#define CLM_CLM_MACSRCMSW_SRC_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACSRCMSW_REG_OFFSET,0,CLM_CLM_MACSRCMSW_SRC_BF_MASK))
/**
 * The Get Macro for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_SRC_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACSRCMSW_SRC_BF_MASK,CLM_CLM_MACSRCMSW_SRC_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Src in the MacSrc Register
 */
#define CLM_CLM_MACSRCMSW_SRC_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACSRCMSW_SRC_BF_MASK,CLM_CLM_MACSRCMSW_SRC_BF_SHIFT,(regValue),(bfValue)))


/******************************************************************************
 The Dst ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Dst in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTLSW_DST_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_DST_BF_MASK,CLM_CLM_MACDSTLSW_DST_BF_SHIFT))

/**
 * The Write Macro for Dst in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTLSW_DST_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_DST_BF_MASK,CLM_CLM_MACDSTLSW_DST_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_DST_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_DST_BF_MASK))

/**
 * The Read Modify Write Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_DST_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_DST_BF_MASK,(value)))

/**
 * The Toggle Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_DST_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_DST_BF_MASK))
/**
 * The Get Macro for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_DST_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTLSW_DST_BF_MASK,CLM_CLM_MACDSTLSW_DST_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_DST_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTLSW_DST_BF_MASK,CLM_CLM_MACDSTLSW_DST_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Multi ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Multi in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTLSW_MULTI_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_MULTI_BF_MASK,CLM_CLM_MACDSTLSW_MULTI_BF_SHIFT))

/**
 * The Write Macro for Multi in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTLSW_MULTI_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_MULTI_BF_MASK,CLM_CLM_MACDSTLSW_MULTI_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Multi in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_MULTI_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_MULTI_BF_MASK))

/**
 * The Read Modify Write Macro for Multi in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_MULTI_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_MULTI_BF_MASK,(value)))

/**
 * The Toggle Macro for Multi in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_MULTI_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_MULTI_BF_MASK))
/**
 * The Get Macro for Multi in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_MULTI_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTLSW_MULTI_BF_MASK,CLM_CLM_MACDSTLSW_MULTI_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Multi in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_MULTI_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTLSW_MULTI_BF_MASK,CLM_CLM_MACDSTLSW_MULTI_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Vport ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Vport in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTLSW_VPORT_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_VPORT_BF_MASK,CLM_CLM_MACDSTLSW_VPORT_BF_SHIFT))

/**
 * The Write Macro for Vport in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTLSW_VPORT_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_VPORT_BF_MASK,CLM_CLM_MACDSTLSW_VPORT_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Vport in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_VPORT_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_VPORT_BF_MASK))

/**
 * The Read Modify Write Macro for Vport in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_VPORT_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_VPORT_BF_MASK,(value)))

/**
 * The Toggle Macro for Vport in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_VPORT_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_VPORT_BF_MASK))
/**
 * The Get Macro for Vport in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_VPORT_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTLSW_VPORT_BF_MASK,CLM_CLM_MACDSTLSW_VPORT_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Vport in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_VPORT_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTLSW_VPORT_BF_MASK,CLM_CLM_MACDSTLSW_VPORT_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The WNR ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for WNR in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTLSW_WNR_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_WNR_BF_MASK,CLM_CLM_MACDSTLSW_WNR_BF_SHIFT))

/**
 * The Write Macro for WNR in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTLSW_WNR_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_WNR_BF_MASK,CLM_CLM_MACDSTLSW_WNR_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for WNR in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_WNR_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_WNR_BF_MASK))

/**
 * The Read Modify Write Macro for WNR in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_WNR_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_WNR_BF_MASK,(value)))

/**
 * The Toggle Macro for WNR in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_WNR_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_WNR_BF_MASK))
/**
 * The Get Macro for WNR in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_WNR_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTLSW_WNR_BF_MASK,CLM_CLM_MACDSTLSW_WNR_BF_SHIFT,(regValue)))
/**
 * The Set Macro for WNR in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_WNR_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTLSW_WNR_BF_MASK,CLM_CLM_MACDSTLSW_WNR_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Dst ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Dst in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTMSW_DST_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,CLM_CLM_MACDSTMSW_DST_BF_MASK,CLM_CLM_MACDSTMSW_DST_BF_SHIFT))

/**
 * The Write Macro for Dst in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTMSW_DST_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,CLM_CLM_MACDSTMSW_DST_BF_MASK,CLM_CLM_MACDSTMSW_DST_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTMSW_DST_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,CLM_CLM_MACDSTMSW_DST_BF_MASK))

/**
 * The Read Modify Write Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTMSW_DST_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,CLM_CLM_MACDSTMSW_DST_BF_MASK,(value)))

/**
 * The Toggle Macro for Dst in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTMSW_DST_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTMSW_REG_OFFSET,0,CLM_CLM_MACDSTMSW_DST_BF_MASK))
/**
 * The Get Macro for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_DST_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTMSW_DST_BF_MASK,CLM_CLM_MACDSTMSW_DST_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Dst in the MacDst Register
 */
#define CLM_CLM_MACDSTMSW_DST_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTMSW_DST_BF_MASK,CLM_CLM_MACDSTMSW_DST_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TagSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TagSel in the TxStats Register
 * This does a mask and shift.
 */
#define CLM_CLM_TXSTATS_TAGSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGSEL_BF_MASK,CLM_CLM_TXSTATS_TAGSEL_BF_SHIFT))

/**
 * The Write Macro for TagSel in the TxStats Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_TXSTATS_TAGSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGSEL_BF_MASK,CLM_CLM_TXSTATS_TAGSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TagSel in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_TAGSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGSEL_BF_MASK))

/**
 * The Read Modify Write Macro for TagSel in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_TAGSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for TagSel in the TxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_TXSTATS_TAGSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_TXSTATS_REG_OFFSET,0,CLM_CLM_TXSTATS_TAGSEL_BF_MASK))
/**
 * The Get Macro for TagSel in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGSEL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_TXSTATS_TAGSEL_BF_MASK,CLM_CLM_TXSTATS_TAGSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TagSel in the TxStats Register
 */
#define CLM_CLM_TXSTATS_TAGSEL_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_TXSTATS_TAGSEL_BF_MASK,CLM_CLM_TXSTATS_TAGSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The TagSel ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for TagSel in the RxStats Register
 * This does a mask and shift.
 */
#define CLM_CLM_RXSTATS_TAGSEL_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGSEL_BF_MASK,CLM_CLM_RXSTATS_TAGSEL_BF_SHIFT))

/**
 * The Write Macro for TagSel in the RxStats Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_RXSTATS_TAGSEL_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGSEL_BF_MASK,CLM_CLM_RXSTATS_TAGSEL_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for TagSel in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_TAGSEL_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGSEL_BF_MASK))

/**
 * The Read Modify Write Macro for TagSel in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_TAGSEL_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGSEL_BF_MASK,(value)))

/**
 * The Toggle Macro for TagSel in the RxStats Register
 * This does not do a shift.
 */
#define CLM_CLM_RXSTATS_TAGSEL_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_RXSTATS_REG_OFFSET,0,CLM_CLM_RXSTATS_TAGSEL_BF_MASK))
/**
 * The Get Macro for TagSel in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGSEL_GET_BF(regValue) \
	(GET_BF(CLM_CLM_RXSTATS_TAGSEL_BF_MASK,CLM_CLM_RXSTATS_TAGSEL_BF_SHIFT,(regValue)))
/**
 * The Set Macro for TagSel in the RxStats Register
 */
#define CLM_CLM_RXSTATS_TAGSEL_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_RXSTATS_TAGSEL_BF_MASK,CLM_CLM_RXSTATS_TAGSEL_BF_SHIFT,(regValue),(bfValue)))

/******************************************************************************
 The Go ReadWriteBitField
******************************************************************************/

/**
 * The Read Macro for Go in the MacDst Register
 * This does a mask and shift.
 */
#define CLM_CLM_MACDSTLSW_GO_READ_BF(baseAddress) \
	(READ_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_GO_BF_MASK,CLM_CLM_MACDSTLSW_GO_BF_SHIFT))

/**
 * The Write Macro for Go in the MacDst Register
 * This shifts the value and does a read, mask, then write.
 */
#define CLM_CLM_MACDSTLSW_GO_WRITE_BF(baseAddress, value) \
	(WRITE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_GO_BF_MASK,CLM_CLM_MACDSTLSW_GO_BF_SHIFT,(value)))

/**
 * The Read then Mask Macro for Go in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_GO_READMASK_BF(baseAddress) \
	(READMASK_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_GO_BF_MASK))

/**
 * The Read Modify Write Macro for Go in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_GO_READMODWRITE_BF(baseAddress,value) \
	(READMODWRITE_REG((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_GO_BF_MASK,(value)))

/**
 * The Toggle Macro for Go in the MacDst Register
 * This does not do a shift.
 */
#define CLM_CLM_MACDSTLSW_GO_TOGGLE_BF(baseAddress) \
	(TOGGLE_BF((baseAddress),CLM_CLM_MACDSTLSW_REG_OFFSET,0,CLM_CLM_MACDSTLSW_GO_BF_MASK))
/**
 * The Get Macro for Go in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_GO_GET_BF(regValue) \
	(GET_BF(CLM_CLM_MACDSTLSW_GO_BF_MASK,CLM_CLM_MACDSTLSW_GO_BF_SHIFT,(regValue)))
/**
 * The Set Macro for Go in the MacDst Register
 */
#define CLM_CLM_MACDSTLSW_GO_SET_BF(regValue,bfValue) \
	(SET_BF(CLM_CLM_MACDSTLSW_GO_BF_MASK,CLM_CLM_MACDSTLSW_GO_BF_SHIFT,(regValue),(bfValue)))




#endif
