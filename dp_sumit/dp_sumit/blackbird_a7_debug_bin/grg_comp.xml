<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:pdt="PDT" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4"><!--Component named Grg--><spirit:vendor>Icron</spirit:vendor>
   <spirit:library>lib</spirit:library>
   <spirit:name>Grg</spirit:name>
   <spirit:version>1.1</spirit:version>
   <spirit:memoryMaps>
      <spirit:memoryMap><!--MemoryMap named GrgCpuMemMap--><spirit:name>GrgCpuMemMap</spirit:name>
         <spirit:addressBlock><!--AddressBlock named GRG--><spirit:name>GRG</spirit:name>
            <spirit:description/>
            <spirit:baseAddress>0x0</spirit:baseAddress>
            <spirit:range spirit:format="long">0x30</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Id--><spirit:name>Id</spirit:name>
               <spirit:description>Global registers ASCII identification register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x5f475247</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Id--><spirit:name>Id</spirit:name>
                  <spirit:description>Global registers ASCII identification field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Id--><spirit:vendorExtensions>
                     <pdt:valueType>ascii</pdt:valueType>
                     <pdt:resetValue>0x5f475247</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>Global registers ASCII identification field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Id--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Id--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Global registers ASCII identification register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Id--></spirit:register>
            <spirit:register><!--Register named Rev--><spirit:name>Rev</spirit:name>
               <spirit:description>Global registers revision register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x103</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named CvsMinor--><spirit:name>CvsMinor</spirit:name>
                  <spirit:description>Global registers minor revision field.  This field relates to the post-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMinor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x03</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>Global registers minor revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMinor--></spirit:field>
               <spirit:field><!--BitField named CvsMajor--><spirit:name>CvsMajor</spirit:name>
                  <spirit:description>Global registers major revision field.  This field relates to the pre-decimal CVS version number, as seen in the format: MAJOR.MINOR</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CvsMajor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ConstantBitField</pdt:instanceClass>
                     <pdt:briefDescription>Global registers major revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CvsMajor--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rev--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Global registers revision register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rev--></spirit:register>
            <spirit:register><!--Register named ChipRev--><spirit:name>ChipRev</spirit:name>
               <spirit:description>Chip release revision register.  Chip release revisions are in the format: MAJOR.MINOR.DEBUG</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x010800</spirit:value>
                  <spirit:mask>0xffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Debug--><spirit:name>Debug</spirit:name>
                  <spirit:description>Chip release debug revision field. The chip release version number is in in the format: MAJOR.MINOR.DEBUG

Note: The incrementing of this field is reserved for internal debug builds.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Debug--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x00</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Chip release debug revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Debug--></spirit:field>
               <spirit:field><!--BitField named Minor--><spirit:name>Minor</spirit:name>
                  <spirit:description>Chip release major revision field. The chip release version number is in in the format: MAJOR.MINOR.DEBUG

Note: The incrementing of this field is reserved for minor milestones.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Minor--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x08</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Chip release minor revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Minor--></spirit:field>
               <spirit:field><!--BitField named Major--><spirit:name>Major</spirit:name>
                  <spirit:description>Chip release major revision field. The chip release version number is in in the format: MAJOR.MINOR.DEBUG

Note: The incrementing of this field is reserved for major milestones.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Major--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x01</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Chip release major revision field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Major--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ChipRev--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Chip release revision register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ChipRev--></spirit:register>
            <spirit:register><!--Register named ConfigMode--><spirit:name>ConfigMode</spirit:name>
               <spirit:description>Chip configuration register.  These fields include the most significant option selections regarding chip operation.

Note: These fields are driven off chip.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xc</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x1000000</spirit:value>
                  <spirit:mask>0x70f3f0f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named BootSel--><spirit:name>BootSel</spirit:name>
                  <spirit:description>00 : Program/Boot from UART
01 : Boot from Serial Flash
10 : Reserved/Boot from IRAM
11 : Boot from ROM</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named BootSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Boot Selection. Sets the boot mode for the cpu.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named BootSel--></spirit:field>
               <spirit:field><!--BitField named CfgUSBMode--><spirit:name>CfgUSBMode</spirit:name>
                  <spirit:description>Default USB speed configuration field.  This field indicates the desired default USB speed for the system.

0 = full speed
1 = high speed

Note: When CfgUSBMode = 0 the system will default to full speed even if a HS host or device is connected
Note: When CfgUSBMode = 1 the system will operate at the speed of the host and device.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CfgUSBMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Default USB speed configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CfgUSBMode--></spirit:field>
               <spirit:field><!--BitField named CfgLexRex--><spirit:name>CfgLexRex</spirit:name>
                  <spirit:description>LEX/REX configuration field.  This field indicates whether the system is to be configured for LEX or REX operation.

0 = LEX
1 = REX

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CfgLexRex--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>LEX/REX configuration field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CfgLexRex--></spirit:field>
               <spirit:field><!--BitField named PhyMode--><spirit:name>PhyMode</spirit:name>
                  <spirit:description>Refer to documentation for more information about this register</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>5</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyMode--></spirit:field>
               <spirit:field><!--BitField named PhyL2FEn--><spirit:name>PhyL2FEn</spirit:name>
                  <spirit:description>PHY ethernet level 2 framing enable field.  This field is must NOT be set "1" unless PhyIPFEn is also set "1".</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PhyL2FEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY ethernet level 2 framing enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyL2FEn--></spirit:field>
               <spirit:field><!--BitField named PlatformID--><spirit:name>PlatformID</spirit:name>
                  <spirit:description>0:    Virtex5 GE Development Platform
1:    UON Spartan6 LX 45
2-15: Future</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named PlatformID--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>FPGA Product ID</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PlatformID--></spirit:field>
               <spirit:field><!--BitField named VariantID--><spirit:name>VariantID</spirit:name>
                  <spirit:description>Refer to documentation for more information about this register</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named VariantID--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named VariantID--></spirit:field>
               <spirit:field><!--BitField named VPortId--><spirit:name>VPortId</spirit:name>
                  <spirit:description>Identification Index.

LEX: N/A (leave default).
REX: REX Identification Index (for clarity use values 2-15 only).
- this identification index is compared to the downstream "VPORT" Frame Header field to determine if packet should be received.  Note: REX will receive any downstream "VPORT=0" packets (broadcast - ie. SOFs).  Additionally this value is placed into the "VPORT" Frame Header field for all upstream packets generated by REX; allowing LEX to identify the REX of origin.

FALSE PATH FIELD</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>3</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named VPortId--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Identification Index</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named VPortId--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ConfigMode--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Chip configuration register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ConfigMode--></spirit:register>
            <spirit:register><!--Register named ModRst--><spirit:name>ModRst</spirit:name>
               <spirit:description>Module reset register.

All module reset enables are active high.
 (1)- In Reset
 (0)- Out of reset</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x30</spirit:value>
                  <spirit:mask>0xff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named XusbEn--><spirit:name>XusbEn</spirit:name>
                  <spirit:description>System soft reset enable field.  Active high reset.

0 = not in reset (normal operation)
1 = in reset

Note: asserting this will cause a system wide soft reset including this register (which will clear this bit).</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XusbEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>System soft reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XusbEn--></spirit:field>
               <spirit:field><!--BitField named XusbCoreEn--><spirit:name>XusbCoreEn</spirit:name>
                  <spirit:description>XUSB core reset enable field. Resets all XUSB Core modules in XUSB clock domain (ULM, XPSA, LEX/REX, XSST, XICS, XCPUI, XCTM, XCRM, CLM). Does not put processor or GRG regs or modules into reset.

 * Synced to XUSB clock domain</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XusbCoreEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUSB core reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XusbCoreEn--></spirit:field>
               <spirit:field><!--BitField named XcrmEn--><spirit:name>XcrmEn</spirit:name>
                  <spirit:description>XCRM reset enable field.

  * Synchronized to XUSB clock Domain
  * Also reset with XusbCoreEn
  * In general should not be used</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XcrmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCRM reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XcrmEn--></spirit:field>
               <spirit:field><!--BitField named XctmEn--><spirit:name>XctmEn</spirit:name>
                  <spirit:description>XCTM reset enable field.

  * Synchronized to XUSB clock Domain
  * Also reset with XusbCoreEn
  * In general should not be used</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named XctmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>XCTM reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named XctmEn--></spirit:field>
               <spirit:field><!--BitField named CrmPhyEn--><spirit:name>CrmPhyEn</spirit:name>
                  <spirit:description>CRM_PHY module reset enable field. Resets all CRM Phy related logic.

* Synchronized to CRM clock Domain
* Default in reset, software required to pull out of reset
* Care needs to be taken to co-ordinate resets with interface logic to XUSB and CTM clock domains
* Clears/Resets both sides of XCRM AFIFO
* Resets CRM_PHY_CLK logic</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CrmPhyEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRM_PHY module reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmPhyEn--></spirit:field>
               <spirit:field><!--BitField named CtmPhyEn--><spirit:name>CtmPhyEn</spirit:name>
                  <spirit:description>CTM_PHY module reset enable field.

* Synchronized to CTM Phy clock Domain
* Default in reset, software required to pull out of reset
* Care needs to be taken to co-ordinate resets with interface logic to XUSB and CRM clock domains
* Clears/Resets both sides of XCTM AFIFO
* Resets CTM_PHY_CLK logic</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtmPhyEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CTM_PHY module reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmPhyEn--></spirit:field>
               <spirit:field><!--BitField named ClmEn--><spirit:name>ClmEn</spirit:name>
                  <spirit:description>CLM module reset enable field. Reset for CLM registers and any logic in XUSB clock domain in CLM.

  * Synchronized to XUSB clock Domain
  * Also reset with XusbCoreEn
  * In general should not be used</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ClmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM module reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmEn--></spirit:field>
               <spirit:field><!--BitField named UlmEn--><spirit:name>UlmEn</spirit:name>
                  <spirit:description>ULM module reset enable field.
 * Synchronized to XUSB clock Domain
 * Also reset with XusbCoreEn
 * In general should not be used (needed)</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named UlmEn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>ULM module reset enable field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UlmEn--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ModRst--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Module reset register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ModRst--></spirit:register>
            <spirit:register><!--Register named IntMsk--><spirit:name>IntMsk</spirit:name>
               <spirit:description>Interrupt mask register.

0 = interrupt disabled.
1 = interrupt enabled.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x707ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Gpio0--><spirit:name>Gpio0</spirit:name>
                  <spirit:description>GPIO 0 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 0 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio0--></spirit:field>
               <spirit:field><!--BitField named Gpio1--><spirit:name>Gpio1</spirit:name>
                  <spirit:description>GPIO 1 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 1 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio1--></spirit:field>
               <spirit:field><!--BitField named Gpio2--><spirit:name>Gpio2</spirit:name>
                  <spirit:description>GPIO 2 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 2 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio2--></spirit:field>
               <spirit:field><!--BitField named Gpio3--><spirit:name>Gpio3</spirit:name>
                  <spirit:description>GPIO 3 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio3--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 3 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio3--></spirit:field>
               <spirit:field><!--BitField named Gpio4--><spirit:name>Gpio4</spirit:name>
                  <spirit:description>GPIO 4 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio4--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 4 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio4--></spirit:field>
               <spirit:field><!--BitField named Gpio5--><spirit:name>Gpio5</spirit:name>
                  <spirit:description>GPIO 5 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio5--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 5 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio5--></spirit:field>
               <spirit:field><!--BitField named Gpio6--><spirit:name>Gpio6</spirit:name>
                  <spirit:description>GPIO 6 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio6--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 6 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio6--></spirit:field>
               <spirit:field><!--BitField named Gpio7--><spirit:name>Gpio7</spirit:name>
                  <spirit:description>GPIO 7 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio7--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 7 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio7--></spirit:field>
               <spirit:field><!--BitField named Gpio8--><spirit:name>Gpio8</spirit:name>
                  <spirit:description>GPIO 8 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio8--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 8 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio8--></spirit:field>
               <spirit:field><!--BitField named Gpio9--><spirit:name>Gpio9</spirit:name>
                  <spirit:description>GPIO 9 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio9--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 9 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio9--></spirit:field>
               <spirit:field><!--BitField named Gpio10--><spirit:name>Gpio10</spirit:name>
                  <spirit:description>GPIO 10 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio10--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 10 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio10--></spirit:field>
               <spirit:field><!--BitField named Gpio11--><spirit:name>Gpio11</spirit:name>
                  <spirit:description>GPIO 11 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio11--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 11 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio11--></spirit:field>
               <spirit:field><!--BitField named Gpio12--><spirit:name>Gpio12</spirit:name>
                  <spirit:description>GPIO 12 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio12--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 12 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio12--></spirit:field>
               <spirit:field><!--BitField named Gpio13--><spirit:name>Gpio13</spirit:name>
                  <spirit:description>GPIO 13 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio13--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 13 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio13--></spirit:field>
               <spirit:field><!--BitField named Gpio14--><spirit:name>Gpio14</spirit:name>
                  <spirit:description>GPIO 14 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio14--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 14 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio14--></spirit:field>
               <spirit:field><!--BitField named Gpio15--><spirit:name>Gpio15</spirit:name>
                  <spirit:description>GPIO 15 interrupt mask field.</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio15--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO 15 interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio15--></spirit:field>
               <spirit:field><!--BitField named ClmPllLock--><spirit:name>ClmPllLock</spirit:name>
                  <spirit:description>CLM PLL Lock interrupt mask field.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ClmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM PLL Lock interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmPllLock--></spirit:field>
               <spirit:field><!--BitField named CrmPllLock--><spirit:name>CrmPllLock</spirit:name>
                  <spirit:description>CRM PLL Lock interrupt mask field.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CrmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRM PLL Lock interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmPllLock--></spirit:field>
               <spirit:field><!--BitField named CtmPllLock--><spirit:name>CtmPllLock</spirit:name>
                  <spirit:description>CTM PLL Lock interrupt mask field.</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CTM PLL Lock interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmPllLock--></spirit:field>
               <spirit:field><!--BitField named I2CMdioDone--><spirit:name>I2CMdioDone</spirit:name>
                  <spirit:description>I2C/MDIO transaction complete interrupt mask field.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CMdioDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C/MDIO transaction complete interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CMdioDone--></spirit:field>
               <spirit:field><!--BitField named I2CFifoAlmostFull--><spirit:name>I2CFifoAlmostFull</spirit:name>
                  <spirit:description>I2C FIFO almost full interrupt mask field.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CFifoAlmostFull--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C FIFO almost full interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CFifoAlmostFull--></spirit:field>
               <spirit:field><!--BitField named I2CFifoAlmostEmpty--><spirit:name>I2CFifoAlmostEmpty</spirit:name>
                  <spirit:description>I2C FIFO almost empty interrupt mask field.</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CFifoAlmostEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>FlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C FIFO almost empty interrupt mask field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CFifoAlmostEmpty--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntMsk--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt mask register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntMsk--></spirit:register>
            <spirit:register><!--Register named IntFlg--><spirit:name>IntFlg</spirit:name>
               <spirit:description>Interrupt flag register.

0 = no interrupt event detected
1 = interrupt event detected

Note: If the corresponding interrupt mask field (Grg.IntMsk.xxx) is asserted and the corresponding interrupt source field (Grg.GpioIn.xxx) is asserted the interrupt flag will assert.
Note: write '1' to clear field.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0x8707ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Gpio0--><spirit:name>Gpio0</spirit:name>
                  <spirit:description>GPIO 0 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio0'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc0'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 0 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio0--></spirit:field>
               <spirit:field><!--BitField named Gpio1--><spirit:name>Gpio1</spirit:name>
                  <spirit:description>GPIO 1 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio1'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc1'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 1 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio1--></spirit:field>
               <spirit:field><!--BitField named Gpio2--><spirit:name>Gpio2</spirit:name>
                  <spirit:description>GPIO 2 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio2'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc2'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 2 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio2--></spirit:field>
               <spirit:field><!--BitField named Gpio3--><spirit:name>Gpio3</spirit:name>
                  <spirit:description>GPIO 3 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>3</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio3--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio3'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc3'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 3 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio3--></spirit:field>
               <spirit:field><!--BitField named Gpio4--><spirit:name>Gpio4</spirit:name>
                  <spirit:description>GPIO 4 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio4--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio4'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc4'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 4 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio4--></spirit:field>
               <spirit:field><!--BitField named Gpio5--><spirit:name>Gpio5</spirit:name>
                  <spirit:description>GPIO 5 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio5--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio5'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc5'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 5 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio5--></spirit:field>
               <spirit:field><!--BitField named Gpio6--><spirit:name>Gpio6</spirit:name>
                  <spirit:description>GPIO 6 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio6--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio6'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc6'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 6 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio6--></spirit:field>
               <spirit:field><!--BitField named Gpio7--><spirit:name>Gpio7</spirit:name>
                  <spirit:description>GPIO 7 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>7</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio7--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio7'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc7'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 7 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio7--></spirit:field>
               <spirit:field><!--BitField named Gpio8--><spirit:name>Gpio8</spirit:name>
                  <spirit:description>GPIO 8 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio8--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio8'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc8'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 8 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio8--></spirit:field>
               <spirit:field><!--BitField named Gpio9--><spirit:name>Gpio9</spirit:name>
                  <spirit:description>GPIO 9 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio9--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio9'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc9'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 9 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio9--></spirit:field>
               <spirit:field><!--BitField named Gpio10--><spirit:name>Gpio10</spirit:name>
                  <spirit:description>GPIO 10 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>10</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio10--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio10'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc10'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 10 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio10--></spirit:field>
               <spirit:field><!--BitField named Gpio11--><spirit:name>Gpio11</spirit:name>
                  <spirit:description>GPIO 11 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>11</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio11--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio11'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc11'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 11 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio11--></spirit:field>
               <spirit:field><!--BitField named Gpio12--><spirit:name>Gpio12</spirit:name>
                  <spirit:description>GPIO 12 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio12--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio12'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc12'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 12 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio12--></spirit:field>
               <spirit:field><!--BitField named Gpio13--><spirit:name>Gpio13</spirit:name>
                  <spirit:description>GPIO 13 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>13</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio13--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio13'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc13'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 13 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio13--></spirit:field>
               <spirit:field><!--BitField named Gpio14--><spirit:name>Gpio14</spirit:name>
                  <spirit:description>GPIO 14 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio14--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio14'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc14'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 14 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio14--></spirit:field>
               <spirit:field><!--BitField named Gpio15--><spirit:name>Gpio15</spirit:name>
                  <spirit:description>GPIO 15 interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>15</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gpio15--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.Gpio15'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.GPIO.In.IntSrc15'</pdt:instanceArg>
                     <pdt:briefDescription>GPIO 15 interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gpio15--></spirit:field>
               <spirit:field><!--BitField named ClmPllLock--><spirit:name>ClmPllLock</spirit:name>
                  <spirit:description>CLM PLL LOCK event interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ClmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.ClmPllLock'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.PLL.PllConfig.ClmLockEvent'</pdt:instanceArg>
                     <pdt:briefDescription>CLM PLL LOCK event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmPllLock--></spirit:field>
               <spirit:field><!--BitField named CrmPllLock--><spirit:name>CrmPllLock</spirit:name>
                  <spirit:description>CRM PLL LOCK event interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CrmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.CrmPllLock'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.PLL.PllConfig.CrmLockEvent'</pdt:instanceArg>
                     <pdt:briefDescription>CRM PLL LOCK event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmPllLock--></spirit:field>
               <spirit:field><!--BitField named CtmPllLock--><spirit:name>CtmPllLock</spirit:name>
                  <spirit:description>CTM PLL LOCK event interrupt flag field.

SEVERITY: INFORMATIONAL/WARNING/FAILURE</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtmPllLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.CtmPllLock'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.PLL.PllConfig.CtmLockEvent'</pdt:instanceArg>
                     <pdt:briefDescription>CTM PLL LOCK event interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmPllLock--></spirit:field>
               <spirit:field><!--BitField named I2CMdioDone--><spirit:name>I2CMdioDone</spirit:name>
                  <spirit:description>I2C/MDIO transaction complete interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CMdioDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.I2CMdioDone'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.I2CMDIO.Control.I2cMdioDone'</pdt:instanceArg>
                     <pdt:briefDescription>I2C/MDIO transaction complete interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CMdioDone--></spirit:field>
               <spirit:field><!--BitField named I2CFifoAlmostFull--><spirit:name>I2CFifoAlmostFull</spirit:name>
                  <spirit:description>I2C FIFO almost full interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CFifoAlmostFull--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.I2CFifoAlmostFull'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.I2CMDIO.Control.FifoAlmostFull'</pdt:instanceArg>
                     <pdt:briefDescription>I2C FIFO almost full interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CFifoAlmostFull--></spirit:field>
               <spirit:field><!--BitField named I2CFifoAlmostEmpty--><spirit:name>I2CFifoAlmostEmpty</spirit:name>
                  <spirit:description>I2C FIFO almost empty interrupt flag field.

SEVERITY: INFORMATIONAL</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2CFifoAlmostEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptBitField</pdt:instanceClass>
                     <pdt:instanceArg pdt:name="intEnRefStr">'Grg.GRG.IntMsk.I2CFifoAlmostEmpty'</pdt:instanceArg>
                     <pdt:instanceArg pdt:name="statusRefStr">'Grg.I2CMDIO.Control.FifoAlmostEmpty'</pdt:instanceArg>
                     <pdt:briefDescription>I2C FIFO almost empty interrupt flag field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2CFifoAlmostEmpty--></spirit:field>
               <spirit:field><!--BitField named UnservicedInterrupts--><spirit:name>UnservicedInterrupts</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named UnservicedInterrupts--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>InterruptStatusBitField</pdt:instanceClass>
                     <pdt:briefDescription/>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named UnservicedInterrupts--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named IntFlg--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Interrupt flag register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named IntFlg--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named GRG--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription/>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named GRG--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named GPIO--><spirit:name>GPIO</spirit:name>
            <spirit:description>GPIO register block.</spirit:description>
            <spirit:baseAddress>0x30</spirit:baseAddress>
            <spirit:range spirit:format="long">0x10</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Dir--><spirit:name>Dir</spirit:name>
               <spirit:description>GPIO direction select register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Dir--><spirit:name>Dir</spirit:name>
                  <spirit:description>GPIO direction selection field.  Each GPIO bit location can be individually configured as input or output accordingly:

0 = use the corresponding GPIO bit as input
1 = use the corresponding GPIO bit as output</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Dir--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO direction selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Dir--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Dir--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>GPIO direction select register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Dir--></spirit:register>
            <spirit:register><!--Register named In--><spirit:name>In</spirit:name>
               <spirit:description>GPIO input register.
  IntSrc bits trigger on change of state - rising edge and falling edge
  In[15:0] - GPIO input status, valid when GPIO direction set to In</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named In--><spirit:name>In</spirit:name>
                  <spirit:description>Set Dir register to In for the specific bits that are inputs.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named In--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Status of GPIO Inputs</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named In--></spirit:field>
               <spirit:field><!--BitField named IntSrc0--><spirit:name>IntSrc0</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc0--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[0] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc0--></spirit:field>
               <spirit:field><!--BitField named IntSrc1--><spirit:name>IntSrc1</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc1--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[1] Interrupt source field</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc1--></spirit:field>
               <spirit:field><!--BitField named IntSrc2--><spirit:name>IntSrc2</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc2--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[2] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc2--></spirit:field>
               <spirit:field><!--BitField named IntSrc3--><spirit:name>IntSrc3</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>19</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc3--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[3] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc3--></spirit:field>
               <spirit:field><!--BitField named IntSrc4--><spirit:name>IntSrc4</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc4--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[4] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc4--></spirit:field>
               <spirit:field><!--BitField named IntSrc5--><spirit:name>IntSrc5</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>21</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc5--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[5] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc5--></spirit:field>
               <spirit:field><!--BitField named IntSrc6--><spirit:name>IntSrc6</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc6--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[6] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc6--></spirit:field>
               <spirit:field><!--BitField named IntSrc7--><spirit:name>IntSrc7</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>23</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc7--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[7] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc7--></spirit:field>
               <spirit:field><!--BitField named IntSrc8--><spirit:name>IntSrc8</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc8--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[8] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc8--></spirit:field>
               <spirit:field><!--BitField named IntSrc9--><spirit:name>IntSrc9</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc9--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[9] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc9--></spirit:field>
               <spirit:field><!--BitField named IntSrc10--><spirit:name>IntSrc10</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc10--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[10] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc10--></spirit:field>
               <spirit:field><!--BitField named IntSrc11--><spirit:name>IntSrc11</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc11--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[11] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc11--></spirit:field>
               <spirit:field><!--BitField named IntSrc12--><spirit:name>IntSrc12</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc12--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[12] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc12--></spirit:field>
               <spirit:field><!--BitField named IntSrc13--><spirit:name>IntSrc13</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc13--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[13] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc13--></spirit:field>
               <spirit:field><!--BitField named IntSrc14--><spirit:name>IntSrc14</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc14--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[14] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc14--></spirit:field>
               <spirit:field><!--BitField named IntSrc15--><spirit:name>IntSrc15</spirit:name>
                  <spirit:description/>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named IntSrc15--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO[15] Interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IntSrc15--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named In--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>GPIO input register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named In--></spirit:register>
            <spirit:register><!--Register named Out--><spirit:name>Out</spirit:name>
               <spirit:description>GPIO output register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Out--><spirit:name>Out</spirit:name>
                  <spirit:description>GPIO output field.  A '1' or '0' value written to any bit within this field will appear on the corresponding GPIO pin when it is configured as an output.  To configure the direction of a GPIO bit see the Grg.GpioDir register.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Out--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>GPIO output field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Out--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Out--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>GPIO output register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Out--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named GPIO--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>GPIO register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named GPIO--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named I2CMDIO--><spirit:name>I2CMDIO</spirit:name>
            <spirit:description>MDIO register block.</spirit:description>
            <spirit:baseAddress>0x40</spirit:baseAddress>
            <spirit:range spirit:format="long">0x10</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named Control--><spirit:name>Control</spirit:name>
               <spirit:description>MDIO control register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>MDIO/I2C transaction GO field.

Note: this field is cleared upon completion of the transaction.
Note: do not set field until read '0'.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO/I2C transaction GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named I2cMdioSel--><spirit:name>I2cMdioSel</spirit:name>
                  <spirit:description>I2C/MDIO transaction selection.

0 = MDIO
1 = I2C

Must be set appropriately before setting the I2CMDIO.Control.Go = 1.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named I2cMdioSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C/MDIO transaction selection.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2cMdioSel--></spirit:field>
               <spirit:field><!--BitField named AccessMode--><spirit:name>AccessMode</spirit:name>
                  <spirit:description>Transaction access mode selection field.

MDIO - I2CMDIO.Control.IndirectMode=0
10 = read
01 = write

MDIO - I2CMDIO.Control.IndirectMode=0
00 = Address
01 = Write
11 = Read
10 = Read-Post Inc (for back-2-back reading without additional address accesses)

I2C Mode - I2CMDIO.Control.IndirectMode=na - see notes
00 - I2C Direct Read
01 - I2C Write
10 - I2C SMBUS Byte Read
11 - I2C SMbus Block Read

Notes: I2C Write: this includes staight write, SMBus Byte Write, SMBus Block Write
               a. Straight Write
               b. SMBus Write (depending on the type of transaction required the fifo data will need to be formatted to match)
       I2C SMBUS Byte Read: Software will set RdBytes to the value of the number of bytes it wants to read and it will write the register offset into the wdata fifo. The controller will manage all the addressing and repeated start bits.
       I2C SMbus Block Read: The first byte of data from the device and used to set the limit for the number of bytes to be read. The value in the RdBytes register will be ignored.

Must be set appropriately before setting the I2CMDIO.Control.Go = 1.</spirit:description>
                  <spirit:bitOffset>2</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named AccessMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Transaction access mode selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named AccessMode--></spirit:field>
               <spirit:field><!--BitField named IndirectMode--><spirit:name>IndirectMode</spirit:name>
                  <spirit:description>MDIO ONLY: MDIO access type selection field.

0 = MDIO direct access
1 = MDIO indirect access

Indirect access mode notes: (register behavior difference from direct accesses)

I2CMDIO.Control.PhyAddr:
xxxXXXXX = 5bit port address

I2CMDIO.Control.RdBytesAddress:
xxx00000 = reserved
xxx00001 = PMD/PMA
xxx00010 = WIS
xxx00011 = PCS
xxx00100 = PHY XS
xxx00101 = DTE XS
xxxother = reserved

I2CMDIO.Wdata.Wdata
Address Access = Address
Write Access   = Write Data

Must be set appropriately before setting the I2CMDIO.Control.Go = 1.</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named IndirectMode--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO ONLY: MDIO access type selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named IndirectMode--></spirit:field>
               <spirit:field><!--BitField named Clear--><spirit:name>Clear</spirit:name>
                  <spirit:description>I2C ONLY: Clear all data-path and state machines request.  Software sets this bit to force the I2C controller to clear all data-path and state machines.  Software must release this bit when ready.  Software is required to drive this bit for a minimum of 2 clock cycles.  This bit is NOT self clearing.

0 = Normal Operation
1 = Clear</spirit:description>
                  <spirit:bitOffset>5</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Clear--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Clear all data-path and state machines request.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Clear--></spirit:field>
               <spirit:field><!--BitField named RdBytesRegAddr--><spirit:name>RdBytesRegAddr</spirit:name>
                  <spirit:description>MDIO Mode: PHY register address field.
I2C  Mode: Software sets this field to tell the controller how many bytes it needs to read from the I2C device before ending the transaction.  Note the FIFO read depth is 8 bytes and anything greater than 8 in this field will cause it to stop at 8 bytes.

Must be set appropriately before setting the I2CMDIO.Control.Go = 1.</spirit:description>
                  <spirit:bitOffset>6</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named RdBytesRegAddr--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO PHY register address / I2C expected byte count field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named RdBytesRegAddr--></spirit:field>
               <spirit:field><!--BitField named PhyAddr--><spirit:name>PhyAddr</spirit:name>
                  <spirit:description>PHY address field.

MDIO Mode: MDIO PHY address field.
I2C  Mode: I2C Slave Device address field.

Must be set appropriately before setting the I2CMDIO.Control.Go = 1.</spirit:description>
                  <spirit:bitOffset>14</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PhyAddr--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>PHY address field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PhyAddr--></spirit:field>
               <spirit:field><!--BitField named SpeedSel--><spirit:name>SpeedSel</spirit:name>
                  <spirit:description>I2C ONLY: Speed selection field.

00 =    30KHz - Slow Speed
01 =   400Khz - Fast Speed
10 =  1000Khz - Fast Plus
11 = reserved</spirit:description>
                  <spirit:bitOffset>22</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named SpeedSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Speed selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named SpeedSel--></spirit:field>
               <spirit:field><!--BitField named PortSel--><spirit:name>PortSel</spirit:name>
                  <spirit:description>I2C ONLY: Port select field. This bit allows two different physical port resources to be used to access the I2C.  This is required on GE due to part placement and routing of the physical PCB.  If set to 1 then the USB hub I2C port is used, if cleared to 0 then the ATMEL security device is selected.</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named PortSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Port select field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named PortSel--></spirit:field>
               <spirit:field><!--BitField named ForceSDAn--><spirit:name>ForceSDAn</spirit:name>
                  <spirit:description>I2C ONLY: Force SDA pin on I2C bus to be driven low. Software sets and clears this bit.

One use for this is used to generate the wakeup signalling for the ATMEL-ATSHA204 part.  Software is required to set this bit for a minumum of 60us and then release this bit for a minimum of 2.5ms before it can access the part.  If software doesn't wait 2.5ms minimum before accessesing the i2c after such a wakeup event then the part may not respond to transactions.</spirit:description>
                  <spirit:bitOffset>25</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ForceSDAn--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Force SDA pin on I2C bus to be driven low.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ForceSDAn--></spirit:field>
               <spirit:field><!--BitField named FifoEmpty--><spirit:name>FifoEmpty</spirit:name>
                  <spirit:description>I2C ONLY: Dath path FIFO is empty indication.</spirit:description>
                  <spirit:bitOffset>26</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FifoEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Dath path FIFO is empty indication.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FifoEmpty--></spirit:field>
               <spirit:field><!--BitField named FifoFull--><spirit:name>FifoFull</spirit:name>
                  <spirit:description>I2C ONLY: Data path FIFO is full indication.</spirit:description>
                  <spirit:bitOffset>27</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FifoFull--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Data path FIFO is full indication.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FifoFull--></spirit:field>
               <spirit:field><!--BitField named FifoAlmostEmpty--><spirit:name>FifoAlmostEmpty</spirit:name>
                  <spirit:description>I2C ONLY: Low threshold for the I2C FIFO. Then there is 4 bytes or less in the fifo.  When transmitting this can be used to indicate that the FIFO should have more data written into it if more than 8 bytes of data need to be transmitted to the device.</spirit:description>
                  <spirit:bitOffset>28</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FifoAlmostEmpty--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Low threshold for the I2C FIFO.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FifoAlmostEmpty--></spirit:field>
               <spirit:field><!--BitField named FifoAlmostFull--><spirit:name>FifoAlmostFull</spirit:name>
                  <spirit:description>I2C ONLY: High threshold for the I2C FIFO. If set then there are 4 bytes or more in the FIFO.  When receiving block transfers on the I2C this will indicate that the software should start read data out of the FIFO before data starts getting lost.  There is no indication the FIFO overflowed.</spirit:description>
                  <spirit:bitOffset>29</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named FifoAlmostFull--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: High threshold for the I2C FIFO.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named FifoAlmostFull--></spirit:field>
               <spirit:field><!--BitField named TrnErr--><spirit:name>TrnErr</spirit:name>
                  <spirit:description>I2C ONLY: Transaction error.  Indicates the transaction stopped abnormally either due to a slave NAK'ing the transaction.  This bit is sticky until either the mode changes or the GO bit is set again.

In the case of generating a wake up packet to the ATMEL ATSHA204 Security chip a 0x00 byte will be written to the bus at the lowest system speed.  This byte should exceed the 60us.  This may generate a transaction error, however that is fine because this is only signalling and not actually packet transfer.</spirit:description>
                  <spirit:bitOffset>30</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named TrnErr--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>I2C ONLY: Transaction error.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named TrnErr--></spirit:field>
               <spirit:field><!--BitField named I2cMdioDone--><spirit:name>I2cMdioDone</spirit:name>
                  <spirit:description>MDIO/I2C transaction complete interrupt source field.  Pulsed '1' on completion of transaction.</spirit:description>
                  <spirit:bitOffset>31</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named I2cMdioDone--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO/I2C transaction complete interrupt source field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named I2cMdioDone--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Control--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MDIO control register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Control--></spirit:register>
            <spirit:register><!--Register named Wdata--><spirit:name>Wdata</spirit:name>
               <spirit:description>MDIO write data register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Wdata--><spirit:name>Wdata</spirit:name>
                  <spirit:description>MDIO Mode:
MDIO write data field.  All 16 bits are used in this access mode.  Must be set appropriately before setting the MDIO.Control.Go = 1.

I2C Mode:
Only the lower 8 bits are used to write data into the I2C master FIFO.  The FIFO write depth is 8 bytes max.  Writing to much to fast will cause the transaction to fail.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Wdata--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO write data field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Wdata--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Wdata--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MDIO write data register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Wdata--></spirit:register>
            <spirit:register><!--Register named Rdata--><spirit:name>Rdata</spirit:name>
               <spirit:description>MDIO read data register.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Rdata--><spirit:name>Rdata</spirit:name>
                  <spirit:description>MDIO read data field.  Sample upon completion of a read (MDIO.Control.Go = 0).
Note: If following a MDIO read a MDIO write is performed before reading this field the Rdata from the MDIO read will be overwritten with the MDIO write Wdata.

I2C Mode:
Only the lower 8 bits are used to return the read data into the I2C master FIFO.  The FIFO read depth is 8 bytes max.  Software is required to indicate how many bytes the read from the device during a read transaction.  When the go bit is cleared the FIFO will hold a maximum value of 8 bytes or a minimum of MDIO.Control.RdBytesRegAddr.  Which ever is smaller.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Rdata--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>WatchedExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>MDIO read data field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Rdata--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named Rdata--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>MDIO read data register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named Rdata--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named I2CMDIO--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>MDIO register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named I2CMDIO--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named PLL--><spirit:name>PLL</spirit:name>
            <spirit:description>PLL (phase locked loop) register block.</spirit:description>
            <spirit:baseAddress>0x50</spirit:baseAddress>
            <spirit:range spirit:format="long">0x14</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named PllConfig--><spirit:name>PllConfig</spirit:name>
               <spirit:description/>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x101010</spirit:value>
                  <spirit:mask>0x171313</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named ClmLock--><spirit:name>ClmLock</spirit:name>
                  <spirit:description>CLM PLL phase locked indication field.  Lock = 1 when FREF (input clock/M) and FFBK (feedback clock/N) phases are within 5% of each other. If phase detector subsequently indicates loss of lock, Lock = 0.

Note: maximum time to lock is less than 500 REFCK cycles.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named ClmLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM PLL phase locked indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmLock--></spirit:field>
               <spirit:field><!--BitField named ClmLockEvent--><spirit:name>ClmLockEvent</spirit:name>
                  <spirit:description>PLL LOCK status change event indication field.  This field is the corresponding CxMPllLock interrupt source field.  It is pulsed on any change of LOCK status.  Not useful as a read field, for lock status use the LOCK field.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named ClmLockEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PLL LOCK status change event indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmLockEvent--></spirit:field>
               <spirit:field><!--BitField named ClmReset--><spirit:name>ClmReset</spirit:name>
                  <spirit:description>CLM PLL reset field.  Active high reset.

0 = not in reset (normal operation)
1 = in reset</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named ClmReset--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CLM PLL reset field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named ClmReset--></spirit:field>
               <spirit:field><!--BitField named CrmLock--><spirit:name>CrmLock</spirit:name>
                  <spirit:description>Lock = 1 when FREF (input clock/M) and FFBK (feedback clock/N) phases are within 5% of each other. If phase detector subsequently indicates loss of lock, Lock = 0.

Note: maximum time to lock is less than 500 REFCK cycles.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CrmLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRM PLL phase locked indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmLock--></spirit:field>
               <spirit:field><!--BitField named CrmLockEvent--><spirit:name>CrmLockEvent</spirit:name>
                  <spirit:description>PLL LOCK status change event indication field.  This field is the corresponding CxMPllLock interrupt source field.  It is pulsed on any change of LOCK status.  Not useful as a read field, for lock status use the LOCK field.</spirit:description>
                  <spirit:bitOffset>9</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CrmLockEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PLL LOCK status change event indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmLockEvent--></spirit:field>
               <spirit:field><!--BitField named CrmReset--><spirit:name>CrmReset</spirit:name>
                  <spirit:description>CRM PLL reset field.  Active high reset.

0 = not in reset (normal operation)
1 = in reset</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CrmReset--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CRM PLL reset field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CrmReset--></spirit:field>
               <spirit:field><!--BitField named CtmLock--><spirit:name>CtmLock</spirit:name>
                  <spirit:description>Lock = 1 when FREF (input clock/M) and FFBK (feedback clock/N) phases are within 5% of each other. If phase detector subsequently indicates loss of lock, Lock = 0.

Note: maximum time to lock is less than 500 REFCK cycles.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CtmLock--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>CTM PLL phase locked indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmLock--></spirit:field>
               <spirit:field><!--BitField named CtmLockEvent--><spirit:name>CtmLockEvent</spirit:name>
                  <spirit:description>PLL LOCK status change event indication field.  This field is the corresponding CxMPllLock interrupt source field.  It is pulsed on any change of LOCK status.  Not useful as a read field, for lock status use the LOCK field.</spirit:description>
                  <spirit:bitOffset>17</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named CtmLockEvent--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>PLL LOCK status change event indication field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmLockEvent--></spirit:field>
               <spirit:field><!--BitField named CtmClkSel--><spirit:name>CtmClkSel</spirit:name>
                  <spirit:description> Please refer to GE clocking document for more information on clock selection</spirit:description>
                  <spirit:bitOffset>18</spirit:bitOffset>
                  <spirit:bitWidth>2</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtmClkSel--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Ctm Clock Input Selection</pdt:briefDescription>
                     <pdt:developerComments>
                     </pdt:developerComments>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmClkSel--></spirit:field>
               <spirit:field><!--BitField named CtmReset--><spirit:name>CtmReset</spirit:name>
                  <spirit:description>CTM PLL reset field.  Active high reset.

0 = not in reset (normal operation)
1 = in reset</spirit:description>
                  <spirit:bitOffset>20</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named CtmReset--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x1</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>CTM PLL reset field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named CtmReset--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named PllConfig--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>PLL configuration register for CTM, CRM, CLM</pdt:briefDescription>
                  <pdt:developerComments>Program sequence for ASIC and FPGA
1. Set PLL.Clm.Reset = 1
2. Set all other settings and set PLL.Clm.Reset = 0
3. Wait for PLL.Clm.Lock = 1 before enabling any module using this clock.</pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named PllConfig--></spirit:register>
            <spirit:register><!--Register named PllConfig2--><spirit:name>PllConfig2</spirit:name>
               <spirit:description>Generic PLL control register repurposed based on platform ID</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Gen--><spirit:name>Gen</spirit:name>
                  <spirit:description>Refer to the GE clocking manual for more information
                  </spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gen--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gen--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named PllConfig2--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named PllConfig2--></spirit:register>
            <spirit:register><!--Register named PllConfig3--><spirit:name>PllConfig3</spirit:name>
               <spirit:description>Generic PLL control register repurposed based on platform ID</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Gen--><spirit:name>Gen</spirit:name>
                  <spirit:description>Refer to the GE clocking manual for more information
                  </spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gen--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gen--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named PllConfig3--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named PllConfig3--></spirit:register>

            <spirit:register><!--Register named FreqTest--><spirit:name>FreqTest</spirit:name>
               <spirit:description>Frequency test register. Allows comparing the CTM and CRM reference clocks and the CTM and CRM PHY clocks against the known XUSB clock (60MHz) for acquiring frequency measurements.</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xC</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xfffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Go--><spirit:name>Go</spirit:name>
                  <spirit:description>Frequency counter GO field.  Set '1' to start frequency counters.  This field is automatically cleared when clock result bit fields Grg.FreqTest.Xusb and Grg.FreqTest.Cxm are ready to be read.

Note: Only set Grg.FreqTest.Go = 1 after cycling the Grg.FreqTest.Clear.</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Go--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>true</pdt:doNotTestWrite>
                     <pdt:instanceClass>RemoteClearBitField</pdt:instanceClass>
                     <pdt:briefDescription>Frequency counter GO field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Go--></spirit:field>
               <spirit:field><!--BitField named Clear--><spirit:name>Clear</spirit:name>
                  <spirit:description>Frequency counter clear field.  Before setting the Grg.FreqTest.Go bit the XUSB and CLM/CTM/CRM clock frequency counters must be cleared.  To clear the clock frequency counters 2 steps are required:

1) write Grg.FreqTest.Clear = 1
2) then write Grg.FreqTest.Clear = 0

Note: The time required to do both of these steps assures that the Grg.FreqTest.Clear is maintained '1' for long enough to clear the CLM/CTM/CRM clock domain frequency counter.</spirit:description>
                  <spirit:bitOffset>1</spirit:bitOffset>
                  <spirit:bitWidth>1</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Clear--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Frequency counter clear field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Clear--></spirit:field>
               <spirit:field><!--BitField named Select--><spirit:name>Select</spirit:name>
                  <spirit:description>Frequency test clock selection field:

4'b0000: CRM PHY Clock
4'b0001: CTM PHY Clock
4'b0010: CRM Reference Clock
4'b0011: CTM Reference Clock
4'b0100 - 4'b1111: Reserved</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Select--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription>Frequency test clock selection field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Select--></spirit:field>
               <spirit:field><!--BitField named Cxm--><spirit:name>Cxm</spirit:name>
                  <spirit:description>Selected clock frequency test result field.  Depending on the status of Grg.FreqTest.Select this field will contain the frequency count for the CLM, CTM, or CRM clock.  This value can be compared against the PLL.FreqTest.Xusb result to obtain the frequency of the selected clock.

Ex: PLL.FreqTest.Cxm &gt; PLL.FreqTest.Xusb
- PLL.FreqTest.Cxm = 11111111 : PLL.FreqTest.Xusb = 01001111
- (11111111/01001111)*60MHz = (255/79)*60MHz = 193.7MHz
Ex: PLL.FreqTest.Cxm &lt; PLL.FreqTest.Xusb
- PLL.FreqTest.Cxm = 01001111 : PLL.FreqTest.Xusb = 11111111
- (01001111/11111111)*60MHz = (79/255)*60MHz = 18.6MHz

Note: the frequency test is complete when either PLL.FreqTest.Cxm or PLL.FreqTest.Xusb = 11111111.</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Cxm--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>Selected clock frequency test result field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Cxm--></spirit:field>
               <spirit:field><!--BitField named Xusb--><spirit:name>Xusb</spirit:name>
                  <spirit:description>XUSB clock frequency test result field.  This field contains the frequency count for the XUSB clock.  This value can be compared against the PLL.FreqTest.Cxm result to obtain the frequency of the selected Cxm clock.

Ex: PLL.FreqTest.Cxm &gt; PLL.FreqTest.Xusb
- PLL.FreqTest.Cxm = 11111111 : PLL.FreqTest.Xusb = 01001111
- (11111111/01001111)*60MHz = (255/79)*60MHz = 193.7MHz
Ex: PLL.FreqTest.Cxm &lt; PLL.FreqTest.Xusb
- PLL.FreqTest.Cxm = 01001111 : PLL.FreqTest.Xusb = 11111111
- (01001111/11111111)*60MHz = (79/255)*60MHz = 18.6MHz

Note: the frequency test is complete when either PLL.FreqTest.Cxm or PLL.FreqTest.Xusb = 11111111.</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-only</spirit:access>
                  <!--BitField named Xusb--><spirit:vendorExtensions>
                     <pdt:valueType>unsigned</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExtDrivenBitField</pdt:instanceClass>
                     <pdt:briefDescription>XUSB clock frequency test result field.</pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Xusb--></spirit:field>
               <spirit:field><!--BitField named Reset--><spirit:name>Reset</spirit:name>
                  <spirit:description>Reset (active-high) counter and synchronizers inside Clock Detect Module for clocks:

Reset[0]: CRM PHY Clock
Reset[1]: CTM PHY Clock
Reset[2]: CRM Reference Clock
Reset[3]: CTM Reference Clock</spirit:description>
                  <spirit:bitOffset>24</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Reset--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Reset--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named FreqTest--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription>Frequency test register.</pdt:briefDescription>
                  <pdt:developerComments/>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named FreqTest--></spirit:register>
            <spirit:register><!--Register named PllConfig4--><spirit:name>PllConfig4</spirit:name>
               <spirit:description>Generic PLL control register repurposed based on platform ID</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x0</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Gen--><spirit:name>Gen</spirit:name>
                  <spirit:description>Refer to the GE clocking manual for more information
                  </spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Gen--><spirit:vendorExtensions>
                     <pdt:valueType>binary</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>true</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Gen--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named PllConfig4--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named PllConfig4--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named PLL--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>PLL (phase locked loop) register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named PLL--></spirit:addressBlock>
         <spirit:addressBlock><!--AddressBlock named IOCFG--><spirit:name>IOCFG</spirit:name>
            <spirit:description>IO Configuration register block.</spirit:description>
            <spirit:baseAddress>0x64</spirit:baseAddress>
            <spirit:range spirit:format="long">0x1C</spirit:range>
            <spirit:width>32</spirit:width>
            <spirit:register><!--Register named GpioDrive--><spirit:name>GpioDrive</spirit:name>
               <spirit:description>GPIO Output Drive Strength Controls

Drive (Output Drive Strength):
00:  4mA
01:  8mA
10: 12mA
11: 16mA</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x0</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0xffffffff</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Drive--><spirit:name>Drive</spirit:name>
                  <spirit:description>Drive[31:30]: Gpio15 {E8,E4}
Drive[29:28]: Gpio14 - {E8,E4}
Drive[27:26]: Gpio13 - {E8,E4}
Drive[25:24]: Gpio12 - {E8,E4}
Drive[23:22]: Gpio11 - {E8,E4}
Drive[21:20]: Gpio10 - {E8,E4}
Drive[19:18]: Gpio9  - {E8,E4}
Drive[17:16]: Gpio8  - {E8,E4}
Drive[15:14]: Gpio7  - {E8,E4}
Drive[13:12]: Gpio6  - {E8,E4}
Drive[11:10]: Gpio5  - {E8,E4}
Drive[9:8]:   Gpio4  - {E8,E4}
Drive[7:6]:   Gpio3  - {E8,E4}
Drive[5:4]:   Gpio2  - {E8,E4}
Drive[3:2]:   Gpio1  - {E8,E4}
Drive[1:0]:   Gpio0  - {E8,E4}</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Drive--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0xffffffff</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Drive--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named GpioDrive--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named GpioDrive--></spirit:register>
            <spirit:register><!--Register named GpioPull--><spirit:name>GpioPull</spirit:name>
               <spirit:description>GPIO Pull-Up/Pull-Down Controls

Pull (Input Pull-Up/Pull-Down):
00: None
01: Pull-Down
10: Pull-Up
11: Keeper</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x4</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x55555555</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Pull--><spirit:name>Pull</spirit:name>
                  <spirit:description>Pull[31:30]: Gpio15 {PU,PD}
Pull[29:28]: Gpio14 - {PU,PD}
Pull[27:26]: Gpio13 - {PU,PD}
Pull[25:24]: Gpio12 - {PU,PD}
Pull[23:22]: Gpio11 - {PU,PD}
Pull[21:20]: Gpio10 - {PU,PD}
Pull[19:18]: Gpio9  - {PU,PD}
Pull[17:16]: Gpio8  - {PU,PD}
Pull[15:14]: Gpio7  - {PU,PD}
Pull[13:12]: Gpio6  - {PU,PD}
Pull[11:10]: Gpio5  - {PU,PD}
Pull[9:8]:   Gpio4  - {PU,PD}
Pull[7:6]:   Gpio3  - {PU,PD}
Pull[5:4]:   Gpio2  - {PU,PD}
Pull[3:2]:   Gpio1  - {PU,PD}
Pull[1:0]:   Gpio0  - {PU,PD}</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>32</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Pull--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x55555555</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Pull--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named GpioPull--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named GpioPull--></spirit:register>
            <spirit:register><!--Register named GpioSchmittSlew--><spirit:name>GpioSchmittSlew</spirit:name>
               <spirit:description>GPIO Input Schmitt Trigger and Output Slew Rate Controls

Schmitt (Input Schmitt Trigger):
0: Normal
1: Schmitt Trigger

Slew (Output Slew Rate):
0: Fast
1: Slow</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x8</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00000000</spirit:value>
                  <spirit:mask>0xffffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Schmitt--><spirit:name>Schmitt</spirit:name>
                  <spirit:description>Schmitt[15]: Gpio15 SMT
Schmitt[14]: Gpio14 - SMT
Schmitt[13]: Gpio13 - SMT
Schmitt[12]: Gpio12 - SMT
Schmitt[11]: Gpio11 - SMT
Schmitt[10]: Gpio10 - SMT
Schmitt[9]:  Gpio9  - SMT
Schmitt[8]:  Gpio8  - SMT
Schmitt[7]:  Gpio7  - SMT
Schmitt[6]:  Gpio6  - SMT
Schmitt[5]:  Gpio5  - SMT
Schmitt[4]:  Gpio4  - SMT
Schmitt[3]:  Gpio3  - SMT
Schmitt[2]:  Gpio2  - SMT
Schmitt[1]:  Gpio1  - SMT
Schmitt[0]:  Gpio0  - SMT</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Schmitt--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0000</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Schmitt--></spirit:field>
               <spirit:field><!--BitField named Slew--><spirit:name>Slew</spirit:name>
                  <spirit:description>Slew[15]: Gpio15 SR
Slew[14]: Gpio14 - SR
Slew[13]: Gpio13 - SR
Slew[12]: Gpio12 - SR
Slew[11]: Gpio11 - SR
Slew[10]: Gpio10 - SR
Slew[9]:  Gpio9  - SR
Slew[8]:  Gpio8  - SR
Slew[7]:  Gpio7  - SR
Slew[6]:  Gpio6  - SR
Slew[5]:  Gpio5  - SR
Slew[4]:  Gpio4  - SR
Slew[3]:  Gpio3  - SR
Slew[2]:  Gpio2  - SR
Slew[1]:  Gpio1  - SR
Slew[0]:  Gpio0  - SR</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Slew--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0000</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Slew--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named GpioSchmittSlew--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named GpioSchmittSlew--></spirit:register>
            <spirit:register><!--Register named GpioMux--><spirit:name>GpioMux</spirit:name>
               <spirit:description>GPIO Output Mux Controls</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0xC</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00000000</spirit:value>
                  <spirit:mask>0x0000ffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Mux--><spirit:name>Mux</spirit:name>
                  <spirit:description>Mux[15]: 0: GPIO15; 1: HSSQ
Mux[14]: 0: GPIO14; 1: RXERROR
Mux[13]: 0: GPIO13; 1: RXACTIVE
Mux[12]: 0: GPIO12; 1: RXVALID
Mux[11]: 0: GPIO11; 1: RX_RCV
Mux[10]: 0: GPIO10; 1: RX_DM
Mux[9]:  0: GPIO9;  1: RX_DP
Mux[8]:  0: GPIO8;  1: TXREADY
Mux[7]:  0: GPIO7;  1: TXVALID
Mux[6]:  0: GPIO6;  1: TERMSELECT
Mux[5]:  0: GPIO5;  1: OPMODE_1
Mux[4]:  0: GPIO4;  1: OPMODE_0
Mux[3]:  0: GPIO3;  1: XCVRSELECT_1
Mux[2]:  0: GPIO2;  1: XCVRSELECT_0
Mux[1]:  0: GPIO1;  1: LINESTATE_1
Mux[0]:  0: GPIO0;  1: LINESTATE_0</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Mux--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0000</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Mux--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named GpioMux--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named GpioMux--></spirit:register>
            <spirit:register><!--Register named ClmTx--><spirit:name>ClmTx</spirit:name>
               <spirit:description>CLM Output Controls

Enable (Output Enable):
0: Disable (Hi-Z)
1: Enable  (Drive)

Slew (Output Slew Rate):
0: Fast
1: Slow

Drive (Output Drive Strength):
00:  4mA
01:  8mA
10: 12mA
11: 16mA</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x10</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x1555007f</spirit:value>
                  <spirit:mask>0x3fff7f7f</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Enable--><spirit:name>Enable</spirit:name>
                  <spirit:description>Enable[7]: Reserved
Enable[6]: O_CLM_TX_DATA[7:4] - E
Enable[5]: O_CLM_TX_DATA[3:2] - E
Enable[4]: O_CLM_TX_DATA[1]   - E
Enable[3]: O_CLM_TX_DATA[0]   - E
Enable[2]: O_CLM_TX_EN        - E
Enable[1]: O_CLM_TX_ER        - E
Enable[0]: O_CLM_TX_CLK       - E</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Enable--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x7f</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Enable--></spirit:field>
               <spirit:field><!--BitField named Slew--><spirit:name>Slew</spirit:name>
                  <spirit:description>Slew[7]: Reserved
Slew[6]: O_CLM_TX_DATA[7:4] - SR
Slew[5]: O_CLM_TX_DATA[3:2] - SR
Slew[4]: O_CLM_TX_DATA[1]   - SR
Slew[3]: O_CLM_TX_DATA[0]   - SR
Slew[2]: O_CLM_TX_EN        - SR
Slew[1]: O_CLM_TX_ER        - SR
Slew[0]: O_CLM_TX_CLK       - SR</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Slew--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x00</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Slew--></spirit:field>
               <spirit:field><!--BitField named Drive--><spirit:name>Drive</spirit:name>
                  <spirit:description>Drive[15:14]: Reserved
Drive[13:12]: O_CLM_TX_DATA[7:4] - {PU,PD}
Drive[11:10]: O_CLM_TX_DATA[3:2] - {PU,PD}
Drive[9:8]:   O_CLM_TX_DATA[1]   - {PU,PD}
Drive[7:6]:   O_CLM_TX_DATA[0]   - {PU,PD}
Drive[5:4]:   O_CLM_TX_EN        - {PU,PD}
Drive[3:2]:   O_CLM_TX_ER        - {PU,PD}
Drive[1:0]:   O_CLM_TX_CLK       - {PU,PD}</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Drive--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x1555</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Drive--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ClmTx--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ClmTx--></spirit:register>
            <spirit:register><!--Register named ClmRx--><spirit:name>ClmRx</spirit:name>
               <spirit:description>CLM Input Controls

Pull (Input Pull-Up/Pull-Down):
00: None
01: Pull-Down
10: Pull-Up
11: Keeper

Schmitt (Input Schmitt Trigger):
0: Normal
1: Schmitt Trigger</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x14</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00005555</spirit:value>
                  <spirit:mask>0x00ffffff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Pull--><spirit:name>Pull</spirit:name>
                  <spirit:description>Pull[15:14]: I_CLM_TX_FC        - {PU,PD}
Pull[13:12]: O_CLM_TX_DATA[7:4] - {PU,PD}
Pull[11:10]: O_CLM_TX_DATA[3:2] - {PU,PD}
Pull[9:8]:   O_CLM_TX_DATA[1]   - {PU,PD}
Pull[7:6]:   O_CLM_TX_DATA[0]   - {PU,PD}
Pull[5:4]:   O_CLM_TX_EN        - {PU,PD}
Pull[3:2]:   O_CLM_TX_ER        - {PU,PD}
Pull[1:0]:   O_CLM_TX_CLK       - {PU,PD}</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>16</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Pull--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x5555</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Pull--></spirit:field>
               <spirit:field><!--BitField named Schmitt--><spirit:name>Schmitt</spirit:name>
                  <spirit:description>Schmitt[7]: I_CLM_TX_FC        - SMT
Schmitt[6]: O_CLM_TX_DATA[7:4] - SMT
Schmitt[5]: O_CLM_TX_DATA[3:2] - SMT
Schmitt[4]: O_CLM_TX_DATA[1]   - SMT
Schmitt[3]: O_CLM_TX_DATA[0]   - SMT
Schmitt[2]: O_CLM_TX_EN        - SMT
Schmitt[1]: O_CLM_TX_ER        - SMT
Schmitt[0]: O_CLM_TX_CLK       - SMT</spirit:description>
                  <spirit:bitOffset>16</spirit:bitOffset>
                  <spirit:bitWidth>8</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Schmitt--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x00</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Schmitt--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named ClmRx--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named ClmRx--></spirit:register>
            <spirit:register><!--Register named RefClk--><spirit:name>RefClk</spirit:name>
               <spirit:description>Input and Output Reference Clock Controls</spirit:description>
               <spirit:dim>1</spirit:dim>
               <spirit:addressOffset>0x18</spirit:addressOffset>
               <spirit:size>32</spirit:size>
               <spirit:reset>
                  <spirit:value>0x00000055</spirit:value>
                  <spirit:mask>0x000077ff</spirit:mask>
               </spirit:reset>
               <spirit:field><!--BitField named Out0--><spirit:name>Out0</spirit:name>
                  <spirit:description>Out0[3:2] - Output Drive Strength:
00:  4mA
01:  8mA
10: 12mA
11: 16mA

Out0[1] - Output Slew Rate:
0: Fast
1: Slow

Out0[0] - Output Enable:
0: Disable (Hi-Z)
1: Enable  (Drive)</spirit:description>
                  <spirit:bitOffset>0</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Out0--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x5</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Out0--></spirit:field>
               <spirit:field><!--BitField named Out1--><spirit:name>Out1</spirit:name>
                  <spirit:description>Out1[3:2] - Output Drive Strength:
00:  4mA
01:  8mA
10: 12mA
11: 16mA

Out1[1] - Output Slew Rate:
0: Fast
1: Slow

Out1[0] - Output Enable:
0: Disable (Hi-Z)
1: Enable  (Drive)</spirit:description>
                  <spirit:bitOffset>4</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named Out1--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x5</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named Out1--></spirit:field>
               <spirit:field><!--BitField named In0--><spirit:name>In0</spirit:name>
                  <spirit:description>In0[3] - Reserved
In0[2] - Input Schmitt Trigger:
0: Normal
1: Schmitt Trigger

In0[1:0] - Input Pull-Up/Pull-Down:
00: None
01: Pull-Down
10: Pull-Up
11: Keeper</spirit:description>
                  <spirit:bitOffset>8</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named In0--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named In0--></spirit:field>
               <spirit:field><!--BitField named In1--><spirit:name>In1</spirit:name>
                  <spirit:description>In1[3] - Reserved
In1[2] - Input Schmitt Trigger:
0: Normal
1: Schmitt Trigger

In1[1:0] - Input Pull-Up/Pull-Down:
00: None
01: Pull-Down
10: Pull-Up
11: Keeper</spirit:description>
                  <spirit:bitOffset>12</spirit:bitOffset>
                  <spirit:bitWidth>4</spirit:bitWidth>
                  <spirit:access>read-write</spirit:access>
                  <!--BitField named In1--><spirit:vendorExtensions>
                     <pdt:valueType>hexadecimal</pdt:valueType>
                     <pdt:resetValue>0x0</pdt:resetValue>
                     <pdt:doNotTestReset>false</pdt:doNotTestReset>
                     <pdt:doNotTestWrite>false</pdt:doNotTestWrite>
                     <pdt:instanceClass>ExportedFlopBitField</pdt:instanceClass>
                     <pdt:briefDescription></pdt:briefDescription>
                     <pdt:developerComments/>
                     <pdt:indexTags/>
                     <pdt:related/>
                     <pdt:visibleToRoles/>
                  </spirit:vendorExtensions>
                  <!--BitField named In1--></spirit:field>
               <spirit:vendorExtensions><!--	spirit:dim and spirit:reset are not parsed by Spectareg.
			refer to pdt:dimensions and spirit:field/spirit:vendorExtensions/pdt:resetValue instead.
		--><!--Register named RefClk--><pdt:dimensions>
                     <pdt:dimension pdt:signif="0">
                        <pdt:index>i</pdt:index>
                        <pdt:increment>4</pdt:increment>
                        <pdt:numElements>1</pdt:numElements>
                        <pdt:numElemParams/>
                     </pdt:dimension>
                  </pdt:dimensions>
                  <pdt:instanceClass>Register</pdt:instanceClass>
                  <pdt:briefDescription></pdt:briefDescription>
                  <pdt:developerComments></pdt:developerComments>
                  <pdt:indexTags/>
                  <pdt:related/>
                  <pdt:visibleToRoles/>
               </spirit:vendorExtensions>
               <!--Register named RefClk--></spirit:register>
            <spirit:vendorExtensions><!--AddressBlock named IOCFG--><pdt:title/>
               <pdt:instanceClass>AddressBlock</pdt:instanceClass>
               <pdt:briefDescription>IO Configuration register block.</pdt:briefDescription>
               <pdt:developerComments/>
               <pdt:indexTags/>
               <pdt:related/>
               <pdt:visibleToRoles/>
            </spirit:vendorExtensions>
            <!--AddressBlock named IOCFG--></spirit:addressBlock>
         <!--
					 Bits in least addressable unit.  This defines how the address increments.
					 If this changes be sure to change the range of the AddressBlock and also
					 the addresses.
	--><spirit:addressUnitBits>8</spirit:addressUnitBits>
         <!--MemoryMap named GrgCpuMemMap--></spirit:memoryMap>
   </spirit:memoryMaps>
   <spirit:parameters/>
   <spirit:vendorExtensions><!--Component named Grg--><pdt:sysLevelOffset>0x20000000</pdt:sysLevelOffset>
      <pdt:description>The global registers include: Module reset control, GPIO and related interrupt control, MDIO interface control, PLL test and configuration, and a system timestamp register.</pdt:description>
      <pdt:instanceClass>Component</pdt:instanceClass>
      <pdt:briefDescription>Global Registers</pdt:briefDescription>
      <pdt:developerComments/>
      <pdt:indexTags/>
      <pdt:related/>
      <pdt:visibleToRoles/>
      <pdt:feature>Module Reset, GPIO, MDIO, and PLL control</pdt:feature>
   </spirit:vendorExtensions>
   <!--Component named Grg--></spirit:component>
