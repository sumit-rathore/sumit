/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : Remco van Steeden*/
/* generated by      : Remco.vanSteeden*/
/* generated from    : C:\cygwin64\home\Remco.VanSteeden\blackbird_emulation\m_gpio_ctrl\regs\ids\gpio_ctrl_regs.docx*/
/* IDesignSpec rev   : 6.8.10.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : APB*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : gpio_ctrl */

#ifndef _GPIO_CTRL_REGS_H_
#define _GPIO_CTRL_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=ro 0x3 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=ro 0x2 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=ro 0x1 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=ro 0x2 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=ro 0x3 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_version;

typedef union {
    struct {
        uint32_t dir : 32;           /* 31:0 SW=rw HW=ro 0x0 */
    } bf;
    uint32_t  dw;
} gpio_ctrl_gpio_dir;

typedef union {
    struct {
        uint32_t out : 32;           /* 31:0 SW=rw HW=ro 0x0 */
    } bf;
    uint32_t  dw;
} gpio_ctrl_gpio_out;

typedef union {
    struct {
        uint32_t in : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} gpio_ctrl_gpio_in;

/*section : irq */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gpio31 : 1;           /* 31 SW=rw HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=rw HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=rw HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=rw HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=rw HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=rw HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=rw HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=rw HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=rw HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=rw HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=rw HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=rw HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=rw HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t gpio0 : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gpio0 : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=rw HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=rw HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=rw HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=rw HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=rw HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=rw HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=rw HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=rw HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=rw HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=rw HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=rw HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=rw HW=na 0x0 */
            uint32_t gpio31 : 1;           /* 31 SW=rw HW=na 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_irq_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gpio31 : 1;           /* 31 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio0 : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gpio0 : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=r/w1c HW=wo 0x0 */
            uint32_t gpio31 : 1;           /* 31 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_irq_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gpio31 : 1;           /* 31 SW=ro HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=ro HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t gpio0 : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gpio0 : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=ro HW=na 0x0 */
            uint32_t gpio31 : 1;           /* 31 SW=ro HW=na 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_irq_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gpio31 : 1;           /* 31 SW=ro HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=ro HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t gpio0 : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gpio0 : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t gpio1 : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t gpio2 : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t gpio3 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t gpio4 : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t gpio5 : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t gpio6 : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t gpio7 : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t gpio8 : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t gpio9 : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t gpio10 : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t gpio11 : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t gpio12 : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t gpio13 : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t gpio14 : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t gpio15 : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t gpio16 : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t gpio17 : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t gpio18 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t gpio19 : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t gpio20 : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t gpio21 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t gpio22 : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t gpio23 : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t gpio24 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t gpio25 : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t gpio26 : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t gpio27 : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t gpio28 : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t gpio29 : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t gpio30 : 1;           /* 30 SW=ro HW=na 0x0 */
            uint32_t gpio31 : 1;           /* 31 SW=ro HW=na 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_irq_raw;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gpio7 : 4;           /* 31:28 SW=rw HW=ro 0x0 */
            uint32_t gpio6 : 4;           /* 27:24 SW=rw HW=ro 0x0 */
            uint32_t gpio5 : 4;           /* 23:20 SW=rw HW=ro 0x0 */
            uint32_t gpio4 : 4;           /* 19:16 SW=rw HW=ro 0x0 */
            uint32_t gpio3 : 4;           /* 15:12 SW=rw HW=ro 0x0 */
            uint32_t gpio2 : 4;           /* 11:8 SW=rw HW=ro 0x0 */
            uint32_t gpio1 : 4;           /* 7:4 SW=rw HW=ro 0x0 */
            uint32_t gpio0 : 4;           /* 3:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gpio0 : 4;           /* 0:3 SW=rw HW=ro 0x0 */
            uint32_t gpio1 : 4;           /* 4:7 SW=rw HW=ro 0x0 */
            uint32_t gpio2 : 4;           /* 8:11 SW=rw HW=ro 0x0 */
            uint32_t gpio3 : 4;           /* 12:15 SW=rw HW=ro 0x0 */
            uint32_t gpio4 : 4;           /* 16:19 SW=rw HW=ro 0x0 */
            uint32_t gpio5 : 4;           /* 20:23 SW=rw HW=ro 0x0 */
            uint32_t gpio6 : 4;           /* 24:27 SW=rw HW=ro 0x0 */
            uint32_t gpio7 : 4;           /* 28:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} gpio_ctrl_irq_int_type;

typedef struct {
    gpio_ctrl_irq_enable  enable;
    gpio_ctrl_irq_pending  pending;
    gpio_ctrl_irq_pending_irq  pending_irq;
    gpio_ctrl_irq_raw  raw;
    gpio_ctrl_irq_int_type  int_type[0x4];
    
    
    
} gpio_ctrl_irq;


typedef struct {
    gpio_ctrl_version  version;
    gpio_ctrl_gpio_dir  gpio_dir;
    gpio_ctrl_gpio_out  gpio_out;
    gpio_ctrl_gpio_in  gpio_in;
    
    union {
        gpio_ctrl_irq s;
        uint8_t filler[0x20];
    } irq;
    
    
    uint8_t filler11[0xD0];
    
    
} gpio_ctrl_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define gpio_ctrl_version_READMASK 0xFFFFFF
#define gpio_ctrl_version_WRITEMASK 0x0
#define gpio_ctrl_version_VOLATILEMASK 0x0
#define gpio_ctrl_version_RESETMASK 0xFFFFFF
#define gpio_ctrl_version_DEFAULT 0x00030201

#define gpio_ctrl_gpio_dir_READMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_dir_WRITEMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_dir_VOLATILEMASK 0x0
#define gpio_ctrl_gpio_dir_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_dir_DEFAULT 0x00000000

#define gpio_ctrl_gpio_out_READMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_out_WRITEMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_out_VOLATILEMASK 0x0
#define gpio_ctrl_gpio_out_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_out_DEFAULT 0x00000000

#define gpio_ctrl_gpio_in_READMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_in_WRITEMASK 0x0
#define gpio_ctrl_gpio_in_VOLATILEMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_in_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_gpio_in_DEFAULT 0x00000000

#define gpio_ctrl_irq_enable_READMASK 0xFFFFFFFF
#define gpio_ctrl_irq_enable_WRITEMASK 0xFFFFFFFF
#define gpio_ctrl_irq_enable_VOLATILEMASK 0x0
#define gpio_ctrl_irq_enable_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_irq_enable_DEFAULT 0x00000000

#define gpio_ctrl_irq_pending_READMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_WRITEMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_VOLATILEMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_DEFAULT 0x00000000

#define gpio_ctrl_irq_pending_irq_READMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_irq_WRITEMASK 0x0
#define gpio_ctrl_irq_pending_irq_VOLATILEMASK 0x0
#define gpio_ctrl_irq_pending_irq_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_irq_pending_irq_DEFAULT 0x00000000

#define gpio_ctrl_irq_raw_READMASK 0xFFFFFFFF
#define gpio_ctrl_irq_raw_WRITEMASK 0x0
#define gpio_ctrl_irq_raw_VOLATILEMASK 0x0
#define gpio_ctrl_irq_raw_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_irq_raw_DEFAULT 0x00000000

#define gpio_ctrl_irq_int_type_READMASK 0xFFFFFFFF
#define gpio_ctrl_irq_int_type_WRITEMASK 0xFFFFFFFF
#define gpio_ctrl_irq_int_type_VOLATILEMASK 0x0
#define gpio_ctrl_irq_int_type_RESETMASK 0xFFFFFFFF
#define gpio_ctrl_irq_int_type_DEFAULT 0x00000000

#define gpio_ctrl_s_SIZE 0x100
#define gpio_ctrl_version_SIZE 0x4
#define gpio_ctrl_gpio_dir_SIZE 0x4
#define gpio_ctrl_gpio_out_SIZE 0x4
#define gpio_ctrl_gpio_in_SIZE 0x4
#define gpio_ctrl_irq_SIZE 0x20
#define gpio_ctrl_irq_enable_SIZE 0x4
#define gpio_ctrl_irq_pending_SIZE 0x4
#define gpio_ctrl_irq_pending_irq_SIZE 0x4
#define gpio_ctrl_irq_raw_SIZE 0x4
#define gpio_ctrl_irq_int_type_SIZE 0x10

#define gpio_ctrl_s_OFFSET 0x0
#define gpio_ctrl_version_OFFSET 0x0
#define gpio_ctrl_gpio_dir_OFFSET 0x4
#define gpio_ctrl_gpio_out_OFFSET 0x8
#define gpio_ctrl_gpio_in_OFFSET 0xC
#define gpio_ctrl_irq_OFFSET 0x10
#define gpio_ctrl_irq_enable_OFFSET 0x0
#define gpio_ctrl_irq_pending_OFFSET 0x4
#define gpio_ctrl_irq_pending_irq_OFFSET 0x8
#define gpio_ctrl_irq_raw_OFFSET 0xC
#define gpio_ctrl_irq_int_type_OFFSET 0x10

#define gpio_ctrl_s_ADDRESS 0x000
#define gpio_ctrl_version_ADDRESS 0x000
#define gpio_ctrl_gpio_dir_ADDRESS 0x004
#define gpio_ctrl_gpio_out_ADDRESS 0x008
#define gpio_ctrl_gpio_in_ADDRESS 0x00C
#define gpio_ctrl_irq_ADDRESS 0x010
#define gpio_ctrl_irq_enable_ADDRESS 0x010
#define gpio_ctrl_irq_pending_ADDRESS 0x014
#define gpio_ctrl_irq_pending_irq_ADDRESS 0x018
#define gpio_ctrl_irq_raw_ADDRESS 0x01C
#define gpio_ctrl_irq_int_type_ADDRESS 0x020
#define GPIO_CTRL_VERSION_MAJOR_OFFSET 16
#define GPIO_CTRL_VERSION_MAJOR_MASK 0xFF0000
#define GPIO_CTRL_VERSION_MINOR_OFFSET 8
#define GPIO_CTRL_VERSION_MINOR_MASK 0xFF00
#define GPIO_CTRL_VERSION_PATCH_OFFSET 0
#define GPIO_CTRL_VERSION_PATCH_MASK 0xFF
#define GPIO_CTRL_GPIO_DIR_DIR_OFFSET 0
#define GPIO_CTRL_GPIO_DIR_DIR_MASK 0xFFFFFFFF
#define GPIO_CTRL_GPIO_OUT_OUT_OFFSET 0
#define GPIO_CTRL_GPIO_OUT_OUT_MASK 0xFFFFFFFF
#define GPIO_CTRL_GPIO_IN_IN_OFFSET 0
#define GPIO_CTRL_GPIO_IN_IN_MASK 0xFFFFFFFF
#define GPIO_CTRL_IRQ_ENABLE_GPIO31_OFFSET 31
#define GPIO_CTRL_IRQ_ENABLE_GPIO31_MASK 0x80000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO31 0x80000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO30_OFFSET 30
#define GPIO_CTRL_IRQ_ENABLE_GPIO30_MASK 0x40000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO30 0x40000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO29_OFFSET 29
#define GPIO_CTRL_IRQ_ENABLE_GPIO29_MASK 0x20000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO29 0x20000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO28_OFFSET 28
#define GPIO_CTRL_IRQ_ENABLE_GPIO28_MASK 0x10000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO28 0x10000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO27_OFFSET 27
#define GPIO_CTRL_IRQ_ENABLE_GPIO27_MASK 0x8000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO27 0x8000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO26_OFFSET 26
#define GPIO_CTRL_IRQ_ENABLE_GPIO26_MASK 0x4000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO26 0x4000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO25_OFFSET 25
#define GPIO_CTRL_IRQ_ENABLE_GPIO25_MASK 0x2000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO25 0x2000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO24_OFFSET 24
#define GPIO_CTRL_IRQ_ENABLE_GPIO24_MASK 0x1000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO24 0x1000000
#define GPIO_CTRL_IRQ_ENABLE_GPIO23_OFFSET 23
#define GPIO_CTRL_IRQ_ENABLE_GPIO23_MASK 0x800000
#define GPIO_CTRL_IRQ_ENABLE_GPIO23 0x800000
#define GPIO_CTRL_IRQ_ENABLE_GPIO22_OFFSET 22
#define GPIO_CTRL_IRQ_ENABLE_GPIO22_MASK 0x400000
#define GPIO_CTRL_IRQ_ENABLE_GPIO22 0x400000
#define GPIO_CTRL_IRQ_ENABLE_GPIO21_OFFSET 21
#define GPIO_CTRL_IRQ_ENABLE_GPIO21_MASK 0x200000
#define GPIO_CTRL_IRQ_ENABLE_GPIO21 0x200000
#define GPIO_CTRL_IRQ_ENABLE_GPIO20_OFFSET 20
#define GPIO_CTRL_IRQ_ENABLE_GPIO20_MASK 0x100000
#define GPIO_CTRL_IRQ_ENABLE_GPIO20 0x100000
#define GPIO_CTRL_IRQ_ENABLE_GPIO19_OFFSET 19
#define GPIO_CTRL_IRQ_ENABLE_GPIO19_MASK 0x80000
#define GPIO_CTRL_IRQ_ENABLE_GPIO19 0x80000
#define GPIO_CTRL_IRQ_ENABLE_GPIO18_OFFSET 18
#define GPIO_CTRL_IRQ_ENABLE_GPIO18_MASK 0x40000
#define GPIO_CTRL_IRQ_ENABLE_GPIO18 0x40000
#define GPIO_CTRL_IRQ_ENABLE_GPIO17_OFFSET 17
#define GPIO_CTRL_IRQ_ENABLE_GPIO17_MASK 0x20000
#define GPIO_CTRL_IRQ_ENABLE_GPIO17 0x20000
#define GPIO_CTRL_IRQ_ENABLE_GPIO16_OFFSET 16
#define GPIO_CTRL_IRQ_ENABLE_GPIO16_MASK 0x10000
#define GPIO_CTRL_IRQ_ENABLE_GPIO16 0x10000
#define GPIO_CTRL_IRQ_ENABLE_GPIO15_OFFSET 15
#define GPIO_CTRL_IRQ_ENABLE_GPIO15_MASK 0x8000
#define GPIO_CTRL_IRQ_ENABLE_GPIO15 0x8000
#define GPIO_CTRL_IRQ_ENABLE_GPIO14_OFFSET 14
#define GPIO_CTRL_IRQ_ENABLE_GPIO14_MASK 0x4000
#define GPIO_CTRL_IRQ_ENABLE_GPIO14 0x4000
#define GPIO_CTRL_IRQ_ENABLE_GPIO13_OFFSET 13
#define GPIO_CTRL_IRQ_ENABLE_GPIO13_MASK 0x2000
#define GPIO_CTRL_IRQ_ENABLE_GPIO13 0x2000
#define GPIO_CTRL_IRQ_ENABLE_GPIO12_OFFSET 12
#define GPIO_CTRL_IRQ_ENABLE_GPIO12_MASK 0x1000
#define GPIO_CTRL_IRQ_ENABLE_GPIO12 0x1000
#define GPIO_CTRL_IRQ_ENABLE_GPIO11_OFFSET 11
#define GPIO_CTRL_IRQ_ENABLE_GPIO11_MASK 0x800
#define GPIO_CTRL_IRQ_ENABLE_GPIO11 0x800
#define GPIO_CTRL_IRQ_ENABLE_GPIO10_OFFSET 10
#define GPIO_CTRL_IRQ_ENABLE_GPIO10_MASK 0x400
#define GPIO_CTRL_IRQ_ENABLE_GPIO10 0x400
#define GPIO_CTRL_IRQ_ENABLE_GPIO9_OFFSET 9
#define GPIO_CTRL_IRQ_ENABLE_GPIO9_MASK 0x200
#define GPIO_CTRL_IRQ_ENABLE_GPIO9 0x200
#define GPIO_CTRL_IRQ_ENABLE_GPIO8_OFFSET 8
#define GPIO_CTRL_IRQ_ENABLE_GPIO8_MASK 0x100
#define GPIO_CTRL_IRQ_ENABLE_GPIO8 0x100
#define GPIO_CTRL_IRQ_ENABLE_GPIO7_OFFSET 7
#define GPIO_CTRL_IRQ_ENABLE_GPIO7_MASK 0x80
#define GPIO_CTRL_IRQ_ENABLE_GPIO7 0x80
#define GPIO_CTRL_IRQ_ENABLE_GPIO6_OFFSET 6
#define GPIO_CTRL_IRQ_ENABLE_GPIO6_MASK 0x40
#define GPIO_CTRL_IRQ_ENABLE_GPIO6 0x40
#define GPIO_CTRL_IRQ_ENABLE_GPIO5_OFFSET 5
#define GPIO_CTRL_IRQ_ENABLE_GPIO5_MASK 0x20
#define GPIO_CTRL_IRQ_ENABLE_GPIO5 0x20
#define GPIO_CTRL_IRQ_ENABLE_GPIO4_OFFSET 4
#define GPIO_CTRL_IRQ_ENABLE_GPIO4_MASK 0x10
#define GPIO_CTRL_IRQ_ENABLE_GPIO4 0x10
#define GPIO_CTRL_IRQ_ENABLE_GPIO3_OFFSET 3
#define GPIO_CTRL_IRQ_ENABLE_GPIO3_MASK 0x8
#define GPIO_CTRL_IRQ_ENABLE_GPIO3 0x8
#define GPIO_CTRL_IRQ_ENABLE_GPIO2_OFFSET 2
#define GPIO_CTRL_IRQ_ENABLE_GPIO2_MASK 0x4
#define GPIO_CTRL_IRQ_ENABLE_GPIO2 0x4
#define GPIO_CTRL_IRQ_ENABLE_GPIO1_OFFSET 1
#define GPIO_CTRL_IRQ_ENABLE_GPIO1_MASK 0x2
#define GPIO_CTRL_IRQ_ENABLE_GPIO1 0x2
#define GPIO_CTRL_IRQ_ENABLE_GPIO0_OFFSET 0
#define GPIO_CTRL_IRQ_ENABLE_GPIO0_MASK 0x1
#define GPIO_CTRL_IRQ_ENABLE_GPIO0 0x1
#define GPIO_CTRL_IRQ_PENDING_GPIO31_OFFSET 31
#define GPIO_CTRL_IRQ_PENDING_GPIO31_MASK 0x80000000
#define GPIO_CTRL_IRQ_PENDING_GPIO31 0x80000000
#define GPIO_CTRL_IRQ_PENDING_GPIO30_OFFSET 30
#define GPIO_CTRL_IRQ_PENDING_GPIO30_MASK 0x40000000
#define GPIO_CTRL_IRQ_PENDING_GPIO30 0x40000000
#define GPIO_CTRL_IRQ_PENDING_GPIO29_OFFSET 29
#define GPIO_CTRL_IRQ_PENDING_GPIO29_MASK 0x20000000
#define GPIO_CTRL_IRQ_PENDING_GPIO29 0x20000000
#define GPIO_CTRL_IRQ_PENDING_GPIO28_OFFSET 28
#define GPIO_CTRL_IRQ_PENDING_GPIO28_MASK 0x10000000
#define GPIO_CTRL_IRQ_PENDING_GPIO28 0x10000000
#define GPIO_CTRL_IRQ_PENDING_GPIO27_OFFSET 27
#define GPIO_CTRL_IRQ_PENDING_GPIO27_MASK 0x8000000
#define GPIO_CTRL_IRQ_PENDING_GPIO27 0x8000000
#define GPIO_CTRL_IRQ_PENDING_GPIO26_OFFSET 26
#define GPIO_CTRL_IRQ_PENDING_GPIO26_MASK 0x4000000
#define GPIO_CTRL_IRQ_PENDING_GPIO26 0x4000000
#define GPIO_CTRL_IRQ_PENDING_GPIO25_OFFSET 25
#define GPIO_CTRL_IRQ_PENDING_GPIO25_MASK 0x2000000
#define GPIO_CTRL_IRQ_PENDING_GPIO25 0x2000000
#define GPIO_CTRL_IRQ_PENDING_GPIO24_OFFSET 24
#define GPIO_CTRL_IRQ_PENDING_GPIO24_MASK 0x1000000
#define GPIO_CTRL_IRQ_PENDING_GPIO24 0x1000000
#define GPIO_CTRL_IRQ_PENDING_GPIO23_OFFSET 23
#define GPIO_CTRL_IRQ_PENDING_GPIO23_MASK 0x800000
#define GPIO_CTRL_IRQ_PENDING_GPIO23 0x800000
#define GPIO_CTRL_IRQ_PENDING_GPIO22_OFFSET 22
#define GPIO_CTRL_IRQ_PENDING_GPIO22_MASK 0x400000
#define GPIO_CTRL_IRQ_PENDING_GPIO22 0x400000
#define GPIO_CTRL_IRQ_PENDING_GPIO21_OFFSET 21
#define GPIO_CTRL_IRQ_PENDING_GPIO21_MASK 0x200000
#define GPIO_CTRL_IRQ_PENDING_GPIO21 0x200000
#define GPIO_CTRL_IRQ_PENDING_GPIO20_OFFSET 20
#define GPIO_CTRL_IRQ_PENDING_GPIO20_MASK 0x100000
#define GPIO_CTRL_IRQ_PENDING_GPIO20 0x100000
#define GPIO_CTRL_IRQ_PENDING_GPIO19_OFFSET 19
#define GPIO_CTRL_IRQ_PENDING_GPIO19_MASK 0x80000
#define GPIO_CTRL_IRQ_PENDING_GPIO19 0x80000
#define GPIO_CTRL_IRQ_PENDING_GPIO18_OFFSET 18
#define GPIO_CTRL_IRQ_PENDING_GPIO18_MASK 0x40000
#define GPIO_CTRL_IRQ_PENDING_GPIO18 0x40000
#define GPIO_CTRL_IRQ_PENDING_GPIO17_OFFSET 17
#define GPIO_CTRL_IRQ_PENDING_GPIO17_MASK 0x20000
#define GPIO_CTRL_IRQ_PENDING_GPIO17 0x20000
#define GPIO_CTRL_IRQ_PENDING_GPIO16_OFFSET 16
#define GPIO_CTRL_IRQ_PENDING_GPIO16_MASK 0x10000
#define GPIO_CTRL_IRQ_PENDING_GPIO16 0x10000
#define GPIO_CTRL_IRQ_PENDING_GPIO15_OFFSET 15
#define GPIO_CTRL_IRQ_PENDING_GPIO15_MASK 0x8000
#define GPIO_CTRL_IRQ_PENDING_GPIO15 0x8000
#define GPIO_CTRL_IRQ_PENDING_GPIO14_OFFSET 14
#define GPIO_CTRL_IRQ_PENDING_GPIO14_MASK 0x4000
#define GPIO_CTRL_IRQ_PENDING_GPIO14 0x4000
#define GPIO_CTRL_IRQ_PENDING_GPIO13_OFFSET 13
#define GPIO_CTRL_IRQ_PENDING_GPIO13_MASK 0x2000
#define GPIO_CTRL_IRQ_PENDING_GPIO13 0x2000
#define GPIO_CTRL_IRQ_PENDING_GPIO12_OFFSET 12
#define GPIO_CTRL_IRQ_PENDING_GPIO12_MASK 0x1000
#define GPIO_CTRL_IRQ_PENDING_GPIO12 0x1000
#define GPIO_CTRL_IRQ_PENDING_GPIO11_OFFSET 11
#define GPIO_CTRL_IRQ_PENDING_GPIO11_MASK 0x800
#define GPIO_CTRL_IRQ_PENDING_GPIO11 0x800
#define GPIO_CTRL_IRQ_PENDING_GPIO10_OFFSET 10
#define GPIO_CTRL_IRQ_PENDING_GPIO10_MASK 0x400
#define GPIO_CTRL_IRQ_PENDING_GPIO10 0x400
#define GPIO_CTRL_IRQ_PENDING_GPIO9_OFFSET 9
#define GPIO_CTRL_IRQ_PENDING_GPIO9_MASK 0x200
#define GPIO_CTRL_IRQ_PENDING_GPIO9 0x200
#define GPIO_CTRL_IRQ_PENDING_GPIO8_OFFSET 8
#define GPIO_CTRL_IRQ_PENDING_GPIO8_MASK 0x100
#define GPIO_CTRL_IRQ_PENDING_GPIO8 0x100
#define GPIO_CTRL_IRQ_PENDING_GPIO7_OFFSET 7
#define GPIO_CTRL_IRQ_PENDING_GPIO7_MASK 0x80
#define GPIO_CTRL_IRQ_PENDING_GPIO7 0x80
#define GPIO_CTRL_IRQ_PENDING_GPIO6_OFFSET 6
#define GPIO_CTRL_IRQ_PENDING_GPIO6_MASK 0x40
#define GPIO_CTRL_IRQ_PENDING_GPIO6 0x40
#define GPIO_CTRL_IRQ_PENDING_GPIO5_OFFSET 5
#define GPIO_CTRL_IRQ_PENDING_GPIO5_MASK 0x20
#define GPIO_CTRL_IRQ_PENDING_GPIO5 0x20
#define GPIO_CTRL_IRQ_PENDING_GPIO4_OFFSET 4
#define GPIO_CTRL_IRQ_PENDING_GPIO4_MASK 0x10
#define GPIO_CTRL_IRQ_PENDING_GPIO4 0x10
#define GPIO_CTRL_IRQ_PENDING_GPIO3_OFFSET 3
#define GPIO_CTRL_IRQ_PENDING_GPIO3_MASK 0x8
#define GPIO_CTRL_IRQ_PENDING_GPIO3 0x8
#define GPIO_CTRL_IRQ_PENDING_GPIO2_OFFSET 2
#define GPIO_CTRL_IRQ_PENDING_GPIO2_MASK 0x4
#define GPIO_CTRL_IRQ_PENDING_GPIO2 0x4
#define GPIO_CTRL_IRQ_PENDING_GPIO1_OFFSET 1
#define GPIO_CTRL_IRQ_PENDING_GPIO1_MASK 0x2
#define GPIO_CTRL_IRQ_PENDING_GPIO1 0x2
#define GPIO_CTRL_IRQ_PENDING_GPIO0_OFFSET 0
#define GPIO_CTRL_IRQ_PENDING_GPIO0_MASK 0x1
#define GPIO_CTRL_IRQ_PENDING_GPIO0 0x1
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO31_OFFSET 31
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO31_MASK 0x80000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO31 0x80000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO30_OFFSET 30
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO30_MASK 0x40000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO30 0x40000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO29_OFFSET 29
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO29_MASK 0x20000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO29 0x20000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO28_OFFSET 28
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO28_MASK 0x10000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO28 0x10000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO27_OFFSET 27
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO27_MASK 0x8000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO27 0x8000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO26_OFFSET 26
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO26_MASK 0x4000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO26 0x4000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO25_OFFSET 25
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO25_MASK 0x2000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO25 0x2000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO24_OFFSET 24
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO24_MASK 0x1000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO24 0x1000000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO23_OFFSET 23
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO23_MASK 0x800000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO23 0x800000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO22_OFFSET 22
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO22_MASK 0x400000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO22 0x400000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO21_OFFSET 21
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO21_MASK 0x200000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO21 0x200000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO20_OFFSET 20
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO20_MASK 0x100000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO20 0x100000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO19_OFFSET 19
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO19_MASK 0x80000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO19 0x80000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO18_OFFSET 18
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO18_MASK 0x40000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO18 0x40000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO17_OFFSET 17
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO17_MASK 0x20000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO17 0x20000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO16_OFFSET 16
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO16_MASK 0x10000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO16 0x10000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO15_OFFSET 15
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO15_MASK 0x8000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO15 0x8000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO14_OFFSET 14
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO14_MASK 0x4000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO14 0x4000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO13_OFFSET 13
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO13_MASK 0x2000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO13 0x2000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO12_OFFSET 12
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO12_MASK 0x1000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO12 0x1000
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO11_OFFSET 11
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO11_MASK 0x800
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO11 0x800
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO10_OFFSET 10
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO10_MASK 0x400
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO10 0x400
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO9_OFFSET 9
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO9_MASK 0x200
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO9 0x200
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO8_OFFSET 8
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO8_MASK 0x100
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO8 0x100
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO7_OFFSET 7
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO7_MASK 0x80
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO7 0x80
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO6_OFFSET 6
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO6_MASK 0x40
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO6 0x40
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO5_OFFSET 5
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO5_MASK 0x20
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO5 0x20
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO4_OFFSET 4
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO4_MASK 0x10
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO4 0x10
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO3_OFFSET 3
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO3_MASK 0x8
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO3 0x8
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO2_OFFSET 2
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO2_MASK 0x4
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO2 0x4
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO1_OFFSET 1
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO1_MASK 0x2
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO1 0x2
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO0_OFFSET 0
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO0_MASK 0x1
#define GPIO_CTRL_IRQ_PENDING_IRQ_GPIO0 0x1
#define GPIO_CTRL_IRQ_RAW_GPIO31_OFFSET 31
#define GPIO_CTRL_IRQ_RAW_GPIO31_MASK 0x80000000
#define GPIO_CTRL_IRQ_RAW_GPIO31 0x80000000
#define GPIO_CTRL_IRQ_RAW_GPIO30_OFFSET 30
#define GPIO_CTRL_IRQ_RAW_GPIO30_MASK 0x40000000
#define GPIO_CTRL_IRQ_RAW_GPIO30 0x40000000
#define GPIO_CTRL_IRQ_RAW_GPIO29_OFFSET 29
#define GPIO_CTRL_IRQ_RAW_GPIO29_MASK 0x20000000
#define GPIO_CTRL_IRQ_RAW_GPIO29 0x20000000
#define GPIO_CTRL_IRQ_RAW_GPIO28_OFFSET 28
#define GPIO_CTRL_IRQ_RAW_GPIO28_MASK 0x10000000
#define GPIO_CTRL_IRQ_RAW_GPIO28 0x10000000
#define GPIO_CTRL_IRQ_RAW_GPIO27_OFFSET 27
#define GPIO_CTRL_IRQ_RAW_GPIO27_MASK 0x8000000
#define GPIO_CTRL_IRQ_RAW_GPIO27 0x8000000
#define GPIO_CTRL_IRQ_RAW_GPIO26_OFFSET 26
#define GPIO_CTRL_IRQ_RAW_GPIO26_MASK 0x4000000
#define GPIO_CTRL_IRQ_RAW_GPIO26 0x4000000
#define GPIO_CTRL_IRQ_RAW_GPIO25_OFFSET 25
#define GPIO_CTRL_IRQ_RAW_GPIO25_MASK 0x2000000
#define GPIO_CTRL_IRQ_RAW_GPIO25 0x2000000
#define GPIO_CTRL_IRQ_RAW_GPIO24_OFFSET 24
#define GPIO_CTRL_IRQ_RAW_GPIO24_MASK 0x1000000
#define GPIO_CTRL_IRQ_RAW_GPIO24 0x1000000
#define GPIO_CTRL_IRQ_RAW_GPIO23_OFFSET 23
#define GPIO_CTRL_IRQ_RAW_GPIO23_MASK 0x800000
#define GPIO_CTRL_IRQ_RAW_GPIO23 0x800000
#define GPIO_CTRL_IRQ_RAW_GPIO22_OFFSET 22
#define GPIO_CTRL_IRQ_RAW_GPIO22_MASK 0x400000
#define GPIO_CTRL_IRQ_RAW_GPIO22 0x400000
#define GPIO_CTRL_IRQ_RAW_GPIO21_OFFSET 21
#define GPIO_CTRL_IRQ_RAW_GPIO21_MASK 0x200000
#define GPIO_CTRL_IRQ_RAW_GPIO21 0x200000
#define GPIO_CTRL_IRQ_RAW_GPIO20_OFFSET 20
#define GPIO_CTRL_IRQ_RAW_GPIO20_MASK 0x100000
#define GPIO_CTRL_IRQ_RAW_GPIO20 0x100000
#define GPIO_CTRL_IRQ_RAW_GPIO19_OFFSET 19
#define GPIO_CTRL_IRQ_RAW_GPIO19_MASK 0x80000
#define GPIO_CTRL_IRQ_RAW_GPIO19 0x80000
#define GPIO_CTRL_IRQ_RAW_GPIO18_OFFSET 18
#define GPIO_CTRL_IRQ_RAW_GPIO18_MASK 0x40000
#define GPIO_CTRL_IRQ_RAW_GPIO18 0x40000
#define GPIO_CTRL_IRQ_RAW_GPIO17_OFFSET 17
#define GPIO_CTRL_IRQ_RAW_GPIO17_MASK 0x20000
#define GPIO_CTRL_IRQ_RAW_GPIO17 0x20000
#define GPIO_CTRL_IRQ_RAW_GPIO16_OFFSET 16
#define GPIO_CTRL_IRQ_RAW_GPIO16_MASK 0x10000
#define GPIO_CTRL_IRQ_RAW_GPIO16 0x10000
#define GPIO_CTRL_IRQ_RAW_GPIO15_OFFSET 15
#define GPIO_CTRL_IRQ_RAW_GPIO15_MASK 0x8000
#define GPIO_CTRL_IRQ_RAW_GPIO15 0x8000
#define GPIO_CTRL_IRQ_RAW_GPIO14_OFFSET 14
#define GPIO_CTRL_IRQ_RAW_GPIO14_MASK 0x4000
#define GPIO_CTRL_IRQ_RAW_GPIO14 0x4000
#define GPIO_CTRL_IRQ_RAW_GPIO13_OFFSET 13
#define GPIO_CTRL_IRQ_RAW_GPIO13_MASK 0x2000
#define GPIO_CTRL_IRQ_RAW_GPIO13 0x2000
#define GPIO_CTRL_IRQ_RAW_GPIO12_OFFSET 12
#define GPIO_CTRL_IRQ_RAW_GPIO12_MASK 0x1000
#define GPIO_CTRL_IRQ_RAW_GPIO12 0x1000
#define GPIO_CTRL_IRQ_RAW_GPIO11_OFFSET 11
#define GPIO_CTRL_IRQ_RAW_GPIO11_MASK 0x800
#define GPIO_CTRL_IRQ_RAW_GPIO11 0x800
#define GPIO_CTRL_IRQ_RAW_GPIO10_OFFSET 10
#define GPIO_CTRL_IRQ_RAW_GPIO10_MASK 0x400
#define GPIO_CTRL_IRQ_RAW_GPIO10 0x400
#define GPIO_CTRL_IRQ_RAW_GPIO9_OFFSET 9
#define GPIO_CTRL_IRQ_RAW_GPIO9_MASK 0x200
#define GPIO_CTRL_IRQ_RAW_GPIO9 0x200
#define GPIO_CTRL_IRQ_RAW_GPIO8_OFFSET 8
#define GPIO_CTRL_IRQ_RAW_GPIO8_MASK 0x100
#define GPIO_CTRL_IRQ_RAW_GPIO8 0x100
#define GPIO_CTRL_IRQ_RAW_GPIO7_OFFSET 7
#define GPIO_CTRL_IRQ_RAW_GPIO7_MASK 0x80
#define GPIO_CTRL_IRQ_RAW_GPIO7 0x80
#define GPIO_CTRL_IRQ_RAW_GPIO6_OFFSET 6
#define GPIO_CTRL_IRQ_RAW_GPIO6_MASK 0x40
#define GPIO_CTRL_IRQ_RAW_GPIO6 0x40
#define GPIO_CTRL_IRQ_RAW_GPIO5_OFFSET 5
#define GPIO_CTRL_IRQ_RAW_GPIO5_MASK 0x20
#define GPIO_CTRL_IRQ_RAW_GPIO5 0x20
#define GPIO_CTRL_IRQ_RAW_GPIO4_OFFSET 4
#define GPIO_CTRL_IRQ_RAW_GPIO4_MASK 0x10
#define GPIO_CTRL_IRQ_RAW_GPIO4 0x10
#define GPIO_CTRL_IRQ_RAW_GPIO3_OFFSET 3
#define GPIO_CTRL_IRQ_RAW_GPIO3_MASK 0x8
#define GPIO_CTRL_IRQ_RAW_GPIO3 0x8
#define GPIO_CTRL_IRQ_RAW_GPIO2_OFFSET 2
#define GPIO_CTRL_IRQ_RAW_GPIO2_MASK 0x4
#define GPIO_CTRL_IRQ_RAW_GPIO2 0x4
#define GPIO_CTRL_IRQ_RAW_GPIO1_OFFSET 1
#define GPIO_CTRL_IRQ_RAW_GPIO1_MASK 0x2
#define GPIO_CTRL_IRQ_RAW_GPIO1 0x2
#define GPIO_CTRL_IRQ_RAW_GPIO0_OFFSET 0
#define GPIO_CTRL_IRQ_RAW_GPIO0_MASK 0x1
#define GPIO_CTRL_IRQ_RAW_GPIO0 0x1
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO7_OFFSET 28
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO7_MASK 0xF0000000
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO6_OFFSET 24
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO6_MASK 0xF000000
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO5_OFFSET 20
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO5_MASK 0xF00000
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO4_OFFSET 16
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO4_MASK 0xF0000
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO3_OFFSET 12
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO3_MASK 0xF000
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO2_OFFSET 8
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO2_MASK 0xF00
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO1_OFFSET 4
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO1_MASK 0xF0
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO0_OFFSET 0
#define GPIO_CTRL_IRQ_INT_TYPE_GPIO0_MASK 0xF
#endif /* _GPIO_CTRL_REGS_H_ */

/* end */
