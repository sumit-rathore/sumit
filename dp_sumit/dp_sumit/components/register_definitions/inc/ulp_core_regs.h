/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : Mohsen Nahvi*/
/* generated by      : Mohsen.Nahvi*/
/* generated from    : C:\cygwin64\home\Mohsen.Nahvi\blackbird_network_develop\m_ulp\regs\ids\ulp_core\ulp_core_regs.docx*/
/* IDesignSpec rev   : 6.8.10.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : APB*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : ulp_core */

#ifndef _ULP_CORE_REGS_H_
#define _ULP_CORE_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=ro 0x9 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=ro 0x0 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=ro 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=ro 0x0 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=ro 0x9 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_version;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t credit_hp_timer_en : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t pending_hp_timer_en : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t internal_loopback_en : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t quasi_ss_disabled_mode : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t quasi_u3_mode : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t allow_u2 : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t allow_u1 : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t dfp_compliance_mode_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t use_trx_detect_quiet_dfp_max : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t use_trx_detect_quiet_dfp_max : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t dfp_compliance_mode_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t allow_u1 : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t allow_u2 : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t quasi_u3_mode : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t quasi_ss_disabled_mode : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t internal_loopback_en : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t pending_hp_timer_en : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t credit_hp_timer_en : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_configuration;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv22 : 10;
            uint32_t wait_in_polling_lfps : 1;           /* 21 SW=rw HW=ro 0x0 */
            uint32_t exit_low_power : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t wait_in_u3 : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t wait_in_u1_u2 : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t delay_u3_wakeup : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t go_u3 : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t go_u2 : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t go_u1 : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t wait_in_hot_reset : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gen_warm_reset : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t allow_rx_term_en_hw_clr : 1;           /* 11 SW=rw HW=ro 0x1 */
            uint32_t rx_termination_en : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t go2_ss_inactive : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t go2_recovery : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t go2_hot_reset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t go2_loopback : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t go2_ss_disabled : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t disable_scrambling : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_disable_scramble_bit : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_loopbk_bit : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_link_config_field : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t go2_rx_detect : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t go2_rx_detect : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_link_config_field : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_loopbk_bit : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t set_ts2_disable_scramble_bit : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t disable_scrambling : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t go2_ss_disabled : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t go2_loopback : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t go2_hot_reset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t go2_recovery : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t go2_ss_inactive : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t rx_termination_en : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t allow_rx_term_en_hw_clr : 1;           /* 11 SW=rw HW=ro 0x1 */
            uint32_t gen_warm_reset : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t wait_in_hot_reset : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t go_u1 : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t go_u2 : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t go_u3 : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t delay_u3_wakeup : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t wait_in_u1_u2 : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t wait_in_u3 : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t exit_low_power : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t wait_in_polling_lfps : 1;           /* 21 SW=rw HW=ro 0x0 */
            uint32_t resv22 : 10;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_control;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv10 : 22;
            uint32_t add_2_cht : 5;           /* 9:5 SW=rw HW=ro 0x2 */
            uint32_t add_2_pht : 5;           /* 4:0 SW=rw HW=ro 0x2 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t add_2_pht : 5;           /* 0:4 SW=rw HW=ro 0x2 */
            uint32_t add_2_cht : 5;           /* 5:9 SW=rw HW=ro 0x2 */
            uint32_t resv10 : 22;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_timer_correction;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t main_state : 4;           /* 7:4 SW=ro HW=wo 0x0 */
            uint32_t sub_state : 4;           /* 3:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sub_state : 4;           /* 0:3 SW=ro HW=wo 0x0 */
            uint32_t main_state : 4;           /* 4:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ltssm_state;

/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t rcvd_lbad : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t rcvd_lrty : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t snt_lbad : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t snt_lrty : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t rx_go_recovery : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t go2_u0_from_recovery : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t to_phy_out_eop : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t to_phy_out_sop : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t to_phy_out_sop : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t to_phy_out_eop : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t go2_u0_from_recovery : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t rx_go_recovery : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t snt_lrty : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t snt_lbad : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t rcvd_lrty : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t rcvd_lbad : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_rd2clr_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t tx_lfps_cnt_in_err : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_tx_lfps_cnt_in_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t rx_lfps_cnt_in_err : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rx_lfps_cnt_in_err : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_rx_lfps_cnt_in_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t tx_framer_ptp_violated : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_framer_ptp_violated : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_tx_framer_ptp_violated;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t link_training_ptp_violated : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t link_training_ptp_violated : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_link_training_ptp_violated;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t link_command_ptp_violated : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t link_command_ptp_violated : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_link_command_ptp_violated;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t lmp_ptp_violated : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t lmp_ptp_violated : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_lmp_ptp_violated;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t link_command_rx_event_fifo_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t link_command_rx_event_fifo_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_link_command_rx_event_fifo_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t link_command_rx_event_fifo_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t link_command_rx_event_fifo_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_link_command_rx_event_fifo_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t lmp_rx_event_fifo_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t lmp_rx_event_fifo_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_lmp_rx_event_fifo_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t lmp_rx_event_fifo_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t lmp_rx_event_fifo_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_lmp_rx_event_fifo_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err;

typedef union {
    struct {
        uint32_t to_phy_out_sop : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} ulp_core_stats0_to_phy_out_sop;

typedef union {
    struct {
        uint32_t to_phy_out_eop : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} ulp_core_stats0_to_phy_out_eop;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t go2_u0_from_recovery : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t go2_u0_from_recovery : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_go2_u0_from_recovery;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t rx_go_recovery : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rx_go_recovery : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_rx_go_recovery;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t snt_lrty : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t snt_lrty : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_snt_lrty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t snt_lbad : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t snt_lbad : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_snt_lbad;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t rcvd_lrty : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rcvd_lrty : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_rcvd_lrty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t rcvd_lbad : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rcvd_lbad : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_stats0_rcvd_lbad;

typedef struct {
    ulp_core_stats0_rd2clr_config  rd2clr_config;
    ulp_core_stats0_tx_lfps_cnt_in_err  tx_lfps_cnt_in_err;
    ulp_core_stats0_rx_lfps_cnt_in_err  rx_lfps_cnt_in_err;
    ulp_core_stats0_tx_framer_ptp_violated  tx_framer_ptp_violated;
    ulp_core_stats0_link_training_ptp_violated  link_training_ptp_violated;
    ulp_core_stats0_link_command_ptp_violated  link_command_ptp_violated;
    ulp_core_stats0_lmp_ptp_violated  lmp_ptp_violated;
    ulp_core_stats0_link_command_rx_event_fifo_overflow  link_command_rx_event_fifo_overflow;
    ulp_core_stats0_link_command_rx_event_fifo_underflow  link_command_rx_event_fifo_underflow;
    ulp_core_stats0_lmp_rx_event_fifo_overflow  lmp_rx_event_fifo_overflow;
    ulp_core_stats0_lmp_rx_event_fifo_underflow  lmp_rx_event_fifo_underflow;
    ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err  remote_rx_hdr_buff_crdt_cnt_in_err;
    ulp_core_stats0_to_phy_out_sop  to_phy_out_sop;
    ulp_core_stats0_to_phy_out_eop  to_phy_out_eop;
    ulp_core_stats0_go2_u0_from_recovery  go2_u0_from_recovery;
    ulp_core_stats0_rx_go_recovery  rx_go_recovery;
    ulp_core_stats0_snt_lrty  snt_lrty;
    ulp_core_stats0_snt_lbad  snt_lbad;
    ulp_core_stats0_rcvd_lrty  rcvd_lrty;
    ulp_core_stats0_rcvd_lbad  rcvd_lbad;
    
    
    
} ulp_core_stats0;


/*section : ptp_guard_2core */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=na 0x3 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=na 0x3 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=na 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=na 0x3 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=na 0x3 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_version;

/*section : config0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv2 : 30;
            uint32_t implemented : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t activate : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t activate : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t implemented : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t resv2 : 30;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_config0_fix_ptp_violations;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv20 : 12;
            uint32_t max_cycle_mode : 4;           /* 19:16 SW=rw HW=ro 0x3 */
            uint32_t max_cycles : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t max_cycles : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t max_cycle_mode : 4;           /* 16:19 SW=rw HW=ro 0x3 */
            uint32_t resv20 : 12;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_config0_max_cycles;

typedef struct {
    ulp_core_ptp_guard_2core_config0_fix_ptp_violations  fix_ptp_violations;
    ulp_core_ptp_guard_2core_config0_max_cycles  max_cycles;
    
} ulp_core_ptp_guard_2core_config0;


/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_stats0_rd2clr_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t missing_sop_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_stats0_missing_sop_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t missing_eop_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_eop_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_stats0_missing_eop_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t max_cycle_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t max_cycle_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_stats0_max_cycle_err;

typedef struct {
    ulp_core_ptp_guard_2core_stats0_rd2clr_config  rd2clr_config;
    ulp_core_ptp_guard_2core_stats0_missing_sop_err  missing_sop_err;
    ulp_core_ptp_guard_2core_stats0_missing_eop_err  missing_eop_err;
    ulp_core_ptp_guard_2core_stats0_max_cycle_err  max_cycle_err;
    
} ulp_core_ptp_guard_2core_stats0;


/*section : irq0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_irq0_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_irq0_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_irq0_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_ptp_guard_2core_irq0_raw;

typedef struct {
    ulp_core_ptp_guard_2core_irq0_enable  enable;
    ulp_core_ptp_guard_2core_irq0_pending  pending;
    ulp_core_ptp_guard_2core_irq0_pending_irq  pending_irq;
    ulp_core_ptp_guard_2core_irq0_raw  raw;
    
} ulp_core_ptp_guard_2core_irq0;


typedef struct {
    ulp_core_ptp_guard_2core_version  version;
    
    union {
        ulp_core_ptp_guard_2core_config0 s;
        uint8_t filler[0x8];
    } config0;
    
    union {
        ulp_core_ptp_guard_2core_stats0 s;
        uint8_t filler[0x10];
    } stats0;
    
    union {
        ulp_core_ptp_guard_2core_irq0 s;
        uint8_t filler[0x10];
    } irq0;
    
} ulp_core_ptp_guard_2core;


/*section : ptp_guard_2phy */

/*section : config0 */

/*section : stats0 */

/*section : irq0 */

/*section : irq0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv30 : 2;
            uint32_t core_clk_mode : 1;           /* 29 SW=rw HW=na 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=rw HW=na 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=rw HW=na 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=rw HW=na 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=rw HW=na 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=rw HW=na 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=rw HW=na 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=rw HW=na 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=rw HW=na 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=rw HW=na 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=rw HW=na 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=rw HW=na 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=rw HW=na 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=rw HW=na 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=rw HW=na 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=rw HW=na 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=rw HW=na 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=rw HW=na 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=rw HW=na 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=rw HW=na 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=rw HW=na 0x0 */
            uint32_t core_clk_mode : 1;           /* 29 SW=rw HW=na 0x0 */
            uint32_t resv30 : 2;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq0_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv30 : 2;
            uint32_t core_clk_mode : 1;           /* 29 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=r/w1c HW=wo 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=r/w1c HW=wo 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=r/w1c HW=wo 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=r/w1c HW=wo 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=r/w1c HW=wo 0x0 */
            uint32_t core_clk_mode : 1;           /* 29 SW=r/w1c HW=wo 0x0 */
            uint32_t resv30 : 2;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq0_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv30 : 2;
            uint32_t core_clk_mode : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=ro HW=na 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=ro HW=na 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=ro HW=na 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=ro HW=na 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=ro HW=na 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=ro HW=na 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=ro HW=na 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=ro HW=na 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=ro HW=na 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=ro HW=na 0x0 */
            uint32_t core_clk_mode : 1;           /* 29 SW=ro HW=na 0x0 */
            uint32_t resv30 : 2;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq0_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv30 : 2;
            uint32_t core_clk_mode : 1;           /* 29 SW=ro HW=wo 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=ro HW=wo 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=ro HW=wo 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=ro HW=wo 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=ro HW=wo 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=ro HW=wo 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=ro HW=wo 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=ro HW=wo 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=ro HW=wo 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=ro HW=wo 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=ro HW=wo 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tx_lfps_cnt_in_err : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t rx_lfps_cnt_in_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t tx_framer_ptp_violated : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t link_training_ptp_violated : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t link_command_ptp_violated : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t lmp_ptp_violated : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_overflow : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t link_command_rx_event_fifo_underflow : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_overflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t lmp_rx_event_fifo_underflow : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t remote_rx_hdr_buff_crdt_cnt_in_err : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t rx_termination_det : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t in_warm_reset : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t completed_warm_reset : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t in_hot_reset : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t completed_hot_reset : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t u1_entry_received : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t u1_entry_rejected : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t in_u1 : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t u2_entry_received : 1;           /* 19 SW=ro HW=wo 0x0 */
            uint32_t u2_entry_rejected : 1;           /* 20 SW=ro HW=wo 0x0 */
            uint32_t in_u2 : 1;           /* 21 SW=ro HW=wo 0x0 */
            uint32_t u3_entry_received : 1;           /* 22 SW=ro HW=wo 0x0 */
            uint32_t u3_entry_failed : 1;           /* 23 SW=ro HW=wo 0x0 */
            uint32_t in_u3 : 1;           /* 24 SW=ro HW=wo 0x0 */
            uint32_t u3_exit_initiated : 1;           /* 25 SW=ro HW=wo 0x0 */
            uint32_t u3_as_master_exit_failed : 1;           /* 26 SW=ro HW=wo 0x0 */
            uint32_t u3_as_slave_exit_failed : 1;           /* 27 SW=ro HW=wo 0x0 */
            uint32_t u3_exit_completed : 1;           /* 28 SW=ro HW=wo 0x0 */
            uint32_t core_clk_mode : 1;           /* 29 SW=ro HW=wo 0x0 */
            uint32_t resv30 : 2;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq0_raw;

typedef struct {
    ulp_core_irq0_enable  enable;
    ulp_core_irq0_pending  pending;
    ulp_core_irq0_pending_irq  pending_irq;
    ulp_core_irq0_raw  raw;
    
    
    
} ulp_core_irq0;


/*section : irq1 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t in_recovery : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t in_inactive : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t in_inactive : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t in_recovery : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq1_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t in_recovery : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t in_inactive : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t in_inactive : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t in_recovery : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq1_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t in_recovery : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t in_inactive : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t in_inactive : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t in_recovery : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq1_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t in_recovery : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t in_inactive : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t in_inactive : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t in_rx_detect : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t in_polling : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t in_u0 : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t in_disabled : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t in_compliance : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t in_loopback : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t in_recovery : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} ulp_core_irq1_raw;

typedef struct {
    ulp_core_irq1_enable  enable;
    ulp_core_irq1_pending  pending;
    ulp_core_irq1_pending_irq  pending_irq;
    ulp_core_irq1_raw  raw;
    
    
    
} ulp_core_irq1;


typedef struct {
    ulp_core_version  version;
    ulp_core_configuration  configuration;
    ulp_core_control  control;
    ulp_core_timer_correction  timer_correction;
    ulp_core_ltssm_state  ltssm_state;
    
    union {
        ulp_core_stats0 s;
        uint8_t filler[0x50];
    } stats0;
    
    union {
        ulp_core_ptp_guard_2core s;
        uint8_t filler[0x2C];
    } ptp_guard_2core;
    
    union {
        ulp_core_ptp_guard_2core s;
        uint8_t filler[0x2C];
    } ptp_guard_2phy;
    
    union {
        ulp_core_irq0 s;
        uint8_t filler[0x10];
    } irq0;
    
    union {
        ulp_core_irq1 s;
        uint8_t filler[0x10];
    } irq1;
    
    
    uint8_t filler11[0x124];
    
    
} ulp_core_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define ulp_core_version_READMASK 0xFFFFFF
#define ulp_core_version_WRITEMASK 0x0
#define ulp_core_version_VOLATILEMASK 0x0
#define ulp_core_version_RESETMASK 0xFFFFFF
#define ulp_core_version_DEFAULT 0x00090000

#define ulp_core_configuration_READMASK 0x1FF
#define ulp_core_configuration_WRITEMASK 0x1FF
#define ulp_core_configuration_VOLATILEMASK 0x0
#define ulp_core_configuration_RESETMASK 0x1FF
#define ulp_core_configuration_DEFAULT 0x00000180

#define ulp_core_control_READMASK 0x3FFFFF
#define ulp_core_control_WRITEMASK 0x3FFFFF
#define ulp_core_control_VOLATILEMASK 0x0
#define ulp_core_control_RESETMASK 0x3FFFFF
#define ulp_core_control_DEFAULT 0x00000800

#define ulp_core_timer_correction_READMASK 0x3FF
#define ulp_core_timer_correction_WRITEMASK 0x3FF
#define ulp_core_timer_correction_VOLATILEMASK 0x0
#define ulp_core_timer_correction_RESETMASK 0x3FF
#define ulp_core_timer_correction_DEFAULT 0x00000042

#define ulp_core_ltssm_state_READMASK 0xFF
#define ulp_core_ltssm_state_WRITEMASK 0x0
#define ulp_core_ltssm_state_VOLATILEMASK 0xFF
#define ulp_core_ltssm_state_RESETMASK 0xFF
#define ulp_core_ltssm_state_DEFAULT 0x00000000

#define ulp_core_stats0_rd2clr_config_READMASK 0x7FFFF
#define ulp_core_stats0_rd2clr_config_WRITEMASK 0x7FFFF
#define ulp_core_stats0_rd2clr_config_VOLATILEMASK 0x0
#define ulp_core_stats0_rd2clr_config_RESETMASK 0x7FFFF
#define ulp_core_stats0_rd2clr_config_DEFAULT 0x00000000

#define ulp_core_stats0_tx_lfps_cnt_in_err_READMASK 0xFF
#define ulp_core_stats0_tx_lfps_cnt_in_err_WRITEMASK 0x0
#define ulp_core_stats0_tx_lfps_cnt_in_err_VOLATILEMASK 0xFF
#define ulp_core_stats0_tx_lfps_cnt_in_err_RESETMASK 0xFF
#define ulp_core_stats0_tx_lfps_cnt_in_err_DEFAULT 0x00000000

#define ulp_core_stats0_rx_lfps_cnt_in_err_READMASK 0xFF
#define ulp_core_stats0_rx_lfps_cnt_in_err_WRITEMASK 0x0
#define ulp_core_stats0_rx_lfps_cnt_in_err_VOLATILEMASK 0xFF
#define ulp_core_stats0_rx_lfps_cnt_in_err_RESETMASK 0xFF
#define ulp_core_stats0_rx_lfps_cnt_in_err_DEFAULT 0x00000000

#define ulp_core_stats0_tx_framer_ptp_violated_READMASK 0xFF
#define ulp_core_stats0_tx_framer_ptp_violated_WRITEMASK 0x0
#define ulp_core_stats0_tx_framer_ptp_violated_VOLATILEMASK 0xFF
#define ulp_core_stats0_tx_framer_ptp_violated_RESETMASK 0xFF
#define ulp_core_stats0_tx_framer_ptp_violated_DEFAULT 0x00000000

#define ulp_core_stats0_link_training_ptp_violated_READMASK 0xFF
#define ulp_core_stats0_link_training_ptp_violated_WRITEMASK 0x0
#define ulp_core_stats0_link_training_ptp_violated_VOLATILEMASK 0xFF
#define ulp_core_stats0_link_training_ptp_violated_RESETMASK 0xFF
#define ulp_core_stats0_link_training_ptp_violated_DEFAULT 0x00000000

#define ulp_core_stats0_link_command_ptp_violated_READMASK 0xFF
#define ulp_core_stats0_link_command_ptp_violated_WRITEMASK 0x0
#define ulp_core_stats0_link_command_ptp_violated_VOLATILEMASK 0xFF
#define ulp_core_stats0_link_command_ptp_violated_RESETMASK 0xFF
#define ulp_core_stats0_link_command_ptp_violated_DEFAULT 0x00000000

#define ulp_core_stats0_lmp_ptp_violated_READMASK 0xFF
#define ulp_core_stats0_lmp_ptp_violated_WRITEMASK 0x0
#define ulp_core_stats0_lmp_ptp_violated_VOLATILEMASK 0xFF
#define ulp_core_stats0_lmp_ptp_violated_RESETMASK 0xFF
#define ulp_core_stats0_lmp_ptp_violated_DEFAULT 0x00000000

#define ulp_core_stats0_link_command_rx_event_fifo_overflow_READMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_WRITEMASK 0x0
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_VOLATILEMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_RESETMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_DEFAULT 0x00000000

#define ulp_core_stats0_link_command_rx_event_fifo_underflow_READMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_WRITEMASK 0x0
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_VOLATILEMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_RESETMASK 0xFF
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_DEFAULT 0x00000000

#define ulp_core_stats0_lmp_rx_event_fifo_overflow_READMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_WRITEMASK 0x0
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_VOLATILEMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_RESETMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_DEFAULT 0x00000000

#define ulp_core_stats0_lmp_rx_event_fifo_underflow_READMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_WRITEMASK 0x0
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_VOLATILEMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_RESETMASK 0xFF
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_DEFAULT 0x00000000

#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_READMASK 0xFF
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_WRITEMASK 0x0
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_VOLATILEMASK 0xFF
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_RESETMASK 0xFF
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_DEFAULT 0x00000000

#define ulp_core_stats0_to_phy_out_sop_READMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_sop_WRITEMASK 0x0
#define ulp_core_stats0_to_phy_out_sop_VOLATILEMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_sop_RESETMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_sop_DEFAULT 0x00000000

#define ulp_core_stats0_to_phy_out_eop_READMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_eop_WRITEMASK 0x0
#define ulp_core_stats0_to_phy_out_eop_VOLATILEMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_eop_RESETMASK 0xFFFFFFFF
#define ulp_core_stats0_to_phy_out_eop_DEFAULT 0x00000000

#define ulp_core_stats0_go2_u0_from_recovery_READMASK 0xFFFF
#define ulp_core_stats0_go2_u0_from_recovery_WRITEMASK 0x0
#define ulp_core_stats0_go2_u0_from_recovery_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_go2_u0_from_recovery_RESETMASK 0xFFFF
#define ulp_core_stats0_go2_u0_from_recovery_DEFAULT 0x00000000

#define ulp_core_stats0_rx_go_recovery_READMASK 0xFFFF
#define ulp_core_stats0_rx_go_recovery_WRITEMASK 0x0
#define ulp_core_stats0_rx_go_recovery_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_rx_go_recovery_RESETMASK 0xFFFF
#define ulp_core_stats0_rx_go_recovery_DEFAULT 0x00000000

#define ulp_core_stats0_snt_lrty_READMASK 0xFFFF
#define ulp_core_stats0_snt_lrty_WRITEMASK 0x0
#define ulp_core_stats0_snt_lrty_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_snt_lrty_RESETMASK 0xFFFF
#define ulp_core_stats0_snt_lrty_DEFAULT 0x00000000

#define ulp_core_stats0_snt_lbad_READMASK 0xFFFF
#define ulp_core_stats0_snt_lbad_WRITEMASK 0x0
#define ulp_core_stats0_snt_lbad_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_snt_lbad_RESETMASK 0xFFFF
#define ulp_core_stats0_snt_lbad_DEFAULT 0x00000000

#define ulp_core_stats0_rcvd_lrty_READMASK 0xFFFF
#define ulp_core_stats0_rcvd_lrty_WRITEMASK 0x0
#define ulp_core_stats0_rcvd_lrty_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_rcvd_lrty_RESETMASK 0xFFFF
#define ulp_core_stats0_rcvd_lrty_DEFAULT 0x00000000

#define ulp_core_stats0_rcvd_lbad_READMASK 0xFFFF
#define ulp_core_stats0_rcvd_lbad_WRITEMASK 0x0
#define ulp_core_stats0_rcvd_lbad_VOLATILEMASK 0xFFFF
#define ulp_core_stats0_rcvd_lbad_RESETMASK 0xFFFF
#define ulp_core_stats0_rcvd_lbad_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_version_READMASK 0xFFFFFF
#define ulp_core_ptp_guard_2core_version_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_version_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2core_version_RESETMASK 0xFFFFFF
#define ulp_core_ptp_guard_2core_version_DEFAULT 0x00030300

#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_READMASK 0x3
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_WRITEMASK 0x1
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_VOLATILEMASK 0x2
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_RESETMASK 0x3
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_DEFAULT 0x00000001

#define ulp_core_ptp_guard_2core_config0_max_cycles_READMASK 0xFFFFF
#define ulp_core_ptp_guard_2core_config0_max_cycles_WRITEMASK 0xFFFFF
#define ulp_core_ptp_guard_2core_config0_max_cycles_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2core_config0_max_cycles_RESETMASK 0xFFFFF
#define ulp_core_ptp_guard_2core_config0_max_cycles_DEFAULT 0x00030000

#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_READMASK 0x7
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_WRITEMASK 0x7
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_RESETMASK 0x7
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_irq0_enable_READMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_enable_WRITEMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_enable_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2core_irq0_enable_RESETMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_enable_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_irq0_pending_READMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_WRITEMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_VOLATILEMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_RESETMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_irq0_pending_irq_READMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_irq_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_irq0_pending_irq_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2core_irq0_pending_irq_RESETMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_pending_irq_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2core_irq0_raw_READMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_raw_WRITEMASK 0x0
#define ulp_core_ptp_guard_2core_irq0_raw_VOLATILEMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_raw_RESETMASK 0x7
#define ulp_core_ptp_guard_2core_irq0_raw_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_version_READMASK 0xFFFFFF
#define ulp_core_ptp_guard_2phy_version_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_version_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2phy_version_RESETMASK 0xFFFFFF
#define ulp_core_ptp_guard_2phy_version_DEFAULT 0x00030300

#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_READMASK 0x3
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_WRITEMASK 0x1
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_VOLATILEMASK 0x2
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_RESETMASK 0x3
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_DEFAULT 0x00000001

#define ulp_core_ptp_guard_2phy_config0_max_cycles_READMASK 0xFFFFF
#define ulp_core_ptp_guard_2phy_config0_max_cycles_WRITEMASK 0xFFFFF
#define ulp_core_ptp_guard_2phy_config0_max_cycles_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2phy_config0_max_cycles_RESETMASK 0xFFFFF
#define ulp_core_ptp_guard_2phy_config0_max_cycles_DEFAULT 0x00030000

#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_READMASK 0x7
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_WRITEMASK 0x7
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_RESETMASK 0x7
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_READMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_VOLATILEMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_RESETMASK 0xFFFF
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_irq0_enable_READMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_enable_WRITEMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_enable_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2phy_irq0_enable_RESETMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_enable_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_irq0_pending_READMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_WRITEMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_VOLATILEMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_RESETMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_irq0_pending_irq_READMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_VOLATILEMASK 0x0
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_RESETMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_DEFAULT 0x00000000

#define ulp_core_ptp_guard_2phy_irq0_raw_READMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_raw_WRITEMASK 0x0
#define ulp_core_ptp_guard_2phy_irq0_raw_VOLATILEMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_raw_RESETMASK 0x7
#define ulp_core_ptp_guard_2phy_irq0_raw_DEFAULT 0x00000000

#define ulp_core_irq0_enable_READMASK 0x3FFFFFFF
#define ulp_core_irq0_enable_WRITEMASK 0x3FFFFFFF
#define ulp_core_irq0_enable_VOLATILEMASK 0x0
#define ulp_core_irq0_enable_RESETMASK 0x3FFFFFFF
#define ulp_core_irq0_enable_DEFAULT 0x00000000

#define ulp_core_irq0_pending_READMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_WRITEMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_VOLATILEMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_RESETMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_DEFAULT 0x00000000

#define ulp_core_irq0_pending_irq_READMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_irq_WRITEMASK 0x0
#define ulp_core_irq0_pending_irq_VOLATILEMASK 0x0
#define ulp_core_irq0_pending_irq_RESETMASK 0x3FFFFFFF
#define ulp_core_irq0_pending_irq_DEFAULT 0x00000000

#define ulp_core_irq0_raw_READMASK 0x3FFFFFFF
#define ulp_core_irq0_raw_WRITEMASK 0x0
#define ulp_core_irq0_raw_VOLATILEMASK 0x3FFFFFFF
#define ulp_core_irq0_raw_RESETMASK 0x3FFFFFFF
#define ulp_core_irq0_raw_DEFAULT 0x00000000

#define ulp_core_irq1_enable_READMASK 0xFF
#define ulp_core_irq1_enable_WRITEMASK 0xFF
#define ulp_core_irq1_enable_VOLATILEMASK 0x0
#define ulp_core_irq1_enable_RESETMASK 0xFF
#define ulp_core_irq1_enable_DEFAULT 0x00000000

#define ulp_core_irq1_pending_READMASK 0xFF
#define ulp_core_irq1_pending_WRITEMASK 0xFF
#define ulp_core_irq1_pending_VOLATILEMASK 0xFF
#define ulp_core_irq1_pending_RESETMASK 0xFF
#define ulp_core_irq1_pending_DEFAULT 0x00000000

#define ulp_core_irq1_pending_irq_READMASK 0xFF
#define ulp_core_irq1_pending_irq_WRITEMASK 0x0
#define ulp_core_irq1_pending_irq_VOLATILEMASK 0x0
#define ulp_core_irq1_pending_irq_RESETMASK 0xFF
#define ulp_core_irq1_pending_irq_DEFAULT 0x00000000

#define ulp_core_irq1_raw_READMASK 0xFF
#define ulp_core_irq1_raw_WRITEMASK 0x0
#define ulp_core_irq1_raw_VOLATILEMASK 0xFF
#define ulp_core_irq1_raw_RESETMASK 0xFF
#define ulp_core_irq1_raw_DEFAULT 0x00000000

#define ulp_core_s_SIZE 0x200
#define ulp_core_version_SIZE 0x4
#define ulp_core_configuration_SIZE 0x4
#define ulp_core_control_SIZE 0x4
#define ulp_core_timer_correction_SIZE 0x4
#define ulp_core_ltssm_state_SIZE 0x4
#define ulp_core_stats0_SIZE 0x50
#define ulp_core_stats0_rd2clr_config_SIZE 0x4
#define ulp_core_stats0_tx_lfps_cnt_in_err_SIZE 0x4
#define ulp_core_stats0_rx_lfps_cnt_in_err_SIZE 0x4
#define ulp_core_stats0_tx_framer_ptp_violated_SIZE 0x4
#define ulp_core_stats0_link_training_ptp_violated_SIZE 0x4
#define ulp_core_stats0_link_command_ptp_violated_SIZE 0x4
#define ulp_core_stats0_lmp_ptp_violated_SIZE 0x4
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_SIZE 0x4
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_SIZE 0x4
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_SIZE 0x4
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_SIZE 0x4
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_SIZE 0x4
#define ulp_core_stats0_to_phy_out_sop_SIZE 0x4
#define ulp_core_stats0_to_phy_out_eop_SIZE 0x4
#define ulp_core_stats0_go2_u0_from_recovery_SIZE 0x4
#define ulp_core_stats0_rx_go_recovery_SIZE 0x4
#define ulp_core_stats0_snt_lrty_SIZE 0x4
#define ulp_core_stats0_snt_lbad_SIZE 0x4
#define ulp_core_stats0_rcvd_lrty_SIZE 0x4
#define ulp_core_stats0_rcvd_lbad_SIZE 0x4
#define ulp_core_ptp_guard_2core_SIZE 0x2C
#define ulp_core_ptp_guard_2core_version_SIZE 0x4
#define ulp_core_ptp_guard_2core_config0_SIZE 0x8
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_SIZE 0x4
#define ulp_core_ptp_guard_2core_config0_max_cycles_SIZE 0x4
#define ulp_core_ptp_guard_2core_stats0_SIZE 0x10
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_SIZE 0x4
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_SIZE 0x4
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_SIZE 0x4
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_SIZE 0x4
#define ulp_core_ptp_guard_2core_irq0_SIZE 0x10
#define ulp_core_ptp_guard_2core_irq0_enable_SIZE 0x4
#define ulp_core_ptp_guard_2core_irq0_pending_SIZE 0x4
#define ulp_core_ptp_guard_2core_irq0_pending_irq_SIZE 0x4
#define ulp_core_ptp_guard_2core_irq0_raw_SIZE 0x4
#define ulp_core_ptp_guard_2phy_SIZE 0x2C
#define ulp_core_ptp_guard_2phy_version_SIZE 0x4
#define ulp_core_ptp_guard_2phy_config0_SIZE 0x8
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_SIZE 0x4
#define ulp_core_ptp_guard_2phy_config0_max_cycles_SIZE 0x4
#define ulp_core_ptp_guard_2phy_stats0_SIZE 0x10
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_SIZE 0x4
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_SIZE 0x4
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_SIZE 0x4
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_SIZE 0x4
#define ulp_core_ptp_guard_2phy_irq0_SIZE 0x10
#define ulp_core_ptp_guard_2phy_irq0_enable_SIZE 0x4
#define ulp_core_ptp_guard_2phy_irq0_pending_SIZE 0x4
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_SIZE 0x4
#define ulp_core_ptp_guard_2phy_irq0_raw_SIZE 0x4
#define ulp_core_irq0_SIZE 0x10
#define ulp_core_irq0_enable_SIZE 0x4
#define ulp_core_irq0_pending_SIZE 0x4
#define ulp_core_irq0_pending_irq_SIZE 0x4
#define ulp_core_irq0_raw_SIZE 0x4
#define ulp_core_irq1_SIZE 0x10
#define ulp_core_irq1_enable_SIZE 0x4
#define ulp_core_irq1_pending_SIZE 0x4
#define ulp_core_irq1_pending_irq_SIZE 0x4
#define ulp_core_irq1_raw_SIZE 0x4

#define ulp_core_s_OFFSET 0x0
#define ulp_core_version_OFFSET 0x0
#define ulp_core_configuration_OFFSET 0x4
#define ulp_core_control_OFFSET 0x8
#define ulp_core_timer_correction_OFFSET 0xC
#define ulp_core_ltssm_state_OFFSET 0x10
#define ulp_core_stats0_OFFSET 0x14
#define ulp_core_stats0_rd2clr_config_OFFSET 0x0
#define ulp_core_stats0_tx_lfps_cnt_in_err_OFFSET 0x4
#define ulp_core_stats0_rx_lfps_cnt_in_err_OFFSET 0x8
#define ulp_core_stats0_tx_framer_ptp_violated_OFFSET 0xC
#define ulp_core_stats0_link_training_ptp_violated_OFFSET 0x10
#define ulp_core_stats0_link_command_ptp_violated_OFFSET 0x14
#define ulp_core_stats0_lmp_ptp_violated_OFFSET 0x18
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_OFFSET 0x1C
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_OFFSET 0x20
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_OFFSET 0x24
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_OFFSET 0x28
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_OFFSET 0x2C
#define ulp_core_stats0_to_phy_out_sop_OFFSET 0x30
#define ulp_core_stats0_to_phy_out_eop_OFFSET 0x34
#define ulp_core_stats0_go2_u0_from_recovery_OFFSET 0x38
#define ulp_core_stats0_rx_go_recovery_OFFSET 0x3C
#define ulp_core_stats0_snt_lrty_OFFSET 0x40
#define ulp_core_stats0_snt_lbad_OFFSET 0x44
#define ulp_core_stats0_rcvd_lrty_OFFSET 0x48
#define ulp_core_stats0_rcvd_lbad_OFFSET 0x4C
#define ulp_core_ptp_guard_2core_OFFSET 0x64
#define ulp_core_ptp_guard_2core_version_OFFSET 0x0
#define ulp_core_ptp_guard_2core_config0_OFFSET 0x4
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_OFFSET 0x0
#define ulp_core_ptp_guard_2core_config0_max_cycles_OFFSET 0x4
#define ulp_core_ptp_guard_2core_stats0_OFFSET 0xC
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_OFFSET 0x0
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_OFFSET 0x4
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_OFFSET 0x8
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_OFFSET 0xC
#define ulp_core_ptp_guard_2core_irq0_OFFSET 0x1C
#define ulp_core_ptp_guard_2core_irq0_enable_OFFSET 0x0
#define ulp_core_ptp_guard_2core_irq0_pending_OFFSET 0x4
#define ulp_core_ptp_guard_2core_irq0_pending_irq_OFFSET 0x8
#define ulp_core_ptp_guard_2core_irq0_raw_OFFSET 0xC
#define ulp_core_ptp_guard_2phy_OFFSET 0x90
#define ulp_core_ptp_guard_2phy_version_OFFSET 0x0
#define ulp_core_ptp_guard_2phy_config0_OFFSET 0x4
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_OFFSET 0x0
#define ulp_core_ptp_guard_2phy_config0_max_cycles_OFFSET 0x4
#define ulp_core_ptp_guard_2phy_stats0_OFFSET 0xC
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_OFFSET 0x0
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_OFFSET 0x4
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_OFFSET 0x8
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_OFFSET 0xC
#define ulp_core_ptp_guard_2phy_irq0_OFFSET 0x1C
#define ulp_core_ptp_guard_2phy_irq0_enable_OFFSET 0x0
#define ulp_core_ptp_guard_2phy_irq0_pending_OFFSET 0x4
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_OFFSET 0x8
#define ulp_core_ptp_guard_2phy_irq0_raw_OFFSET 0xC
#define ulp_core_irq0_OFFSET 0xBC
#define ulp_core_irq0_enable_OFFSET 0x0
#define ulp_core_irq0_pending_OFFSET 0x4
#define ulp_core_irq0_pending_irq_OFFSET 0x8
#define ulp_core_irq0_raw_OFFSET 0xC
#define ulp_core_irq1_OFFSET 0xCC
#define ulp_core_irq1_enable_OFFSET 0x0
#define ulp_core_irq1_pending_OFFSET 0x4
#define ulp_core_irq1_pending_irq_OFFSET 0x8
#define ulp_core_irq1_raw_OFFSET 0xC

#define ulp_core_s_ADDRESS 0x000
#define ulp_core_version_ADDRESS 0x000
#define ulp_core_configuration_ADDRESS 0x004
#define ulp_core_control_ADDRESS 0x008
#define ulp_core_timer_correction_ADDRESS 0x00C
#define ulp_core_ltssm_state_ADDRESS 0x010
#define ulp_core_stats0_ADDRESS 0x014
#define ulp_core_stats0_rd2clr_config_ADDRESS 0x014
#define ulp_core_stats0_tx_lfps_cnt_in_err_ADDRESS 0x018
#define ulp_core_stats0_rx_lfps_cnt_in_err_ADDRESS 0x01C
#define ulp_core_stats0_tx_framer_ptp_violated_ADDRESS 0x020
#define ulp_core_stats0_link_training_ptp_violated_ADDRESS 0x024
#define ulp_core_stats0_link_command_ptp_violated_ADDRESS 0x028
#define ulp_core_stats0_lmp_ptp_violated_ADDRESS 0x02C
#define ulp_core_stats0_link_command_rx_event_fifo_overflow_ADDRESS 0x030
#define ulp_core_stats0_link_command_rx_event_fifo_underflow_ADDRESS 0x034
#define ulp_core_stats0_lmp_rx_event_fifo_overflow_ADDRESS 0x038
#define ulp_core_stats0_lmp_rx_event_fifo_underflow_ADDRESS 0x03C
#define ulp_core_stats0_remote_rx_hdr_buff_crdt_cnt_in_err_ADDRESS 0x040
#define ulp_core_stats0_to_phy_out_sop_ADDRESS 0x044
#define ulp_core_stats0_to_phy_out_eop_ADDRESS 0x048
#define ulp_core_stats0_go2_u0_from_recovery_ADDRESS 0x04C
#define ulp_core_stats0_rx_go_recovery_ADDRESS 0x050
#define ulp_core_stats0_snt_lrty_ADDRESS 0x054
#define ulp_core_stats0_snt_lbad_ADDRESS 0x058
#define ulp_core_stats0_rcvd_lrty_ADDRESS 0x05C
#define ulp_core_stats0_rcvd_lbad_ADDRESS 0x060
#define ulp_core_ptp_guard_2core_ADDRESS 0x064
#define ulp_core_ptp_guard_2core_version_ADDRESS 0x064
#define ulp_core_ptp_guard_2core_config0_ADDRESS 0x068
#define ulp_core_ptp_guard_2core_config0_fix_ptp_violations_ADDRESS 0x068
#define ulp_core_ptp_guard_2core_config0_max_cycles_ADDRESS 0x06C
#define ulp_core_ptp_guard_2core_stats0_ADDRESS 0x070
#define ulp_core_ptp_guard_2core_stats0_rd2clr_config_ADDRESS 0x070
#define ulp_core_ptp_guard_2core_stats0_missing_sop_err_ADDRESS 0x074
#define ulp_core_ptp_guard_2core_stats0_missing_eop_err_ADDRESS 0x078
#define ulp_core_ptp_guard_2core_stats0_max_cycle_err_ADDRESS 0x07C
#define ulp_core_ptp_guard_2core_irq0_ADDRESS 0x080
#define ulp_core_ptp_guard_2core_irq0_enable_ADDRESS 0x080
#define ulp_core_ptp_guard_2core_irq0_pending_ADDRESS 0x084
#define ulp_core_ptp_guard_2core_irq0_pending_irq_ADDRESS 0x088
#define ulp_core_ptp_guard_2core_irq0_raw_ADDRESS 0x08C
#define ulp_core_ptp_guard_2phy_ADDRESS 0x090
#define ulp_core_ptp_guard_2phy_version_ADDRESS 0x090
#define ulp_core_ptp_guard_2phy_config0_ADDRESS 0x094
#define ulp_core_ptp_guard_2phy_config0_fix_ptp_violations_ADDRESS 0x094
#define ulp_core_ptp_guard_2phy_config0_max_cycles_ADDRESS 0x098
#define ulp_core_ptp_guard_2phy_stats0_ADDRESS 0x09C
#define ulp_core_ptp_guard_2phy_stats0_rd2clr_config_ADDRESS 0x09C
#define ulp_core_ptp_guard_2phy_stats0_missing_sop_err_ADDRESS 0x0A0
#define ulp_core_ptp_guard_2phy_stats0_missing_eop_err_ADDRESS 0x0A4
#define ulp_core_ptp_guard_2phy_stats0_max_cycle_err_ADDRESS 0x0A8
#define ulp_core_ptp_guard_2phy_irq0_ADDRESS 0x0AC
#define ulp_core_ptp_guard_2phy_irq0_enable_ADDRESS 0x0AC
#define ulp_core_ptp_guard_2phy_irq0_pending_ADDRESS 0x0B0
#define ulp_core_ptp_guard_2phy_irq0_pending_irq_ADDRESS 0x0B4
#define ulp_core_ptp_guard_2phy_irq0_raw_ADDRESS 0x0B8
#define ulp_core_irq0_ADDRESS 0x0BC
#define ulp_core_irq0_enable_ADDRESS 0x0BC
#define ulp_core_irq0_pending_ADDRESS 0x0C0
#define ulp_core_irq0_pending_irq_ADDRESS 0x0C4
#define ulp_core_irq0_raw_ADDRESS 0x0C8
#define ulp_core_irq1_ADDRESS 0x0CC
#define ulp_core_irq1_enable_ADDRESS 0x0CC
#define ulp_core_irq1_pending_ADDRESS 0x0D0
#define ulp_core_irq1_pending_irq_ADDRESS 0x0D4
#define ulp_core_irq1_raw_ADDRESS 0x0D8
#define ULP_CORE_VERSION_MAJOR_OFFSET 16
#define ULP_CORE_VERSION_MAJOR_MASK 0xFF0000
#define ULP_CORE_VERSION_MINOR_OFFSET 8
#define ULP_CORE_VERSION_MINOR_MASK 0xFF00
#define ULP_CORE_VERSION_PATCH_OFFSET 0
#define ULP_CORE_VERSION_PATCH_MASK 0xFF
#define ULP_CORE_CONFIGURATION_CREDIT_HP_TIMER_EN_OFFSET 8
#define ULP_CORE_CONFIGURATION_CREDIT_HP_TIMER_EN_MASK 0x100
#define ULP_CORE_CONFIGURATION_CREDIT_HP_TIMER_EN 0x100
#define ULP_CORE_CONFIGURATION_PENDING_HP_TIMER_EN_OFFSET 7
#define ULP_CORE_CONFIGURATION_PENDING_HP_TIMER_EN_MASK 0x80
#define ULP_CORE_CONFIGURATION_PENDING_HP_TIMER_EN 0x80
#define ULP_CORE_CONFIGURATION_INTERNAL_LOOPBACK_EN_OFFSET 6
#define ULP_CORE_CONFIGURATION_INTERNAL_LOOPBACK_EN_MASK 0x40
#define ULP_CORE_CONFIGURATION_INTERNAL_LOOPBACK_EN 0x40
#define ULP_CORE_CONFIGURATION_QUASI_SS_DISABLED_MODE_OFFSET 5
#define ULP_CORE_CONFIGURATION_QUASI_SS_DISABLED_MODE_MASK 0x20
#define ULP_CORE_CONFIGURATION_QUASI_SS_DISABLED_MODE 0x20
#define ULP_CORE_CONFIGURATION_QUASI_U3_MODE_OFFSET 4
#define ULP_CORE_CONFIGURATION_QUASI_U3_MODE_MASK 0x10
#define ULP_CORE_CONFIGURATION_QUASI_U3_MODE 0x10
#define ULP_CORE_CONFIGURATION_ALLOW_U2_OFFSET 3
#define ULP_CORE_CONFIGURATION_ALLOW_U2_MASK 0x8
#define ULP_CORE_CONFIGURATION_ALLOW_U2 0x8
#define ULP_CORE_CONFIGURATION_ALLOW_U1_OFFSET 2
#define ULP_CORE_CONFIGURATION_ALLOW_U1_MASK 0x4
#define ULP_CORE_CONFIGURATION_ALLOW_U1 0x4
#define ULP_CORE_CONFIGURATION_DFP_COMPLIANCE_MODE_EN_OFFSET 1
#define ULP_CORE_CONFIGURATION_DFP_COMPLIANCE_MODE_EN_MASK 0x2
#define ULP_CORE_CONFIGURATION_DFP_COMPLIANCE_MODE_EN 0x2
#define ULP_CORE_CONFIGURATION_USE_TRX_DETECT_QUIET_DFP_MAX_OFFSET 0
#define ULP_CORE_CONFIGURATION_USE_TRX_DETECT_QUIET_DFP_MAX_MASK 0x1
#define ULP_CORE_CONFIGURATION_USE_TRX_DETECT_QUIET_DFP_MAX 0x1
#define ULP_CORE_CONTROL_WAIT_IN_POLLING_LFPS_OFFSET 21
#define ULP_CORE_CONTROL_WAIT_IN_POLLING_LFPS_MASK 0x200000
#define ULP_CORE_CONTROL_WAIT_IN_POLLING_LFPS 0x200000
#define ULP_CORE_CONTROL_EXIT_LOW_POWER_OFFSET 20
#define ULP_CORE_CONTROL_EXIT_LOW_POWER_MASK 0x100000
#define ULP_CORE_CONTROL_EXIT_LOW_POWER 0x100000
#define ULP_CORE_CONTROL_WAIT_IN_U3_OFFSET 19
#define ULP_CORE_CONTROL_WAIT_IN_U3_MASK 0x80000
#define ULP_CORE_CONTROL_WAIT_IN_U3 0x80000
#define ULP_CORE_CONTROL_WAIT_IN_U1_U2_OFFSET 18
#define ULP_CORE_CONTROL_WAIT_IN_U1_U2_MASK 0x40000
#define ULP_CORE_CONTROL_WAIT_IN_U1_U2 0x40000
#define ULP_CORE_CONTROL_DELAY_U3_WAKEUP_OFFSET 17
#define ULP_CORE_CONTROL_DELAY_U3_WAKEUP_MASK 0x20000
#define ULP_CORE_CONTROL_DELAY_U3_WAKEUP 0x20000
#define ULP_CORE_CONTROL_GO_U3_OFFSET 16
#define ULP_CORE_CONTROL_GO_U3_MASK 0x10000
#define ULP_CORE_CONTROL_GO_U3 0x10000
#define ULP_CORE_CONTROL_GO_U2_OFFSET 15
#define ULP_CORE_CONTROL_GO_U2_MASK 0x8000
#define ULP_CORE_CONTROL_GO_U2 0x8000
#define ULP_CORE_CONTROL_GO_U1_OFFSET 14
#define ULP_CORE_CONTROL_GO_U1_MASK 0x4000
#define ULP_CORE_CONTROL_GO_U1 0x4000
#define ULP_CORE_CONTROL_WAIT_IN_HOT_RESET_OFFSET 13
#define ULP_CORE_CONTROL_WAIT_IN_HOT_RESET_MASK 0x2000
#define ULP_CORE_CONTROL_WAIT_IN_HOT_RESET 0x2000
#define ULP_CORE_CONTROL_GEN_WARM_RESET_OFFSET 12
#define ULP_CORE_CONTROL_GEN_WARM_RESET_MASK 0x1000
#define ULP_CORE_CONTROL_GEN_WARM_RESET 0x1000
#define ULP_CORE_CONTROL_ALLOW_RX_TERM_EN_HW_CLR_OFFSET 11
#define ULP_CORE_CONTROL_ALLOW_RX_TERM_EN_HW_CLR_MASK 0x800
#define ULP_CORE_CONTROL_ALLOW_RX_TERM_EN_HW_CLR 0x800
#define ULP_CORE_CONTROL_RX_TERMINATION_EN_OFFSET 10
#define ULP_CORE_CONTROL_RX_TERMINATION_EN_MASK 0x400
#define ULP_CORE_CONTROL_RX_TERMINATION_EN 0x400
#define ULP_CORE_CONTROL_GO2_SS_INACTIVE_OFFSET 9
#define ULP_CORE_CONTROL_GO2_SS_INACTIVE_MASK 0x200
#define ULP_CORE_CONTROL_GO2_SS_INACTIVE 0x200
#define ULP_CORE_CONTROL_GO2_RECOVERY_OFFSET 8
#define ULP_CORE_CONTROL_GO2_RECOVERY_MASK 0x100
#define ULP_CORE_CONTROL_GO2_RECOVERY 0x100
#define ULP_CORE_CONTROL_GO2_HOT_RESET_OFFSET 7
#define ULP_CORE_CONTROL_GO2_HOT_RESET_MASK 0x80
#define ULP_CORE_CONTROL_GO2_HOT_RESET 0x80
#define ULP_CORE_CONTROL_GO2_LOOPBACK_OFFSET 6
#define ULP_CORE_CONTROL_GO2_LOOPBACK_MASK 0x40
#define ULP_CORE_CONTROL_GO2_LOOPBACK 0x40
#define ULP_CORE_CONTROL_GO2_SS_DISABLED_OFFSET 5
#define ULP_CORE_CONTROL_GO2_SS_DISABLED_MASK 0x20
#define ULP_CORE_CONTROL_GO2_SS_DISABLED 0x20
#define ULP_CORE_CONTROL_DISABLE_SCRAMBLING_OFFSET 4
#define ULP_CORE_CONTROL_DISABLE_SCRAMBLING_MASK 0x10
#define ULP_CORE_CONTROL_DISABLE_SCRAMBLING 0x10
#define ULP_CORE_CONTROL_SET_TS2_DISABLE_SCRAMBLE_BIT_OFFSET 3
#define ULP_CORE_CONTROL_SET_TS2_DISABLE_SCRAMBLE_BIT_MASK 0x8
#define ULP_CORE_CONTROL_SET_TS2_DISABLE_SCRAMBLE_BIT 0x8
#define ULP_CORE_CONTROL_SET_TS2_LOOPBK_BIT_OFFSET 2
#define ULP_CORE_CONTROL_SET_TS2_LOOPBK_BIT_MASK 0x4
#define ULP_CORE_CONTROL_SET_TS2_LOOPBK_BIT 0x4
#define ULP_CORE_CONTROL_SET_TS2_LINK_CONFIG_FIELD_OFFSET 1
#define ULP_CORE_CONTROL_SET_TS2_LINK_CONFIG_FIELD_MASK 0x2
#define ULP_CORE_CONTROL_SET_TS2_LINK_CONFIG_FIELD 0x2
#define ULP_CORE_CONTROL_GO2_RX_DETECT_OFFSET 0
#define ULP_CORE_CONTROL_GO2_RX_DETECT_MASK 0x1
#define ULP_CORE_CONTROL_GO2_RX_DETECT 0x1
#define ULP_CORE_TIMER_CORRECTION_ADD_2_CHT_OFFSET 5
#define ULP_CORE_TIMER_CORRECTION_ADD_2_CHT_MASK 0x3E0
#define ULP_CORE_TIMER_CORRECTION_ADD_2_PHT_OFFSET 0
#define ULP_CORE_TIMER_CORRECTION_ADD_2_PHT_MASK 0x1F
#define ULP_CORE_LTSSM_STATE_MAIN_STATE_OFFSET 4
#define ULP_CORE_LTSSM_STATE_MAIN_STATE_MASK 0xF0
#define ULP_CORE_LTSSM_STATE_SUB_STATE_OFFSET 0
#define ULP_CORE_LTSSM_STATE_SUB_STATE_MASK 0xF
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LBAD_OFFSET 18
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LBAD_MASK 0x40000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LBAD 0x40000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LRTY_OFFSET 17
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LRTY_MASK 0x20000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RCVD_LRTY 0x20000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LBAD_OFFSET 16
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LBAD_MASK 0x10000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LBAD 0x10000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LRTY_OFFSET 15
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LRTY_MASK 0x8000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_SNT_LRTY 0x8000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_GO_RECOVERY_OFFSET 14
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_GO_RECOVERY_MASK 0x4000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_GO_RECOVERY 0x4000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_GO2_U0_FROM_RECOVERY_OFFSET 13
#define ULP_CORE_STATS0_RD2CLR_CONFIG_GO2_U0_FROM_RECOVERY_MASK 0x2000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_GO2_U0_FROM_RECOVERY 0x2000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_EOP_OFFSET 12
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_EOP_MASK 0x1000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_EOP 0x1000
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_SOP_OFFSET 11
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_SOP_MASK 0x800
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TO_PHY_OUT_SOP 0x800
#define ULP_CORE_STATS0_RD2CLR_CONFIG_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 10
#define ULP_CORE_STATS0_RD2CLR_CONFIG_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0x400
#define ULP_CORE_STATS0_RD2CLR_CONFIG_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR 0x400
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 9
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0x200
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_UNDERFLOW 0x200
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 8
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0x100
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_RX_EVENT_FIFO_OVERFLOW 0x100
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 7
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0x80
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW 0x80
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 6
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0x40
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW 0x40
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_PTP_VIOLATED_OFFSET 5
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_PTP_VIOLATED_MASK 0x20
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LMP_PTP_VIOLATED 0x20
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_PTP_VIOLATED_OFFSET 4
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_PTP_VIOLATED_MASK 0x10
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_COMMAND_PTP_VIOLATED 0x10
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_TRAINING_PTP_VIOLATED_OFFSET 3
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_TRAINING_PTP_VIOLATED_MASK 0x8
#define ULP_CORE_STATS0_RD2CLR_CONFIG_LINK_TRAINING_PTP_VIOLATED 0x8
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_FRAMER_PTP_VIOLATED_OFFSET 2
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_FRAMER_PTP_VIOLATED_MASK 0x4
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_FRAMER_PTP_VIOLATED 0x4
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_LFPS_CNT_IN_ERR_OFFSET 1
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_LFPS_CNT_IN_ERR_MASK 0x2
#define ULP_CORE_STATS0_RD2CLR_CONFIG_RX_LFPS_CNT_IN_ERR 0x2
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_LFPS_CNT_IN_ERR_MASK 0x1
#define ULP_CORE_STATS0_RD2CLR_CONFIG_TX_LFPS_CNT_IN_ERR 0x1
#define ULP_CORE_STATS0_TX_LFPS_CNT_IN_ERR_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_STATS0_TX_LFPS_CNT_IN_ERR_TX_LFPS_CNT_IN_ERR_MASK 0xFF
#define ULP_CORE_STATS0_RX_LFPS_CNT_IN_ERR_RX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_STATS0_RX_LFPS_CNT_IN_ERR_RX_LFPS_CNT_IN_ERR_MASK 0xFF
#define ULP_CORE_STATS0_TX_FRAMER_PTP_VIOLATED_TX_FRAMER_PTP_VIOLATED_OFFSET 0
#define ULP_CORE_STATS0_TX_FRAMER_PTP_VIOLATED_TX_FRAMER_PTP_VIOLATED_MASK 0xFF
#define ULP_CORE_STATS0_LINK_TRAINING_PTP_VIOLATED_LINK_TRAINING_PTP_VIOLATED_OFFSET 0
#define ULP_CORE_STATS0_LINK_TRAINING_PTP_VIOLATED_LINK_TRAINING_PTP_VIOLATED_MASK 0xFF
#define ULP_CORE_STATS0_LINK_COMMAND_PTP_VIOLATED_LINK_COMMAND_PTP_VIOLATED_OFFSET 0
#define ULP_CORE_STATS0_LINK_COMMAND_PTP_VIOLATED_LINK_COMMAND_PTP_VIOLATED_MASK 0xFF
#define ULP_CORE_STATS0_LMP_PTP_VIOLATED_LMP_PTP_VIOLATED_OFFSET 0
#define ULP_CORE_STATS0_LMP_PTP_VIOLATED_LMP_PTP_VIOLATED_MASK 0xFF
#define ULP_CORE_STATS0_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 0
#define ULP_CORE_STATS0_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0xFF
#define ULP_CORE_STATS0_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 0
#define ULP_CORE_STATS0_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0xFF
#define ULP_CORE_STATS0_LMP_RX_EVENT_FIFO_OVERFLOW_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 0
#define ULP_CORE_STATS0_LMP_RX_EVENT_FIFO_OVERFLOW_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0xFF
#define ULP_CORE_STATS0_LMP_RX_EVENT_FIFO_UNDERFLOW_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 0
#define ULP_CORE_STATS0_LMP_RX_EVENT_FIFO_UNDERFLOW_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0xFF
#define ULP_CORE_STATS0_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_STATS0_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0xFF
#define ULP_CORE_STATS0_TO_PHY_OUT_SOP_TO_PHY_OUT_SOP_OFFSET 0
#define ULP_CORE_STATS0_TO_PHY_OUT_SOP_TO_PHY_OUT_SOP_MASK 0xFFFFFFFF
#define ULP_CORE_STATS0_TO_PHY_OUT_EOP_TO_PHY_OUT_EOP_OFFSET 0
#define ULP_CORE_STATS0_TO_PHY_OUT_EOP_TO_PHY_OUT_EOP_MASK 0xFFFFFFFF
#define ULP_CORE_STATS0_GO2_U0_FROM_RECOVERY_GO2_U0_FROM_RECOVERY_OFFSET 0
#define ULP_CORE_STATS0_GO2_U0_FROM_RECOVERY_GO2_U0_FROM_RECOVERY_MASK 0xFFFF
#define ULP_CORE_STATS0_RX_GO_RECOVERY_RX_GO_RECOVERY_OFFSET 0
#define ULP_CORE_STATS0_RX_GO_RECOVERY_RX_GO_RECOVERY_MASK 0xFFFF
#define ULP_CORE_STATS0_SNT_LRTY_SNT_LRTY_OFFSET 0
#define ULP_CORE_STATS0_SNT_LRTY_SNT_LRTY_MASK 0xFFFF
#define ULP_CORE_STATS0_SNT_LBAD_SNT_LBAD_OFFSET 0
#define ULP_CORE_STATS0_SNT_LBAD_SNT_LBAD_MASK 0xFFFF
#define ULP_CORE_STATS0_RCVD_LRTY_RCVD_LRTY_OFFSET 0
#define ULP_CORE_STATS0_RCVD_LRTY_RCVD_LRTY_MASK 0xFFFF
#define ULP_CORE_STATS0_RCVD_LBAD_RCVD_LBAD_OFFSET 0
#define ULP_CORE_STATS0_RCVD_LBAD_RCVD_LBAD_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_MAJOR_OFFSET 16
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_MAJOR_MASK 0xFF0000
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_MINOR_OFFSET 8
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_MINOR_MASK 0xFF00
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_PATCH_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_VERSION_PATCH_MASK 0xFF
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED 0x2
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE 0x1
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_OFFSET 16
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_MASK 0xF0000
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_MAX_CYCLES_MAX_CYCLES_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_CONFIG0_MAX_CYCLES_MAX_CYCLES_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_ENABLE_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_PENDING_IRQ_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2CORE_IRQ0_RAW_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_MAJOR_OFFSET 16
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_MAJOR_MASK 0xFF0000
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_MINOR_OFFSET 8
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_MINOR_MASK 0xFF00
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_PATCH_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_VERSION_PATCH_MASK 0xFF
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED 0x2
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE 0x1
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_OFFSET 16
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_MASK 0xF0000
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_MAX_CYCLES_MAX_CYCLES_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_CONFIG0_MAX_CYCLES_MAX_CYCLES_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_MASK 0xFFFF
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_ENABLE_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_PENDING_IRQ_MISSING_SOP_ERR 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MAX_CYCLE_ERR_OFFSET 2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MAX_CYCLE_ERR_MASK 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MAX_CYCLE_ERR 0x4
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_EOP_ERR_OFFSET 1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_EOP_ERR_MASK 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_EOP_ERR 0x2
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_SOP_ERR_OFFSET 0
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_SOP_ERR_MASK 0x1
#define ULP_CORE_PTP_GUARD_2PHY_IRQ0_RAW_MISSING_SOP_ERR 0x1
#define ULP_CORE_IRQ0_ENABLE_CORE_CLK_MODE_OFFSET 29
#define ULP_CORE_IRQ0_ENABLE_CORE_CLK_MODE_MASK 0x20000000
#define ULP_CORE_IRQ0_ENABLE_CORE_CLK_MODE 0x20000000
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_COMPLETED_OFFSET 28
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_COMPLETED_MASK 0x10000000
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_COMPLETED 0x10000000
#define ULP_CORE_IRQ0_ENABLE_U3_AS_SLAVE_EXIT_FAILED_OFFSET 27
#define ULP_CORE_IRQ0_ENABLE_U3_AS_SLAVE_EXIT_FAILED_MASK 0x8000000
#define ULP_CORE_IRQ0_ENABLE_U3_AS_SLAVE_EXIT_FAILED 0x8000000
#define ULP_CORE_IRQ0_ENABLE_U3_AS_MASTER_EXIT_FAILED_OFFSET 26
#define ULP_CORE_IRQ0_ENABLE_U3_AS_MASTER_EXIT_FAILED_MASK 0x4000000
#define ULP_CORE_IRQ0_ENABLE_U3_AS_MASTER_EXIT_FAILED 0x4000000
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_INITIATED_OFFSET 25
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_INITIATED_MASK 0x2000000
#define ULP_CORE_IRQ0_ENABLE_U3_EXIT_INITIATED 0x2000000
#define ULP_CORE_IRQ0_ENABLE_IN_U3_OFFSET 24
#define ULP_CORE_IRQ0_ENABLE_IN_U3_MASK 0x1000000
#define ULP_CORE_IRQ0_ENABLE_IN_U3 0x1000000
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_FAILED_OFFSET 23
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_FAILED_MASK 0x800000
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_FAILED 0x800000
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_RECEIVED_OFFSET 22
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_RECEIVED_MASK 0x400000
#define ULP_CORE_IRQ0_ENABLE_U3_ENTRY_RECEIVED 0x400000
#define ULP_CORE_IRQ0_ENABLE_IN_U2_OFFSET 21
#define ULP_CORE_IRQ0_ENABLE_IN_U2_MASK 0x200000
#define ULP_CORE_IRQ0_ENABLE_IN_U2 0x200000
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_REJECTED_OFFSET 20
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_REJECTED_MASK 0x100000
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_REJECTED 0x100000
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_RECEIVED_OFFSET 19
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_RECEIVED_MASK 0x80000
#define ULP_CORE_IRQ0_ENABLE_U2_ENTRY_RECEIVED 0x80000
#define ULP_CORE_IRQ0_ENABLE_IN_U1_OFFSET 18
#define ULP_CORE_IRQ0_ENABLE_IN_U1_MASK 0x40000
#define ULP_CORE_IRQ0_ENABLE_IN_U1 0x40000
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_REJECTED_OFFSET 17
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_REJECTED_MASK 0x20000
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_REJECTED 0x20000
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_RECEIVED_OFFSET 16
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_RECEIVED_MASK 0x10000
#define ULP_CORE_IRQ0_ENABLE_U1_ENTRY_RECEIVED 0x10000
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_HOT_RESET_OFFSET 15
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_HOT_RESET_MASK 0x8000
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_HOT_RESET 0x8000
#define ULP_CORE_IRQ0_ENABLE_IN_HOT_RESET_OFFSET 14
#define ULP_CORE_IRQ0_ENABLE_IN_HOT_RESET_MASK 0x4000
#define ULP_CORE_IRQ0_ENABLE_IN_HOT_RESET 0x4000
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_WARM_RESET_OFFSET 13
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_WARM_RESET_MASK 0x2000
#define ULP_CORE_IRQ0_ENABLE_COMPLETED_WARM_RESET 0x2000
#define ULP_CORE_IRQ0_ENABLE_IN_WARM_RESET_OFFSET 12
#define ULP_CORE_IRQ0_ENABLE_IN_WARM_RESET_MASK 0x1000
#define ULP_CORE_IRQ0_ENABLE_IN_WARM_RESET 0x1000
#define ULP_CORE_IRQ0_ENABLE_RX_TERMINATION_DET_OFFSET 11
#define ULP_CORE_IRQ0_ENABLE_RX_TERMINATION_DET_MASK 0x800
#define ULP_CORE_IRQ0_ENABLE_RX_TERMINATION_DET 0x800
#define ULP_CORE_IRQ0_ENABLE_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 10
#define ULP_CORE_IRQ0_ENABLE_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0x400
#define ULP_CORE_IRQ0_ENABLE_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR 0x400
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 9
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0x200
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_UNDERFLOW 0x200
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 8
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0x100
#define ULP_CORE_IRQ0_ENABLE_LMP_RX_EVENT_FIFO_OVERFLOW 0x100
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 7
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0x80
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW 0x80
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 6
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0x40
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW 0x40
#define ULP_CORE_IRQ0_ENABLE_LMP_PTP_VIOLATED_OFFSET 5
#define ULP_CORE_IRQ0_ENABLE_LMP_PTP_VIOLATED_MASK 0x20
#define ULP_CORE_IRQ0_ENABLE_LMP_PTP_VIOLATED 0x20
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_PTP_VIOLATED_OFFSET 4
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_PTP_VIOLATED_MASK 0x10
#define ULP_CORE_IRQ0_ENABLE_LINK_COMMAND_PTP_VIOLATED 0x10
#define ULP_CORE_IRQ0_ENABLE_LINK_TRAINING_PTP_VIOLATED_OFFSET 3
#define ULP_CORE_IRQ0_ENABLE_LINK_TRAINING_PTP_VIOLATED_MASK 0x8
#define ULP_CORE_IRQ0_ENABLE_LINK_TRAINING_PTP_VIOLATED 0x8
#define ULP_CORE_IRQ0_ENABLE_TX_FRAMER_PTP_VIOLATED_OFFSET 2
#define ULP_CORE_IRQ0_ENABLE_TX_FRAMER_PTP_VIOLATED_MASK 0x4
#define ULP_CORE_IRQ0_ENABLE_TX_FRAMER_PTP_VIOLATED 0x4
#define ULP_CORE_IRQ0_ENABLE_RX_LFPS_CNT_IN_ERR_OFFSET 1
#define ULP_CORE_IRQ0_ENABLE_RX_LFPS_CNT_IN_ERR_MASK 0x2
#define ULP_CORE_IRQ0_ENABLE_RX_LFPS_CNT_IN_ERR 0x2
#define ULP_CORE_IRQ0_ENABLE_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_IRQ0_ENABLE_TX_LFPS_CNT_IN_ERR_MASK 0x1
#define ULP_CORE_IRQ0_ENABLE_TX_LFPS_CNT_IN_ERR 0x1
#define ULP_CORE_IRQ0_PENDING_CORE_CLK_MODE_OFFSET 29
#define ULP_CORE_IRQ0_PENDING_CORE_CLK_MODE_MASK 0x20000000
#define ULP_CORE_IRQ0_PENDING_CORE_CLK_MODE 0x20000000
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_COMPLETED_OFFSET 28
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_COMPLETED_MASK 0x10000000
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_COMPLETED 0x10000000
#define ULP_CORE_IRQ0_PENDING_U3_AS_SLAVE_EXIT_FAILED_OFFSET 27
#define ULP_CORE_IRQ0_PENDING_U3_AS_SLAVE_EXIT_FAILED_MASK 0x8000000
#define ULP_CORE_IRQ0_PENDING_U3_AS_SLAVE_EXIT_FAILED 0x8000000
#define ULP_CORE_IRQ0_PENDING_U3_AS_MASTER_EXIT_FAILED_OFFSET 26
#define ULP_CORE_IRQ0_PENDING_U3_AS_MASTER_EXIT_FAILED_MASK 0x4000000
#define ULP_CORE_IRQ0_PENDING_U3_AS_MASTER_EXIT_FAILED 0x4000000
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_INITIATED_OFFSET 25
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_INITIATED_MASK 0x2000000
#define ULP_CORE_IRQ0_PENDING_U3_EXIT_INITIATED 0x2000000
#define ULP_CORE_IRQ0_PENDING_IN_U3_OFFSET 24
#define ULP_CORE_IRQ0_PENDING_IN_U3_MASK 0x1000000
#define ULP_CORE_IRQ0_PENDING_IN_U3 0x1000000
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_FAILED_OFFSET 23
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_FAILED_MASK 0x800000
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_FAILED 0x800000
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_RECEIVED_OFFSET 22
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_RECEIVED_MASK 0x400000
#define ULP_CORE_IRQ0_PENDING_U3_ENTRY_RECEIVED 0x400000
#define ULP_CORE_IRQ0_PENDING_IN_U2_OFFSET 21
#define ULP_CORE_IRQ0_PENDING_IN_U2_MASK 0x200000
#define ULP_CORE_IRQ0_PENDING_IN_U2 0x200000
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_REJECTED_OFFSET 20
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_REJECTED_MASK 0x100000
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_REJECTED 0x100000
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_RECEIVED_OFFSET 19
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_RECEIVED_MASK 0x80000
#define ULP_CORE_IRQ0_PENDING_U2_ENTRY_RECEIVED 0x80000
#define ULP_CORE_IRQ0_PENDING_IN_U1_OFFSET 18
#define ULP_CORE_IRQ0_PENDING_IN_U1_MASK 0x40000
#define ULP_CORE_IRQ0_PENDING_IN_U1 0x40000
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_REJECTED_OFFSET 17
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_REJECTED_MASK 0x20000
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_REJECTED 0x20000
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_RECEIVED_OFFSET 16
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_RECEIVED_MASK 0x10000
#define ULP_CORE_IRQ0_PENDING_U1_ENTRY_RECEIVED 0x10000
#define ULP_CORE_IRQ0_PENDING_COMPLETED_HOT_RESET_OFFSET 15
#define ULP_CORE_IRQ0_PENDING_COMPLETED_HOT_RESET_MASK 0x8000
#define ULP_CORE_IRQ0_PENDING_COMPLETED_HOT_RESET 0x8000
#define ULP_CORE_IRQ0_PENDING_IN_HOT_RESET_OFFSET 14
#define ULP_CORE_IRQ0_PENDING_IN_HOT_RESET_MASK 0x4000
#define ULP_CORE_IRQ0_PENDING_IN_HOT_RESET 0x4000
#define ULP_CORE_IRQ0_PENDING_COMPLETED_WARM_RESET_OFFSET 13
#define ULP_CORE_IRQ0_PENDING_COMPLETED_WARM_RESET_MASK 0x2000
#define ULP_CORE_IRQ0_PENDING_COMPLETED_WARM_RESET 0x2000
#define ULP_CORE_IRQ0_PENDING_IN_WARM_RESET_OFFSET 12
#define ULP_CORE_IRQ0_PENDING_IN_WARM_RESET_MASK 0x1000
#define ULP_CORE_IRQ0_PENDING_IN_WARM_RESET 0x1000
#define ULP_CORE_IRQ0_PENDING_RX_TERMINATION_DET_OFFSET 11
#define ULP_CORE_IRQ0_PENDING_RX_TERMINATION_DET_MASK 0x800
#define ULP_CORE_IRQ0_PENDING_RX_TERMINATION_DET 0x800
#define ULP_CORE_IRQ0_PENDING_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 10
#define ULP_CORE_IRQ0_PENDING_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0x400
#define ULP_CORE_IRQ0_PENDING_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR 0x400
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 9
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0x200
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_UNDERFLOW 0x200
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 8
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0x100
#define ULP_CORE_IRQ0_PENDING_LMP_RX_EVENT_FIFO_OVERFLOW 0x100
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 7
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0x80
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW 0x80
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 6
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0x40
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW 0x40
#define ULP_CORE_IRQ0_PENDING_LMP_PTP_VIOLATED_OFFSET 5
#define ULP_CORE_IRQ0_PENDING_LMP_PTP_VIOLATED_MASK 0x20
#define ULP_CORE_IRQ0_PENDING_LMP_PTP_VIOLATED 0x20
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_PTP_VIOLATED_OFFSET 4
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_PTP_VIOLATED_MASK 0x10
#define ULP_CORE_IRQ0_PENDING_LINK_COMMAND_PTP_VIOLATED 0x10
#define ULP_CORE_IRQ0_PENDING_LINK_TRAINING_PTP_VIOLATED_OFFSET 3
#define ULP_CORE_IRQ0_PENDING_LINK_TRAINING_PTP_VIOLATED_MASK 0x8
#define ULP_CORE_IRQ0_PENDING_LINK_TRAINING_PTP_VIOLATED 0x8
#define ULP_CORE_IRQ0_PENDING_TX_FRAMER_PTP_VIOLATED_OFFSET 2
#define ULP_CORE_IRQ0_PENDING_TX_FRAMER_PTP_VIOLATED_MASK 0x4
#define ULP_CORE_IRQ0_PENDING_TX_FRAMER_PTP_VIOLATED 0x4
#define ULP_CORE_IRQ0_PENDING_RX_LFPS_CNT_IN_ERR_OFFSET 1
#define ULP_CORE_IRQ0_PENDING_RX_LFPS_CNT_IN_ERR_MASK 0x2
#define ULP_CORE_IRQ0_PENDING_RX_LFPS_CNT_IN_ERR 0x2
#define ULP_CORE_IRQ0_PENDING_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_IRQ0_PENDING_TX_LFPS_CNT_IN_ERR_MASK 0x1
#define ULP_CORE_IRQ0_PENDING_TX_LFPS_CNT_IN_ERR 0x1
#define ULP_CORE_IRQ0_PENDING_IRQ_CORE_CLK_MODE_OFFSET 29
#define ULP_CORE_IRQ0_PENDING_IRQ_CORE_CLK_MODE_MASK 0x20000000
#define ULP_CORE_IRQ0_PENDING_IRQ_CORE_CLK_MODE 0x20000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_COMPLETED_OFFSET 28
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_COMPLETED_MASK 0x10000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_COMPLETED 0x10000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_SLAVE_EXIT_FAILED_OFFSET 27
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_SLAVE_EXIT_FAILED_MASK 0x8000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_SLAVE_EXIT_FAILED 0x8000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_MASTER_EXIT_FAILED_OFFSET 26
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_MASTER_EXIT_FAILED_MASK 0x4000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_AS_MASTER_EXIT_FAILED 0x4000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_INITIATED_OFFSET 25
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_INITIATED_MASK 0x2000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_EXIT_INITIATED 0x2000000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U3_OFFSET 24
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U3_MASK 0x1000000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U3 0x1000000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_FAILED_OFFSET 23
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_FAILED_MASK 0x800000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_FAILED 0x800000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_RECEIVED_OFFSET 22
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_RECEIVED_MASK 0x400000
#define ULP_CORE_IRQ0_PENDING_IRQ_U3_ENTRY_RECEIVED 0x400000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U2_OFFSET 21
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U2_MASK 0x200000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U2 0x200000
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_REJECTED_OFFSET 20
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_REJECTED_MASK 0x100000
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_REJECTED 0x100000
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_RECEIVED_OFFSET 19
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_RECEIVED_MASK 0x80000
#define ULP_CORE_IRQ0_PENDING_IRQ_U2_ENTRY_RECEIVED 0x80000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U1_OFFSET 18
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U1_MASK 0x40000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_U1 0x40000
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_REJECTED_OFFSET 17
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_REJECTED_MASK 0x20000
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_REJECTED 0x20000
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_RECEIVED_OFFSET 16
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_RECEIVED_MASK 0x10000
#define ULP_CORE_IRQ0_PENDING_IRQ_U1_ENTRY_RECEIVED 0x10000
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_HOT_RESET_OFFSET 15
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_HOT_RESET_MASK 0x8000
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_HOT_RESET 0x8000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_HOT_RESET_OFFSET 14
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_HOT_RESET_MASK 0x4000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_HOT_RESET 0x4000
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_WARM_RESET_OFFSET 13
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_WARM_RESET_MASK 0x2000
#define ULP_CORE_IRQ0_PENDING_IRQ_COMPLETED_WARM_RESET 0x2000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_WARM_RESET_OFFSET 12
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_WARM_RESET_MASK 0x1000
#define ULP_CORE_IRQ0_PENDING_IRQ_IN_WARM_RESET 0x1000
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_TERMINATION_DET_OFFSET 11
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_TERMINATION_DET_MASK 0x800
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_TERMINATION_DET 0x800
#define ULP_CORE_IRQ0_PENDING_IRQ_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 10
#define ULP_CORE_IRQ0_PENDING_IRQ_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0x400
#define ULP_CORE_IRQ0_PENDING_IRQ_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR 0x400
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 9
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0x200
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_UNDERFLOW 0x200
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 8
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0x100
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_RX_EVENT_FIFO_OVERFLOW 0x100
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 7
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0x80
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW 0x80
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 6
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0x40
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW 0x40
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_PTP_VIOLATED_OFFSET 5
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_PTP_VIOLATED_MASK 0x20
#define ULP_CORE_IRQ0_PENDING_IRQ_LMP_PTP_VIOLATED 0x20
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_PTP_VIOLATED_OFFSET 4
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_PTP_VIOLATED_MASK 0x10
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_COMMAND_PTP_VIOLATED 0x10
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_TRAINING_PTP_VIOLATED_OFFSET 3
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_TRAINING_PTP_VIOLATED_MASK 0x8
#define ULP_CORE_IRQ0_PENDING_IRQ_LINK_TRAINING_PTP_VIOLATED 0x8
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_FRAMER_PTP_VIOLATED_OFFSET 2
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_FRAMER_PTP_VIOLATED_MASK 0x4
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_FRAMER_PTP_VIOLATED 0x4
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_LFPS_CNT_IN_ERR_OFFSET 1
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_LFPS_CNT_IN_ERR_MASK 0x2
#define ULP_CORE_IRQ0_PENDING_IRQ_RX_LFPS_CNT_IN_ERR 0x2
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_LFPS_CNT_IN_ERR_MASK 0x1
#define ULP_CORE_IRQ0_PENDING_IRQ_TX_LFPS_CNT_IN_ERR 0x1
#define ULP_CORE_IRQ0_RAW_CORE_CLK_MODE_OFFSET 29
#define ULP_CORE_IRQ0_RAW_CORE_CLK_MODE_MASK 0x20000000
#define ULP_CORE_IRQ0_RAW_CORE_CLK_MODE 0x20000000
#define ULP_CORE_IRQ0_RAW_U3_EXIT_COMPLETED_OFFSET 28
#define ULP_CORE_IRQ0_RAW_U3_EXIT_COMPLETED_MASK 0x10000000
#define ULP_CORE_IRQ0_RAW_U3_EXIT_COMPLETED 0x10000000
#define ULP_CORE_IRQ0_RAW_U3_AS_SLAVE_EXIT_FAILED_OFFSET 27
#define ULP_CORE_IRQ0_RAW_U3_AS_SLAVE_EXIT_FAILED_MASK 0x8000000
#define ULP_CORE_IRQ0_RAW_U3_AS_SLAVE_EXIT_FAILED 0x8000000
#define ULP_CORE_IRQ0_RAW_U3_AS_MASTER_EXIT_FAILED_OFFSET 26
#define ULP_CORE_IRQ0_RAW_U3_AS_MASTER_EXIT_FAILED_MASK 0x4000000
#define ULP_CORE_IRQ0_RAW_U3_AS_MASTER_EXIT_FAILED 0x4000000
#define ULP_CORE_IRQ0_RAW_U3_EXIT_INITIATED_OFFSET 25
#define ULP_CORE_IRQ0_RAW_U3_EXIT_INITIATED_MASK 0x2000000
#define ULP_CORE_IRQ0_RAW_U3_EXIT_INITIATED 0x2000000
#define ULP_CORE_IRQ0_RAW_IN_U3_OFFSET 24
#define ULP_CORE_IRQ0_RAW_IN_U3_MASK 0x1000000
#define ULP_CORE_IRQ0_RAW_IN_U3 0x1000000
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_FAILED_OFFSET 23
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_FAILED_MASK 0x800000
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_FAILED 0x800000
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_RECEIVED_OFFSET 22
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_RECEIVED_MASK 0x400000
#define ULP_CORE_IRQ0_RAW_U3_ENTRY_RECEIVED 0x400000
#define ULP_CORE_IRQ0_RAW_IN_U2_OFFSET 21
#define ULP_CORE_IRQ0_RAW_IN_U2_MASK 0x200000
#define ULP_CORE_IRQ0_RAW_IN_U2 0x200000
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_REJECTED_OFFSET 20
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_REJECTED_MASK 0x100000
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_REJECTED 0x100000
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_RECEIVED_OFFSET 19
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_RECEIVED_MASK 0x80000
#define ULP_CORE_IRQ0_RAW_U2_ENTRY_RECEIVED 0x80000
#define ULP_CORE_IRQ0_RAW_IN_U1_OFFSET 18
#define ULP_CORE_IRQ0_RAW_IN_U1_MASK 0x40000
#define ULP_CORE_IRQ0_RAW_IN_U1 0x40000
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_REJECTED_OFFSET 17
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_REJECTED_MASK 0x20000
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_REJECTED 0x20000
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_RECEIVED_OFFSET 16
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_RECEIVED_MASK 0x10000
#define ULP_CORE_IRQ0_RAW_U1_ENTRY_RECEIVED 0x10000
#define ULP_CORE_IRQ0_RAW_COMPLETED_HOT_RESET_OFFSET 15
#define ULP_CORE_IRQ0_RAW_COMPLETED_HOT_RESET_MASK 0x8000
#define ULP_CORE_IRQ0_RAW_COMPLETED_HOT_RESET 0x8000
#define ULP_CORE_IRQ0_RAW_IN_HOT_RESET_OFFSET 14
#define ULP_CORE_IRQ0_RAW_IN_HOT_RESET_MASK 0x4000
#define ULP_CORE_IRQ0_RAW_IN_HOT_RESET 0x4000
#define ULP_CORE_IRQ0_RAW_COMPLETED_WARM_RESET_OFFSET 13
#define ULP_CORE_IRQ0_RAW_COMPLETED_WARM_RESET_MASK 0x2000
#define ULP_CORE_IRQ0_RAW_COMPLETED_WARM_RESET 0x2000
#define ULP_CORE_IRQ0_RAW_IN_WARM_RESET_OFFSET 12
#define ULP_CORE_IRQ0_RAW_IN_WARM_RESET_MASK 0x1000
#define ULP_CORE_IRQ0_RAW_IN_WARM_RESET 0x1000
#define ULP_CORE_IRQ0_RAW_RX_TERMINATION_DET_OFFSET 11
#define ULP_CORE_IRQ0_RAW_RX_TERMINATION_DET_MASK 0x800
#define ULP_CORE_IRQ0_RAW_RX_TERMINATION_DET 0x800
#define ULP_CORE_IRQ0_RAW_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_OFFSET 10
#define ULP_CORE_IRQ0_RAW_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR_MASK 0x400
#define ULP_CORE_IRQ0_RAW_REMOTE_RX_HDR_BUFF_CRDT_CNT_IN_ERR 0x400
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_UNDERFLOW_OFFSET 9
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_UNDERFLOW_MASK 0x200
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_UNDERFLOW 0x200
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_OVERFLOW_OFFSET 8
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_OVERFLOW_MASK 0x100
#define ULP_CORE_IRQ0_RAW_LMP_RX_EVENT_FIFO_OVERFLOW 0x100
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_OFFSET 7
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW_MASK 0x80
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_UNDERFLOW 0x80
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_OFFSET 6
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW_MASK 0x40
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_RX_EVENT_FIFO_OVERFLOW 0x40
#define ULP_CORE_IRQ0_RAW_LMP_PTP_VIOLATED_OFFSET 5
#define ULP_CORE_IRQ0_RAW_LMP_PTP_VIOLATED_MASK 0x20
#define ULP_CORE_IRQ0_RAW_LMP_PTP_VIOLATED 0x20
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_PTP_VIOLATED_OFFSET 4
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_PTP_VIOLATED_MASK 0x10
#define ULP_CORE_IRQ0_RAW_LINK_COMMAND_PTP_VIOLATED 0x10
#define ULP_CORE_IRQ0_RAW_LINK_TRAINING_PTP_VIOLATED_OFFSET 3
#define ULP_CORE_IRQ0_RAW_LINK_TRAINING_PTP_VIOLATED_MASK 0x8
#define ULP_CORE_IRQ0_RAW_LINK_TRAINING_PTP_VIOLATED 0x8
#define ULP_CORE_IRQ0_RAW_TX_FRAMER_PTP_VIOLATED_OFFSET 2
#define ULP_CORE_IRQ0_RAW_TX_FRAMER_PTP_VIOLATED_MASK 0x4
#define ULP_CORE_IRQ0_RAW_TX_FRAMER_PTP_VIOLATED 0x4
#define ULP_CORE_IRQ0_RAW_RX_LFPS_CNT_IN_ERR_OFFSET 1
#define ULP_CORE_IRQ0_RAW_RX_LFPS_CNT_IN_ERR_MASK 0x2
#define ULP_CORE_IRQ0_RAW_RX_LFPS_CNT_IN_ERR 0x2
#define ULP_CORE_IRQ0_RAW_TX_LFPS_CNT_IN_ERR_OFFSET 0
#define ULP_CORE_IRQ0_RAW_TX_LFPS_CNT_IN_ERR_MASK 0x1
#define ULP_CORE_IRQ0_RAW_TX_LFPS_CNT_IN_ERR 0x1
#define ULP_CORE_IRQ1_ENABLE_IN_RECOVERY_OFFSET 7
#define ULP_CORE_IRQ1_ENABLE_IN_RECOVERY_MASK 0x80
#define ULP_CORE_IRQ1_ENABLE_IN_RECOVERY 0x80
#define ULP_CORE_IRQ1_ENABLE_IN_LOOPBACK_OFFSET 6
#define ULP_CORE_IRQ1_ENABLE_IN_LOOPBACK_MASK 0x40
#define ULP_CORE_IRQ1_ENABLE_IN_LOOPBACK 0x40
#define ULP_CORE_IRQ1_ENABLE_IN_COMPLIANCE_OFFSET 5
#define ULP_CORE_IRQ1_ENABLE_IN_COMPLIANCE_MASK 0x20
#define ULP_CORE_IRQ1_ENABLE_IN_COMPLIANCE 0x20
#define ULP_CORE_IRQ1_ENABLE_IN_DISABLED_OFFSET 4
#define ULP_CORE_IRQ1_ENABLE_IN_DISABLED_MASK 0x10
#define ULP_CORE_IRQ1_ENABLE_IN_DISABLED 0x10
#define ULP_CORE_IRQ1_ENABLE_IN_U0_OFFSET 3
#define ULP_CORE_IRQ1_ENABLE_IN_U0_MASK 0x8
#define ULP_CORE_IRQ1_ENABLE_IN_U0 0x8
#define ULP_CORE_IRQ1_ENABLE_IN_POLLING_OFFSET 2
#define ULP_CORE_IRQ1_ENABLE_IN_POLLING_MASK 0x4
#define ULP_CORE_IRQ1_ENABLE_IN_POLLING 0x4
#define ULP_CORE_IRQ1_ENABLE_IN_RX_DETECT_OFFSET 1
#define ULP_CORE_IRQ1_ENABLE_IN_RX_DETECT_MASK 0x2
#define ULP_CORE_IRQ1_ENABLE_IN_RX_DETECT 0x2
#define ULP_CORE_IRQ1_ENABLE_IN_INACTIVE_OFFSET 0
#define ULP_CORE_IRQ1_ENABLE_IN_INACTIVE_MASK 0x1
#define ULP_CORE_IRQ1_ENABLE_IN_INACTIVE 0x1
#define ULP_CORE_IRQ1_PENDING_IN_RECOVERY_OFFSET 7
#define ULP_CORE_IRQ1_PENDING_IN_RECOVERY_MASK 0x80
#define ULP_CORE_IRQ1_PENDING_IN_RECOVERY 0x80
#define ULP_CORE_IRQ1_PENDING_IN_LOOPBACK_OFFSET 6
#define ULP_CORE_IRQ1_PENDING_IN_LOOPBACK_MASK 0x40
#define ULP_CORE_IRQ1_PENDING_IN_LOOPBACK 0x40
#define ULP_CORE_IRQ1_PENDING_IN_COMPLIANCE_OFFSET 5
#define ULP_CORE_IRQ1_PENDING_IN_COMPLIANCE_MASK 0x20
#define ULP_CORE_IRQ1_PENDING_IN_COMPLIANCE 0x20
#define ULP_CORE_IRQ1_PENDING_IN_DISABLED_OFFSET 4
#define ULP_CORE_IRQ1_PENDING_IN_DISABLED_MASK 0x10
#define ULP_CORE_IRQ1_PENDING_IN_DISABLED 0x10
#define ULP_CORE_IRQ1_PENDING_IN_U0_OFFSET 3
#define ULP_CORE_IRQ1_PENDING_IN_U0_MASK 0x8
#define ULP_CORE_IRQ1_PENDING_IN_U0 0x8
#define ULP_CORE_IRQ1_PENDING_IN_POLLING_OFFSET 2
#define ULP_CORE_IRQ1_PENDING_IN_POLLING_MASK 0x4
#define ULP_CORE_IRQ1_PENDING_IN_POLLING 0x4
#define ULP_CORE_IRQ1_PENDING_IN_RX_DETECT_OFFSET 1
#define ULP_CORE_IRQ1_PENDING_IN_RX_DETECT_MASK 0x2
#define ULP_CORE_IRQ1_PENDING_IN_RX_DETECT 0x2
#define ULP_CORE_IRQ1_PENDING_IN_INACTIVE_OFFSET 0
#define ULP_CORE_IRQ1_PENDING_IN_INACTIVE_MASK 0x1
#define ULP_CORE_IRQ1_PENDING_IN_INACTIVE 0x1
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RECOVERY_OFFSET 7
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RECOVERY_MASK 0x80
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RECOVERY 0x80
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_LOOPBACK_OFFSET 6
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_LOOPBACK_MASK 0x40
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_LOOPBACK 0x40
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_COMPLIANCE_OFFSET 5
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_COMPLIANCE_MASK 0x20
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_COMPLIANCE 0x20
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_DISABLED_OFFSET 4
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_DISABLED_MASK 0x10
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_DISABLED 0x10
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_U0_OFFSET 3
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_U0_MASK 0x8
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_U0 0x8
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_POLLING_OFFSET 2
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_POLLING_MASK 0x4
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_POLLING 0x4
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RX_DETECT_OFFSET 1
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RX_DETECT_MASK 0x2
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_RX_DETECT 0x2
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_INACTIVE_OFFSET 0
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_INACTIVE_MASK 0x1
#define ULP_CORE_IRQ1_PENDING_IRQ_IN_INACTIVE 0x1
#define ULP_CORE_IRQ1_RAW_IN_RECOVERY_OFFSET 7
#define ULP_CORE_IRQ1_RAW_IN_RECOVERY_MASK 0x80
#define ULP_CORE_IRQ1_RAW_IN_RECOVERY 0x80
#define ULP_CORE_IRQ1_RAW_IN_LOOPBACK_OFFSET 6
#define ULP_CORE_IRQ1_RAW_IN_LOOPBACK_MASK 0x40
#define ULP_CORE_IRQ1_RAW_IN_LOOPBACK 0x40
#define ULP_CORE_IRQ1_RAW_IN_COMPLIANCE_OFFSET 5
#define ULP_CORE_IRQ1_RAW_IN_COMPLIANCE_MASK 0x20
#define ULP_CORE_IRQ1_RAW_IN_COMPLIANCE 0x20
#define ULP_CORE_IRQ1_RAW_IN_DISABLED_OFFSET 4
#define ULP_CORE_IRQ1_RAW_IN_DISABLED_MASK 0x10
#define ULP_CORE_IRQ1_RAW_IN_DISABLED 0x10
#define ULP_CORE_IRQ1_RAW_IN_U0_OFFSET 3
#define ULP_CORE_IRQ1_RAW_IN_U0_MASK 0x8
#define ULP_CORE_IRQ1_RAW_IN_U0 0x8
#define ULP_CORE_IRQ1_RAW_IN_POLLING_OFFSET 2
#define ULP_CORE_IRQ1_RAW_IN_POLLING_MASK 0x4
#define ULP_CORE_IRQ1_RAW_IN_POLLING 0x4
#define ULP_CORE_IRQ1_RAW_IN_RX_DETECT_OFFSET 1
#define ULP_CORE_IRQ1_RAW_IN_RX_DETECT_MASK 0x2
#define ULP_CORE_IRQ1_RAW_IN_RX_DETECT 0x2
#define ULP_CORE_IRQ1_RAW_IN_INACTIVE_OFFSET 0
#define ULP_CORE_IRQ1_RAW_IN_INACTIVE_MASK 0x1
#define ULP_CORE_IRQ1_RAW_IN_INACTIVE 0x1
#endif /* _ULP_CORE_REGS_H_ */

/* end */
