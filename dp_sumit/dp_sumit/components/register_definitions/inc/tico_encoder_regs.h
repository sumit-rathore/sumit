/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : ardeshirs*/
/* generated by      : ardeshirs*/
/* generated from    : Y:\designs\blackbird\working\ardeshirs\blackbird_maverick\m_dp_sink\regs\ids\tico_encoder\tico_encoder_regs.docx*/
/* IDesignSpec rev   : 6.6.28.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : AXI*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : tico_encoder */

#ifndef _TICO_ENCODER_REGS_H_
#define _TICO_ENCODER_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t tico_e_width : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_width : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_width;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t tico_e_height : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_height : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_height;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv2 : 30;
            uint32_t tico_e_comp : 2;           /* 1:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_comp : 2;           /* 0:1 SW=rw HW=ro 0x0 */
            uint32_t resv2 : 30;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_comp;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv4 : 28;
            uint32_t tico_e_mode : 4;           /* 3:0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_mode : 4;           /* 0:3 SW=rw HW=ro 0x1 */
            uint32_t resv4 : 28;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_mode;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t tico_e_hlvls : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_hlvls : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_hlvls;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv1 : 31;
            uint32_t tico_e_vld : 1;           /* 0 SW=wo HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_vld : 1;           /* 0 SW=wo HW=ro 0x0 */
            uint32_t resv1 : 31;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_vld;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t tico_e_nbr : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_nbr : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_nbr;

typedef union {
    struct {
        uint32_t tico_e_bgt : 32;           /* 31:0 SW=rw HW=ro 0x0 */
    } bf;
    uint32_t  dw;
} tico_encoder_tico_e_bgt;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv4 : 28;
            uint32_t tico_e_vid_depth : 4;           /* 3:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_vid_depth : 4;           /* 0:3 SW=rw HW=ro 0x0 */
            uint32_t resv4 : 28;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_vid_depth;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv1 : 31;
            uint32_t tico_e_play_mode : 1;           /* 0 SW=wo HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t tico_e_play_mode : 1;           /* 0 SW=wo HW=ro 0x0 */
            uint32_t resv1 : 31;
        } bf;
        
    #endif
    uint32_t  dw;
} tico_encoder_tico_e_play_mode;

typedef union {
    struct {
        uint32_t tico_e_lvl_weights : 32;           /* 31:0 SW=rw HW=ro 0x0 */
    } bf;
    uint32_t  dw;
} tico_encoder_tico_e_lvl_weights;

typedef struct {
    
    uint8_t filler1[0x14];
    
    tico_encoder_tico_e_width  tico_e_width;
    
    uint8_t filler2[0x4];
    
    tico_encoder_tico_e_height  tico_e_height;
    
    uint8_t filler3[0x4];
    
    tico_encoder_tico_e_comp  tico_e_comp;
    
    uint8_t filler4[0x4];
    
    tico_encoder_tico_e_mode  tico_e_mode;
    
    uint8_t filler5[0x4];
    
    tico_encoder_tico_e_hlvls  tico_e_hlvls;
    tico_encoder_tico_e_vld  tico_e_vld;
    tico_encoder_tico_e_nbr  tico_e_nbr;
    
    uint8_t filler8[0x4];
    
    tico_encoder_tico_e_bgt  tico_e_bgt;
    tico_encoder_tico_e_vid_depth  tico_e_vid_depth;
    tico_encoder_tico_e_play_mode  tico_e_play_mode;
    tico_encoder_tico_e_lvl_weights  tico_e_lvl_weights;
    
    
    uint8_t filler17[0xAC];
    
    
} tico_encoder_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define tico_encoder_tico_e_width_READMASK 0xFFFF
#define tico_encoder_tico_e_width_WRITEMASK 0xFFFF
#define tico_encoder_tico_e_width_VOLATILEMASK 0x0
#define tico_encoder_tico_e_width_RESETMASK 0xFFFF
#define tico_encoder_tico_e_width_DEFAULT 0x00000000

#define tico_encoder_tico_e_height_READMASK 0xFFFF
#define tico_encoder_tico_e_height_WRITEMASK 0xFFFF
#define tico_encoder_tico_e_height_VOLATILEMASK 0x0
#define tico_encoder_tico_e_height_RESETMASK 0xFFFF
#define tico_encoder_tico_e_height_DEFAULT 0x00000000

#define tico_encoder_tico_e_comp_READMASK 0x3
#define tico_encoder_tico_e_comp_WRITEMASK 0x3
#define tico_encoder_tico_e_comp_VOLATILEMASK 0x0
#define tico_encoder_tico_e_comp_RESETMASK 0x3
#define tico_encoder_tico_e_comp_DEFAULT 0x00000000

#define tico_encoder_tico_e_mode_READMASK 0xF
#define tico_encoder_tico_e_mode_WRITEMASK 0xF
#define tico_encoder_tico_e_mode_VOLATILEMASK 0x0
#define tico_encoder_tico_e_mode_RESETMASK 0xF
#define tico_encoder_tico_e_mode_DEFAULT 0x00000001

#define tico_encoder_tico_e_hlvls_READMASK 0x7
#define tico_encoder_tico_e_hlvls_WRITEMASK 0x7
#define tico_encoder_tico_e_hlvls_VOLATILEMASK 0x0
#define tico_encoder_tico_e_hlvls_RESETMASK 0x7
#define tico_encoder_tico_e_hlvls_DEFAULT 0x00000000

#define tico_encoder_tico_e_vld_READMASK 0x0
#define tico_encoder_tico_e_vld_WRITEMASK 0x1
#define tico_encoder_tico_e_vld_VOLATILEMASK 0x0
#define tico_encoder_tico_e_vld_RESETMASK 0x1
#define tico_encoder_tico_e_vld_DEFAULT 0x00000000

#define tico_encoder_tico_e_nbr_READMASK 0xFFFF
#define tico_encoder_tico_e_nbr_WRITEMASK 0xFFFF
#define tico_encoder_tico_e_nbr_VOLATILEMASK 0x0
#define tico_encoder_tico_e_nbr_RESETMASK 0xFFFF
#define tico_encoder_tico_e_nbr_DEFAULT 0x00000000

#define tico_encoder_tico_e_bgt_READMASK 0xFFFFFFFF
#define tico_encoder_tico_e_bgt_WRITEMASK 0xFFFFFFFF
#define tico_encoder_tico_e_bgt_VOLATILEMASK 0x0
#define tico_encoder_tico_e_bgt_RESETMASK 0xFFFFFFFF
#define tico_encoder_tico_e_bgt_DEFAULT 0x00000000

#define tico_encoder_tico_e_vid_depth_READMASK 0xF
#define tico_encoder_tico_e_vid_depth_WRITEMASK 0xF
#define tico_encoder_tico_e_vid_depth_VOLATILEMASK 0x0
#define tico_encoder_tico_e_vid_depth_RESETMASK 0xF
#define tico_encoder_tico_e_vid_depth_DEFAULT 0x00000000

#define tico_encoder_tico_e_play_mode_READMASK 0x0
#define tico_encoder_tico_e_play_mode_WRITEMASK 0x1
#define tico_encoder_tico_e_play_mode_VOLATILEMASK 0x0
#define tico_encoder_tico_e_play_mode_RESETMASK 0x1
#define tico_encoder_tico_e_play_mode_DEFAULT 0x00000000

#define tico_encoder_tico_e_lvl_weights_READMASK 0xFFFFFFFF
#define tico_encoder_tico_e_lvl_weights_WRITEMASK 0xFFFFFFFF
#define tico_encoder_tico_e_lvl_weights_VOLATILEMASK 0x0
#define tico_encoder_tico_e_lvl_weights_RESETMASK 0xFFFFFFFF
#define tico_encoder_tico_e_lvl_weights_DEFAULT 0x00000000

#define tico_encoder_s_SIZE 0x100
#define tico_encoder_tico_e_width_SIZE 0x4
#define tico_encoder_tico_e_height_SIZE 0x4
#define tico_encoder_tico_e_comp_SIZE 0x4
#define tico_encoder_tico_e_mode_SIZE 0x4
#define tico_encoder_tico_e_hlvls_SIZE 0x4
#define tico_encoder_tico_e_vld_SIZE 0x4
#define tico_encoder_tico_e_nbr_SIZE 0x4
#define tico_encoder_tico_e_bgt_SIZE 0x4
#define tico_encoder_tico_e_vid_depth_SIZE 0x4
#define tico_encoder_tico_e_play_mode_SIZE 0x4
#define tico_encoder_tico_e_lvl_weights_SIZE 0x4

#define tico_encoder_s_OFFSET 0x0
#define tico_encoder_tico_e_width_OFFSET 0x14
#define tico_encoder_tico_e_height_OFFSET 0x1C
#define tico_encoder_tico_e_comp_OFFSET 0x24
#define tico_encoder_tico_e_mode_OFFSET 0x2C
#define tico_encoder_tico_e_hlvls_OFFSET 0x34
#define tico_encoder_tico_e_vld_OFFSET 0x38
#define tico_encoder_tico_e_nbr_OFFSET 0x3C
#define tico_encoder_tico_e_bgt_OFFSET 0x44
#define tico_encoder_tico_e_vid_depth_OFFSET 0x48
#define tico_encoder_tico_e_play_mode_OFFSET 0x4C
#define tico_encoder_tico_e_lvl_weights_OFFSET 0x50

#define tico_encoder_s_ADDRESS 0x000
#define tico_encoder_tico_e_width_ADDRESS 0x014
#define tico_encoder_tico_e_height_ADDRESS 0x01C
#define tico_encoder_tico_e_comp_ADDRESS 0x024
#define tico_encoder_tico_e_mode_ADDRESS 0x02C
#define tico_encoder_tico_e_hlvls_ADDRESS 0x034
#define tico_encoder_tico_e_vld_ADDRESS 0x038
#define tico_encoder_tico_e_nbr_ADDRESS 0x03C
#define tico_encoder_tico_e_bgt_ADDRESS 0x044
#define tico_encoder_tico_e_vid_depth_ADDRESS 0x048
#define tico_encoder_tico_e_play_mode_ADDRESS 0x04C
#define tico_encoder_tico_e_lvl_weights_ADDRESS 0x050
#endif /* _TICO_ENCODER_REGS_H_ */

#define TICO_ENCODER_TICO_E_WIDTH_TICO_E_WIDTH_OFFSET 0
#define TICO_ENCODER_TICO_E_WIDTH_TICO_E_WIDTH_MASK 0xFFFF
#define TICO_ENCODER_TICO_E_HEIGHT_TICO_E_HEIGHT_OFFSET 0
#define TICO_ENCODER_TICO_E_HEIGHT_TICO_E_HEIGHT_MASK 0xFFFF
#define TICO_ENCODER_TICO_E_COMP_TICO_E_COMP_OFFSET 0
#define TICO_ENCODER_TICO_E_COMP_TICO_E_COMP_MASK 0x3
#define TICO_ENCODER_TICO_E_MODE_TICO_E_MODE_OFFSET 0
#define TICO_ENCODER_TICO_E_MODE_TICO_E_MODE_MASK 0xF
#define TICO_ENCODER_TICO_E_HLVLS_TICO_E_HLVLS_OFFSET 0
#define TICO_ENCODER_TICO_E_HLVLS_TICO_E_HLVLS_MASK 0x7
#define TICO_ENCODER_TICO_E_VLD_TICO_E_VLD_OFFSET 0
#define TICO_ENCODER_TICO_E_VLD_TICO_E_VLD_MASK 0x1
#define TICO_ENCODER_TICO_E_VLD_TICO_E_VLD 0x1
#define TICO_ENCODER_TICO_E_NBR_TICO_E_NBR_OFFSET 0
#define TICO_ENCODER_TICO_E_NBR_TICO_E_NBR_MASK 0xFFFF
#define TICO_ENCODER_TICO_E_BGT_TICO_E_BGT_OFFSET 0
#define TICO_ENCODER_TICO_E_BGT_TICO_E_BGT_MASK 0xFFFFFFFF
#define TICO_ENCODER_TICO_E_VID_DEPTH_TICO_E_VID_DEPTH_OFFSET 0
#define TICO_ENCODER_TICO_E_VID_DEPTH_TICO_E_VID_DEPTH_MASK 0xF
#define TICO_ENCODER_TICO_E_PLAY_MODE_TICO_E_PLAY_MODE_OFFSET 0
#define TICO_ENCODER_TICO_E_PLAY_MODE_TICO_E_PLAY_MODE_MASK 0x1
#define TICO_ENCODER_TICO_E_PLAY_MODE_TICO_E_PLAY_MODE 0x1
#define TICO_ENCODER_TICO_E_LVL_WEIGHTS_TICO_E_LVL_WEIGHTS_OFFSET 0
#define TICO_ENCODER_TICO_E_LVL_WEIGHTS_TICO_E_LVL_WEIGHTS_MASK 0xFFFFFFFF
/* end */
