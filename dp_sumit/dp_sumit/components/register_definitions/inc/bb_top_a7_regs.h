/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : Remco van Steeden*/
/* generated by      : Remco.vanSteeden*/
/* generated from    : C:\cygwin64\home\Remco.VanSteeden\blackbird_rls_20190829\f_blackbird_a7_core\regs\ids\bb_top\bb_top_regs.docx*/
/* IDesignSpec rev   : 6.8.10.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : APB*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : bb_top */

#ifndef _BB_TOP_REGS_H_
#define _BB_TOP_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=na 0x10 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=na 0x1 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=na 0x4 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=na 0x4 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=na 0x1 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=na 0x10 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_version;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t env_info : 8;           /* 31:24 SW=ro HW=wo 0x0 */
            uint32_t platform_support : 8;           /* 23:16 SW=ro HW=wo 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t base_platform : 4;           /* 13:10 SW=ro HW=wo 0x0 */
            uint32_t image_type : 2;           /* 9:8 SW=ro HW=wo 0x0 */
            uint32_t part_number : 4;           /* 7:4 SW=ro HW=wo 0x0 */
            uint32_t vendor : 2;           /* 3:2 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 1;
            uint32_t technology : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t technology : 1;           /* 0 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 1;
            uint32_t vendor : 2;           /* 2:3 SW=ro HW=wo 0x0 */
            uint32_t part_number : 4;           /* 4:7 SW=ro HW=wo 0x0 */
            uint32_t image_type : 2;           /* 8:9 SW=ro HW=wo 0x0 */
            uint32_t base_platform : 4;           /* 10:13 SW=ro HW=wo 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t platform_support : 8;           /* 16:23 SW=ro HW=wo 0x0 */
            uint32_t env_info : 8;           /* 24:31 SW=ro HW=wo 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sys_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t dp_gtp : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t xadc : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t sl_5g : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t rxaui_l0_t1 : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t rxaui_l0_t0 : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rxaui_l0_t0 : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t rxaui_l0_t1 : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t sl_5g : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t xadc : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t dp_gtp : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_feature;

/*section : icap */

typedef union {
    struct {
        uint32_t val : 32;           /* 31:0 SW=rw HW=ro 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_icap_wdata;

typedef union {
    struct {
        uint32_t val : 32;           /* 31:0 SW=rw HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_icap_rdata;

typedef struct {
    bb_top_icap_wdata  wdata;
    bb_top_icap_rdata  rdata;
    
    
    
} bb_top_icap;


/*section : grm */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t cpu_rst : 1;           /* 31 SW=rw HW=ro 0x0 */
            
            uint32_t resv30 : 1;
            uint32_t link_stats_rx_rst : 1;           /* 29 SW=rw HW=ro 0x1 */
            uint32_t sl_5g_rx_rst : 1;           /* 28 SW=rw HW=ro 0x1 */
            uint32_t sl_5g_tx_rst : 1;           /* 27 SW=rw HW=ro 0x1 */
            uint32_t xmii_rx_rst : 1;           /* 26 SW=rw HW=ro 0x1 */
            uint32_t xmii_tx_rst : 1;           /* 25 SW=rw HW=ro 0x1 */
            uint32_t ge_clm_rx_rst : 1;           /* 24 SW=rw HW=ro 0x1 */
            uint32_t ge_clm_tx_rst : 1;           /* 23 SW=rw HW=ro 0x1 */
            uint32_t rs232_rst : 1;           /* 22 SW=rw HW=ro 0x1 */
            uint32_t ulp_phy_rst : 1;           /* 21 SW=rw HW=ro 0x1 */
            uint32_t ulp_core_rst : 1;           /* 20 SW=rw HW=ro 0x1 */
            uint32_t upp_rst : 1;           /* 19 SW=rw HW=ro 0x1 */
            uint32_t xusb_rst : 1;           /* 18 SW=rw HW=ro 0x1 */
            uint32_t tico_d_ctrl_rst : 1;           /* 17 SW=rw HW=ro 0x1 */
            uint32_t dp_source_rst : 1;           /* 16 SW=rw HW=ro 0x1 */
            uint32_t tico_e_ctrl_rst : 1;           /* 15 SW=rw HW=ro 0x1 */
            uint32_t dp_sink_rst : 1;           /* 14 SW=rw HW=ro 0x1 */
            uint32_t dp_aux_hpd_rst : 1;           /* 13 SW=rw HW=ro 0x1 */
            uint32_t mca_core_rx_rst : 1;           /* 12 SW=rw HW=ro 0x1 */
            uint32_t mca_core_tx_rst : 1;           /* 11 SW=rw HW=ro 0x1 */
            uint32_t l3_rx_rst : 1;           /* 10 SW=rw HW=ro 0x1 */
            uint32_t l3_tx_rst : 1;           /* 9 SW=rw HW=ro 0x1 */
            uint32_t dll_rx_rst : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t dll_tx_rst : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t gpio_ctrl_rst : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t spi_flash_ctrl_rst : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t mdio_master_rst : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t i2c_slave_rst : 1;           /* 3 SW=rw HW=ro 0x1 */
            uint32_t i2c_master_rst : 1;           /* 2 SW=rw HW=ro 0x1 */
            uint32_t ge_uart_rst : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t bb_uart_rst : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t bb_uart_rst : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t ge_uart_rst : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t i2c_master_rst : 1;           /* 2 SW=rw HW=ro 0x1 */
            uint32_t i2c_slave_rst : 1;           /* 3 SW=rw HW=ro 0x1 */
            uint32_t mdio_master_rst : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t spi_flash_ctrl_rst : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t gpio_ctrl_rst : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t dll_tx_rst : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t dll_rx_rst : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t l3_tx_rst : 1;           /* 9 SW=rw HW=ro 0x1 */
            uint32_t l3_rx_rst : 1;           /* 10 SW=rw HW=ro 0x1 */
            uint32_t mca_core_tx_rst : 1;           /* 11 SW=rw HW=ro 0x1 */
            uint32_t mca_core_rx_rst : 1;           /* 12 SW=rw HW=ro 0x1 */
            uint32_t dp_aux_hpd_rst : 1;           /* 13 SW=rw HW=ro 0x1 */
            uint32_t dp_sink_rst : 1;           /* 14 SW=rw HW=ro 0x1 */
            uint32_t tico_e_ctrl_rst : 1;           /* 15 SW=rw HW=ro 0x1 */
            uint32_t dp_source_rst : 1;           /* 16 SW=rw HW=ro 0x1 */
            uint32_t tico_d_ctrl_rst : 1;           /* 17 SW=rw HW=ro 0x1 */
            uint32_t xusb_rst : 1;           /* 18 SW=rw HW=ro 0x1 */
            uint32_t upp_rst : 1;           /* 19 SW=rw HW=ro 0x1 */
            uint32_t ulp_core_rst : 1;           /* 20 SW=rw HW=ro 0x1 */
            uint32_t ulp_phy_rst : 1;           /* 21 SW=rw HW=ro 0x1 */
            uint32_t rs232_rst : 1;           /* 22 SW=rw HW=ro 0x1 */
            uint32_t ge_clm_tx_rst : 1;           /* 23 SW=rw HW=ro 0x1 */
            uint32_t ge_clm_rx_rst : 1;           /* 24 SW=rw HW=ro 0x1 */
            uint32_t xmii_tx_rst : 1;           /* 25 SW=rw HW=ro 0x1 */
            uint32_t xmii_rx_rst : 1;           /* 26 SW=rw HW=ro 0x1 */
            uint32_t sl_5g_tx_rst : 1;           /* 27 SW=rw HW=ro 0x1 */
            uint32_t sl_5g_rx_rst : 1;           /* 28 SW=rw HW=ro 0x1 */
            uint32_t link_stats_rx_rst : 1;           /* 29 SW=rw HW=ro 0x1 */
            
            uint32_t resv30 : 1;
            uint32_t cpu_rst : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_grm_soft_rst_ctrl;

typedef struct {
    bb_top_grm_soft_rst_ctrl  soft_rst_ctrl;
    
    
    
} bb_top_grm;


/*section : gcm */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t link_gt_common_pll0reset : 1;           /* 8 SW=rw HW=ro 0x1 */
            
            uint32_t resv5 : 3;
            uint32_t xmii_tx_clk_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t ulp_phy_clk_pll_rst : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t ulp_phy_clk_pll_rst : 1;           /* 0 SW=rw HW=ro 0x1 */
            
            uint32_t resv1 : 3;
            uint32_t xmii_tx_clk_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t link_gt_common_pll0reset : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_gcm_control;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv11 : 21;
            uint32_t link_mmcm_lock : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t link_gt_common_pll0refclklost : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t link_gt_common_pll0lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t ulp_phy_clk_lock : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t cpu_clk_lock : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t cpu_clk_lock : 1;           /* 0 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t ulp_phy_clk_lock : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t link_gt_common_pll0lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t link_gt_common_pll0refclklost : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t link_mmcm_lock : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t resv11 : 21;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_gcm_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t count : 8;           /* 23:16 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t ref_clk_faster : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t max_count : 8;           /* 11:4 SW=rw HW=ro 0x0 */
            uint32_t clk_sel : 3;           /* 3:1 SW=rw HW=ro 0x0 */
            uint32_t go : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t go : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t clk_sel : 3;           /* 1:3 SW=rw HW=ro 0x0 */
            uint32_t max_count : 8;           /* 4:11 SW=rw HW=ro 0x0 */
            uint32_t ref_clk_faster : 1;           /* 12 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t count : 8;           /* 16:23 SW=ro HW=wo 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_gcm_freq_det;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t count : 14;           /* 31:18 SW=ro HW=wo 0x0 */
            
            uint32_t resv17 : 1;
            uint32_t ref_clk_faster : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t max_count : 14;           /* 15:2 SW=rw HW=ro 0x0 */
            uint32_t clk_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t go : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t go : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t clk_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t max_count : 14;           /* 2:15 SW=rw HW=ro 0x0 */
            uint32_t ref_clk_faster : 1;           /* 16 SW=ro HW=wo 0x0 */
            
            uint32_t resv17 : 1;
            uint32_t count : 14;           /* 18:31 SW=ro HW=wo 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_gcm_freq_det_dp;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t auto_enable : 1;           /* 31 SW=rw HW=ro 0x0 */
            uint32_t comp_ref_clk_faster : 1;           /* 30 SW=rw HW=ro 0x0 */
            uint32_t comp_count_max : 14;           /* 29:16 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t comp_count_min : 14;           /* 13:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t comp_count_min : 14;           /* 0:13 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t comp_count_max : 14;           /* 16:29 SW=rw HW=ro 0x0 */
            uint32_t comp_ref_clk_faster : 1;           /* 30 SW=rw HW=ro 0x0 */
            uint32_t auto_enable : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_gcm_freq_det_dp_auto;

typedef struct {
    bb_top_gcm_control  control;
    bb_top_gcm_status  status;
    bb_top_gcm_freq_det  freq_det;
    bb_top_gcm_freq_det_dp  freq_det_dp;
    bb_top_gcm_freq_det_dp_auto  freq_det_dp_auto;
    
    
    
} bb_top_gcm;


/*section : irq */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t sfp_los : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sfp_los : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=rw HW=na 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=rw HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=rw HW=na 0x0 */
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=rw HW=na 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_irq_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t sfp_los : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sfp_los : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=r/w1c HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=r/w1c HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=r/w1c HW=wo 0x0 */
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=r/w1c HW=wo 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_irq_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t sfp_los : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sfp_los : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=ro HW=na 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=ro HW=na 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=ro HW=na 0x0 */
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=ro HW=na 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_irq_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t sfp_los : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sfp_los : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t mdio_int_b : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t usb_vbus_detect : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t xadc_user_temp : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t xadc_vccint : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t xadc_vccaux : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t xadc_vbram : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t xadc_ot : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t ulp_phy_clk_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t rxaui_align_status : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_tx_fsm_reset_done : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_fsm_reset_done : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_underflow : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t sl_5g_rx_buf_overflow : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_underflow : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt0_rx_buf_overflow : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_underflow : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t rxaui_gt1_rx_buf_overflow : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t freq_det_dp_oor : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_irq_raw;

typedef struct {
    bb_top_irq_enable  enable;
    bb_top_irq_pending  pending;
    bb_top_irq_pending_irq  pending_irq;
    bb_top_irq_raw  raw;
    
    
    
} bb_top_irq;


typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv1 : 31;
            uint32_t sel : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sel : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t resv1 : 31;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_link_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t master_bus_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t master_mdc_tri : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t master_mdc_tri : 1;           /* 0 SW=rw HW=ro 0x1 */
            
            uint32_t resv1 : 3;
            uint32_t master_bus_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_mdio_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t master_bus_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t master_scl_tri : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t master_scl_tri : 1;           /* 0 SW=rw HW=ro 0x1 */
            
            uint32_t resv1 : 3;
            uint32_t master_bus_sel : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_i2c_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv1 : 31;
            uint32_t ge_uart_sel : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t ge_uart_sel : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t resv1 : 31;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_uart_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t tx_disable : 1;           /* 4 SW=rw HW=ro 0x1 */
            
            uint32_t resv2 : 2;
            uint32_t rs1 : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t rs0 : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rs0 : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t rs1 : 1;           /* 1 SW=rw HW=ro 0x1 */
            
            uint32_t resv2 : 2;
            uint32_t tx_disable : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sfp_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t rx_los : 1;           /* 8 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t tx_fault : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t mod_abs : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t mod_abs : 1;           /* 0 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t tx_fault : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t rx_los : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sfp_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv21 : 11;
            uint32_t force_tx_elec_idle : 1;           /* 20 SW=rw HW=ro 0x0 */
            
            uint32_t resv19 : 1;
            uint32_t strapping_done : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t xtal_dis : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t ssc_dis : 1;           /* 16 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 6;
            uint32_t power_present : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t power_present_sel : 1;           /* 8 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t out_enable : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t tx_clk_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t tx_clk_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t out_enable : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t power_present_sel : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t power_present : 1;           /* 9 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 6;
            uint32_t ssc_dis : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t xtal_dis : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t strapping_done : 1;           /* 18 SW=rw HW=ro 0x0 */
            
            uint32_t resv19 : 1;
            uint32_t force_tx_elec_idle : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t resv21 : 11;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_usb3phy_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t int_n : 1;           /* 8 SW=rw HW=ro 0x1 */
            
            uint32_t resv5 : 3;
            uint32_t vbus_det : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t clm_tx_clk_en : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t ref_clk_en : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t boot_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t boot_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t ref_clk_en : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t clm_tx_clk_en : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t vbus_det : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t int_n : 1;           /* 8 SW=rw HW=ro 0x1 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_ge_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t txd_tri : 8;           /* 15:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t tx_er_tri : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t tx_en_tri : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gtx_clk_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rst_b : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gtx_clk_en : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t tx_en_tri : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t tx_er_tri : 1;           /* 5 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t txd_tri : 8;           /* 8:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_xmii_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t invalid_b : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t force_off_b : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t en_b : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t en_b : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t force_off_b : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t invalid_b : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rs232_ctrl;

/*section : drp */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t drp_di : 16;           /* 31:16 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t drp_we : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv9 : 3;
            uint32_t drp_addr : 9;           /* 8:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t drp_addr : 9;           /* 0:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv9 : 3;
            uint32_t drp_we : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t drp_di : 16;           /* 16:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_drp_drp_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv13 : 19;
            uint32_t xadc : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t sl_5g_gt0 : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t rxaui_gt1 : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t rxaui_gt0 : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t link_mmcm : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t link_gt_common : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_rxoutclk_mmcm : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_txoutclk_mmcm : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_common : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t dp_gt3 : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t dp_gt2 : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t dp_gt1 : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t dp_gt0 : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t dp_gt0 : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t dp_gt1 : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t dp_gt2 : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t dp_gt3 : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_common : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_txoutclk_mmcm : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t dp_gt_rxoutclk_mmcm : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t link_gt_common : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t link_mmcm : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t rxaui_gt0 : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t rxaui_gt1 : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t sl_5g_gt0 : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t xadc : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t resv13 : 19;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_drp_drp_en_mask;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t drp_do : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t drp_do : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_drp_drp_read_data;

typedef struct {
    bb_top_drp_drp_ctrl  drp_ctrl;
    bb_top_drp_drp_en_mask  drp_en_mask;
    bb_top_drp_drp_read_data  drp_read_data;
    
} bb_top_drp;


/*section : dp_gtp_common */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv11 : 21;
            uint32_t pll1refclksel : 3;           /* 10:8 SW=rw HW=ro 0x1 */
            
            uint32_t resv7 : 1;
            uint32_t pll0refclksel : 3;           /* 6:4 SW=rw HW=ro 0x1 */
            
            uint32_t resv2 : 2;
            uint32_t pll1pd : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t pll0pd : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pll0pd : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t pll1pd : 1;           /* 1 SW=rw HW=ro 0x1 */
            
            uint32_t resv2 : 2;
            uint32_t pll0refclksel : 3;           /* 4:6 SW=rw HW=ro 0x1 */
            
            uint32_t resv7 : 1;
            uint32_t pll1refclksel : 3;           /* 8:10 SW=rw HW=ro 0x1 */
            uint32_t resv11 : 21;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_common_pll_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv6 : 26;
            uint32_t pll1refclklost : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t pll0refclklost : 1;           /* 4 SW=ro HW=wo 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t pll1lock : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t pll0lock : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pll0lock : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t pll1lock : 1;           /* 1 SW=ro HW=wo 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t pll0refclklost : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t pll1refclklost : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t resv6 : 26;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_common_pll_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv15 : 17;
            uint32_t gt3_loopback : 3;           /* 14:12 SW=rw HW=ro 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt2_loopback : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt1_loopback : 3;           /* 6:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv3 : 1;
            uint32_t gt0_loopback : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_loopback : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            
            uint32_t resv3 : 1;
            uint32_t gt1_loopback : 3;           /* 4:6 SW=rw HW=ro 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt2_loopback : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt3_loopback : 3;           /* 12:14 SW=rw HW=ro 0x0 */
            uint32_t resv15 : 17;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_common_loopback_ctrl;

typedef struct {
    bb_top_dp_gtp_common_pll_ctrl  pll_ctrl;
    bb_top_dp_gtp_common_pll_status  pll_status;
    bb_top_dp_gtp_common_loopback_ctrl  loopback_ctrl;
    
} bb_top_dp_gtp_common;


/*section : dp_gtp_tx */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t gt3_txsysclksel : 2;           /* 7:6 SW=rw HW=ro 0x0 */
            uint32_t gt2_txsysclksel : 2;           /* 5:4 SW=rw HW=ro 0x0 */
            uint32_t gt1_txsysclksel : 2;           /* 3:2 SW=rw HW=ro 0x0 */
            uint32_t gt0_txsysclksel : 2;           /* 1:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txsysclksel : 2;           /* 0:1 SW=rw HW=ro 0x0 */
            uint32_t gt1_txsysclksel : 2;           /* 2:3 SW=rw HW=ro 0x0 */
            uint32_t gt2_txsysclksel : 2;           /* 4:5 SW=rw HW=ro 0x0 */
            uint32_t gt3_txsysclksel : 2;           /* 6:7 SW=rw HW=ro 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_clk_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t gt3_txpcsreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt2_txpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t soft_reset_tx : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t soft_reset_tx : 1;           /* 0 SW=rw HW=ro 0x1 */
            
            uint32_t resv1 : 3;
            uint32_t gt0_txpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt2_txpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt3_txpcsreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_rst_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t gt_txoutclk_mmcm_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t gt3_tx_fsm_reset_done : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t gt2_tx_fsm_reset_done : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t gt1_tx_fsm_reset_done : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t gt0_tx_fsm_reset_done : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t gt3_txresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt2_txresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt1_txresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt0_txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t gt1_txresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt2_txresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt3_txresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt0_tx_fsm_reset_done : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t gt1_tx_fsm_reset_done : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t gt2_tx_fsm_reset_done : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t gt3_tx_fsm_reset_done : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t gt_txoutclk_mmcm_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t gt3_txdiffctrl : 4;           /* 15:12 SW=rw HW=ro 0x2 */
            uint32_t gt2_txdiffctrl : 4;           /* 11:8 SW=rw HW=ro 0x2 */
            uint32_t gt1_txdiffctrl : 4;           /* 7:4 SW=rw HW=ro 0x2 */
            uint32_t gt0_txdiffctrl : 4;           /* 3:0 SW=rw HW=ro 0x2 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txdiffctrl : 4;           /* 0:3 SW=rw HW=ro 0x2 */
            uint32_t gt1_txdiffctrl : 4;           /* 4:7 SW=rw HW=ro 0x2 */
            uint32_t gt2_txdiffctrl : 4;           /* 8:11 SW=rw HW=ro 0x2 */
            uint32_t gt3_txdiffctrl : 4;           /* 12:15 SW=rw HW=ro 0x2 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_diff_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv29 : 3;
            uint32_t gt3_txpostcursor : 5;           /* 28:24 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 4;
            uint32_t gt2_txpostcursor : 5;           /* 19:15 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 2;
            uint32_t gt1_txpostcursor : 5;           /* 12:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_txpostcursor : 5;           /* 4:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txpostcursor : 5;           /* 0:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_txpostcursor : 5;           /* 8:12 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 2;
            uint32_t gt2_txpostcursor : 5;           /* 15:19 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 4;
            uint32_t gt3_txpostcursor : 5;           /* 24:28 SW=rw HW=ro 0x0 */
            uint32_t resv29 : 3;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_post_cursor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv29 : 3;
            uint32_t gt3_txprecursor : 5;           /* 28:24 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 4;
            uint32_t gt2_txprecursor : 5;           /* 19:15 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 2;
            uint32_t gt1_txprecursor : 5;           /* 12:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_txprecursor : 5;           /* 4:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txprecursor : 5;           /* 0:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_txprecursor : 5;           /* 8:12 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 2;
            uint32_t gt2_txprecursor : 5;           /* 15:19 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 4;
            uint32_t gt3_txprecursor : 5;           /* 24:28 SW=rw HW=ro 0x0 */
            uint32_t resv29 : 3;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_pre_cursor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t gt3_txprbsforceerr : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t gt3_txprbssel : 3;           /* 14:12 SW=rw HW=ro 0x0 */
            uint32_t gt2_txprbsforceerr : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt2_txprbssel : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbsforceerr : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbssel : 3;           /* 6:4 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbsforceerr : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbssel : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txprbssel : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbsforceerr : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbssel : 3;           /* 4:6 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbsforceerr : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt2_txprbssel : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            uint32_t gt2_txprbsforceerr : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt3_txprbssel : 3;           /* 12:14 SW=rw HW=ro 0x0 */
            uint32_t gt3_txprbsforceerr : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_prbs_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv20 : 12;
            uint32_t gt3_txinhibit : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t gt2_txinhibit : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt1_txinhibit : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt0_txinhibit : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt3_txpd : 2;           /* 15:14 SW=rw HW=ro 0x3 */
            uint32_t gt2_txpd : 2;           /* 13:12 SW=rw HW=ro 0x3 */
            uint32_t gt1_txpd : 2;           /* 11:10 SW=rw HW=ro 0x3 */
            uint32_t gt0_txpd : 2;           /* 9:8 SW=rw HW=ro 0x3 */
            uint32_t gt3_tx8b10ben : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t gt2_tx8b10ben : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t gt1_tx8b10ben : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t gt0_tx8b10ben : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t gt3_txpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt2_txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpolarity : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpolarity : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txpolarity : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpolarity : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt2_txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt3_txpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_tx8b10ben : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t gt1_tx8b10ben : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t gt2_tx8b10ben : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t gt3_tx8b10ben : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t gt0_txpd : 2;           /* 8:9 SW=rw HW=ro 0x3 */
            uint32_t gt1_txpd : 2;           /* 10:11 SW=rw HW=ro 0x3 */
            uint32_t gt2_txpd : 2;           /* 12:13 SW=rw HW=ro 0x3 */
            uint32_t gt3_txpd : 2;           /* 14:15 SW=rw HW=ro 0x3 */
            uint32_t gt0_txinhibit : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt1_txinhibit : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt2_txinhibit : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt3_txinhibit : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t resv20 : 12;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_tx_tx_misc_ctrl;

typedef struct {
    bb_top_dp_gtp_tx_tx_clk_ctrl  tx_clk_ctrl;
    bb_top_dp_gtp_tx_tx_rst_ctrl  tx_rst_ctrl;
    bb_top_dp_gtp_tx_tx_status  tx_status;
    bb_top_dp_gtp_tx_tx_diff_ctrl  tx_diff_ctrl;
    bb_top_dp_gtp_tx_tx_post_cursor  tx_post_cursor;
    bb_top_dp_gtp_tx_tx_pre_cursor  tx_pre_cursor;
    bb_top_dp_gtp_tx_tx_prbs_ctrl  tx_prbs_ctrl;
    bb_top_dp_gtp_tx_tx_misc_ctrl  tx_misc_ctrl;
    
} bb_top_dp_gtp_tx;


/*section : dp_gtp_rx */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t gt3_rxsysclksel : 2;           /* 7:6 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxsysclksel : 2;           /* 5:4 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxsysclksel : 2;           /* 3:2 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxsysclksel : 2;           /* 1:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxsysclksel : 2;           /* 0:1 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxsysclksel : 2;           /* 2:3 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxsysclksel : 2;           /* 4:5 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxsysclksel : 2;           /* 6:7 SW=rw HW=ro 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_clk_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv20 : 12;
            uint32_t gt3_rxlpmreset : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmreset : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmreset : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmreset : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt3_eyescanreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t gt2_eyescanreset : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t gt1_eyescanreset : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gt0_eyescanreset : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpmareset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpmareset : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpmareset : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpmareset : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpcsreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t dont_reset_on_data_error : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t soft_reset_rx : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t soft_reset_rx : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t dont_reset_on_data_error : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gt0_rxpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpcsreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpmareset : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpmareset : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpmareset : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpmareset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt0_eyescanreset : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t gt1_eyescanreset : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gt2_eyescanreset : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t gt3_eyescanreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmreset : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmreset : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmreset : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmreset : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t resv20 : 12;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_rst_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t gt_rxoutclk_mmcm_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t gt3_rx_fsm_reset_done : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t gt2_rx_fsm_reset_done : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t gt1_rx_fsm_reset_done : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t gt0_rx_fsm_reset_done : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t gt3_rxresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt2_rxresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt2_rxresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt3_rxresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt0_rx_fsm_reset_done : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t gt1_rx_fsm_reset_done : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t gt2_rx_fsm_reset_done : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t gt3_rx_fsm_reset_done : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t gt_rxoutclk_mmcm_lock : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t gt3_rxpcommaalignen : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t gt2_rxpcommaalignen : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t gt1_rxpcommaalignen : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t gt0_rxpcommaalignen : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t gt3_rxmcommaalignen : 1;           /* 3 SW=rw HW=ro 0x1 */
            uint32_t gt2_rxmcommaalignen : 1;           /* 2 SW=rw HW=ro 0x1 */
            uint32_t gt1_rxmcommaalignen : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t gt0_rxmcommaalignen : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxmcommaalignen : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t gt1_rxmcommaalignen : 1;           /* 1 SW=rw HW=ro 0x1 */
            uint32_t gt2_rxmcommaalignen : 1;           /* 2 SW=rw HW=ro 0x1 */
            uint32_t gt3_rxmcommaalignen : 1;           /* 3 SW=rw HW=ro 0x1 */
            uint32_t gt0_rxpcommaalignen : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t gt1_rxpcommaalignen : 1;           /* 5 SW=rw HW=ro 0x1 */
            uint32_t gt2_rxpcommaalignen : 1;           /* 6 SW=rw HW=ro 0x1 */
            uint32_t gt3_rxpcommaalignen : 1;           /* 7 SW=rw HW=ro 0x1 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_byte_align_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv4 : 28;
            uint32_t gt3_rxbyteisaligned : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt2_rxbyteisaligned : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxbyteisaligned : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxbyteisaligned : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxbyteisaligned : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxbyteisaligned : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt2_rxbyteisaligned : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt3_rxbyteisaligned : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t resv4 : 28;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_byte_align_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t gt3_rxprbscntreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxprbssel : 3;           /* 14:12 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxprbssel : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbscntreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbssel : 3;           /* 6:4 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbscntreset : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbssel : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxprbssel : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbscntreset : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbssel : 3;           /* 4:6 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbscntreset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxprbssel : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxprbssel : 3;           /* 12:14 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxprbscntreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_prbs_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv29 : 3;
            uint32_t gt3_rxphmonitor : 5;           /* 28:24 SW=ro HW=wo 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t gt2_rxphmonitor : 5;           /* 20:16 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t gt1_rxphmonitor : 5;           /* 12:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_rxphmonitor : 5;           /* 4:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxphmonitor : 5;           /* 0:4 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_rxphmonitor : 5;           /* 8:12 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t gt2_rxphmonitor : 5;           /* 16:20 SW=ro HW=wo 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t gt3_rxphmonitor : 5;           /* 24:28 SW=ro HW=wo 0x0 */
            uint32_t resv29 : 3;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_ph_monitor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv29 : 3;
            uint32_t gt3_rxphslipmonitor : 5;           /* 28:24 SW=ro HW=wo 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t gt2_rxphslipmonitor : 5;           /* 20:16 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t gt1_rxphslipmonitor : 5;           /* 12:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_rxphslipmonitor : 5;           /* 4:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxphslipmonitor : 5;           /* 0:4 SW=ro HW=wo 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_rxphslipmonitor : 5;           /* 8:12 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t gt2_rxphslipmonitor : 5;           /* 16:20 SW=ro HW=wo 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t gt3_rxphslipmonitor : 5;           /* 24:28 SW=ro HW=wo 0x0 */
            uint32_t resv29 : 3;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_ph_slip_monitor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gt3_dmonitorout : 8;           /* 31:24 SW=ro HW=wo 0x0 */
            uint32_t gt2_dmonitorout : 8;           /* 23:16 SW=ro HW=wo 0x0 */
            uint32_t gt1_dmonitorout : 8;           /* 15:8 SW=ro HW=wo 0x0 */
            uint32_t gt0_dmonitorout : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_dmonitorout : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t gt1_dmonitorout : 8;           /* 8:15 SW=ro HW=wo 0x0 */
            uint32_t gt2_dmonitorout : 8;           /* 16:23 SW=ro HW=wo 0x0 */
            uint32_t gt3_dmonitorout : 8;           /* 24:31 SW=ro HW=wo 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_dmonitor_out;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t gt3_rxlpmlfhold : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmlfhold : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmlfhold : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmlfhold : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmhfovrden : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmhfovrden : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfovrden : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmhfovrden : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmhfhold : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmhfhold : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfhold : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmhfhold : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxlpmhfhold : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfhold : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmhfhold : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmhfhold : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmhfovrden : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfovrden : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmhfovrden : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmhfovrden : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmlfhold : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmlfhold : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxlpmlfhold : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxlpmlfhold : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_eq_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gt_data_valid_en : 1;           /* 31 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 11;
            uint32_t gt3_rxcdrhold : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxcdrhold : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxcdrhold : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxcdrhold : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpd : 2;           /* 15:14 SW=rw HW=ro 0x3 */
            uint32_t gt2_rxpd : 2;           /* 13:12 SW=rw HW=ro 0x3 */
            uint32_t gt1_rxpd : 2;           /* 11:10 SW=rw HW=ro 0x3 */
            uint32_t gt0_rxpd : 2;           /* 9:8 SW=rw HW=ro 0x3 */
            
            uint32_t resv4 : 4;
            uint32_t gt3_rxpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpolarity : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpolarity : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxpolarity : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpolarity : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            
            uint32_t resv4 : 4;
            uint32_t gt0_rxpd : 2;           /* 8:9 SW=rw HW=ro 0x3 */
            uint32_t gt1_rxpd : 2;           /* 10:11 SW=rw HW=ro 0x3 */
            uint32_t gt2_rxpd : 2;           /* 12:13 SW=rw HW=ro 0x3 */
            uint32_t gt3_rxpd : 2;           /* 14:15 SW=rw HW=ro 0x3 */
            uint32_t gt0_rxcdrhold : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxcdrhold : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt2_rxcdrhold : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t gt3_rxcdrhold : 1;           /* 19 SW=rw HW=ro 0x0 */
            
            uint32_t resv20 : 11;
            uint32_t gt_data_valid_en : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_dp_gtp_rx_rx_misc_ctrl;

typedef struct {
    bb_top_dp_gtp_rx_rx_clk_ctrl  rx_clk_ctrl;
    bb_top_dp_gtp_rx_rx_rst_ctrl  rx_rst_ctrl;
    bb_top_dp_gtp_rx_rx_status  rx_status;
    bb_top_dp_gtp_rx_rx_byte_align_ctrl  rx_byte_align_ctrl;
    bb_top_dp_gtp_rx_rx_byte_align_status  rx_byte_align_status;
    bb_top_dp_gtp_rx_rx_prbs_ctrl  rx_prbs_ctrl;
    bb_top_dp_gtp_rx_rx_ph_monitor  rx_ph_monitor;
    bb_top_dp_gtp_rx_rx_ph_slip_monitor  rx_ph_slip_monitor;
    bb_top_dp_gtp_rx_rx_dmonitor_out  rx_dmonitor_out;
    bb_top_dp_gtp_rx_rx_eq_ctrl  rx_eq_ctrl;
    bb_top_dp_gtp_rx_rx_misc_ctrl  rx_misc_ctrl;
    
} bb_top_dp_gtp_rx;


/*section : rxaui */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t fix_missing_start : 1;           /* 8 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t type_sel : 2;           /* 5:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 3;
            uint32_t reset : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t reset : 1;           /* 0 SW=rw HW=ro 0x1 */
            
            uint32_t resv1 : 3;
            uint32_t type_sel : 2;           /* 4:5 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t fix_missing_start : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_control;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv6 : 26;
            uint32_t debug : 6;           /* 5:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t debug : 6;           /* 0:5 SW=ro HW=wo 0x0 */
            uint32_t resv6 : 26;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t gtrxreset : 1;           /* 31 SW=rw HW=ro 0x0 */
            
            uint32_t resv22 : 9;
            uint32_t gt1_rxbufreset : 1;           /* 21 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxbufreset : 1;           /* 20 SW=rw HW=ro 0x0 */
            
            uint32_t resv18 : 2;
            uint32_t gt1_rxlpmreset : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmreset : 1;           /* 16 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t gt1_rxpcsreset : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpcsreset : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 2;
            uint32_t gt1_rxpmareset : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpmareset : 1;           /* 8 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t gt1_txpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gt1_txpmareset : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpmareset : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txpmareset : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpmareset : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gt0_txpcsreset : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpcsreset : 1;           /* 5 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t gt0_rxpmareset : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpmareset : 1;           /* 9 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 2;
            uint32_t gt0_rxpcsreset : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpcsreset : 1;           /* 13 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t gt0_rxlpmreset : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmreset : 1;           /* 17 SW=rw HW=ro 0x0 */
            
            uint32_t resv18 : 2;
            uint32_t gt0_rxbufreset : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxbufreset : 1;           /* 21 SW=rw HW=ro 0x0 */
            
            uint32_t resv22 : 9;
            uint32_t gtrxreset : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_rst_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv20 : 12;
            uint32_t gt1_rxpmaresetdone : 1;           /* 19 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxpmaresetdone : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t gt1_txdlysresetdone : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t gt0_txdlysresetdone : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t gt1_txphinitdone : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t gt0_txphinitdone : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t gt1_txphaligndone : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t gt0_txphaligndone : 1;           /* 12 SW=ro HW=wo 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt1_rxbufstatus : 3;           /* 10:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt0_rxbufstatus : 3;           /* 6:4 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt1_txresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt0_txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t gt1_txresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxresetdone : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxresetdone : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxbufstatus : 3;           /* 4:6 SW=ro HW=wo 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt1_rxbufstatus : 3;           /* 8:10 SW=ro HW=wo 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt0_txphaligndone : 1;           /* 12 SW=ro HW=wo 0x0 */
            uint32_t gt1_txphaligndone : 1;           /* 13 SW=ro HW=wo 0x0 */
            uint32_t gt0_txphinitdone : 1;           /* 14 SW=ro HW=wo 0x0 */
            uint32_t gt1_txphinitdone : 1;           /* 15 SW=ro HW=wo 0x0 */
            uint32_t gt0_txdlysresetdone : 1;           /* 16 SW=ro HW=wo 0x0 */
            uint32_t gt1_txdlysresetdone : 1;           /* 17 SW=ro HW=wo 0x0 */
            uint32_t gt0_rxpmaresetdone : 1;           /* 18 SW=ro HW=wo 0x0 */
            uint32_t gt1_rxpmaresetdone : 1;           /* 19 SW=ro HW=wo 0x0 */
            uint32_t resv20 : 12;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t gt1_txdiffctrl : 4;           /* 7:4 SW=rw HW=ro 0xA */
            uint32_t gt0_txdiffctrl : 4;           /* 3:0 SW=rw HW=ro 0xA */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txdiffctrl : 4;           /* 0:3 SW=rw HW=ro 0xA */
            uint32_t gt1_txdiffctrl : 4;           /* 4:7 SW=rw HW=ro 0xA */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_tx_diff_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv13 : 19;
            uint32_t gt1_txpostcursor : 5;           /* 12:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_txpostcursor : 5;           /* 4:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txpostcursor : 5;           /* 0:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_txpostcursor : 5;           /* 8:12 SW=rw HW=ro 0x0 */
            uint32_t resv13 : 19;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_tx_post_cursor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv13 : 19;
            uint32_t gt1_txprecursor : 5;           /* 12:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt0_txprecursor : 5;           /* 4:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txprecursor : 5;           /* 0:4 SW=rw HW=ro 0x0 */
            
            uint32_t resv5 : 3;
            uint32_t gt1_txprecursor : 5;           /* 8:12 SW=rw HW=ro 0x0 */
            uint32_t resv13 : 19;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_tx_pre_cursor;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv14 : 18;
            uint32_t gt1_rxlpmlfovrden : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmlfovrden : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 2;
            uint32_t gt1_rxlpmlfhold : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmlfhold : 1;           /* 8 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t gt1_rxlpmhfovrden : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmhfovrden : 1;           /* 4 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gt1_rxlpmhfhold : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxlpmhfhold : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_rxlpmhfhold : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfhold : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 2;
            uint32_t gt0_rxlpmhfovrden : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmhfovrden : 1;           /* 5 SW=rw HW=ro 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t gt0_rxlpmlfhold : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmlfhold : 1;           /* 9 SW=rw HW=ro 0x0 */
            
            uint32_t resv10 : 2;
            uint32_t gt0_rxlpmlfovrden : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxlpmlfovrden : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t resv14 : 18;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_rx_eq_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t gt1_rxprbscntreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbssel : 3;           /* 14:12 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbssel : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbsforceerr : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbssel : 3;           /* 6:4 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbsforceerr : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbssel : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txprbssel : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            uint32_t gt0_txprbsforceerr : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbssel : 3;           /* 4:6 SW=rw HW=ro 0x0 */
            uint32_t gt1_txprbsforceerr : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbssel : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbssel : 3;           /* 12:14 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxprbscntreset : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_prbs_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv26 : 6;
            uint32_t gt1_rxcdrhold : 1;           /* 25 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxcdrhold : 1;           /* 24 SW=rw HW=ro 0x0 */
            
            uint32_t resv23 : 1;
            uint32_t gt1_rxrate : 3;           /* 22:20 SW=rw HW=ro 0x0 */
            
            uint32_t resv19 : 1;
            uint32_t gt0_rxrate : 3;           /* 18:16 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t gt1_rxpolarity : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t gt0_rxpolarity : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt1_loopback : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt0_loopback : 3;           /* 6:4 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_txinhibit : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_txinhibit : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_txinhibit : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt1_txinhibit : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_txpolarity : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt0_loopback : 3;           /* 4:6 SW=rw HW=ro 0x0 */
            
            uint32_t resv7 : 1;
            uint32_t gt1_loopback : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t gt0_rxpolarity : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxpolarity : 1;           /* 13 SW=rw HW=ro 0x0 */
            
            uint32_t resv14 : 2;
            uint32_t gt0_rxrate : 3;           /* 16:18 SW=rw HW=ro 0x0 */
            
            uint32_t resv19 : 1;
            uint32_t gt1_rxrate : 3;           /* 20:22 SW=rw HW=ro 0x0 */
            
            uint32_t resv23 : 1;
            uint32_t gt0_rxcdrhold : 1;           /* 24 SW=rw HW=ro 0x0 */
            uint32_t gt1_rxcdrhold : 1;           /* 25 SW=rw HW=ro 0x0 */
            uint32_t resv26 : 6;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_gt_misc_ctrl;

/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv5 : 27;
            uint32_t missing_start : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t gt1_not_in_table : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t gt1_disp_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt0_not_in_table : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt0_disp_err : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt0_disp_err : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt0_not_in_table : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt1_disp_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt1_not_in_table : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t missing_start : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t resv5 : 27;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_rxaui_stats0_rd2clr_config;

typedef union {
    struct {
        uint32_t gt0_disp_err : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_rxaui_stats0_gt0_disp_err;

typedef union {
    struct {
        uint32_t gt0_not_in_table : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_rxaui_stats0_gt0_not_in_table;

typedef union {
    struct {
        uint32_t gt1_disp_err : 32;           /* 31:0 SW=ro HW=na 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_rxaui_stats0_gt1_disp_err;

typedef union {
    struct {
        uint32_t gt1_not_in_table : 32;           /* 31:0 SW=ro HW=na 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_rxaui_stats0_gt1_not_in_table;

typedef union {
    struct {
        uint32_t missing_start : 32;           /* 31:0 SW=ro HW=na 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_rxaui_stats0_missing_start;

typedef struct {
    bb_top_rxaui_stats0_rd2clr_config  rd2clr_config;
    bb_top_rxaui_stats0_gt0_disp_err  gt0_disp_err;
    bb_top_rxaui_stats0_gt0_not_in_table  gt0_not_in_table;
    bb_top_rxaui_stats0_gt1_disp_err  gt1_disp_err;
    bb_top_rxaui_stats0_gt1_not_in_table  gt1_not_in_table;
    bb_top_rxaui_stats0_missing_start  missing_start;
    
} bb_top_rxaui_stats0;


typedef struct {
    bb_top_rxaui_control  control;
    bb_top_rxaui_status  status;
    bb_top_rxaui_gt_rst_ctrl  gt_rst_ctrl;
    bb_top_rxaui_gt_status  gt_status;
    bb_top_rxaui_gt_tx_diff_ctrl  gt_tx_diff_ctrl;
    bb_top_rxaui_gt_tx_post_cursor  gt_tx_post_cursor;
    bb_top_rxaui_gt_tx_pre_cursor  gt_tx_pre_cursor;
    bb_top_rxaui_gt_rx_eq_ctrl  gt_rx_eq_ctrl;
    bb_top_rxaui_gt_prbs_ctrl  gt_prbs_ctrl;
    bb_top_rxaui_gt_misc_ctrl  gt_misc_ctrl;
    
    union {
        bb_top_rxaui_stats0 s;
        uint8_t filler[0x18];
    } stats0;
    
} bb_top_rxaui;


/*section : sl_5g */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv11 : 21;
            uint32_t rxbufreset : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t rxlpmreset : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t eyescanreset : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t rxpmareset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t rxpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t dont_reset_on_data_error : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t soft_reset_rx : 1;           /* 4 SW=rw HW=ro 0x1 */
            
            uint32_t resv3 : 1;
            uint32_t txpmareset : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t txpcsreset : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t soft_reset_tx : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t soft_reset_tx : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t txpcsreset : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t txpmareset : 1;           /* 2 SW=rw HW=ro 0x0 */
            
            uint32_t resv3 : 1;
            uint32_t soft_reset_rx : 1;           /* 4 SW=rw HW=ro 0x1 */
            uint32_t dont_reset_on_data_error : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t rxpcsreset : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t rxpmareset : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t eyescanreset : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t rxlpmreset : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t rxbufreset : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t resv11 : 21;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_gt_rst_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv28 : 4;
            uint32_t txprbsforceerr : 1;           /* 27 SW=rw HW=ro 0x0 */
            uint32_t txprbssel : 3;           /* 26:24 SW=rw HW=ro 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t txpostcursor : 5;           /* 20:16 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t txprecursor : 5;           /* 12:8 SW=rw HW=ro 0x0 */
            uint32_t txdiffctrl : 4;           /* 7:4 SW=rw HW=ro 0x4 */
            uint32_t txinhibit : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t txpd : 2;           /* 1:0 SW=rw HW=ro 0x3 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t txpd : 2;           /* 0:1 SW=rw HW=ro 0x3 */
            uint32_t txpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t txinhibit : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t txdiffctrl : 4;           /* 4:7 SW=rw HW=ro 0x4 */
            uint32_t txprecursor : 5;           /* 8:12 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t txpostcursor : 5;           /* 16:20 SW=rw HW=ro 0x0 */
            
            uint32_t resv21 : 3;
            uint32_t txprbssel : 3;           /* 24:26 SW=rw HW=ro 0x0 */
            uint32_t txprbsforceerr : 1;           /* 27 SW=rw HW=ro 0x0 */
            uint32_t resv28 : 4;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_gt_tx_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t rxprbssel : 3;           /* 10:8 SW=rw HW=ro 0x0 */
            uint32_t rxlpmlfhold : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t rxlpmhfovrden : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t rxlpmhfhold : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t rxcdrhold : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t data_valid_en : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t rxpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t rxpd : 2;           /* 1:0 SW=rw HW=ro 0x3 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t rxpd : 2;           /* 0:1 SW=rw HW=ro 0x3 */
            uint32_t rxpolarity : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t data_valid_en : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t rxcdrhold : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t rxlpmhfhold : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t rxlpmhfovrden : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t rxlpmlfhold : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t rxprbssel : 3;           /* 8:10 SW=rw HW=ro 0x0 */
            uint32_t rxprbscntreset : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_gt_rx_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t loopback : 3;           /* 2:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t loopback : 3;           /* 0:2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_gt_misc_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t dmonitorout : 8;           /* 23:16 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t rxbyteisaligned : 1;           /* 12 SW=ro HW=wo 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t rxbufstatus : 3;           /* 10:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t rxclkcorcnt : 2;           /* 5:4 SW=ro HW=wo 0x0 */
            uint32_t rx_fsm_reset_done : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t tx_fsm_reset_done : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t rxresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t txresetdone : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t rxresetdone : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t tx_fsm_reset_done : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t rx_fsm_reset_done : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t rxclkcorcnt : 2;           /* 4:5 SW=ro HW=wo 0x0 */
            
            uint32_t resv6 : 2;
            uint32_t rxbufstatus : 3;           /* 8:10 SW=ro HW=wo 0x0 */
            
            uint32_t resv11 : 1;
            uint32_t rxbyteisaligned : 1;           /* 12 SW=ro HW=wo 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t dmonitorout : 8;           /* 16:23 SW=ro HW=wo 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_gt_status;

/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t gt_rxbyterealign : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t gt_not_in_table : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt_disp_err : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t gt_disp_err : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t gt_not_in_table : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t gt_rxbyterealign : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} bb_top_sl_5g_stats0_rd2clr_config;

typedef union {
    struct {
        uint32_t gt_disp_err : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_sl_5g_stats0_gt_disp_err;

typedef union {
    struct {
        uint32_t gt_not_in_table : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_sl_5g_stats0_gt_not_in_table;

typedef union {
    struct {
        uint32_t gt_rxbyterealign : 32;           /* 31:0 SW=ro HW=na 0x0 */
    } bf;
    uint32_t  dw;
} bb_top_sl_5g_stats0_gt_rxbyterealign;

typedef struct {
    bb_top_sl_5g_stats0_rd2clr_config  rd2clr_config;
    bb_top_sl_5g_stats0_gt_disp_err  gt_disp_err;
    bb_top_sl_5g_stats0_gt_not_in_table  gt_not_in_table;
    bb_top_sl_5g_stats0_gt_rxbyterealign  gt_rxbyterealign;
    
} bb_top_sl_5g_stats0;


typedef struct {
    bb_top_sl_5g_gt_rst_ctrl  gt_rst_ctrl;
    bb_top_sl_5g_gt_tx_ctrl  gt_tx_ctrl;
    bb_top_sl_5g_gt_rx_ctrl  gt_rx_ctrl;
    bb_top_sl_5g_gt_misc_ctrl  gt_misc_ctrl;
    bb_top_sl_5g_gt_status  gt_status;
    
    union {
        bb_top_sl_5g_stats0 s;
        uint8_t filler[0x10];
    } stats0;
    
} bb_top_sl_5g;


typedef struct {
    bb_top_version  version;
    bb_top_sys_config  sys_config;
    bb_top_feature  feature;
    
    union {
        bb_top_icap s;
        uint8_t filler[0x8];
    } icap;
    
    union {
        bb_top_grm s;
        uint8_t filler[0x4];
    } grm;
    
    union {
        bb_top_gcm s;
        uint8_t filler[0x14];
    } gcm;
    
    union {
        bb_top_irq s;
        uint8_t filler[0x10];
    } irq;
    bb_top_link_ctrl  link_ctrl;
    bb_top_mdio_ctrl  mdio_ctrl;
    bb_top_i2c_ctrl  i2c_ctrl;
    bb_top_uart_ctrl  uart_ctrl;
    bb_top_sfp_ctrl  sfp_ctrl;
    bb_top_sfp_status  sfp_status;
    bb_top_usb3phy_ctrl  usb3phy_ctrl;
    bb_top_ge_ctrl  ge_ctrl;
    bb_top_xmii_ctrl  xmii_ctrl;
    bb_top_rs232_ctrl  rs232_ctrl;
    
    uint8_t filler18[0x9C];
    
    
    union {
        bb_top_drp s;
        uint8_t filler[0xC];
    } drp;
    
    union {
        bb_top_dp_gtp_common s;
        uint8_t filler[0xC];
    } dp_gtp_common;
    
    union {
        bb_top_dp_gtp_tx s;
        uint8_t filler[0x20];
    } dp_gtp_tx;
    
    union {
        bb_top_dp_gtp_rx s;
        uint8_t filler[0x2C];
    } dp_gtp_rx;
    
    union {
        bb_top_rxaui s;
        uint8_t filler[0x40];
    } rxaui;
    
    union {
        bb_top_sl_5g s;
        uint8_t filler[0x24];
    } sl_5g;
    
    
    uint8_t filler12[0x38];
    
    
} bb_top_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define bb_top_version_READMASK 0xFFFFFF
#define bb_top_version_WRITEMASK 0x0
#define bb_top_version_VOLATILEMASK 0x0
#define bb_top_version_RESETMASK 0xFFFFFF
#define bb_top_version_DEFAULT 0x00100104

#define bb_top_sys_config_READMASK 0xFFFF3FFD
#define bb_top_sys_config_WRITEMASK 0x0
#define bb_top_sys_config_VOLATILEMASK 0xFFFF3FFD
#define bb_top_sys_config_RESETMASK 0xFFFF3FFD
#define bb_top_sys_config_DEFAULT 0x00000000

#define bb_top_feature_READMASK 0x1F
#define bb_top_feature_WRITEMASK 0x0
#define bb_top_feature_VOLATILEMASK 0x1F
#define bb_top_feature_RESETMASK 0x1F
#define bb_top_feature_DEFAULT 0x00000000

#define bb_top_icap_wdata_READMASK 0xFFFFFFFF
#define bb_top_icap_wdata_WRITEMASK 0xFFFFFFFF
#define bb_top_icap_wdata_VOLATILEMASK 0x0
#define bb_top_icap_wdata_RESETMASK 0xFFFFFFFF
#define bb_top_icap_wdata_DEFAULT 0x00000000

#define bb_top_icap_rdata_READMASK 0xFFFFFFFF
#define bb_top_icap_rdata_WRITEMASK 0xFFFFFFFF
#define bb_top_icap_rdata_VOLATILEMASK 0xFFFFFFFF
#define bb_top_icap_rdata_RESETMASK 0xFFFFFFFF
#define bb_top_icap_rdata_DEFAULT 0x00000000

#define bb_top_grm_soft_rst_ctrl_READMASK 0xBFFFFFFF
#define bb_top_grm_soft_rst_ctrl_WRITEMASK 0xBFFFFFFF
#define bb_top_grm_soft_rst_ctrl_VOLATILEMASK 0x0
#define bb_top_grm_soft_rst_ctrl_RESETMASK 0xBFFFFFFF
#define bb_top_grm_soft_rst_ctrl_DEFAULT 0x3FFFFFFF

#define bb_top_gcm_control_READMASK 0x111
#define bb_top_gcm_control_WRITEMASK 0x111
#define bb_top_gcm_control_VOLATILEMASK 0x0
#define bb_top_gcm_control_RESETMASK 0x111
#define bb_top_gcm_control_DEFAULT 0x00000101

#define bb_top_gcm_status_READMASK 0x711
#define bb_top_gcm_status_WRITEMASK 0x0
#define bb_top_gcm_status_VOLATILEMASK 0x711
#define bb_top_gcm_status_RESETMASK 0x711
#define bb_top_gcm_status_DEFAULT 0x00000000

#define bb_top_gcm_freq_det_READMASK 0xFF1FFF
#define bb_top_gcm_freq_det_WRITEMASK 0xFFF
#define bb_top_gcm_freq_det_VOLATILEMASK 0xFF1000
#define bb_top_gcm_freq_det_RESETMASK 0xFF1FFF
#define bb_top_gcm_freq_det_DEFAULT 0x00000000

#define bb_top_gcm_freq_det_dp_READMASK 0xFFFDFFFF
#define bb_top_gcm_freq_det_dp_WRITEMASK 0xFFFF
#define bb_top_gcm_freq_det_dp_VOLATILEMASK 0xFFFD0000
#define bb_top_gcm_freq_det_dp_RESETMASK 0xFFFDFFFF
#define bb_top_gcm_freq_det_dp_DEFAULT 0x00000000

#define bb_top_gcm_freq_det_dp_auto_READMASK 0xFFFF3FFF
#define bb_top_gcm_freq_det_dp_auto_WRITEMASK 0xFFFF3FFF
#define bb_top_gcm_freq_det_dp_auto_VOLATILEMASK 0x0
#define bb_top_gcm_freq_det_dp_auto_RESETMASK 0xFFFF3FFF
#define bb_top_gcm_freq_det_dp_auto_DEFAULT 0x00000000

#define bb_top_irq_enable_READMASK 0x7FFFF
#define bb_top_irq_enable_WRITEMASK 0x7FFFF
#define bb_top_irq_enable_VOLATILEMASK 0x0
#define bb_top_irq_enable_RESETMASK 0x7FFFF
#define bb_top_irq_enable_DEFAULT 0x00000000

#define bb_top_irq_pending_READMASK 0x7FFFF
#define bb_top_irq_pending_WRITEMASK 0x7FFFF
#define bb_top_irq_pending_VOLATILEMASK 0x7FFFF
#define bb_top_irq_pending_RESETMASK 0x7FFFF
#define bb_top_irq_pending_DEFAULT 0x00000000

#define bb_top_irq_pending_irq_READMASK 0x7FFFF
#define bb_top_irq_pending_irq_WRITEMASK 0x0
#define bb_top_irq_pending_irq_VOLATILEMASK 0x0
#define bb_top_irq_pending_irq_RESETMASK 0x7FFFF
#define bb_top_irq_pending_irq_DEFAULT 0x00000000

#define bb_top_irq_raw_READMASK 0x7FFFF
#define bb_top_irq_raw_WRITEMASK 0x0
#define bb_top_irq_raw_VOLATILEMASK 0x7FFFF
#define bb_top_irq_raw_RESETMASK 0x7FFFF
#define bb_top_irq_raw_DEFAULT 0x00000000

#define bb_top_link_ctrl_READMASK 0x1
#define bb_top_link_ctrl_WRITEMASK 0x1
#define bb_top_link_ctrl_VOLATILEMASK 0x0
#define bb_top_link_ctrl_RESETMASK 0x1
#define bb_top_link_ctrl_DEFAULT 0x00000000

#define bb_top_mdio_ctrl_READMASK 0x11
#define bb_top_mdio_ctrl_WRITEMASK 0x11
#define bb_top_mdio_ctrl_VOLATILEMASK 0x0
#define bb_top_mdio_ctrl_RESETMASK 0x11
#define bb_top_mdio_ctrl_DEFAULT 0x00000001

#define bb_top_i2c_ctrl_READMASK 0x11
#define bb_top_i2c_ctrl_WRITEMASK 0x11
#define bb_top_i2c_ctrl_VOLATILEMASK 0x0
#define bb_top_i2c_ctrl_RESETMASK 0x11
#define bb_top_i2c_ctrl_DEFAULT 0x00000001

#define bb_top_uart_ctrl_READMASK 0x1
#define bb_top_uart_ctrl_WRITEMASK 0x1
#define bb_top_uart_ctrl_VOLATILEMASK 0x0
#define bb_top_uart_ctrl_RESETMASK 0x1
#define bb_top_uart_ctrl_DEFAULT 0x00000000

#define bb_top_sfp_ctrl_READMASK 0x13
#define bb_top_sfp_ctrl_WRITEMASK 0x13
#define bb_top_sfp_ctrl_VOLATILEMASK 0x0
#define bb_top_sfp_ctrl_RESETMASK 0x13
#define bb_top_sfp_ctrl_DEFAULT 0x00000013

#define bb_top_sfp_status_READMASK 0x111
#define bb_top_sfp_status_WRITEMASK 0x0
#define bb_top_sfp_status_VOLATILEMASK 0x111
#define bb_top_sfp_status_RESETMASK 0x111
#define bb_top_sfp_status_DEFAULT 0x00000000

#define bb_top_usb3phy_ctrl_READMASK 0x170313
#define bb_top_usb3phy_ctrl_WRITEMASK 0x170313
#define bb_top_usb3phy_ctrl_VOLATILEMASK 0x0
#define bb_top_usb3phy_ctrl_RESETMASK 0x170313
#define bb_top_usb3phy_ctrl_DEFAULT 0x00000000

#define bb_top_ge_ctrl_READMASK 0x11F
#define bb_top_ge_ctrl_WRITEMASK 0x11F
#define bb_top_ge_ctrl_VOLATILEMASK 0x0
#define bb_top_ge_ctrl_RESETMASK 0x11F
#define bb_top_ge_ctrl_DEFAULT 0x00000100

#define bb_top_xmii_ctrl_READMASK 0xFF33
#define bb_top_xmii_ctrl_WRITEMASK 0xFF33
#define bb_top_xmii_ctrl_VOLATILEMASK 0x0
#define bb_top_xmii_ctrl_RESETMASK 0xFF33
#define bb_top_xmii_ctrl_DEFAULT 0x00000000

#define bb_top_rs232_ctrl_READMASK 0x13
#define bb_top_rs232_ctrl_WRITEMASK 0x3
#define bb_top_rs232_ctrl_VOLATILEMASK 0x10
#define bb_top_rs232_ctrl_RESETMASK 0x13
#define bb_top_rs232_ctrl_DEFAULT 0x00000000

#define bb_top_drp_drp_ctrl_READMASK 0xFFFF11FF
#define bb_top_drp_drp_ctrl_WRITEMASK 0xFFFF11FF
#define bb_top_drp_drp_ctrl_VOLATILEMASK 0x0
#define bb_top_drp_drp_ctrl_RESETMASK 0xFFFF11FF
#define bb_top_drp_drp_ctrl_DEFAULT 0x00000000

#define bb_top_drp_drp_en_mask_READMASK 0x1FFF
#define bb_top_drp_drp_en_mask_WRITEMASK 0x1FFF
#define bb_top_drp_drp_en_mask_VOLATILEMASK 0x0
#define bb_top_drp_drp_en_mask_RESETMASK 0x1FFF
#define bb_top_drp_drp_en_mask_DEFAULT 0x00000000

#define bb_top_drp_drp_read_data_READMASK 0xFFFF
#define bb_top_drp_drp_read_data_WRITEMASK 0x0
#define bb_top_drp_drp_read_data_VOLATILEMASK 0xFFFF
#define bb_top_drp_drp_read_data_RESETMASK 0xFFFF
#define bb_top_drp_drp_read_data_DEFAULT 0x00000000

#define bb_top_dp_gtp_common_pll_ctrl_READMASK 0x773
#define bb_top_dp_gtp_common_pll_ctrl_WRITEMASK 0x773
#define bb_top_dp_gtp_common_pll_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_common_pll_ctrl_RESETMASK 0x773
#define bb_top_dp_gtp_common_pll_ctrl_DEFAULT 0x00000113

#define bb_top_dp_gtp_common_pll_status_READMASK 0x33
#define bb_top_dp_gtp_common_pll_status_WRITEMASK 0x0
#define bb_top_dp_gtp_common_pll_status_VOLATILEMASK 0x33
#define bb_top_dp_gtp_common_pll_status_RESETMASK 0x33
#define bb_top_dp_gtp_common_pll_status_DEFAULT 0x00000000

#define bb_top_dp_gtp_common_loopback_ctrl_READMASK 0x7777
#define bb_top_dp_gtp_common_loopback_ctrl_WRITEMASK 0x7777
#define bb_top_dp_gtp_common_loopback_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_common_loopback_ctrl_RESETMASK 0x7777
#define bb_top_dp_gtp_common_loopback_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_clk_ctrl_READMASK 0xFF
#define bb_top_dp_gtp_tx_tx_clk_ctrl_WRITEMASK 0xFF
#define bb_top_dp_gtp_tx_tx_clk_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_clk_ctrl_RESETMASK 0xFF
#define bb_top_dp_gtp_tx_tx_clk_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_rst_ctrl_READMASK 0xF1
#define bb_top_dp_gtp_tx_tx_rst_ctrl_WRITEMASK 0xF1
#define bb_top_dp_gtp_tx_tx_rst_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_rst_ctrl_RESETMASK 0xF1
#define bb_top_dp_gtp_tx_tx_rst_ctrl_DEFAULT 0x00000001

#define bb_top_dp_gtp_tx_tx_status_READMASK 0x1FF
#define bb_top_dp_gtp_tx_tx_status_WRITEMASK 0x0
#define bb_top_dp_gtp_tx_tx_status_VOLATILEMASK 0x1FF
#define bb_top_dp_gtp_tx_tx_status_RESETMASK 0x1FF
#define bb_top_dp_gtp_tx_tx_status_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_diff_ctrl_READMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_diff_ctrl_WRITEMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_diff_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_diff_ctrl_RESETMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_diff_ctrl_DEFAULT 0x00002222

#define bb_top_dp_gtp_tx_tx_post_cursor_READMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_post_cursor_WRITEMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_post_cursor_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_post_cursor_RESETMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_post_cursor_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_pre_cursor_READMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_pre_cursor_WRITEMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_pre_cursor_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_pre_cursor_RESETMASK 0x1F0F9F1F
#define bb_top_dp_gtp_tx_tx_pre_cursor_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_prbs_ctrl_READMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_WRITEMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_RESETMASK 0xFFFF
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_tx_tx_misc_ctrl_READMASK 0xFFFFF
#define bb_top_dp_gtp_tx_tx_misc_ctrl_WRITEMASK 0xFFFFF
#define bb_top_dp_gtp_tx_tx_misc_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_tx_tx_misc_ctrl_RESETMASK 0xFFFFF
#define bb_top_dp_gtp_tx_tx_misc_ctrl_DEFAULT 0x0000FFF0

#define bb_top_dp_gtp_rx_rx_clk_ctrl_READMASK 0xFF
#define bb_top_dp_gtp_rx_rx_clk_ctrl_WRITEMASK 0xFF
#define bb_top_dp_gtp_rx_rx_clk_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_clk_ctrl_RESETMASK 0xFF
#define bb_top_dp_gtp_rx_rx_clk_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_rst_ctrl_READMASK 0xFFFF3
#define bb_top_dp_gtp_rx_rx_rst_ctrl_WRITEMASK 0xFFFF3
#define bb_top_dp_gtp_rx_rx_rst_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_rst_ctrl_RESETMASK 0xFFFF3
#define bb_top_dp_gtp_rx_rx_rst_ctrl_DEFAULT 0x00000001

#define bb_top_dp_gtp_rx_rx_status_READMASK 0x1FF
#define bb_top_dp_gtp_rx_rx_status_WRITEMASK 0x0
#define bb_top_dp_gtp_rx_rx_status_VOLATILEMASK 0x1FF
#define bb_top_dp_gtp_rx_rx_status_RESETMASK 0x1FF
#define bb_top_dp_gtp_rx_rx_status_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_READMASK 0xFF
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_WRITEMASK 0xFF
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_RESETMASK 0xFF
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_DEFAULT 0x000000FF

#define bb_top_dp_gtp_rx_rx_byte_align_status_READMASK 0xF
#define bb_top_dp_gtp_rx_rx_byte_align_status_WRITEMASK 0x0
#define bb_top_dp_gtp_rx_rx_byte_align_status_VOLATILEMASK 0xF
#define bb_top_dp_gtp_rx_rx_byte_align_status_RESETMASK 0xF
#define bb_top_dp_gtp_rx_rx_byte_align_status_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_prbs_ctrl_READMASK 0xFFFF
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_WRITEMASK 0xFFFF
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_RESETMASK 0xFFFF
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_ph_monitor_READMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_monitor_WRITEMASK 0x0
#define bb_top_dp_gtp_rx_rx_ph_monitor_VOLATILEMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_monitor_RESETMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_monitor_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_READMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_WRITEMASK 0x0
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_VOLATILEMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_RESETMASK 0x1F1F1F1F
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_dmonitor_out_READMASK 0xFFFFFFFF
#define bb_top_dp_gtp_rx_rx_dmonitor_out_WRITEMASK 0x0
#define bb_top_dp_gtp_rx_rx_dmonitor_out_VOLATILEMASK 0xFFFFFFFF
#define bb_top_dp_gtp_rx_rx_dmonitor_out_RESETMASK 0xFFFFFFFF
#define bb_top_dp_gtp_rx_rx_dmonitor_out_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_eq_ctrl_READMASK 0xFFF
#define bb_top_dp_gtp_rx_rx_eq_ctrl_WRITEMASK 0xFFF
#define bb_top_dp_gtp_rx_rx_eq_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_eq_ctrl_RESETMASK 0xFFF
#define bb_top_dp_gtp_rx_rx_eq_ctrl_DEFAULT 0x00000000

#define bb_top_dp_gtp_rx_rx_misc_ctrl_READMASK 0x800FFF0F
#define bb_top_dp_gtp_rx_rx_misc_ctrl_WRITEMASK 0x800FFF0F
#define bb_top_dp_gtp_rx_rx_misc_ctrl_VOLATILEMASK 0x0
#define bb_top_dp_gtp_rx_rx_misc_ctrl_RESETMASK 0x800FFF0F
#define bb_top_dp_gtp_rx_rx_misc_ctrl_DEFAULT 0x0000FF00

#define bb_top_rxaui_control_READMASK 0x131
#define bb_top_rxaui_control_WRITEMASK 0x131
#define bb_top_rxaui_control_VOLATILEMASK 0x0
#define bb_top_rxaui_control_RESETMASK 0x131
#define bb_top_rxaui_control_DEFAULT 0x00000001

#define bb_top_rxaui_status_READMASK 0x3F
#define bb_top_rxaui_status_WRITEMASK 0x0
#define bb_top_rxaui_status_VOLATILEMASK 0x3F
#define bb_top_rxaui_status_RESETMASK 0x3F
#define bb_top_rxaui_status_DEFAULT 0x00000000

#define bb_top_rxaui_gt_rst_ctrl_READMASK 0x80333333
#define bb_top_rxaui_gt_rst_ctrl_WRITEMASK 0x80333333
#define bb_top_rxaui_gt_rst_ctrl_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_rst_ctrl_RESETMASK 0x80333333
#define bb_top_rxaui_gt_rst_ctrl_DEFAULT 0x00000000

#define bb_top_rxaui_gt_status_READMASK 0xFF77F
#define bb_top_rxaui_gt_status_WRITEMASK 0x0
#define bb_top_rxaui_gt_status_VOLATILEMASK 0xFF77F
#define bb_top_rxaui_gt_status_RESETMASK 0xFF77F
#define bb_top_rxaui_gt_status_DEFAULT 0x00000000

#define bb_top_rxaui_gt_tx_diff_ctrl_READMASK 0xFF
#define bb_top_rxaui_gt_tx_diff_ctrl_WRITEMASK 0xFF
#define bb_top_rxaui_gt_tx_diff_ctrl_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_tx_diff_ctrl_RESETMASK 0xFF
#define bb_top_rxaui_gt_tx_diff_ctrl_DEFAULT 0x000000AA

#define bb_top_rxaui_gt_tx_post_cursor_READMASK 0x1F1F
#define bb_top_rxaui_gt_tx_post_cursor_WRITEMASK 0x1F1F
#define bb_top_rxaui_gt_tx_post_cursor_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_tx_post_cursor_RESETMASK 0x1F1F
#define bb_top_rxaui_gt_tx_post_cursor_DEFAULT 0x00000000

#define bb_top_rxaui_gt_tx_pre_cursor_READMASK 0x1F1F
#define bb_top_rxaui_gt_tx_pre_cursor_WRITEMASK 0x1F1F
#define bb_top_rxaui_gt_tx_pre_cursor_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_tx_pre_cursor_RESETMASK 0x1F1F
#define bb_top_rxaui_gt_tx_pre_cursor_DEFAULT 0x00000000

#define bb_top_rxaui_gt_rx_eq_ctrl_READMASK 0x3333
#define bb_top_rxaui_gt_rx_eq_ctrl_WRITEMASK 0x3333
#define bb_top_rxaui_gt_rx_eq_ctrl_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_rx_eq_ctrl_RESETMASK 0x3333
#define bb_top_rxaui_gt_rx_eq_ctrl_DEFAULT 0x00000000

#define bb_top_rxaui_gt_prbs_ctrl_READMASK 0xFFFF
#define bb_top_rxaui_gt_prbs_ctrl_WRITEMASK 0xFFFF
#define bb_top_rxaui_gt_prbs_ctrl_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_prbs_ctrl_RESETMASK 0xFFFF
#define bb_top_rxaui_gt_prbs_ctrl_DEFAULT 0x00000000

#define bb_top_rxaui_gt_misc_ctrl_READMASK 0x377377F
#define bb_top_rxaui_gt_misc_ctrl_WRITEMASK 0x377377F
#define bb_top_rxaui_gt_misc_ctrl_VOLATILEMASK 0x0
#define bb_top_rxaui_gt_misc_ctrl_RESETMASK 0x377377F
#define bb_top_rxaui_gt_misc_ctrl_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_rd2clr_config_READMASK 0x1F
#define bb_top_rxaui_stats0_rd2clr_config_WRITEMASK 0x1F
#define bb_top_rxaui_stats0_rd2clr_config_VOLATILEMASK 0x0
#define bb_top_rxaui_stats0_rd2clr_config_RESETMASK 0x1F
#define bb_top_rxaui_stats0_rd2clr_config_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_gt0_disp_err_READMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_disp_err_WRITEMASK 0x0
#define bb_top_rxaui_stats0_gt0_disp_err_VOLATILEMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_disp_err_RESETMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_disp_err_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_gt0_not_in_table_READMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_not_in_table_WRITEMASK 0x0
#define bb_top_rxaui_stats0_gt0_not_in_table_VOLATILEMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_not_in_table_RESETMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt0_not_in_table_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_gt1_disp_err_READMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt1_disp_err_WRITEMASK 0x0
#define bb_top_rxaui_stats0_gt1_disp_err_VOLATILEMASK 0x0
#define bb_top_rxaui_stats0_gt1_disp_err_RESETMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt1_disp_err_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_gt1_not_in_table_READMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt1_not_in_table_WRITEMASK 0x0
#define bb_top_rxaui_stats0_gt1_not_in_table_VOLATILEMASK 0x0
#define bb_top_rxaui_stats0_gt1_not_in_table_RESETMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_gt1_not_in_table_DEFAULT 0x00000000

#define bb_top_rxaui_stats0_missing_start_READMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_missing_start_WRITEMASK 0x0
#define bb_top_rxaui_stats0_missing_start_VOLATILEMASK 0x0
#define bb_top_rxaui_stats0_missing_start_RESETMASK 0xFFFFFFFF
#define bb_top_rxaui_stats0_missing_start_DEFAULT 0x00000000

#define bb_top_sl_5g_gt_rst_ctrl_READMASK 0x7F7
#define bb_top_sl_5g_gt_rst_ctrl_WRITEMASK 0x7F7
#define bb_top_sl_5g_gt_rst_ctrl_VOLATILEMASK 0x0
#define bb_top_sl_5g_gt_rst_ctrl_RESETMASK 0x7F7
#define bb_top_sl_5g_gt_rst_ctrl_DEFAULT 0x00000011

#define bb_top_sl_5g_gt_tx_ctrl_READMASK 0xF1F1FFF
#define bb_top_sl_5g_gt_tx_ctrl_WRITEMASK 0xF1F1FFF
#define bb_top_sl_5g_gt_tx_ctrl_VOLATILEMASK 0x0
#define bb_top_sl_5g_gt_tx_ctrl_RESETMASK 0xF1F1FFF
#define bb_top_sl_5g_gt_tx_ctrl_DEFAULT 0x00000043

#define bb_top_sl_5g_gt_rx_ctrl_READMASK 0xFFF
#define bb_top_sl_5g_gt_rx_ctrl_WRITEMASK 0xFFF
#define bb_top_sl_5g_gt_rx_ctrl_VOLATILEMASK 0x0
#define bb_top_sl_5g_gt_rx_ctrl_RESETMASK 0xFFF
#define bb_top_sl_5g_gt_rx_ctrl_DEFAULT 0x00000003

#define bb_top_sl_5g_gt_misc_ctrl_READMASK 0x7
#define bb_top_sl_5g_gt_misc_ctrl_WRITEMASK 0x7
#define bb_top_sl_5g_gt_misc_ctrl_VOLATILEMASK 0x0
#define bb_top_sl_5g_gt_misc_ctrl_RESETMASK 0x7
#define bb_top_sl_5g_gt_misc_ctrl_DEFAULT 0x00000000

#define bb_top_sl_5g_gt_status_READMASK 0xFF173F
#define bb_top_sl_5g_gt_status_WRITEMASK 0x0
#define bb_top_sl_5g_gt_status_VOLATILEMASK 0xFF173F
#define bb_top_sl_5g_gt_status_RESETMASK 0xFF173F
#define bb_top_sl_5g_gt_status_DEFAULT 0x00000000

#define bb_top_sl_5g_stats0_rd2clr_config_READMASK 0x7
#define bb_top_sl_5g_stats0_rd2clr_config_WRITEMASK 0x7
#define bb_top_sl_5g_stats0_rd2clr_config_VOLATILEMASK 0x0
#define bb_top_sl_5g_stats0_rd2clr_config_RESETMASK 0x7
#define bb_top_sl_5g_stats0_rd2clr_config_DEFAULT 0x00000000

#define bb_top_sl_5g_stats0_gt_disp_err_READMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_disp_err_WRITEMASK 0x0
#define bb_top_sl_5g_stats0_gt_disp_err_VOLATILEMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_disp_err_RESETMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_disp_err_DEFAULT 0x00000000

#define bb_top_sl_5g_stats0_gt_not_in_table_READMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_not_in_table_WRITEMASK 0x0
#define bb_top_sl_5g_stats0_gt_not_in_table_VOLATILEMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_not_in_table_RESETMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_not_in_table_DEFAULT 0x00000000

#define bb_top_sl_5g_stats0_gt_rxbyterealign_READMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_rxbyterealign_WRITEMASK 0x0
#define bb_top_sl_5g_stats0_gt_rxbyterealign_VOLATILEMASK 0x0
#define bb_top_sl_5g_stats0_gt_rxbyterealign_RESETMASK 0xFFFFFFFF
#define bb_top_sl_5g_stats0_gt_rxbyterealign_DEFAULT 0x00000000

#define bb_top_s_SIZE 0x200
#define bb_top_version_SIZE 0x4
#define bb_top_sys_config_SIZE 0x4
#define bb_top_feature_SIZE 0x4
#define bb_top_icap_SIZE 0x8
#define bb_top_icap_wdata_SIZE 0x4
#define bb_top_icap_rdata_SIZE 0x4
#define bb_top_grm_SIZE 0x4
#define bb_top_grm_soft_rst_ctrl_SIZE 0x4
#define bb_top_gcm_SIZE 0x14
#define bb_top_gcm_control_SIZE 0x4
#define bb_top_gcm_status_SIZE 0x4
#define bb_top_gcm_freq_det_SIZE 0x4
#define bb_top_gcm_freq_det_dp_SIZE 0x4
#define bb_top_gcm_freq_det_dp_auto_SIZE 0x4
#define bb_top_irq_SIZE 0x10
#define bb_top_irq_enable_SIZE 0x4
#define bb_top_irq_pending_SIZE 0x4
#define bb_top_irq_pending_irq_SIZE 0x4
#define bb_top_irq_raw_SIZE 0x4
#define bb_top_link_ctrl_SIZE 0x4
#define bb_top_mdio_ctrl_SIZE 0x4
#define bb_top_i2c_ctrl_SIZE 0x4
#define bb_top_uart_ctrl_SIZE 0x4
#define bb_top_sfp_ctrl_SIZE 0x4
#define bb_top_sfp_status_SIZE 0x4
#define bb_top_usb3phy_ctrl_SIZE 0x4
#define bb_top_ge_ctrl_SIZE 0x4
#define bb_top_xmii_ctrl_SIZE 0x4
#define bb_top_rs232_ctrl_SIZE 0x4
#define bb_top_drp_SIZE 0xC
#define bb_top_drp_drp_ctrl_SIZE 0x4
#define bb_top_drp_drp_en_mask_SIZE 0x4
#define bb_top_drp_drp_read_data_SIZE 0x4
#define bb_top_dp_gtp_common_SIZE 0xC
#define bb_top_dp_gtp_common_pll_ctrl_SIZE 0x4
#define bb_top_dp_gtp_common_pll_status_SIZE 0x4
#define bb_top_dp_gtp_common_loopback_ctrl_SIZE 0x4
#define bb_top_dp_gtp_tx_SIZE 0x20
#define bb_top_dp_gtp_tx_tx_clk_ctrl_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_rst_ctrl_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_status_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_diff_ctrl_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_post_cursor_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_pre_cursor_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_SIZE 0x4
#define bb_top_dp_gtp_tx_tx_misc_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_SIZE 0x2C
#define bb_top_dp_gtp_rx_rx_clk_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_rst_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_status_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_byte_align_status_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_ph_monitor_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_dmonitor_out_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_eq_ctrl_SIZE 0x4
#define bb_top_dp_gtp_rx_rx_misc_ctrl_SIZE 0x4
#define bb_top_rxaui_SIZE 0x40
#define bb_top_rxaui_control_SIZE 0x4
#define bb_top_rxaui_status_SIZE 0x4
#define bb_top_rxaui_gt_rst_ctrl_SIZE 0x4
#define bb_top_rxaui_gt_status_SIZE 0x4
#define bb_top_rxaui_gt_tx_diff_ctrl_SIZE 0x4
#define bb_top_rxaui_gt_tx_post_cursor_SIZE 0x4
#define bb_top_rxaui_gt_tx_pre_cursor_SIZE 0x4
#define bb_top_rxaui_gt_rx_eq_ctrl_SIZE 0x4
#define bb_top_rxaui_gt_prbs_ctrl_SIZE 0x4
#define bb_top_rxaui_gt_misc_ctrl_SIZE 0x4
#define bb_top_rxaui_stats0_SIZE 0x18
#define bb_top_rxaui_stats0_rd2clr_config_SIZE 0x4
#define bb_top_rxaui_stats0_gt0_disp_err_SIZE 0x4
#define bb_top_rxaui_stats0_gt0_not_in_table_SIZE 0x4
#define bb_top_rxaui_stats0_gt1_disp_err_SIZE 0x4
#define bb_top_rxaui_stats0_gt1_not_in_table_SIZE 0x4
#define bb_top_rxaui_stats0_missing_start_SIZE 0x4
#define bb_top_sl_5g_SIZE 0x24
#define bb_top_sl_5g_gt_rst_ctrl_SIZE 0x4
#define bb_top_sl_5g_gt_tx_ctrl_SIZE 0x4
#define bb_top_sl_5g_gt_rx_ctrl_SIZE 0x4
#define bb_top_sl_5g_gt_misc_ctrl_SIZE 0x4
#define bb_top_sl_5g_gt_status_SIZE 0x4
#define bb_top_sl_5g_stats0_SIZE 0x10
#define bb_top_sl_5g_stats0_rd2clr_config_SIZE 0x4
#define bb_top_sl_5g_stats0_gt_disp_err_SIZE 0x4
#define bb_top_sl_5g_stats0_gt_not_in_table_SIZE 0x4
#define bb_top_sl_5g_stats0_gt_rxbyterealign_SIZE 0x4

#define bb_top_s_OFFSET 0x0
#define bb_top_version_OFFSET 0x0
#define bb_top_sys_config_OFFSET 0x4
#define bb_top_feature_OFFSET 0x8
#define bb_top_icap_OFFSET 0xC
#define bb_top_icap_wdata_OFFSET 0x0
#define bb_top_icap_rdata_OFFSET 0x4
#define bb_top_grm_OFFSET 0x14
#define bb_top_grm_soft_rst_ctrl_OFFSET 0x0
#define bb_top_gcm_OFFSET 0x18
#define bb_top_gcm_control_OFFSET 0x0
#define bb_top_gcm_status_OFFSET 0x4
#define bb_top_gcm_freq_det_OFFSET 0x8
#define bb_top_gcm_freq_det_dp_OFFSET 0xC
#define bb_top_gcm_freq_det_dp_auto_OFFSET 0x10
#define bb_top_irq_OFFSET 0x2C
#define bb_top_irq_enable_OFFSET 0x0
#define bb_top_irq_pending_OFFSET 0x4
#define bb_top_irq_pending_irq_OFFSET 0x8
#define bb_top_irq_raw_OFFSET 0xC
#define bb_top_link_ctrl_OFFSET 0x3C
#define bb_top_mdio_ctrl_OFFSET 0x40
#define bb_top_i2c_ctrl_OFFSET 0x44
#define bb_top_uart_ctrl_OFFSET 0x48
#define bb_top_sfp_ctrl_OFFSET 0x4C
#define bb_top_sfp_status_OFFSET 0x50
#define bb_top_usb3phy_ctrl_OFFSET 0x54
#define bb_top_ge_ctrl_OFFSET 0x58
#define bb_top_xmii_ctrl_OFFSET 0x5C
#define bb_top_rs232_ctrl_OFFSET 0x60
#define bb_top_drp_OFFSET 0x100
#define bb_top_drp_drp_ctrl_OFFSET 0x0
#define bb_top_drp_drp_en_mask_OFFSET 0x4
#define bb_top_drp_drp_read_data_OFFSET 0x8
#define bb_top_dp_gtp_common_OFFSET 0x10C
#define bb_top_dp_gtp_common_pll_ctrl_OFFSET 0x0
#define bb_top_dp_gtp_common_pll_status_OFFSET 0x4
#define bb_top_dp_gtp_common_loopback_ctrl_OFFSET 0x8
#define bb_top_dp_gtp_tx_OFFSET 0x118
#define bb_top_dp_gtp_tx_tx_clk_ctrl_OFFSET 0x0
#define bb_top_dp_gtp_tx_tx_rst_ctrl_OFFSET 0x4
#define bb_top_dp_gtp_tx_tx_status_OFFSET 0x8
#define bb_top_dp_gtp_tx_tx_diff_ctrl_OFFSET 0xC
#define bb_top_dp_gtp_tx_tx_post_cursor_OFFSET 0x10
#define bb_top_dp_gtp_tx_tx_pre_cursor_OFFSET 0x14
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_OFFSET 0x18
#define bb_top_dp_gtp_tx_tx_misc_ctrl_OFFSET 0x1C
#define bb_top_dp_gtp_rx_OFFSET 0x138
#define bb_top_dp_gtp_rx_rx_clk_ctrl_OFFSET 0x0
#define bb_top_dp_gtp_rx_rx_rst_ctrl_OFFSET 0x4
#define bb_top_dp_gtp_rx_rx_status_OFFSET 0x8
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_OFFSET 0xC
#define bb_top_dp_gtp_rx_rx_byte_align_status_OFFSET 0x10
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_OFFSET 0x14
#define bb_top_dp_gtp_rx_rx_ph_monitor_OFFSET 0x18
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_OFFSET 0x1C
#define bb_top_dp_gtp_rx_rx_dmonitor_out_OFFSET 0x20
#define bb_top_dp_gtp_rx_rx_eq_ctrl_OFFSET 0x24
#define bb_top_dp_gtp_rx_rx_misc_ctrl_OFFSET 0x28
#define bb_top_rxaui_OFFSET 0x164
#define bb_top_rxaui_control_OFFSET 0x0
#define bb_top_rxaui_status_OFFSET 0x4
#define bb_top_rxaui_gt_rst_ctrl_OFFSET 0x8
#define bb_top_rxaui_gt_status_OFFSET 0xC
#define bb_top_rxaui_gt_tx_diff_ctrl_OFFSET 0x10
#define bb_top_rxaui_gt_tx_post_cursor_OFFSET 0x14
#define bb_top_rxaui_gt_tx_pre_cursor_OFFSET 0x18
#define bb_top_rxaui_gt_rx_eq_ctrl_OFFSET 0x1C
#define bb_top_rxaui_gt_prbs_ctrl_OFFSET 0x20
#define bb_top_rxaui_gt_misc_ctrl_OFFSET 0x24
#define bb_top_rxaui_stats0_OFFSET 0x28
#define bb_top_rxaui_stats0_rd2clr_config_OFFSET 0x0
#define bb_top_rxaui_stats0_gt0_disp_err_OFFSET 0x4
#define bb_top_rxaui_stats0_gt0_not_in_table_OFFSET 0x8
#define bb_top_rxaui_stats0_gt1_disp_err_OFFSET 0xC
#define bb_top_rxaui_stats0_gt1_not_in_table_OFFSET 0x10
#define bb_top_rxaui_stats0_missing_start_OFFSET 0x14
#define bb_top_sl_5g_OFFSET 0x1A4
#define bb_top_sl_5g_gt_rst_ctrl_OFFSET 0x0
#define bb_top_sl_5g_gt_tx_ctrl_OFFSET 0x4
#define bb_top_sl_5g_gt_rx_ctrl_OFFSET 0x8
#define bb_top_sl_5g_gt_misc_ctrl_OFFSET 0xC
#define bb_top_sl_5g_gt_status_OFFSET 0x10
#define bb_top_sl_5g_stats0_OFFSET 0x14
#define bb_top_sl_5g_stats0_rd2clr_config_OFFSET 0x0
#define bb_top_sl_5g_stats0_gt_disp_err_OFFSET 0x4
#define bb_top_sl_5g_stats0_gt_not_in_table_OFFSET 0x8
#define bb_top_sl_5g_stats0_gt_rxbyterealign_OFFSET 0xC

#define bb_top_s_ADDRESS 0x000
#define bb_top_version_ADDRESS 0x000
#define bb_top_sys_config_ADDRESS 0x004
#define bb_top_feature_ADDRESS 0x008
#define bb_top_icap_ADDRESS 0x00C
#define bb_top_icap_wdata_ADDRESS 0x00C
#define bb_top_icap_rdata_ADDRESS 0x010
#define bb_top_grm_ADDRESS 0x014
#define bb_top_grm_soft_rst_ctrl_ADDRESS 0x014
#define bb_top_gcm_ADDRESS 0x018
#define bb_top_gcm_control_ADDRESS 0x018
#define bb_top_gcm_status_ADDRESS 0x01C
#define bb_top_gcm_freq_det_ADDRESS 0x020
#define bb_top_gcm_freq_det_dp_ADDRESS 0x024
#define bb_top_gcm_freq_det_dp_auto_ADDRESS 0x028
#define bb_top_irq_ADDRESS 0x02C
#define bb_top_irq_enable_ADDRESS 0x02C
#define bb_top_irq_pending_ADDRESS 0x030
#define bb_top_irq_pending_irq_ADDRESS 0x034
#define bb_top_irq_raw_ADDRESS 0x038
#define bb_top_link_ctrl_ADDRESS 0x03C
#define bb_top_mdio_ctrl_ADDRESS 0x040
#define bb_top_i2c_ctrl_ADDRESS 0x044
#define bb_top_uart_ctrl_ADDRESS 0x048
#define bb_top_sfp_ctrl_ADDRESS 0x04C
#define bb_top_sfp_status_ADDRESS 0x050
#define bb_top_usb3phy_ctrl_ADDRESS 0x054
#define bb_top_ge_ctrl_ADDRESS 0x058
#define bb_top_xmii_ctrl_ADDRESS 0x05C
#define bb_top_rs232_ctrl_ADDRESS 0x060
#define bb_top_drp_ADDRESS 0x100
#define bb_top_drp_drp_ctrl_ADDRESS 0x100
#define bb_top_drp_drp_en_mask_ADDRESS 0x104
#define bb_top_drp_drp_read_data_ADDRESS 0x108
#define bb_top_dp_gtp_common_ADDRESS 0x10C
#define bb_top_dp_gtp_common_pll_ctrl_ADDRESS 0x10C
#define bb_top_dp_gtp_common_pll_status_ADDRESS 0x110
#define bb_top_dp_gtp_common_loopback_ctrl_ADDRESS 0x114
#define bb_top_dp_gtp_tx_ADDRESS 0x118
#define bb_top_dp_gtp_tx_tx_clk_ctrl_ADDRESS 0x118
#define bb_top_dp_gtp_tx_tx_rst_ctrl_ADDRESS 0x11C
#define bb_top_dp_gtp_tx_tx_status_ADDRESS 0x120
#define bb_top_dp_gtp_tx_tx_diff_ctrl_ADDRESS 0x124
#define bb_top_dp_gtp_tx_tx_post_cursor_ADDRESS 0x128
#define bb_top_dp_gtp_tx_tx_pre_cursor_ADDRESS 0x12C
#define bb_top_dp_gtp_tx_tx_prbs_ctrl_ADDRESS 0x130
#define bb_top_dp_gtp_tx_tx_misc_ctrl_ADDRESS 0x134
#define bb_top_dp_gtp_rx_ADDRESS 0x138
#define bb_top_dp_gtp_rx_rx_clk_ctrl_ADDRESS 0x138
#define bb_top_dp_gtp_rx_rx_rst_ctrl_ADDRESS 0x13C
#define bb_top_dp_gtp_rx_rx_status_ADDRESS 0x140
#define bb_top_dp_gtp_rx_rx_byte_align_ctrl_ADDRESS 0x144
#define bb_top_dp_gtp_rx_rx_byte_align_status_ADDRESS 0x148
#define bb_top_dp_gtp_rx_rx_prbs_ctrl_ADDRESS 0x14C
#define bb_top_dp_gtp_rx_rx_ph_monitor_ADDRESS 0x150
#define bb_top_dp_gtp_rx_rx_ph_slip_monitor_ADDRESS 0x154
#define bb_top_dp_gtp_rx_rx_dmonitor_out_ADDRESS 0x158
#define bb_top_dp_gtp_rx_rx_eq_ctrl_ADDRESS 0x15C
#define bb_top_dp_gtp_rx_rx_misc_ctrl_ADDRESS 0x160
#define bb_top_rxaui_ADDRESS 0x164
#define bb_top_rxaui_control_ADDRESS 0x164
#define bb_top_rxaui_status_ADDRESS 0x168
#define bb_top_rxaui_gt_rst_ctrl_ADDRESS 0x16C
#define bb_top_rxaui_gt_status_ADDRESS 0x170
#define bb_top_rxaui_gt_tx_diff_ctrl_ADDRESS 0x174
#define bb_top_rxaui_gt_tx_post_cursor_ADDRESS 0x178
#define bb_top_rxaui_gt_tx_pre_cursor_ADDRESS 0x17C
#define bb_top_rxaui_gt_rx_eq_ctrl_ADDRESS 0x180
#define bb_top_rxaui_gt_prbs_ctrl_ADDRESS 0x184
#define bb_top_rxaui_gt_misc_ctrl_ADDRESS 0x188
#define bb_top_rxaui_stats0_ADDRESS 0x18C
#define bb_top_rxaui_stats0_rd2clr_config_ADDRESS 0x18C
#define bb_top_rxaui_stats0_gt0_disp_err_ADDRESS 0x190
#define bb_top_rxaui_stats0_gt0_not_in_table_ADDRESS 0x194
#define bb_top_rxaui_stats0_gt1_disp_err_ADDRESS 0x198
#define bb_top_rxaui_stats0_gt1_not_in_table_ADDRESS 0x19C
#define bb_top_rxaui_stats0_missing_start_ADDRESS 0x1A0
#define bb_top_sl_5g_ADDRESS 0x1A4
#define bb_top_sl_5g_gt_rst_ctrl_ADDRESS 0x1A4
#define bb_top_sl_5g_gt_tx_ctrl_ADDRESS 0x1A8
#define bb_top_sl_5g_gt_rx_ctrl_ADDRESS 0x1AC
#define bb_top_sl_5g_gt_misc_ctrl_ADDRESS 0x1B0
#define bb_top_sl_5g_gt_status_ADDRESS 0x1B4
#define bb_top_sl_5g_stats0_ADDRESS 0x1B8
#define bb_top_sl_5g_stats0_rd2clr_config_ADDRESS 0x1B8
#define bb_top_sl_5g_stats0_gt_disp_err_ADDRESS 0x1BC
#define bb_top_sl_5g_stats0_gt_not_in_table_ADDRESS 0x1C0
#define bb_top_sl_5g_stats0_gt_rxbyterealign_ADDRESS 0x1C4
#define BB_TOP_VERSION_MAJOR_OFFSET 16
#define BB_TOP_VERSION_MAJOR_MASK 0xFF0000
#define BB_TOP_VERSION_MINOR_OFFSET 8
#define BB_TOP_VERSION_MINOR_MASK 0xFF00
#define BB_TOP_VERSION_PATCH_OFFSET 0
#define BB_TOP_VERSION_PATCH_MASK 0xFF
#define BB_TOP_SYS_CONFIG_ENV_INFO_OFFSET 24
#define BB_TOP_SYS_CONFIG_ENV_INFO_MASK 0xFF000000
#define BB_TOP_SYS_CONFIG_PLATFORM_SUPPORT_OFFSET 16
#define BB_TOP_SYS_CONFIG_PLATFORM_SUPPORT_MASK 0xFF0000
#define BB_TOP_SYS_CONFIG_BASE_PLATFORM_OFFSET 10
#define BB_TOP_SYS_CONFIG_BASE_PLATFORM_MASK 0x3C00
#define BB_TOP_SYS_CONFIG_IMAGE_TYPE_OFFSET 8
#define BB_TOP_SYS_CONFIG_IMAGE_TYPE_MASK 0x300
#define BB_TOP_SYS_CONFIG_PART_NUMBER_OFFSET 4
#define BB_TOP_SYS_CONFIG_PART_NUMBER_MASK 0xF0
#define BB_TOP_SYS_CONFIG_VENDOR_OFFSET 2
#define BB_TOP_SYS_CONFIG_VENDOR_MASK 0xC
#define BB_TOP_SYS_CONFIG_TECHNOLOGY_OFFSET 0
#define BB_TOP_SYS_CONFIG_TECHNOLOGY_MASK 0x1
#define BB_TOP_SYS_CONFIG_TECHNOLOGY 0x1
#define BB_TOP_FEATURE_DP_GTP_OFFSET 4
#define BB_TOP_FEATURE_DP_GTP_MASK 0x10
#define BB_TOP_FEATURE_DP_GTP 0x10
#define BB_TOP_FEATURE_XADC_OFFSET 3
#define BB_TOP_FEATURE_XADC_MASK 0x8
#define BB_TOP_FEATURE_XADC 0x8
#define BB_TOP_FEATURE_SL_5G_OFFSET 2
#define BB_TOP_FEATURE_SL_5G_MASK 0x4
#define BB_TOP_FEATURE_SL_5G 0x4
#define BB_TOP_FEATURE_RXAUI_L0_T1_OFFSET 1
#define BB_TOP_FEATURE_RXAUI_L0_T1_MASK 0x2
#define BB_TOP_FEATURE_RXAUI_L0_T1 0x2
#define BB_TOP_FEATURE_RXAUI_L0_T0_OFFSET 0
#define BB_TOP_FEATURE_RXAUI_L0_T0_MASK 0x1
#define BB_TOP_FEATURE_RXAUI_L0_T0 0x1
#define BB_TOP_ICAP_WDATA_VAL_OFFSET 0
#define BB_TOP_ICAP_WDATA_VAL_MASK 0xFFFFFFFF
#define BB_TOP_ICAP_RDATA_VAL_OFFSET 0
#define BB_TOP_ICAP_RDATA_VAL_MASK 0xFFFFFFFF
#define BB_TOP_GRM_SOFT_RST_CTRL_CPU_RST_OFFSET 31
#define BB_TOP_GRM_SOFT_RST_CTRL_CPU_RST_MASK 0x80000000
#define BB_TOP_GRM_SOFT_RST_CTRL_CPU_RST 0x80000000
#define BB_TOP_GRM_SOFT_RST_CTRL_LINK_STATS_RX_RST_OFFSET 29
#define BB_TOP_GRM_SOFT_RST_CTRL_LINK_STATS_RX_RST_MASK 0x20000000
#define BB_TOP_GRM_SOFT_RST_CTRL_LINK_STATS_RX_RST 0x20000000
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_RX_RST_OFFSET 28
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_RX_RST_MASK 0x10000000
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_RX_RST 0x10000000
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_TX_RST_OFFSET 27
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_TX_RST_MASK 0x8000000
#define BB_TOP_GRM_SOFT_RST_CTRL_SL_5G_TX_RST 0x8000000
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_RX_RST_OFFSET 26
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_RX_RST_MASK 0x4000000
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_RX_RST 0x4000000
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_TX_RST_OFFSET 25
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_TX_RST_MASK 0x2000000
#define BB_TOP_GRM_SOFT_RST_CTRL_XMII_TX_RST 0x2000000
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_RX_RST_OFFSET 24
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_RX_RST_MASK 0x1000000
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_RX_RST 0x1000000
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_TX_RST_OFFSET 23
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_TX_RST_MASK 0x800000
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_CLM_TX_RST 0x800000
#define BB_TOP_GRM_SOFT_RST_CTRL_RS232_RST_OFFSET 22
#define BB_TOP_GRM_SOFT_RST_CTRL_RS232_RST_MASK 0x400000
#define BB_TOP_GRM_SOFT_RST_CTRL_RS232_RST 0x400000
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_PHY_RST_OFFSET 21
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_PHY_RST_MASK 0x200000
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_PHY_RST 0x200000
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_CORE_RST_OFFSET 20
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_CORE_RST_MASK 0x100000
#define BB_TOP_GRM_SOFT_RST_CTRL_ULP_CORE_RST 0x100000
#define BB_TOP_GRM_SOFT_RST_CTRL_UPP_RST_OFFSET 19
#define BB_TOP_GRM_SOFT_RST_CTRL_UPP_RST_MASK 0x80000
#define BB_TOP_GRM_SOFT_RST_CTRL_UPP_RST 0x80000
#define BB_TOP_GRM_SOFT_RST_CTRL_XUSB_RST_OFFSET 18
#define BB_TOP_GRM_SOFT_RST_CTRL_XUSB_RST_MASK 0x40000
#define BB_TOP_GRM_SOFT_RST_CTRL_XUSB_RST 0x40000
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_D_CTRL_RST_OFFSET 17
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_D_CTRL_RST_MASK 0x20000
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_D_CTRL_RST 0x20000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SOURCE_RST_OFFSET 16
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SOURCE_RST_MASK 0x10000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SOURCE_RST 0x10000
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_E_CTRL_RST_OFFSET 15
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_E_CTRL_RST_MASK 0x8000
#define BB_TOP_GRM_SOFT_RST_CTRL_TICO_E_CTRL_RST 0x8000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SINK_RST_OFFSET 14
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SINK_RST_MASK 0x4000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_SINK_RST 0x4000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_AUX_HPD_RST_OFFSET 13
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_AUX_HPD_RST_MASK 0x2000
#define BB_TOP_GRM_SOFT_RST_CTRL_DP_AUX_HPD_RST 0x2000
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_RX_RST_OFFSET 12
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_RX_RST_MASK 0x1000
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_RX_RST 0x1000
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_TX_RST_OFFSET 11
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_TX_RST_MASK 0x800
#define BB_TOP_GRM_SOFT_RST_CTRL_MCA_CORE_TX_RST 0x800
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_RX_RST_OFFSET 10
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_RX_RST_MASK 0x400
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_RX_RST 0x400
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_TX_RST_OFFSET 9
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_TX_RST_MASK 0x200
#define BB_TOP_GRM_SOFT_RST_CTRL_L3_TX_RST 0x200
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_RX_RST_OFFSET 8
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_RX_RST_MASK 0x100
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_RX_RST 0x100
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_TX_RST_OFFSET 7
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_TX_RST_MASK 0x80
#define BB_TOP_GRM_SOFT_RST_CTRL_DLL_TX_RST 0x80
#define BB_TOP_GRM_SOFT_RST_CTRL_GPIO_CTRL_RST_OFFSET 6
#define BB_TOP_GRM_SOFT_RST_CTRL_GPIO_CTRL_RST_MASK 0x40
#define BB_TOP_GRM_SOFT_RST_CTRL_GPIO_CTRL_RST 0x40
#define BB_TOP_GRM_SOFT_RST_CTRL_SPI_FLASH_CTRL_RST_OFFSET 5
#define BB_TOP_GRM_SOFT_RST_CTRL_SPI_FLASH_CTRL_RST_MASK 0x20
#define BB_TOP_GRM_SOFT_RST_CTRL_SPI_FLASH_CTRL_RST 0x20
#define BB_TOP_GRM_SOFT_RST_CTRL_MDIO_MASTER_RST_OFFSET 4
#define BB_TOP_GRM_SOFT_RST_CTRL_MDIO_MASTER_RST_MASK 0x10
#define BB_TOP_GRM_SOFT_RST_CTRL_MDIO_MASTER_RST 0x10
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_SLAVE_RST_OFFSET 3
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_SLAVE_RST_MASK 0x8
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_SLAVE_RST 0x8
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_MASTER_RST_OFFSET 2
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_MASTER_RST_MASK 0x4
#define BB_TOP_GRM_SOFT_RST_CTRL_I2C_MASTER_RST 0x4
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_UART_RST_OFFSET 1
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_UART_RST_MASK 0x2
#define BB_TOP_GRM_SOFT_RST_CTRL_GE_UART_RST 0x2
#define BB_TOP_GRM_SOFT_RST_CTRL_BB_UART_RST_OFFSET 0
#define BB_TOP_GRM_SOFT_RST_CTRL_BB_UART_RST_MASK 0x1
#define BB_TOP_GRM_SOFT_RST_CTRL_BB_UART_RST 0x1
#define BB_TOP_GCM_CONTROL_LINK_GT_COMMON_PLL0RESET_OFFSET 8
#define BB_TOP_GCM_CONTROL_LINK_GT_COMMON_PLL0RESET_MASK 0x100
#define BB_TOP_GCM_CONTROL_LINK_GT_COMMON_PLL0RESET 0x100
#define BB_TOP_GCM_CONTROL_XMII_TX_CLK_SEL_OFFSET 4
#define BB_TOP_GCM_CONTROL_XMII_TX_CLK_SEL_MASK 0x10
#define BB_TOP_GCM_CONTROL_XMII_TX_CLK_SEL 0x10
#define BB_TOP_GCM_CONTROL_ULP_PHY_CLK_PLL_RST_OFFSET 0
#define BB_TOP_GCM_CONTROL_ULP_PHY_CLK_PLL_RST_MASK 0x1
#define BB_TOP_GCM_CONTROL_ULP_PHY_CLK_PLL_RST 0x1
#define BB_TOP_GCM_STATUS_LINK_MMCM_LOCK_OFFSET 10
#define BB_TOP_GCM_STATUS_LINK_MMCM_LOCK_MASK 0x400
#define BB_TOP_GCM_STATUS_LINK_MMCM_LOCK 0x400
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0REFCLKLOST_OFFSET 9
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0REFCLKLOST_MASK 0x200
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0REFCLKLOST 0x200
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0LOCK_OFFSET 8
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0LOCK_MASK 0x100
#define BB_TOP_GCM_STATUS_LINK_GT_COMMON_PLL0LOCK 0x100
#define BB_TOP_GCM_STATUS_ULP_PHY_CLK_LOCK_OFFSET 4
#define BB_TOP_GCM_STATUS_ULP_PHY_CLK_LOCK_MASK 0x10
#define BB_TOP_GCM_STATUS_ULP_PHY_CLK_LOCK 0x10
#define BB_TOP_GCM_STATUS_CPU_CLK_LOCK_OFFSET 0
#define BB_TOP_GCM_STATUS_CPU_CLK_LOCK_MASK 0x1
#define BB_TOP_GCM_STATUS_CPU_CLK_LOCK 0x1
#define BB_TOP_GCM_FREQ_DET_COUNT_OFFSET 16
#define BB_TOP_GCM_FREQ_DET_COUNT_MASK 0xFF0000
#define BB_TOP_GCM_FREQ_DET_REF_CLK_FASTER_OFFSET 12
#define BB_TOP_GCM_FREQ_DET_REF_CLK_FASTER_MASK 0x1000
#define BB_TOP_GCM_FREQ_DET_REF_CLK_FASTER 0x1000
#define BB_TOP_GCM_FREQ_DET_MAX_COUNT_OFFSET 4
#define BB_TOP_GCM_FREQ_DET_MAX_COUNT_MASK 0xFF0
#define BB_TOP_GCM_FREQ_DET_CLK_SEL_OFFSET 1
#define BB_TOP_GCM_FREQ_DET_CLK_SEL_MASK 0xE
#define BB_TOP_GCM_FREQ_DET_GO_OFFSET 0
#define BB_TOP_GCM_FREQ_DET_GO_MASK 0x1
#define BB_TOP_GCM_FREQ_DET_GO 0x1
#define BB_TOP_GCM_FREQ_DET_DP_COUNT_OFFSET 18
#define BB_TOP_GCM_FREQ_DET_DP_COUNT_MASK 0xFFFC0000
#define BB_TOP_GCM_FREQ_DET_DP_REF_CLK_FASTER_OFFSET 16
#define BB_TOP_GCM_FREQ_DET_DP_REF_CLK_FASTER_MASK 0x10000
#define BB_TOP_GCM_FREQ_DET_DP_REF_CLK_FASTER 0x10000
#define BB_TOP_GCM_FREQ_DET_DP_MAX_COUNT_OFFSET 2
#define BB_TOP_GCM_FREQ_DET_DP_MAX_COUNT_MASK 0xFFFC
#define BB_TOP_GCM_FREQ_DET_DP_CLK_SEL_OFFSET 1
#define BB_TOP_GCM_FREQ_DET_DP_CLK_SEL_MASK 0x2
#define BB_TOP_GCM_FREQ_DET_DP_CLK_SEL 0x2
#define BB_TOP_GCM_FREQ_DET_DP_GO_OFFSET 0
#define BB_TOP_GCM_FREQ_DET_DP_GO_MASK 0x1
#define BB_TOP_GCM_FREQ_DET_DP_GO 0x1
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_AUTO_ENABLE_OFFSET 31
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_AUTO_ENABLE_MASK 0x80000000
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_AUTO_ENABLE 0x80000000
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_REF_CLK_FASTER_OFFSET 30
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_REF_CLK_FASTER_MASK 0x40000000
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_REF_CLK_FASTER 0x40000000
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_COUNT_MAX_OFFSET 16
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_COUNT_MAX_MASK 0x3FFF0000
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_COUNT_MIN_OFFSET 0
#define BB_TOP_GCM_FREQ_DET_DP_AUTO_COMP_COUNT_MIN_MASK 0x3FFF
#define BB_TOP_IRQ_ENABLE_FREQ_DET_DP_OOR_OFFSET 18
#define BB_TOP_IRQ_ENABLE_FREQ_DET_DP_OOR_MASK 0x40000
#define BB_TOP_IRQ_ENABLE_FREQ_DET_DP_OOR 0x40000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_OVERFLOW_OFFSET 17
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_OVERFLOW_MASK 0x20000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_OVERFLOW 0x20000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_UNDERFLOW_OFFSET 16
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_UNDERFLOW_MASK 0x10000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT1_RX_BUF_UNDERFLOW 0x10000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_OVERFLOW_OFFSET 15
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_OVERFLOW_MASK 0x8000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_OVERFLOW 0x8000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_UNDERFLOW_OFFSET 14
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_UNDERFLOW_MASK 0x4000
#define BB_TOP_IRQ_ENABLE_RXAUI_GT0_RX_BUF_UNDERFLOW 0x4000
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_OVERFLOW_OFFSET 13
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_OVERFLOW_MASK 0x2000
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_OVERFLOW 0x2000
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_UNDERFLOW_OFFSET 12
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_UNDERFLOW_MASK 0x1000
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_BUF_UNDERFLOW 0x1000
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_FSM_RESET_DONE_OFFSET 11
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_FSM_RESET_DONE_MASK 0x800
#define BB_TOP_IRQ_ENABLE_SL_5G_RX_FSM_RESET_DONE 0x800
#define BB_TOP_IRQ_ENABLE_SL_5G_TX_FSM_RESET_DONE_OFFSET 10
#define BB_TOP_IRQ_ENABLE_SL_5G_TX_FSM_RESET_DONE_MASK 0x400
#define BB_TOP_IRQ_ENABLE_SL_5G_TX_FSM_RESET_DONE 0x400
#define BB_TOP_IRQ_ENABLE_RXAUI_ALIGN_STATUS_OFFSET 9
#define BB_TOP_IRQ_ENABLE_RXAUI_ALIGN_STATUS_MASK 0x200
#define BB_TOP_IRQ_ENABLE_RXAUI_ALIGN_STATUS 0x200
#define BB_TOP_IRQ_ENABLE_ULP_PHY_CLK_LOCK_OFFSET 8
#define BB_TOP_IRQ_ENABLE_ULP_PHY_CLK_LOCK_MASK 0x100
#define BB_TOP_IRQ_ENABLE_ULP_PHY_CLK_LOCK 0x100
#define BB_TOP_IRQ_ENABLE_XADC_OT_OFFSET 7
#define BB_TOP_IRQ_ENABLE_XADC_OT_MASK 0x80
#define BB_TOP_IRQ_ENABLE_XADC_OT 0x80
#define BB_TOP_IRQ_ENABLE_XADC_VBRAM_OFFSET 6
#define BB_TOP_IRQ_ENABLE_XADC_VBRAM_MASK 0x40
#define BB_TOP_IRQ_ENABLE_XADC_VBRAM 0x40
#define BB_TOP_IRQ_ENABLE_XADC_VCCAUX_OFFSET 5
#define BB_TOP_IRQ_ENABLE_XADC_VCCAUX_MASK 0x20
#define BB_TOP_IRQ_ENABLE_XADC_VCCAUX 0x20
#define BB_TOP_IRQ_ENABLE_XADC_VCCINT_OFFSET 4
#define BB_TOP_IRQ_ENABLE_XADC_VCCINT_MASK 0x10
#define BB_TOP_IRQ_ENABLE_XADC_VCCINT 0x10
#define BB_TOP_IRQ_ENABLE_XADC_USER_TEMP_OFFSET 3
#define BB_TOP_IRQ_ENABLE_XADC_USER_TEMP_MASK 0x8
#define BB_TOP_IRQ_ENABLE_XADC_USER_TEMP 0x8
#define BB_TOP_IRQ_ENABLE_USB_VBUS_DETECT_OFFSET 2
#define BB_TOP_IRQ_ENABLE_USB_VBUS_DETECT_MASK 0x4
#define BB_TOP_IRQ_ENABLE_USB_VBUS_DETECT 0x4
#define BB_TOP_IRQ_ENABLE_MDIO_INT_B_OFFSET 1
#define BB_TOP_IRQ_ENABLE_MDIO_INT_B_MASK 0x2
#define BB_TOP_IRQ_ENABLE_MDIO_INT_B 0x2
#define BB_TOP_IRQ_ENABLE_SFP_LOS_OFFSET 0
#define BB_TOP_IRQ_ENABLE_SFP_LOS_MASK 0x1
#define BB_TOP_IRQ_ENABLE_SFP_LOS 0x1
#define BB_TOP_IRQ_PENDING_FREQ_DET_DP_OOR_OFFSET 18
#define BB_TOP_IRQ_PENDING_FREQ_DET_DP_OOR_MASK 0x40000
#define BB_TOP_IRQ_PENDING_FREQ_DET_DP_OOR 0x40000
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_OVERFLOW_OFFSET 17
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_OVERFLOW_MASK 0x20000
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_OVERFLOW 0x20000
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_UNDERFLOW_OFFSET 16
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_UNDERFLOW_MASK 0x10000
#define BB_TOP_IRQ_PENDING_RXAUI_GT1_RX_BUF_UNDERFLOW 0x10000
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_OVERFLOW_OFFSET 15
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_OVERFLOW_MASK 0x8000
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_OVERFLOW 0x8000
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_UNDERFLOW_OFFSET 14
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_UNDERFLOW_MASK 0x4000
#define BB_TOP_IRQ_PENDING_RXAUI_GT0_RX_BUF_UNDERFLOW 0x4000
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_OVERFLOW_OFFSET 13
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_OVERFLOW_MASK 0x2000
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_OVERFLOW 0x2000
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_UNDERFLOW_OFFSET 12
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_UNDERFLOW_MASK 0x1000
#define BB_TOP_IRQ_PENDING_SL_5G_RX_BUF_UNDERFLOW 0x1000
#define BB_TOP_IRQ_PENDING_SL_5G_RX_FSM_RESET_DONE_OFFSET 11
#define BB_TOP_IRQ_PENDING_SL_5G_RX_FSM_RESET_DONE_MASK 0x800
#define BB_TOP_IRQ_PENDING_SL_5G_RX_FSM_RESET_DONE 0x800
#define BB_TOP_IRQ_PENDING_SL_5G_TX_FSM_RESET_DONE_OFFSET 10
#define BB_TOP_IRQ_PENDING_SL_5G_TX_FSM_RESET_DONE_MASK 0x400
#define BB_TOP_IRQ_PENDING_SL_5G_TX_FSM_RESET_DONE 0x400
#define BB_TOP_IRQ_PENDING_RXAUI_ALIGN_STATUS_OFFSET 9
#define BB_TOP_IRQ_PENDING_RXAUI_ALIGN_STATUS_MASK 0x200
#define BB_TOP_IRQ_PENDING_RXAUI_ALIGN_STATUS 0x200
#define BB_TOP_IRQ_PENDING_ULP_PHY_CLK_LOCK_OFFSET 8
#define BB_TOP_IRQ_PENDING_ULP_PHY_CLK_LOCK_MASK 0x100
#define BB_TOP_IRQ_PENDING_ULP_PHY_CLK_LOCK 0x100
#define BB_TOP_IRQ_PENDING_XADC_OT_OFFSET 7
#define BB_TOP_IRQ_PENDING_XADC_OT_MASK 0x80
#define BB_TOP_IRQ_PENDING_XADC_OT 0x80
#define BB_TOP_IRQ_PENDING_XADC_VBRAM_OFFSET 6
#define BB_TOP_IRQ_PENDING_XADC_VBRAM_MASK 0x40
#define BB_TOP_IRQ_PENDING_XADC_VBRAM 0x40
#define BB_TOP_IRQ_PENDING_XADC_VCCAUX_OFFSET 5
#define BB_TOP_IRQ_PENDING_XADC_VCCAUX_MASK 0x20
#define BB_TOP_IRQ_PENDING_XADC_VCCAUX 0x20
#define BB_TOP_IRQ_PENDING_XADC_VCCINT_OFFSET 4
#define BB_TOP_IRQ_PENDING_XADC_VCCINT_MASK 0x10
#define BB_TOP_IRQ_PENDING_XADC_VCCINT 0x10
#define BB_TOP_IRQ_PENDING_XADC_USER_TEMP_OFFSET 3
#define BB_TOP_IRQ_PENDING_XADC_USER_TEMP_MASK 0x8
#define BB_TOP_IRQ_PENDING_XADC_USER_TEMP 0x8
#define BB_TOP_IRQ_PENDING_USB_VBUS_DETECT_OFFSET 2
#define BB_TOP_IRQ_PENDING_USB_VBUS_DETECT_MASK 0x4
#define BB_TOP_IRQ_PENDING_USB_VBUS_DETECT 0x4
#define BB_TOP_IRQ_PENDING_MDIO_INT_B_OFFSET 1
#define BB_TOP_IRQ_PENDING_MDIO_INT_B_MASK 0x2
#define BB_TOP_IRQ_PENDING_MDIO_INT_B 0x2
#define BB_TOP_IRQ_PENDING_SFP_LOS_OFFSET 0
#define BB_TOP_IRQ_PENDING_SFP_LOS_MASK 0x1
#define BB_TOP_IRQ_PENDING_SFP_LOS 0x1
#define BB_TOP_IRQ_PENDING_IRQ_FREQ_DET_DP_OOR_OFFSET 18
#define BB_TOP_IRQ_PENDING_IRQ_FREQ_DET_DP_OOR_MASK 0x40000
#define BB_TOP_IRQ_PENDING_IRQ_FREQ_DET_DP_OOR 0x40000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_OVERFLOW_OFFSET 17
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_OVERFLOW_MASK 0x20000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_OVERFLOW 0x20000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_UNDERFLOW_OFFSET 16
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_UNDERFLOW_MASK 0x10000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT1_RX_BUF_UNDERFLOW 0x10000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_OVERFLOW_OFFSET 15
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_OVERFLOW_MASK 0x8000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_OVERFLOW 0x8000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_UNDERFLOW_OFFSET 14
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_UNDERFLOW_MASK 0x4000
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_GT0_RX_BUF_UNDERFLOW 0x4000
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_OVERFLOW_OFFSET 13
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_OVERFLOW_MASK 0x2000
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_OVERFLOW 0x2000
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_UNDERFLOW_OFFSET 12
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_UNDERFLOW_MASK 0x1000
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_BUF_UNDERFLOW 0x1000
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_FSM_RESET_DONE_OFFSET 11
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_FSM_RESET_DONE_MASK 0x800
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_RX_FSM_RESET_DONE 0x800
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_TX_FSM_RESET_DONE_OFFSET 10
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_TX_FSM_RESET_DONE_MASK 0x400
#define BB_TOP_IRQ_PENDING_IRQ_SL_5G_TX_FSM_RESET_DONE 0x400
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_ALIGN_STATUS_OFFSET 9
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_ALIGN_STATUS_MASK 0x200
#define BB_TOP_IRQ_PENDING_IRQ_RXAUI_ALIGN_STATUS 0x200
#define BB_TOP_IRQ_PENDING_IRQ_ULP_PHY_CLK_LOCK_OFFSET 8
#define BB_TOP_IRQ_PENDING_IRQ_ULP_PHY_CLK_LOCK_MASK 0x100
#define BB_TOP_IRQ_PENDING_IRQ_ULP_PHY_CLK_LOCK 0x100
#define BB_TOP_IRQ_PENDING_IRQ_XADC_OT_OFFSET 7
#define BB_TOP_IRQ_PENDING_IRQ_XADC_OT_MASK 0x80
#define BB_TOP_IRQ_PENDING_IRQ_XADC_OT 0x80
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VBRAM_OFFSET 6
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VBRAM_MASK 0x40
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VBRAM 0x40
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCAUX_OFFSET 5
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCAUX_MASK 0x20
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCAUX 0x20
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCINT_OFFSET 4
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCINT_MASK 0x10
#define BB_TOP_IRQ_PENDING_IRQ_XADC_VCCINT 0x10
#define BB_TOP_IRQ_PENDING_IRQ_XADC_USER_TEMP_OFFSET 3
#define BB_TOP_IRQ_PENDING_IRQ_XADC_USER_TEMP_MASK 0x8
#define BB_TOP_IRQ_PENDING_IRQ_XADC_USER_TEMP 0x8
#define BB_TOP_IRQ_PENDING_IRQ_USB_VBUS_DETECT_OFFSET 2
#define BB_TOP_IRQ_PENDING_IRQ_USB_VBUS_DETECT_MASK 0x4
#define BB_TOP_IRQ_PENDING_IRQ_USB_VBUS_DETECT 0x4
#define BB_TOP_IRQ_PENDING_IRQ_MDIO_INT_B_OFFSET 1
#define BB_TOP_IRQ_PENDING_IRQ_MDIO_INT_B_MASK 0x2
#define BB_TOP_IRQ_PENDING_IRQ_MDIO_INT_B 0x2
#define BB_TOP_IRQ_PENDING_IRQ_SFP_LOS_OFFSET 0
#define BB_TOP_IRQ_PENDING_IRQ_SFP_LOS_MASK 0x1
#define BB_TOP_IRQ_PENDING_IRQ_SFP_LOS 0x1
#define BB_TOP_IRQ_RAW_FREQ_DET_DP_OOR_OFFSET 18
#define BB_TOP_IRQ_RAW_FREQ_DET_DP_OOR_MASK 0x40000
#define BB_TOP_IRQ_RAW_FREQ_DET_DP_OOR 0x40000
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_OVERFLOW_OFFSET 17
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_OVERFLOW_MASK 0x20000
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_OVERFLOW 0x20000
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_UNDERFLOW_OFFSET 16
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_UNDERFLOW_MASK 0x10000
#define BB_TOP_IRQ_RAW_RXAUI_GT1_RX_BUF_UNDERFLOW 0x10000
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_OVERFLOW_OFFSET 15
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_OVERFLOW_MASK 0x8000
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_OVERFLOW 0x8000
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_UNDERFLOW_OFFSET 14
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_UNDERFLOW_MASK 0x4000
#define BB_TOP_IRQ_RAW_RXAUI_GT0_RX_BUF_UNDERFLOW 0x4000
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_OVERFLOW_OFFSET 13
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_OVERFLOW_MASK 0x2000
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_OVERFLOW 0x2000
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_UNDERFLOW_OFFSET 12
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_UNDERFLOW_MASK 0x1000
#define BB_TOP_IRQ_RAW_SL_5G_RX_BUF_UNDERFLOW 0x1000
#define BB_TOP_IRQ_RAW_SL_5G_RX_FSM_RESET_DONE_OFFSET 11
#define BB_TOP_IRQ_RAW_SL_5G_RX_FSM_RESET_DONE_MASK 0x800
#define BB_TOP_IRQ_RAW_SL_5G_RX_FSM_RESET_DONE 0x800
#define BB_TOP_IRQ_RAW_SL_5G_TX_FSM_RESET_DONE_OFFSET 10
#define BB_TOP_IRQ_RAW_SL_5G_TX_FSM_RESET_DONE_MASK 0x400
#define BB_TOP_IRQ_RAW_SL_5G_TX_FSM_RESET_DONE 0x400
#define BB_TOP_IRQ_RAW_RXAUI_ALIGN_STATUS_OFFSET 9
#define BB_TOP_IRQ_RAW_RXAUI_ALIGN_STATUS_MASK 0x200
#define BB_TOP_IRQ_RAW_RXAUI_ALIGN_STATUS 0x200
#define BB_TOP_IRQ_RAW_ULP_PHY_CLK_LOCK_OFFSET 8
#define BB_TOP_IRQ_RAW_ULP_PHY_CLK_LOCK_MASK 0x100
#define BB_TOP_IRQ_RAW_ULP_PHY_CLK_LOCK 0x100
#define BB_TOP_IRQ_RAW_XADC_OT_OFFSET 7
#define BB_TOP_IRQ_RAW_XADC_OT_MASK 0x80
#define BB_TOP_IRQ_RAW_XADC_OT 0x80
#define BB_TOP_IRQ_RAW_XADC_VBRAM_OFFSET 6
#define BB_TOP_IRQ_RAW_XADC_VBRAM_MASK 0x40
#define BB_TOP_IRQ_RAW_XADC_VBRAM 0x40
#define BB_TOP_IRQ_RAW_XADC_VCCAUX_OFFSET 5
#define BB_TOP_IRQ_RAW_XADC_VCCAUX_MASK 0x20
#define BB_TOP_IRQ_RAW_XADC_VCCAUX 0x20
#define BB_TOP_IRQ_RAW_XADC_VCCINT_OFFSET 4
#define BB_TOP_IRQ_RAW_XADC_VCCINT_MASK 0x10
#define BB_TOP_IRQ_RAW_XADC_VCCINT 0x10
#define BB_TOP_IRQ_RAW_XADC_USER_TEMP_OFFSET 3
#define BB_TOP_IRQ_RAW_XADC_USER_TEMP_MASK 0x8
#define BB_TOP_IRQ_RAW_XADC_USER_TEMP 0x8
#define BB_TOP_IRQ_RAW_USB_VBUS_DETECT_OFFSET 2
#define BB_TOP_IRQ_RAW_USB_VBUS_DETECT_MASK 0x4
#define BB_TOP_IRQ_RAW_USB_VBUS_DETECT 0x4
#define BB_TOP_IRQ_RAW_MDIO_INT_B_OFFSET 1
#define BB_TOP_IRQ_RAW_MDIO_INT_B_MASK 0x2
#define BB_TOP_IRQ_RAW_MDIO_INT_B 0x2
#define BB_TOP_IRQ_RAW_SFP_LOS_OFFSET 0
#define BB_TOP_IRQ_RAW_SFP_LOS_MASK 0x1
#define BB_TOP_IRQ_RAW_SFP_LOS 0x1
#define BB_TOP_LINK_CTRL_SEL_OFFSET 0
#define BB_TOP_LINK_CTRL_SEL_MASK 0x1
#define BB_TOP_LINK_CTRL_SEL 0x1
#define BB_TOP_MDIO_CTRL_MASTER_BUS_SEL_OFFSET 4
#define BB_TOP_MDIO_CTRL_MASTER_BUS_SEL_MASK 0x10
#define BB_TOP_MDIO_CTRL_MASTER_BUS_SEL 0x10
#define BB_TOP_MDIO_CTRL_MASTER_MDC_TRI_OFFSET 0
#define BB_TOP_MDIO_CTRL_MASTER_MDC_TRI_MASK 0x1
#define BB_TOP_MDIO_CTRL_MASTER_MDC_TRI 0x1
#define BB_TOP_I2C_CTRL_MASTER_BUS_SEL_OFFSET 4
#define BB_TOP_I2C_CTRL_MASTER_BUS_SEL_MASK 0x10
#define BB_TOP_I2C_CTRL_MASTER_BUS_SEL 0x10
#define BB_TOP_I2C_CTRL_MASTER_SCL_TRI_OFFSET 0
#define BB_TOP_I2C_CTRL_MASTER_SCL_TRI_MASK 0x1
#define BB_TOP_I2C_CTRL_MASTER_SCL_TRI 0x1
#define BB_TOP_UART_CTRL_GE_UART_SEL_OFFSET 0
#define BB_TOP_UART_CTRL_GE_UART_SEL_MASK 0x1
#define BB_TOP_UART_CTRL_GE_UART_SEL 0x1
#define BB_TOP_SFP_CTRL_TX_DISABLE_OFFSET 4
#define BB_TOP_SFP_CTRL_TX_DISABLE_MASK 0x10
#define BB_TOP_SFP_CTRL_TX_DISABLE 0x10
#define BB_TOP_SFP_CTRL_RS1_OFFSET 1
#define BB_TOP_SFP_CTRL_RS1_MASK 0x2
#define BB_TOP_SFP_CTRL_RS1 0x2
#define BB_TOP_SFP_CTRL_RS0_OFFSET 0
#define BB_TOP_SFP_CTRL_RS0_MASK 0x1
#define BB_TOP_SFP_CTRL_RS0 0x1
#define BB_TOP_SFP_STATUS_RX_LOS_OFFSET 8
#define BB_TOP_SFP_STATUS_RX_LOS_MASK 0x100
#define BB_TOP_SFP_STATUS_RX_LOS 0x100
#define BB_TOP_SFP_STATUS_TX_FAULT_OFFSET 4
#define BB_TOP_SFP_STATUS_TX_FAULT_MASK 0x10
#define BB_TOP_SFP_STATUS_TX_FAULT 0x10
#define BB_TOP_SFP_STATUS_MOD_ABS_OFFSET 0
#define BB_TOP_SFP_STATUS_MOD_ABS_MASK 0x1
#define BB_TOP_SFP_STATUS_MOD_ABS 0x1
#define BB_TOP_USB3PHY_CTRL_FORCE_TX_ELEC_IDLE_OFFSET 20
#define BB_TOP_USB3PHY_CTRL_FORCE_TX_ELEC_IDLE_MASK 0x100000
#define BB_TOP_USB3PHY_CTRL_FORCE_TX_ELEC_IDLE 0x100000
#define BB_TOP_USB3PHY_CTRL_STRAPPING_DONE_OFFSET 18
#define BB_TOP_USB3PHY_CTRL_STRAPPING_DONE_MASK 0x40000
#define BB_TOP_USB3PHY_CTRL_STRAPPING_DONE 0x40000
#define BB_TOP_USB3PHY_CTRL_XTAL_DIS_OFFSET 17
#define BB_TOP_USB3PHY_CTRL_XTAL_DIS_MASK 0x20000
#define BB_TOP_USB3PHY_CTRL_XTAL_DIS 0x20000
#define BB_TOP_USB3PHY_CTRL_SSC_DIS_OFFSET 16
#define BB_TOP_USB3PHY_CTRL_SSC_DIS_MASK 0x10000
#define BB_TOP_USB3PHY_CTRL_SSC_DIS 0x10000
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT_OFFSET 9
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT_MASK 0x200
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT 0x200
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT_SEL_OFFSET 8
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT_SEL_MASK 0x100
#define BB_TOP_USB3PHY_CTRL_POWER_PRESENT_SEL 0x100
#define BB_TOP_USB3PHY_CTRL_OUT_ENABLE_OFFSET 4
#define BB_TOP_USB3PHY_CTRL_OUT_ENABLE_MASK 0x10
#define BB_TOP_USB3PHY_CTRL_OUT_ENABLE 0x10
#define BB_TOP_USB3PHY_CTRL_TX_CLK_EN_OFFSET 1
#define BB_TOP_USB3PHY_CTRL_TX_CLK_EN_MASK 0x2
#define BB_TOP_USB3PHY_CTRL_TX_CLK_EN 0x2
#define BB_TOP_USB3PHY_CTRL_RST_B_OFFSET 0
#define BB_TOP_USB3PHY_CTRL_RST_B_MASK 0x1
#define BB_TOP_USB3PHY_CTRL_RST_B 0x1
#define BB_TOP_GE_CTRL_INT_N_OFFSET 8
#define BB_TOP_GE_CTRL_INT_N_MASK 0x100
#define BB_TOP_GE_CTRL_INT_N 0x100
#define BB_TOP_GE_CTRL_VBUS_DET_OFFSET 4
#define BB_TOP_GE_CTRL_VBUS_DET_MASK 0x10
#define BB_TOP_GE_CTRL_VBUS_DET 0x10
#define BB_TOP_GE_CTRL_CLM_TX_CLK_EN_OFFSET 3
#define BB_TOP_GE_CTRL_CLM_TX_CLK_EN_MASK 0x8
#define BB_TOP_GE_CTRL_CLM_TX_CLK_EN 0x8
#define BB_TOP_GE_CTRL_REF_CLK_EN_OFFSET 2
#define BB_TOP_GE_CTRL_REF_CLK_EN_MASK 0x4
#define BB_TOP_GE_CTRL_REF_CLK_EN 0x4
#define BB_TOP_GE_CTRL_BOOT_SEL_OFFSET 1
#define BB_TOP_GE_CTRL_BOOT_SEL_MASK 0x2
#define BB_TOP_GE_CTRL_BOOT_SEL 0x2
#define BB_TOP_GE_CTRL_RST_B_OFFSET 0
#define BB_TOP_GE_CTRL_RST_B_MASK 0x1
#define BB_TOP_GE_CTRL_RST_B 0x1
#define BB_TOP_XMII_CTRL_TXD_TRI_OFFSET 8
#define BB_TOP_XMII_CTRL_TXD_TRI_MASK 0xFF00
#define BB_TOP_XMII_CTRL_TX_ER_TRI_OFFSET 5
#define BB_TOP_XMII_CTRL_TX_ER_TRI_MASK 0x20
#define BB_TOP_XMII_CTRL_TX_ER_TRI 0x20
#define BB_TOP_XMII_CTRL_TX_EN_TRI_OFFSET 4
#define BB_TOP_XMII_CTRL_TX_EN_TRI_MASK 0x10
#define BB_TOP_XMII_CTRL_TX_EN_TRI 0x10
#define BB_TOP_XMII_CTRL_GTX_CLK_EN_OFFSET 1
#define BB_TOP_XMII_CTRL_GTX_CLK_EN_MASK 0x2
#define BB_TOP_XMII_CTRL_GTX_CLK_EN 0x2
#define BB_TOP_XMII_CTRL_RST_B_OFFSET 0
#define BB_TOP_XMII_CTRL_RST_B_MASK 0x1
#define BB_TOP_XMII_CTRL_RST_B 0x1
#define BB_TOP_RS232_CTRL_INVALID_B_OFFSET 4
#define BB_TOP_RS232_CTRL_INVALID_B_MASK 0x10
#define BB_TOP_RS232_CTRL_INVALID_B 0x10
#define BB_TOP_RS232_CTRL_FORCE_OFF_B_OFFSET 1
#define BB_TOP_RS232_CTRL_FORCE_OFF_B_MASK 0x2
#define BB_TOP_RS232_CTRL_FORCE_OFF_B 0x2
#define BB_TOP_RS232_CTRL_EN_B_OFFSET 0
#define BB_TOP_RS232_CTRL_EN_B_MASK 0x1
#define BB_TOP_RS232_CTRL_EN_B 0x1
#define BB_TOP_DRP_DRP_CTRL_DRP_DI_OFFSET 16
#define BB_TOP_DRP_DRP_CTRL_DRP_DI_MASK 0xFFFF0000
#define BB_TOP_DRP_DRP_CTRL_DRP_WE_OFFSET 12
#define BB_TOP_DRP_DRP_CTRL_DRP_WE_MASK 0x1000
#define BB_TOP_DRP_DRP_CTRL_DRP_WE 0x1000
#define BB_TOP_DRP_DRP_CTRL_DRP_ADDR_OFFSET 0
#define BB_TOP_DRP_DRP_CTRL_DRP_ADDR_MASK 0x1FF
#define BB_TOP_DRP_DRP_EN_MASK_XADC_OFFSET 12
#define BB_TOP_DRP_DRP_EN_MASK_XADC_MASK 0x1000
#define BB_TOP_DRP_DRP_EN_MASK_XADC 0x1000
#define BB_TOP_DRP_DRP_EN_MASK_SL_5G_GT0_OFFSET 11
#define BB_TOP_DRP_DRP_EN_MASK_SL_5G_GT0_MASK 0x800
#define BB_TOP_DRP_DRP_EN_MASK_SL_5G_GT0 0x800
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT1_OFFSET 10
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT1_MASK 0x400
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT1 0x400
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT0_OFFSET 9
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT0_MASK 0x200
#define BB_TOP_DRP_DRP_EN_MASK_RXAUI_GT0 0x200
#define BB_TOP_DRP_DRP_EN_MASK_LINK_MMCM_OFFSET 8
#define BB_TOP_DRP_DRP_EN_MASK_LINK_MMCM_MASK 0x100
#define BB_TOP_DRP_DRP_EN_MASK_LINK_MMCM 0x100
#define BB_TOP_DRP_DRP_EN_MASK_LINK_GT_COMMON_OFFSET 7
#define BB_TOP_DRP_DRP_EN_MASK_LINK_GT_COMMON_MASK 0x80
#define BB_TOP_DRP_DRP_EN_MASK_LINK_GT_COMMON 0x80
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_RXOUTCLK_MMCM_OFFSET 6
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_RXOUTCLK_MMCM_MASK 0x40
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_RXOUTCLK_MMCM 0x40
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_TXOUTCLK_MMCM_OFFSET 5
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_TXOUTCLK_MMCM_MASK 0x20
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_TXOUTCLK_MMCM 0x20
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_COMMON_OFFSET 4
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_COMMON_MASK 0x10
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT_COMMON 0x10
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT3_OFFSET 3
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT3_MASK 0x8
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT3 0x8
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT2_OFFSET 2
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT2_MASK 0x4
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT2 0x4
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT1_OFFSET 1
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT1_MASK 0x2
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT1 0x2
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT0_OFFSET 0
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT0_MASK 0x1
#define BB_TOP_DRP_DRP_EN_MASK_DP_GT0 0x1
#define BB_TOP_DRP_DRP_READ_DATA_DRP_DO_OFFSET 0
#define BB_TOP_DRP_DRP_READ_DATA_DRP_DO_MASK 0xFFFF
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL1REFCLKSEL_OFFSET 8
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL1REFCLKSEL_MASK 0x700
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL0REFCLKSEL_OFFSET 4
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL0REFCLKSEL_MASK 0x70
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL1PD_OFFSET 1
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL1PD_MASK 0x2
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL1PD 0x2
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL0PD_OFFSET 0
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL0PD_MASK 0x1
#define BB_TOP_DP_GTP_COMMON_PLL_CTRL_PLL0PD 0x1
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1REFCLKLOST_OFFSET 5
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1REFCLKLOST_MASK 0x20
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1REFCLKLOST 0x20
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0REFCLKLOST_OFFSET 4
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0REFCLKLOST_MASK 0x10
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0REFCLKLOST 0x10
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1LOCK_OFFSET 1
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1LOCK_MASK 0x2
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL1LOCK 0x2
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0LOCK_OFFSET 0
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0LOCK_MASK 0x1
#define BB_TOP_DP_GTP_COMMON_PLL_STATUS_PLL0LOCK 0x1
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT3_LOOPBACK_OFFSET 12
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT3_LOOPBACK_MASK 0x7000
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT2_LOOPBACK_OFFSET 8
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT2_LOOPBACK_MASK 0x700
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT1_LOOPBACK_OFFSET 4
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT1_LOOPBACK_MASK 0x70
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT0_LOOPBACK_OFFSET 0
#define BB_TOP_DP_GTP_COMMON_LOOPBACK_CTRL_GT0_LOOPBACK_MASK 0x7
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT3_TXSYSCLKSEL_OFFSET 6
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT3_TXSYSCLKSEL_MASK 0xC0
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT2_TXSYSCLKSEL_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT2_TXSYSCLKSEL_MASK 0x30
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT1_TXSYSCLKSEL_OFFSET 2
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT1_TXSYSCLKSEL_MASK 0xC
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT0_TXSYSCLKSEL_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_CLK_CTRL_GT0_TXSYSCLKSEL_MASK 0x3
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT3_TXPCSRESET_OFFSET 7
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT3_TXPCSRESET_MASK 0x80
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT3_TXPCSRESET 0x80
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT2_TXPCSRESET_OFFSET 6
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT2_TXPCSRESET_MASK 0x40
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT2_TXPCSRESET 0x40
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT1_TXPCSRESET_OFFSET 5
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT1_TXPCSRESET_MASK 0x20
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT1_TXPCSRESET 0x20
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT0_TXPCSRESET_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT0_TXPCSRESET_MASK 0x10
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_GT0_TXPCSRESET 0x10
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_SOFT_RESET_TX_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_SOFT_RESET_TX_MASK 0x1
#define BB_TOP_DP_GTP_TX_TX_RST_CTRL_SOFT_RESET_TX 0x1
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT_TXOUTCLK_MMCM_LOCK_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT_TXOUTCLK_MMCM_LOCK_MASK 0x100
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT_TXOUTCLK_MMCM_LOCK 0x100
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TX_FSM_RESET_DONE_OFFSET 7
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TX_FSM_RESET_DONE_MASK 0x80
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TX_FSM_RESET_DONE 0x80
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TX_FSM_RESET_DONE_OFFSET 6
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TX_FSM_RESET_DONE_MASK 0x40
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TX_FSM_RESET_DONE 0x40
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TX_FSM_RESET_DONE_OFFSET 5
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TX_FSM_RESET_DONE_MASK 0x20
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TX_FSM_RESET_DONE 0x20
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TX_FSM_RESET_DONE_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TX_FSM_RESET_DONE_MASK 0x10
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TX_FSM_RESET_DONE 0x10
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TXRESETDONE_OFFSET 3
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TXRESETDONE_MASK 0x8
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT3_TXRESETDONE 0x8
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TXRESETDONE_OFFSET 2
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TXRESETDONE_MASK 0x4
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT2_TXRESETDONE 0x4
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TXRESETDONE_OFFSET 1
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TXRESETDONE_MASK 0x2
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT1_TXRESETDONE 0x2
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TXRESETDONE_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TXRESETDONE_MASK 0x1
#define BB_TOP_DP_GTP_TX_TX_STATUS_GT0_TXRESETDONE 0x1
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT3_TXDIFFCTRL_OFFSET 12
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT3_TXDIFFCTRL_MASK 0xF000
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT2_TXDIFFCTRL_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT2_TXDIFFCTRL_MASK 0xF00
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT1_TXDIFFCTRL_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT1_TXDIFFCTRL_MASK 0xF0
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT0_TXDIFFCTRL_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_DIFF_CTRL_GT0_TXDIFFCTRL_MASK 0xF
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT3_TXPOSTCURSOR_OFFSET 24
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT3_TXPOSTCURSOR_MASK 0x1F000000
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT2_TXPOSTCURSOR_OFFSET 15
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT2_TXPOSTCURSOR_MASK 0xF8000
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT1_TXPOSTCURSOR_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT1_TXPOSTCURSOR_MASK 0x1F00
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT0_TXPOSTCURSOR_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_POST_CURSOR_GT0_TXPOSTCURSOR_MASK 0x1F
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT3_TXPRECURSOR_OFFSET 24
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT3_TXPRECURSOR_MASK 0x1F000000
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT2_TXPRECURSOR_OFFSET 15
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT2_TXPRECURSOR_MASK 0xF8000
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT1_TXPRECURSOR_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT1_TXPRECURSOR_MASK 0x1F00
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT0_TXPRECURSOR_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_PRE_CURSOR_GT0_TXPRECURSOR_MASK 0x1F
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT3_TXPRBSFORCEERR_OFFSET 15
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT3_TXPRBSFORCEERR_MASK 0x8000
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT3_TXPRBSFORCEERR 0x8000
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT3_TXPRBSSEL_OFFSET 12
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT3_TXPRBSSEL_MASK 0x7000
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT2_TXPRBSFORCEERR_OFFSET 11
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT2_TXPRBSFORCEERR_MASK 0x800
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT2_TXPRBSFORCEERR 0x800
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT2_TXPRBSSEL_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT2_TXPRBSSEL_MASK 0x700
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT1_TXPRBSFORCEERR_OFFSET 7
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT1_TXPRBSFORCEERR_MASK 0x80
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT1_TXPRBSFORCEERR 0x80
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT1_TXPRBSSEL_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT1_TXPRBSSEL_MASK 0x70
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT0_TXPRBSFORCEERR_OFFSET 3
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT0_TXPRBSFORCEERR_MASK 0x8
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT0_TXPRBSFORCEERR 0x8
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT0_TXPRBSSEL_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_PRBS_CTRL_GT0_TXPRBSSEL_MASK 0x7
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXINHIBIT_OFFSET 19
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXINHIBIT_MASK 0x80000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXINHIBIT 0x80000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXINHIBIT_OFFSET 18
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXINHIBIT_MASK 0x40000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXINHIBIT 0x40000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXINHIBIT_OFFSET 17
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXINHIBIT_MASK 0x20000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXINHIBIT 0x20000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXINHIBIT_OFFSET 16
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXINHIBIT_MASK 0x10000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXINHIBIT 0x10000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXPD_OFFSET 14
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXPD_MASK 0xC000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXPD_OFFSET 12
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXPD_MASK 0x3000
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXPD_OFFSET 10
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXPD_MASK 0xC00
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXPD_OFFSET 8
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXPD_MASK 0x300
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TX8B10BEN_OFFSET 7
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TX8B10BEN_MASK 0x80
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TX8B10BEN 0x80
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TX8B10BEN_OFFSET 6
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TX8B10BEN_MASK 0x40
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TX8B10BEN 0x40
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TX8B10BEN_OFFSET 5
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TX8B10BEN_MASK 0x20
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TX8B10BEN 0x20
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TX8B10BEN_OFFSET 4
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TX8B10BEN_MASK 0x10
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TX8B10BEN 0x10
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXPOLARITY_OFFSET 3
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXPOLARITY_MASK 0x8
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT3_TXPOLARITY 0x8
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXPOLARITY_OFFSET 2
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXPOLARITY_MASK 0x4
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT2_TXPOLARITY 0x4
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXPOLARITY_OFFSET 1
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXPOLARITY_MASK 0x2
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT1_TXPOLARITY 0x2
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXPOLARITY_OFFSET 0
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXPOLARITY_MASK 0x1
#define BB_TOP_DP_GTP_TX_TX_MISC_CTRL_GT0_TXPOLARITY 0x1
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT3_RXSYSCLKSEL_OFFSET 6
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT3_RXSYSCLKSEL_MASK 0xC0
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT2_RXSYSCLKSEL_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT2_RXSYSCLKSEL_MASK 0x30
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT1_RXSYSCLKSEL_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT1_RXSYSCLKSEL_MASK 0xC
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT0_RXSYSCLKSEL_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_CLK_CTRL_GT0_RXSYSCLKSEL_MASK 0x3
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXLPMRESET_OFFSET 19
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXLPMRESET_MASK 0x80000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXLPMRESET 0x80000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXLPMRESET_OFFSET 18
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXLPMRESET_MASK 0x40000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXLPMRESET 0x40000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXLPMRESET_OFFSET 17
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXLPMRESET_MASK 0x20000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXLPMRESET 0x20000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXLPMRESET_OFFSET 16
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXLPMRESET_MASK 0x10000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXLPMRESET 0x10000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_EYESCANRESET_OFFSET 15
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_EYESCANRESET_MASK 0x8000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_EYESCANRESET 0x8000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_EYESCANRESET_OFFSET 14
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_EYESCANRESET_MASK 0x4000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_EYESCANRESET 0x4000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_EYESCANRESET_OFFSET 13
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_EYESCANRESET_MASK 0x2000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_EYESCANRESET 0x2000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_EYESCANRESET_OFFSET 12
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_EYESCANRESET_MASK 0x1000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_EYESCANRESET 0x1000
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPMARESET_OFFSET 11
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPMARESET_MASK 0x800
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPMARESET 0x800
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPMARESET_OFFSET 10
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPMARESET_MASK 0x400
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPMARESET 0x400
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPMARESET_OFFSET 9
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPMARESET_MASK 0x200
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPMARESET 0x200
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPMARESET_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPMARESET_MASK 0x100
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPMARESET 0x100
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPCSRESET_OFFSET 7
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPCSRESET_MASK 0x80
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT3_RXPCSRESET 0x80
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPCSRESET_OFFSET 6
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPCSRESET_MASK 0x40
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT2_RXPCSRESET 0x40
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPCSRESET_OFFSET 5
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPCSRESET_MASK 0x20
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT1_RXPCSRESET 0x20
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPCSRESET_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPCSRESET_MASK 0x10
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_GT0_RXPCSRESET 0x10
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_DONT_RESET_ON_DATA_ERROR_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_DONT_RESET_ON_DATA_ERROR_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_DONT_RESET_ON_DATA_ERROR 0x2
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_SOFT_RESET_RX_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_SOFT_RESET_RX_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_RST_CTRL_SOFT_RESET_RX 0x1
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT_RXOUTCLK_MMCM_LOCK_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT_RXOUTCLK_MMCM_LOCK_MASK 0x100
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT_RXOUTCLK_MMCM_LOCK 0x100
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RX_FSM_RESET_DONE_OFFSET 7
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RX_FSM_RESET_DONE_MASK 0x80
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RX_FSM_RESET_DONE 0x80
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RX_FSM_RESET_DONE_OFFSET 6
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RX_FSM_RESET_DONE_MASK 0x40
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RX_FSM_RESET_DONE 0x40
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RX_FSM_RESET_DONE_OFFSET 5
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RX_FSM_RESET_DONE_MASK 0x20
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RX_FSM_RESET_DONE 0x20
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RX_FSM_RESET_DONE_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RX_FSM_RESET_DONE_MASK 0x10
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RX_FSM_RESET_DONE 0x10
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RXRESETDONE_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RXRESETDONE_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT3_RXRESETDONE 0x8
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RXRESETDONE_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RXRESETDONE_MASK 0x4
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT2_RXRESETDONE 0x4
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RXRESETDONE_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RXRESETDONE_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT1_RXRESETDONE 0x2
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RXRESETDONE_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RXRESETDONE_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_STATUS_GT0_RXRESETDONE 0x1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXPCOMMAALIGNEN_OFFSET 7
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXPCOMMAALIGNEN_MASK 0x80
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXPCOMMAALIGNEN 0x80
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXPCOMMAALIGNEN_OFFSET 6
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXPCOMMAALIGNEN_MASK 0x40
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXPCOMMAALIGNEN 0x40
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXPCOMMAALIGNEN_OFFSET 5
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXPCOMMAALIGNEN_MASK 0x20
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXPCOMMAALIGNEN 0x20
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXPCOMMAALIGNEN_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXPCOMMAALIGNEN_MASK 0x10
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXPCOMMAALIGNEN 0x10
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXMCOMMAALIGNEN_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXMCOMMAALIGNEN_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT3_RXMCOMMAALIGNEN 0x8
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXMCOMMAALIGNEN_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXMCOMMAALIGNEN_MASK 0x4
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT2_RXMCOMMAALIGNEN 0x4
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXMCOMMAALIGNEN_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXMCOMMAALIGNEN_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT1_RXMCOMMAALIGNEN 0x2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXMCOMMAALIGNEN_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXMCOMMAALIGNEN_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_CTRL_GT0_RXMCOMMAALIGNEN 0x1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT3_RXBYTEISALIGNED_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT3_RXBYTEISALIGNED_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT3_RXBYTEISALIGNED 0x8
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT2_RXBYTEISALIGNED_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT2_RXBYTEISALIGNED_MASK 0x4
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT2_RXBYTEISALIGNED 0x4
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT1_RXBYTEISALIGNED_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT1_RXBYTEISALIGNED_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT1_RXBYTEISALIGNED 0x2
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT0_RXBYTEISALIGNED_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT0_RXBYTEISALIGNED_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_BYTE_ALIGN_STATUS_GT0_RXBYTEISALIGNED 0x1
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT3_RXPRBSCNTRESET_OFFSET 15
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT3_RXPRBSCNTRESET_MASK 0x8000
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT3_RXPRBSCNTRESET 0x8000
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT3_RXPRBSSEL_OFFSET 12
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT3_RXPRBSSEL_MASK 0x7000
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT2_RXPRBSCNTRESET_OFFSET 11
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT2_RXPRBSCNTRESET_MASK 0x800
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT2_RXPRBSCNTRESET 0x800
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT2_RXPRBSSEL_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT2_RXPRBSSEL_MASK 0x700
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT1_RXPRBSCNTRESET_OFFSET 7
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT1_RXPRBSCNTRESET_MASK 0x80
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT1_RXPRBSCNTRESET 0x80
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT1_RXPRBSSEL_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT1_RXPRBSSEL_MASK 0x70
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT0_RXPRBSCNTRESET_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT0_RXPRBSCNTRESET_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT0_RXPRBSCNTRESET 0x8
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT0_RXPRBSSEL_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_PRBS_CTRL_GT0_RXPRBSSEL_MASK 0x7
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT3_RXPHMONITOR_OFFSET 24
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT3_RXPHMONITOR_MASK 0x1F000000
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT2_RXPHMONITOR_OFFSET 16
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT2_RXPHMONITOR_MASK 0x1F0000
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT1_RXPHMONITOR_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT1_RXPHMONITOR_MASK 0x1F00
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT0_RXPHMONITOR_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_PH_MONITOR_GT0_RXPHMONITOR_MASK 0x1F
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT3_RXPHSLIPMONITOR_OFFSET 24
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT3_RXPHSLIPMONITOR_MASK 0x1F000000
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT2_RXPHSLIPMONITOR_OFFSET 16
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT2_RXPHSLIPMONITOR_MASK 0x1F0000
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT1_RXPHSLIPMONITOR_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT1_RXPHSLIPMONITOR_MASK 0x1F00
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT0_RXPHSLIPMONITOR_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_PH_SLIP_MONITOR_GT0_RXPHSLIPMONITOR_MASK 0x1F
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT3_DMONITOROUT_OFFSET 24
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT3_DMONITOROUT_MASK 0xFF000000
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT2_DMONITOROUT_OFFSET 16
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT2_DMONITOROUT_MASK 0xFF0000
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT1_DMONITOROUT_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT1_DMONITOROUT_MASK 0xFF00
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT0_DMONITOROUT_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_DMONITOR_OUT_GT0_DMONITOROUT_MASK 0xFF
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMLFHOLD_OFFSET 11
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMLFHOLD_MASK 0x800
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMLFHOLD 0x800
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMLFHOLD_OFFSET 10
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMLFHOLD_MASK 0x400
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMLFHOLD 0x400
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMLFHOLD_OFFSET 9
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMLFHOLD_MASK 0x200
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMLFHOLD 0x200
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMLFHOLD_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMLFHOLD_MASK 0x100
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMLFHOLD 0x100
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFOVRDEN_OFFSET 7
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFOVRDEN_MASK 0x80
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFOVRDEN 0x80
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFOVRDEN_OFFSET 6
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFOVRDEN_MASK 0x40
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFOVRDEN 0x40
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN_OFFSET 5
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN_MASK 0x20
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN 0x20
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN_OFFSET 4
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN_MASK 0x10
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN 0x10
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFHOLD_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFHOLD_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT3_RXLPMHFHOLD 0x8
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFHOLD_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFHOLD_MASK 0x4
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT2_RXLPMHFHOLD 0x4
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFHOLD_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFHOLD_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT1_RXLPMHFHOLD 0x2
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFHOLD_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFHOLD_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_EQ_CTRL_GT0_RXLPMHFHOLD 0x1
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT_DATA_VALID_EN_OFFSET 31
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT_DATA_VALID_EN_MASK 0x80000000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT_DATA_VALID_EN 0x80000000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXCDRHOLD_OFFSET 19
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXCDRHOLD_MASK 0x80000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXCDRHOLD 0x80000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXCDRHOLD_OFFSET 18
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXCDRHOLD_MASK 0x40000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXCDRHOLD 0x40000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXCDRHOLD_OFFSET 17
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXCDRHOLD_MASK 0x20000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXCDRHOLD 0x20000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXCDRHOLD_OFFSET 16
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXCDRHOLD_MASK 0x10000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXCDRHOLD 0x10000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXPD_OFFSET 14
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXPD_MASK 0xC000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXPD_OFFSET 12
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXPD_MASK 0x3000
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXPD_OFFSET 10
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXPD_MASK 0xC00
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXPD_OFFSET 8
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXPD_MASK 0x300
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXPOLARITY_OFFSET 3
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXPOLARITY_MASK 0x8
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT3_RXPOLARITY 0x8
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXPOLARITY_OFFSET 2
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXPOLARITY_MASK 0x4
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT2_RXPOLARITY 0x4
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXPOLARITY_OFFSET 1
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXPOLARITY_MASK 0x2
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT1_RXPOLARITY 0x2
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXPOLARITY_OFFSET 0
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXPOLARITY_MASK 0x1
#define BB_TOP_DP_GTP_RX_RX_MISC_CTRL_GT0_RXPOLARITY 0x1
#define BB_TOP_RXAUI_CONTROL_FIX_MISSING_START_OFFSET 8
#define BB_TOP_RXAUI_CONTROL_FIX_MISSING_START_MASK 0x100
#define BB_TOP_RXAUI_CONTROL_FIX_MISSING_START 0x100
#define BB_TOP_RXAUI_CONTROL_TYPE_SEL_OFFSET 4
#define BB_TOP_RXAUI_CONTROL_TYPE_SEL_MASK 0x30
#define BB_TOP_RXAUI_CONTROL_RESET_OFFSET 0
#define BB_TOP_RXAUI_CONTROL_RESET_MASK 0x1
#define BB_TOP_RXAUI_CONTROL_RESET 0x1
#define BB_TOP_RXAUI_STATUS_DEBUG_OFFSET 0
#define BB_TOP_RXAUI_STATUS_DEBUG_MASK 0x3F
#define BB_TOP_RXAUI_GT_RST_CTRL_GTRXRESET_OFFSET 31
#define BB_TOP_RXAUI_GT_RST_CTRL_GTRXRESET_MASK 0x80000000
#define BB_TOP_RXAUI_GT_RST_CTRL_GTRXRESET 0x80000000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXBUFRESET_OFFSET 21
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXBUFRESET_MASK 0x200000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXBUFRESET 0x200000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXBUFRESET_OFFSET 20
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXBUFRESET_MASK 0x100000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXBUFRESET 0x100000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXLPMRESET_OFFSET 17
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXLPMRESET_MASK 0x20000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXLPMRESET 0x20000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXLPMRESET_OFFSET 16
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXLPMRESET_MASK 0x10000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXLPMRESET 0x10000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPCSRESET_OFFSET 13
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPCSRESET_MASK 0x2000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPCSRESET 0x2000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPCSRESET_OFFSET 12
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPCSRESET_MASK 0x1000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPCSRESET 0x1000
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPMARESET_OFFSET 9
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPMARESET_MASK 0x200
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_RXPMARESET 0x200
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPMARESET_OFFSET 8
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPMARESET_MASK 0x100
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_RXPMARESET 0x100
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPCSRESET_OFFSET 5
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPCSRESET_MASK 0x20
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPCSRESET 0x20
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPCSRESET_OFFSET 4
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPCSRESET_MASK 0x10
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPCSRESET 0x10
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPMARESET_OFFSET 1
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPMARESET_MASK 0x2
#define BB_TOP_RXAUI_GT_RST_CTRL_GT1_TXPMARESET 0x2
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPMARESET_OFFSET 0
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPMARESET_MASK 0x1
#define BB_TOP_RXAUI_GT_RST_CTRL_GT0_TXPMARESET 0x1
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXPMARESETDONE_OFFSET 19
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXPMARESETDONE_MASK 0x80000
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXPMARESETDONE 0x80000
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXPMARESETDONE_OFFSET 18
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXPMARESETDONE_MASK 0x40000
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXPMARESETDONE 0x40000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXDLYSRESETDONE_OFFSET 17
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXDLYSRESETDONE_MASK 0x20000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXDLYSRESETDONE 0x20000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXDLYSRESETDONE_OFFSET 16
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXDLYSRESETDONE_MASK 0x10000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXDLYSRESETDONE 0x10000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHINITDONE_OFFSET 15
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHINITDONE_MASK 0x8000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHINITDONE 0x8000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHINITDONE_OFFSET 14
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHINITDONE_MASK 0x4000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHINITDONE 0x4000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHALIGNDONE_OFFSET 13
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHALIGNDONE_MASK 0x2000
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXPHALIGNDONE 0x2000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHALIGNDONE_OFFSET 12
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHALIGNDONE_MASK 0x1000
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXPHALIGNDONE 0x1000
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXBUFSTATUS_OFFSET 8
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXBUFSTATUS_MASK 0x700
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXBUFSTATUS_OFFSET 4
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXBUFSTATUS_MASK 0x70
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXRESETDONE_OFFSET 3
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXRESETDONE_MASK 0x8
#define BB_TOP_RXAUI_GT_STATUS_GT1_RXRESETDONE 0x8
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXRESETDONE_OFFSET 2
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXRESETDONE_MASK 0x4
#define BB_TOP_RXAUI_GT_STATUS_GT0_RXRESETDONE 0x4
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXRESETDONE_OFFSET 1
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXRESETDONE_MASK 0x2
#define BB_TOP_RXAUI_GT_STATUS_GT1_TXRESETDONE 0x2
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXRESETDONE_OFFSET 0
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXRESETDONE_MASK 0x1
#define BB_TOP_RXAUI_GT_STATUS_GT0_TXRESETDONE 0x1
#define BB_TOP_RXAUI_GT_TX_DIFF_CTRL_GT1_TXDIFFCTRL_OFFSET 4
#define BB_TOP_RXAUI_GT_TX_DIFF_CTRL_GT1_TXDIFFCTRL_MASK 0xF0
#define BB_TOP_RXAUI_GT_TX_DIFF_CTRL_GT0_TXDIFFCTRL_OFFSET 0
#define BB_TOP_RXAUI_GT_TX_DIFF_CTRL_GT0_TXDIFFCTRL_MASK 0xF
#define BB_TOP_RXAUI_GT_TX_POST_CURSOR_GT1_TXPOSTCURSOR_OFFSET 8
#define BB_TOP_RXAUI_GT_TX_POST_CURSOR_GT1_TXPOSTCURSOR_MASK 0x1F00
#define BB_TOP_RXAUI_GT_TX_POST_CURSOR_GT0_TXPOSTCURSOR_OFFSET 0
#define BB_TOP_RXAUI_GT_TX_POST_CURSOR_GT0_TXPOSTCURSOR_MASK 0x1F
#define BB_TOP_RXAUI_GT_TX_PRE_CURSOR_GT1_TXPRECURSOR_OFFSET 8
#define BB_TOP_RXAUI_GT_TX_PRE_CURSOR_GT1_TXPRECURSOR_MASK 0x1F00
#define BB_TOP_RXAUI_GT_TX_PRE_CURSOR_GT0_TXPRECURSOR_OFFSET 0
#define BB_TOP_RXAUI_GT_TX_PRE_CURSOR_GT0_TXPRECURSOR_MASK 0x1F
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFOVRDEN_OFFSET 13
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFOVRDEN_MASK 0x2000
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFOVRDEN 0x2000
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFOVRDEN_OFFSET 12
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFOVRDEN_MASK 0x1000
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFOVRDEN 0x1000
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFHOLD_OFFSET 9
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFHOLD_MASK 0x200
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMLFHOLD 0x200
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFHOLD_OFFSET 8
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFHOLD_MASK 0x100
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMLFHOLD 0x100
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN_OFFSET 5
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN_MASK 0x20
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFOVRDEN 0x20
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN_OFFSET 4
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN_MASK 0x10
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFOVRDEN 0x10
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFHOLD_OFFSET 1
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFHOLD_MASK 0x2
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT1_RXLPMHFHOLD 0x2
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFHOLD_OFFSET 0
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFHOLD_MASK 0x1
#define BB_TOP_RXAUI_GT_RX_EQ_CTRL_GT0_RXLPMHFHOLD 0x1
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_RXPRBSCNTRESET_OFFSET 15
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_RXPRBSCNTRESET_MASK 0x8000
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_RXPRBSCNTRESET 0x8000
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_RXPRBSSEL_OFFSET 12
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_RXPRBSSEL_MASK 0x7000
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_RXPRBSCNTRESET_OFFSET 11
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_RXPRBSCNTRESET_MASK 0x800
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_RXPRBSCNTRESET 0x800
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_RXPRBSSEL_OFFSET 8
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_RXPRBSSEL_MASK 0x700
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_TXPRBSFORCEERR_OFFSET 7
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_TXPRBSFORCEERR_MASK 0x80
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_TXPRBSFORCEERR 0x80
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_TXPRBSSEL_OFFSET 4
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT1_TXPRBSSEL_MASK 0x70
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_TXPRBSFORCEERR_OFFSET 3
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_TXPRBSFORCEERR_MASK 0x8
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_TXPRBSFORCEERR 0x8
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_TXPRBSSEL_OFFSET 0
#define BB_TOP_RXAUI_GT_PRBS_CTRL_GT0_TXPRBSSEL_MASK 0x7
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXCDRHOLD_OFFSET 25
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXCDRHOLD_MASK 0x2000000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXCDRHOLD 0x2000000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXCDRHOLD_OFFSET 24
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXCDRHOLD_MASK 0x1000000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXCDRHOLD 0x1000000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXRATE_OFFSET 20
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXRATE_MASK 0x700000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXRATE_OFFSET 16
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXRATE_MASK 0x70000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXPOLARITY_OFFSET 13
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXPOLARITY_MASK 0x2000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_RXPOLARITY 0x2000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXPOLARITY_OFFSET 12
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXPOLARITY_MASK 0x1000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_RXPOLARITY 0x1000
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_LOOPBACK_OFFSET 8
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_LOOPBACK_MASK 0x700
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_LOOPBACK_OFFSET 4
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_LOOPBACK_MASK 0x70
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXPOLARITY_OFFSET 3
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXPOLARITY_MASK 0x8
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXPOLARITY 0x8
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXPOLARITY_OFFSET 2
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXPOLARITY_MASK 0x4
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXPOLARITY 0x4
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXINHIBIT_OFFSET 1
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXINHIBIT_MASK 0x2
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT1_TXINHIBIT 0x2
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXINHIBIT_OFFSET 0
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXINHIBIT_MASK 0x1
#define BB_TOP_RXAUI_GT_MISC_CTRL_GT0_TXINHIBIT 0x1
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_MISSING_START_OFFSET 4
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_MISSING_START_MASK 0x10
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_MISSING_START 0x10
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_NOT_IN_TABLE_OFFSET 3
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_NOT_IN_TABLE_MASK 0x8
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_NOT_IN_TABLE 0x8
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_DISP_ERR_OFFSET 2
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_DISP_ERR_MASK 0x4
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT1_DISP_ERR 0x4
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_NOT_IN_TABLE_OFFSET 1
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_NOT_IN_TABLE_MASK 0x2
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_NOT_IN_TABLE 0x2
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_DISP_ERR_OFFSET 0
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_DISP_ERR_MASK 0x1
#define BB_TOP_RXAUI_STATS0_RD2CLR_CONFIG_GT0_DISP_ERR 0x1
#define BB_TOP_RXAUI_STATS0_GT0_DISP_ERR_GT0_DISP_ERR_OFFSET 0
#define BB_TOP_RXAUI_STATS0_GT0_DISP_ERR_GT0_DISP_ERR_MASK 0xFFFFFFFF
#define BB_TOP_RXAUI_STATS0_GT0_NOT_IN_TABLE_GT0_NOT_IN_TABLE_OFFSET 0
#define BB_TOP_RXAUI_STATS0_GT0_NOT_IN_TABLE_GT0_NOT_IN_TABLE_MASK 0xFFFFFFFF
#define BB_TOP_RXAUI_STATS0_GT1_DISP_ERR_GT1_DISP_ERR_OFFSET 0
#define BB_TOP_RXAUI_STATS0_GT1_DISP_ERR_GT1_DISP_ERR_MASK 0xFFFFFFFF
#define BB_TOP_RXAUI_STATS0_GT1_NOT_IN_TABLE_GT1_NOT_IN_TABLE_OFFSET 0
#define BB_TOP_RXAUI_STATS0_GT1_NOT_IN_TABLE_GT1_NOT_IN_TABLE_MASK 0xFFFFFFFF
#define BB_TOP_RXAUI_STATS0_MISSING_START_MISSING_START_OFFSET 0
#define BB_TOP_RXAUI_STATS0_MISSING_START_MISSING_START_MASK 0xFFFFFFFF
#define BB_TOP_SL_5G_GT_RST_CTRL_RXBUFRESET_OFFSET 10
#define BB_TOP_SL_5G_GT_RST_CTRL_RXBUFRESET_MASK 0x400
#define BB_TOP_SL_5G_GT_RST_CTRL_RXBUFRESET 0x400
#define BB_TOP_SL_5G_GT_RST_CTRL_RXLPMRESET_OFFSET 9
#define BB_TOP_SL_5G_GT_RST_CTRL_RXLPMRESET_MASK 0x200
#define BB_TOP_SL_5G_GT_RST_CTRL_RXLPMRESET 0x200
#define BB_TOP_SL_5G_GT_RST_CTRL_EYESCANRESET_OFFSET 8
#define BB_TOP_SL_5G_GT_RST_CTRL_EYESCANRESET_MASK 0x100
#define BB_TOP_SL_5G_GT_RST_CTRL_EYESCANRESET 0x100
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPMARESET_OFFSET 7
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPMARESET_MASK 0x80
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPMARESET 0x80
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPCSRESET_OFFSET 6
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPCSRESET_MASK 0x40
#define BB_TOP_SL_5G_GT_RST_CTRL_RXPCSRESET 0x40
#define BB_TOP_SL_5G_GT_RST_CTRL_DONT_RESET_ON_DATA_ERROR_OFFSET 5
#define BB_TOP_SL_5G_GT_RST_CTRL_DONT_RESET_ON_DATA_ERROR_MASK 0x20
#define BB_TOP_SL_5G_GT_RST_CTRL_DONT_RESET_ON_DATA_ERROR 0x20
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_RX_OFFSET 4
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_RX_MASK 0x10
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_RX 0x10
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPMARESET_OFFSET 2
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPMARESET_MASK 0x4
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPMARESET 0x4
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPCSRESET_OFFSET 1
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPCSRESET_MASK 0x2
#define BB_TOP_SL_5G_GT_RST_CTRL_TXPCSRESET 0x2
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_TX_OFFSET 0
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_TX_MASK 0x1
#define BB_TOP_SL_5G_GT_RST_CTRL_SOFT_RESET_TX 0x1
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRBSFORCEERR_OFFSET 27
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRBSFORCEERR_MASK 0x8000000
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRBSFORCEERR 0x8000000
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRBSSEL_OFFSET 24
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRBSSEL_MASK 0x7000000
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPOSTCURSOR_OFFSET 16
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPOSTCURSOR_MASK 0x1F0000
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRECURSOR_OFFSET 8
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPRECURSOR_MASK 0x1F00
#define BB_TOP_SL_5G_GT_TX_CTRL_TXDIFFCTRL_OFFSET 4
#define BB_TOP_SL_5G_GT_TX_CTRL_TXDIFFCTRL_MASK 0xF0
#define BB_TOP_SL_5G_GT_TX_CTRL_TXINHIBIT_OFFSET 3
#define BB_TOP_SL_5G_GT_TX_CTRL_TXINHIBIT_MASK 0x8
#define BB_TOP_SL_5G_GT_TX_CTRL_TXINHIBIT 0x8
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPOLARITY_OFFSET 2
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPOLARITY_MASK 0x4
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPOLARITY 0x4
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPD_OFFSET 0
#define BB_TOP_SL_5G_GT_TX_CTRL_TXPD_MASK 0x3
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPRBSCNTRESET_OFFSET 11
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPRBSCNTRESET_MASK 0x800
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPRBSCNTRESET 0x800
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPRBSSEL_OFFSET 8
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPRBSSEL_MASK 0x700
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMLFHOLD_OFFSET 7
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMLFHOLD_MASK 0x80
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMLFHOLD 0x80
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFOVRDEN_OFFSET 6
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFOVRDEN_MASK 0x40
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFOVRDEN 0x40
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFHOLD_OFFSET 5
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFHOLD_MASK 0x20
#define BB_TOP_SL_5G_GT_RX_CTRL_RXLPMHFHOLD 0x20
#define BB_TOP_SL_5G_GT_RX_CTRL_RXCDRHOLD_OFFSET 4
#define BB_TOP_SL_5G_GT_RX_CTRL_RXCDRHOLD_MASK 0x10
#define BB_TOP_SL_5G_GT_RX_CTRL_RXCDRHOLD 0x10
#define BB_TOP_SL_5G_GT_RX_CTRL_DATA_VALID_EN_OFFSET 3
#define BB_TOP_SL_5G_GT_RX_CTRL_DATA_VALID_EN_MASK 0x8
#define BB_TOP_SL_5G_GT_RX_CTRL_DATA_VALID_EN 0x8
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPOLARITY_OFFSET 2
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPOLARITY_MASK 0x4
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPOLARITY 0x4
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPD_OFFSET 0
#define BB_TOP_SL_5G_GT_RX_CTRL_RXPD_MASK 0x3
#define BB_TOP_SL_5G_GT_MISC_CTRL_LOOPBACK_OFFSET 0
#define BB_TOP_SL_5G_GT_MISC_CTRL_LOOPBACK_MASK 0x7
#define BB_TOP_SL_5G_GT_STATUS_DMONITOROUT_OFFSET 16
#define BB_TOP_SL_5G_GT_STATUS_DMONITOROUT_MASK 0xFF0000
#define BB_TOP_SL_5G_GT_STATUS_RXBYTEISALIGNED_OFFSET 12
#define BB_TOP_SL_5G_GT_STATUS_RXBYTEISALIGNED_MASK 0x1000
#define BB_TOP_SL_5G_GT_STATUS_RXBYTEISALIGNED 0x1000
#define BB_TOP_SL_5G_GT_STATUS_RXBUFSTATUS_OFFSET 8
#define BB_TOP_SL_5G_GT_STATUS_RXBUFSTATUS_MASK 0x700
#define BB_TOP_SL_5G_GT_STATUS_RXCLKCORCNT_OFFSET 4
#define BB_TOP_SL_5G_GT_STATUS_RXCLKCORCNT_MASK 0x30
#define BB_TOP_SL_5G_GT_STATUS_RX_FSM_RESET_DONE_OFFSET 3
#define BB_TOP_SL_5G_GT_STATUS_RX_FSM_RESET_DONE_MASK 0x8
#define BB_TOP_SL_5G_GT_STATUS_RX_FSM_RESET_DONE 0x8
#define BB_TOP_SL_5G_GT_STATUS_TX_FSM_RESET_DONE_OFFSET 2
#define BB_TOP_SL_5G_GT_STATUS_TX_FSM_RESET_DONE_MASK 0x4
#define BB_TOP_SL_5G_GT_STATUS_TX_FSM_RESET_DONE 0x4
#define BB_TOP_SL_5G_GT_STATUS_RXRESETDONE_OFFSET 1
#define BB_TOP_SL_5G_GT_STATUS_RXRESETDONE_MASK 0x2
#define BB_TOP_SL_5G_GT_STATUS_RXRESETDONE 0x2
#define BB_TOP_SL_5G_GT_STATUS_TXRESETDONE_OFFSET 0
#define BB_TOP_SL_5G_GT_STATUS_TXRESETDONE_MASK 0x1
#define BB_TOP_SL_5G_GT_STATUS_TXRESETDONE 0x1
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_RXBYTEREALIGN_OFFSET 2
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_RXBYTEREALIGN_MASK 0x4
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_RXBYTEREALIGN 0x4
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_NOT_IN_TABLE_OFFSET 1
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_NOT_IN_TABLE_MASK 0x2
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_NOT_IN_TABLE 0x2
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_DISP_ERR_OFFSET 0
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_DISP_ERR_MASK 0x1
#define BB_TOP_SL_5G_STATS0_RD2CLR_CONFIG_GT_DISP_ERR 0x1
#define BB_TOP_SL_5G_STATS0_GT_DISP_ERR_GT_DISP_ERR_OFFSET 0
#define BB_TOP_SL_5G_STATS0_GT_DISP_ERR_GT_DISP_ERR_MASK 0xFFFFFFFF
#define BB_TOP_SL_5G_STATS0_GT_NOT_IN_TABLE_GT_NOT_IN_TABLE_OFFSET 0
#define BB_TOP_SL_5G_STATS0_GT_NOT_IN_TABLE_GT_NOT_IN_TABLE_MASK 0xFFFFFFFF
#define BB_TOP_SL_5G_STATS0_GT_RXBYTEREALIGN_GT_RXBYTEREALIGN_OFFSET 0
#define BB_TOP_SL_5G_STATS0_GT_RXBYTEREALIGN_GT_RXBYTEREALIGN_MASK 0xFFFFFFFF
#endif /* _BB_TOP_REGS_H_ */

/* end */
