/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : Ardeshir Saghafi*/
/* generated by      : Ardeshir.Saghafi*/
/* generated from    : C:\cygwin64\home\Ardeshir.Saghafi\BLACKBIRD_20190627T175843\m_dp_source\regs\ids\dp_source_regs.docx*/
/* IDesignSpec rev   : 6.8.10.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : APB*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : dp_source */

#ifndef _DP_SOURCE_REGS_H_
#define _DP_SOURCE_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=ro 0xB */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=ro 0x9 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=ro 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=ro 0x9 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=ro 0xB */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_version;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t debug_sel : 4;           /* 31:28 SW=rw HW=ro 0x0 */
            
            uint32_t resv25 : 3;
            uint32_t dp_training_done : 1;           /* 24 SW=rw HW=ro 0x0 */
            
            uint32_t resv18 : 6;
            uint32_t vid_stream_end : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t apb_to_axi_mode_select : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t pix_gen_mode : 2;           /* 15:14 SW=rw HW=ro 0x0 */
            uint32_t pix_gen_sel : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t dp_enh_frm_en : 1;           /* 12 SW=rw HW=ro 0x1 */
            uint32_t decoder_error_inject : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t vid_stream_generator_en : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t syn_stream_generator_en : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t sdp_en : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t lane_bit_rate : 2;           /* 7:6 SW=rw HW=ro 0x1 */
            uint32_t tps_sel : 4;           /* 5:2 SW=rw HW=ro 0x0 */
            uint32_t lane_num : 2;           /* 1:0 SW=rw HW=ro 0x3 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t lane_num : 2;           /* 0:1 SW=rw HW=ro 0x3 */
            uint32_t tps_sel : 4;           /* 2:5 SW=rw HW=ro 0x0 */
            uint32_t lane_bit_rate : 2;           /* 6:7 SW=rw HW=ro 0x1 */
            uint32_t sdp_en : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t syn_stream_generator_en : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t vid_stream_generator_en : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t decoder_error_inject : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t dp_enh_frm_en : 1;           /* 12 SW=rw HW=ro 0x1 */
            uint32_t pix_gen_sel : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t pix_gen_mode : 2;           /* 14:15 SW=rw HW=ro 0x0 */
            uint32_t apb_to_axi_mode_select : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t vid_stream_end : 1;           /* 17 SW=rw HW=ro 0x0 */
            
            uint32_t resv18 : 6;
            uint32_t dp_training_done : 1;           /* 24 SW=rw HW=ro 0x0 */
            
            uint32_t resv25 : 3;
            uint32_t debug_sel : 4;           /* 28:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_configuration;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv1 : 31;
            uint32_t enable : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t enable : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t resv1 : 31;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_scrambler;

/*section : stream_generator */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t cs_start_level : 12;           /* 31:20 SW=rw HW=ro 0x3E8 */
            uint32_t cs_pkt_length : 10;           /* 19:10 SW=rw HW=ro 0x168 */
            uint32_t pix_start_level : 10;           /* 9:0 SW=rw HW=ro 0x200 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pix_start_level : 10;           /* 0:9 SW=rw HW=ro 0x200 */
            uint32_t cs_pkt_length : 10;           /* 10:19 SW=rw HW=ro 0x168 */
            uint32_t cs_start_level : 12;           /* 20:31 SW=rw HW=ro 0x3E8 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_cfg0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv23 : 9;
            uint32_t cs_fifo_level_check_frequency : 10;           /* 22:13 SW=rw HW=ro 0xA */
            uint32_t cs_pkt_interval : 13;           /* 12:0 SW=rw HW=ro 0x3F4 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t cs_pkt_interval : 13;           /* 0:12 SW=rw HW=ro 0x3F4 */
            uint32_t cs_fifo_level_check_frequency : 10;           /* 13:22 SW=rw HW=ro 0xA */
            uint32_t resv23 : 9;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_cfg1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t cs_pkt_interval_feedback_ctrl : 1;           /* 31 SW=rw HW=ro 0x0 */
            uint32_t cs_pkt_interval_feedback_ctrl_debug : 4;           /* 30:27 SW=rw HW=ro 0x0 */
            
            uint32_t resv8 : 19;
            uint32_t cs_pkt_interval_minus_offset0 : 4;           /* 7:4 SW=rw HW=ro 0x1 */
            uint32_t cs_pkt_interval_plus_offset0 : 4;           /* 3:0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t cs_pkt_interval_plus_offset0 : 4;           /* 0:3 SW=rw HW=ro 0x1 */
            uint32_t cs_pkt_interval_minus_offset0 : 4;           /* 4:7 SW=rw HW=ro 0x1 */
            
            uint32_t resv8 : 19;
            uint32_t cs_pkt_interval_feedback_ctrl_debug : 4;           /* 27:30 SW=rw HW=ro 0x0 */
            uint32_t cs_pkt_interval_feedback_ctrl : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_cfg2;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t dp_width_total_feedback_ctrl : 1;           /* 31 SW=rw HW=ro 0x0 */
            uint32_t dp_width_total_feedback_ctrl_debug : 4;           /* 30:27 SW=rw HW=ro 0x0 */
            
            uint32_t resv16 : 11;
            uint32_t dp_width_total_minus_offset1 : 4;           /* 15:12 SW=rw HW=ro 0x8 */
            uint32_t dp_width_total_plus_offset1 : 4;           /* 11:8 SW=rw HW=ro 0x8 */
            uint32_t dp_width_total_minus_offset0 : 4;           /* 7:4 SW=rw HW=ro 0x4 */
            uint32_t dp_width_total_plus_offset0 : 4;           /* 3:0 SW=rw HW=ro 0x4 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t dp_width_total_plus_offset0 : 4;           /* 0:3 SW=rw HW=ro 0x4 */
            uint32_t dp_width_total_minus_offset0 : 4;           /* 4:7 SW=rw HW=ro 0x4 */
            uint32_t dp_width_total_plus_offset1 : 4;           /* 8:11 SW=rw HW=ro 0x8 */
            uint32_t dp_width_total_minus_offset1 : 4;           /* 12:15 SW=rw HW=ro 0x8 */
            
            uint32_t resv16 : 11;
            uint32_t dp_width_total_feedback_ctrl_debug : 4;           /* 27:30 SW=rw HW=ro 0x0 */
            uint32_t dp_width_total_feedback_ctrl : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_cfg3;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv13 : 19;
            uint32_t debug : 13;           /* 12:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t debug : 13;           /* 0:12 SW=ro HW=wo 0x0 */
            uint32_t resv13 : 19;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_cs_pkt_updated_interval;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv15 : 17;
            uint32_t debug : 15;           /* 14:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t debug : 15;           /* 0:14 SW=ro HW=wo 0x0 */
            uint32_t resv15 : 17;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_dp_width_total_actual;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv31 : 1;
            uint32_t dp_width_active : 15;           /* 30:16 SW=rw HW=ro 0xDA4 */
            
            uint32_t resv15 : 1;
            uint32_t dp_width_total : 15;           /* 14:0 SW=rw HW=ro 0xFA0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t dp_width_total : 15;           /* 0:14 SW=rw HW=ro 0xFA0 */
            
            uint32_t resv15 : 1;
            uint32_t dp_width_active : 15;           /* 16:30 SW=rw HW=ro 0xDA4 */
            uint32_t resv31 : 1;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_alu0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv23 : 9;
            uint32_t full_tu_size : 7;           /* 22:16 SW=rw HW=ro 0x40 */
            uint32_t last_tu_size : 7;           /* 15:9 SW=rw HW=ro 0x24 */
            uint32_t full_tu_num : 9;           /* 8:0 SW=rw HW=ro 0x36 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t full_tu_num : 9;           /* 0:8 SW=rw HW=ro 0x36 */
            uint32_t last_tu_size : 7;           /* 9:15 SW=rw HW=ro 0x24 */
            uint32_t full_tu_size : 7;           /* 16:22 SW=rw HW=ro 0x40 */
            uint32_t resv23 : 9;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_alu1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t cpu_math_result_rdy : 1;           /* 31 SW=rw HW=ro 0x0 */
            uint32_t valid_bytes_repeat_num : 9;           /* 30:22 SW=rw HW=ro 0x0 */
            uint32_t valid_bytes_per_full_tu : 7;           /* 21:15 SW=rw HW=ro 0x1A */
            uint32_t valid_bytes_num_per_lane : 15;           /* 14:0 SW=rw HW=ro 0x5A0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t valid_bytes_num_per_lane : 15;           /* 0:14 SW=rw HW=ro 0x5A0 */
            uint32_t valid_bytes_per_full_tu : 7;           /* 15:21 SW=rw HW=ro 0x1A */
            uint32_t valid_bytes_repeat_num : 9;           /* 22:30 SW=rw HW=ro 0x0 */
            uint32_t cpu_math_result_rdy : 1;           /* 31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_alu2;

/*section : msa */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv27 : 5;
            uint32_t nvid_sel : 1;           /* 26 SW=rw HW=ro 0x0 */
            uint32_t mvid_sel : 2;           /* 25:24 SW=rw HW=ro 0x0 */
            uint32_t mvid_set_value : 24;           /* 23:0 SW=rw HW=ro 0x4666 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t mvid_set_value : 24;           /* 0:23 SW=rw HW=ro 0x4666 */
            uint32_t mvid_sel : 2;           /* 24:25 SW=rw HW=ro 0x0 */
            uint32_t nvid_sel : 1;           /* 26 SW=rw HW=ro 0x0 */
            uint32_t resv27 : 5;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_control_0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t insert_line_sel : 8;           /* 31:24 SW=rw HW=ro 0x0 */
            uint32_t nvid_set_value : 24;           /* 23:0 SW=rw HW=ro 0x8000 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t nvid_set_value : 24;           /* 0:23 SW=rw HW=ro 0x8000 */
            uint32_t insert_line_sel : 8;           /* 24:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_control_1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t mvid : 24;           /* 23:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t mvid : 24;           /* 0:23 SW=rw HW=ro 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_mvid;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t nvid : 24;           /* 23:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t nvid : 24;           /* 0:23 SW=rw HW=ro 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_nvid;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t total : 16;           /* 31:16 SW=rw HW=ro 0xFA0 */
            uint32_t start : 16;           /* 15:0 SW=rw HW=ro 0x36 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t start : 16;           /* 0:15 SW=rw HW=ro 0x36 */
            uint32_t total : 16;           /* 16:31 SW=rw HW=ro 0xFA0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_horizontal_0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t width : 16;           /* 31:16 SW=rw HW=ro 0xF00 */
            uint32_t polarity : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t sync_width : 15;           /* 14:0 SW=rw HW=ro 0x20 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sync_width : 15;           /* 0:14 SW=rw HW=ro 0x20 */
            uint32_t polarity : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t width : 16;           /* 16:31 SW=rw HW=ro 0xF00 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_horizontal_1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t total : 16;           /* 31:16 SW=rw HW=ro 0x8AE */
            uint32_t start : 16;           /* 15:0 SW=rw HW=ro 0x50 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t start : 16;           /* 0:15 SW=rw HW=ro 0x50 */
            uint32_t total : 16;           /* 16:31 SW=rw HW=ro 0x8AE */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_vertical_0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t height : 16;           /* 31:16 SW=rw HW=ro 0x870 */
            uint32_t polarity : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t sync_width : 15;           /* 14:0 SW=rw HW=ro 0x5 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sync_width : 15;           /* 0:14 SW=rw HW=ro 0x5 */
            uint32_t polarity : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t height : 16;           /* 16:31 SW=rw HW=ro 0x870 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_vertical_1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv19 : 13;
            uint32_t reserved : 3;           /* 18:16 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t vsc_sdp : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t y_only : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t stereo : 2;           /* 10:9 SW=rw HW=ro 0x0 */
            uint32_t int_total : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t color : 7;           /* 7:1 SW=rw HW=ro 0x10 */
            uint32_t clk_sync : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t clk_sync : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t color : 7;           /* 1:7 SW=rw HW=ro 0x10 */
            uint32_t int_total : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t stereo : 2;           /* 9:10 SW=rw HW=ro 0x0 */
            uint32_t y_only : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t vsc_sdp : 1;           /* 12 SW=rw HW=ro 0x0 */
            
            uint32_t resv13 : 3;
            uint32_t reserved : 3;           /* 16:18 SW=rw HW=ro 0x0 */
            uint32_t resv19 : 13;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_misc;

typedef struct {
    dp_source_stream_generator_msa_control_0  control_0;
    dp_source_stream_generator_msa_control_1  control_1;
    dp_source_stream_generator_msa_mvid  mvid;
    dp_source_stream_generator_msa_nvid  nvid;
    dp_source_stream_generator_msa_horizontal_0  horizontal_0;
    dp_source_stream_generator_msa_horizontal_1  horizontal_1;
    dp_source_stream_generator_msa_vertical_0  vertical_0;
    dp_source_stream_generator_msa_vertical_1  vertical_1;
    dp_source_stream_generator_msa_misc  misc;
    
    
    
} dp_source_stream_generator_msa;


/*section : msa_dp */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t mvid : 24;           /* 23:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t mvid : 24;           /* 0:23 SW=ro HW=wo 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_dp_mvid;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t nvid : 24;           /* 23:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t nvid : 24;           /* 0:23 SW=ro HW=wo 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_msa_dp_nvid;

typedef struct {
    dp_source_stream_generator_msa_dp_mvid  mvid;
    dp_source_stream_generator_msa_dp_nvid  nvid;
    
    
    
} dp_source_stream_generator_msa_dp;


typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv10 : 22;
            uint32_t state_vid : 2;           /* 9:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv2 : 6;
            uint32_t state_dp : 2;           /* 1:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t state_dp : 2;           /* 0:1 SW=ro HW=wo 0x0 */
            
            uint32_t resv2 : 6;
            uint32_t state_vid : 2;           /* 8:9 SW=ro HW=wo 0x0 */
            uint32_t resv10 : 22;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fsm_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t level : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t level : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_cs_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t ae1 : 1;           /* 7 SW=ro HW=wo 0x1 */
            uint32_t af1 : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t ae0 : 1;           /* 5 SW=ro HW=wo 0x1 */
            uint32_t af0 : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t af0 : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t ae0 : 1;           /* 5 SW=ro HW=wo 0x1 */
            uint32_t af1 : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t ae1 : 1;           /* 7 SW=ro HW=wo 0x1 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_cs_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t aet0 : 16;           /* 31:16 SW=rw HW=ro 0x168 */
            uint32_t aft0 : 16;           /* 15:0 SW=rw HW=ro 0x168 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t aft0 : 16;           /* 0:15 SW=rw HW=ro 0x168 */
            uint32_t aet0 : 16;           /* 16:31 SW=rw HW=ro 0x168 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_cs_control0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t aet1 : 16;           /* 31:16 SW=rw HW=ro 0x21C */
            uint32_t aft1 : 16;           /* 15:0 SW=rw HW=ro 0x21C */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t aft1 : 16;           /* 0:15 SW=rw HW=ro 0x21C */
            uint32_t aet1 : 16;           /* 16:31 SW=rw HW=ro 0x21C */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_cs_control1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t depth : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t depth : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_cs_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t level : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t level : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t sr_0_underflow : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t sr_1_underflow : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t sr_2_underflow : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t sr_3_underflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_ae1 : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_af1 : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_ae0 : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_af0 : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_empty : 1;           /* 0 SW=ro HW=wo 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_0_empty : 1;           /* 0 SW=ro HW=wo 0x1 */
            uint32_t fifo_0_full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_af0 : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_ae0 : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_af1 : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t fifo_0_ae1 : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t sr_3_underflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t sr_2_underflow : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t sr_1_underflow : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t sr_0_underflow : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_sr_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t aet0 : 16;           /* 31:16 SW=rw HW=ro 0x800 */
            uint32_t aft0 : 16;           /* 15:0 SW=rw HW=ro 0x800 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t aft0 : 16;           /* 0:15 SW=rw HW=ro 0x800 */
            uint32_t aet0 : 16;           /* 16:31 SW=rw HW=ro 0x800 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_control0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t aet1 : 16;           /* 31:16 SW=rw HW=ro 0x400 */
            uint32_t aft1 : 16;           /* 15:0 SW=rw HW=ro 0x400 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t aft1 : 16;           /* 0:15 SW=rw HW=ro 0x400 */
            uint32_t aet1 : 16;           /* 16:31 SW=rw HW=ro 0x400 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_control1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t offset : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t offset : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_control2;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t depth : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t depth : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_pix_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv4 : 28;
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t resv4 : 28;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_sdp_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv4 : 28;
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t empty : 1;           /* 0 SW=ro HW=wo 0x1 */
            uint32_t full : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t resv4 : 28;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_sdp_tag_status;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv11 : 21;
            uint32_t depth : 11;           /* 10:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t depth : 11;           /* 0:10 SW=ro HW=wo 0x0 */
            uint32_t resv11 : 21;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_sdp_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv9 : 23;
            uint32_t depth : 9;           /* 8:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t depth : 9;           /* 0:8 SW=ro HW=wo 0x0 */
            uint32_t resv9 : 23;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_fifo_sdp_tag_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t maud_set_value : 8;           /* 15:8 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 6;
            uint32_t maud_method_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t audiomute_flag : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t audiomute_flag : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t maud_method_sel : 1;           /* 1 SW=rw HW=ro 0x0 */
            
            uint32_t resv2 : 6;
            uint32_t maud_set_value : 8;           /* 8:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_sdp_ctrl;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t cnt : 8;           /* 15:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 7;
            uint32_t cnt_rst : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t cnt_rst : 1;           /* 0 SW=rw HW=ro 0x0 */
            
            uint32_t resv1 : 7;
            uint32_t cnt : 8;           /* 8:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_idle_pattern_debug;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t vbid : 8;           /* 23:16 SW=ro HW=wo 0x0 */
            uint32_t maud : 8;           /* 15:8 SW=ro HW=wo 0x0 */
            uint32_t mvid : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t mvid : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t maud : 8;           /* 8:15 SW=ro HW=wo 0x0 */
            uint32_t vbid : 8;           /* 16:23 SW=ro HW=wo 0x0 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stream_generator_vbd;

typedef struct {
    dp_source_stream_generator_cfg0  cfg0;
    dp_source_stream_generator_cfg1  cfg1;
    dp_source_stream_generator_cfg2  cfg2;
    dp_source_stream_generator_cfg3  cfg3;
    dp_source_stream_generator_cs_pkt_updated_interval  cs_pkt_updated_interval;
    dp_source_stream_generator_dp_width_total_actual  dp_width_total_actual;
    dp_source_stream_generator_alu0  alu0;
    dp_source_stream_generator_alu1  alu1;
    dp_source_stream_generator_alu2  alu2;
    
    union {
        dp_source_stream_generator_msa s;
        uint8_t filler[0x24];
    } msa;
    
    union {
        dp_source_stream_generator_msa_dp s;
        uint8_t filler[0x8];
    } msa_dp;
    dp_source_stream_generator_fsm_status  fsm_status;
    dp_source_stream_generator_fifo_cs_level  fifo_cs_level;
    dp_source_stream_generator_fifo_cs_status  fifo_cs_status;
    dp_source_stream_generator_fifo_cs_control0  fifo_cs_control0;
    dp_source_stream_generator_fifo_cs_control1  fifo_cs_control1;
    dp_source_stream_generator_fifo_cs_config  fifo_cs_config;
    dp_source_stream_generator_fifo_pix_level  fifo_pix_level;
    dp_source_stream_generator_fifo_pix_sr_status  fifo_pix_sr_status;
    dp_source_stream_generator_fifo_pix_control0  fifo_pix_control0;
    dp_source_stream_generator_fifo_pix_control1  fifo_pix_control1;
    dp_source_stream_generator_fifo_pix_control2  fifo_pix_control2;
    dp_source_stream_generator_fifo_pix_config  fifo_pix_config;
    dp_source_stream_generator_fifo_sdp_status  fifo_sdp_status;
    dp_source_stream_generator_fifo_sdp_tag_status  fifo_sdp_tag_status;
    dp_source_stream_generator_fifo_sdp_config  fifo_sdp_config;
    dp_source_stream_generator_fifo_sdp_tag_config  fifo_sdp_tag_config;
    dp_source_stream_generator_sdp_ctrl  sdp_ctrl;
    dp_source_stream_generator_idle_pattern_debug  idle_pattern_debug;
    dp_source_stream_generator_vbd  vbd;
    
    
    
} dp_source_stream_generator;


/*section : decoder_error_status */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t vfr_handshake : 8;           /* 15:8 SW=ro HW=wo 0x0 */
            uint32_t cfr_handshake : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t cfr_handshake : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t vfr_handshake : 8;           /* 8:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_decoder_error_status_handshake;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t err_id : 8;           /* 15:8 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 7;
            uint32_t err_flag : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t err_flag : 1;           /* 0 SW=ro HW=wo 0x0 */
            
            uint32_t resv1 : 7;
            uint32_t err_id : 8;           /* 8:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_decoder_error_status_error_id;

typedef struct {
    dp_source_decoder_error_status_handshake  handshake;
    dp_source_decoder_error_status_error_id  error_id;
    
    
    
} dp_source_decoder_error_status;


/*section : compliance */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t byte3 : 8;           /* 31:24 SW=rw HW=ro 0x0 */
            uint32_t byte2 : 8;           /* 23:16 SW=rw HW=ro 0x0 */
            uint32_t byte1 : 8;           /* 15:8 SW=rw HW=ro 0x0 */
            uint32_t byte0 : 8;           /* 7:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t byte0 : 8;           /* 0:7 SW=rw HW=ro 0x0 */
            uint32_t byte1 : 8;           /* 8:15 SW=rw HW=ro 0x0 */
            uint32_t byte2 : 8;           /* 16:23 SW=rw HW=ro 0x0 */
            uint32_t byte3 : 8;           /* 24:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_compliance_custom_80bits_3_0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            uint32_t byte7 : 8;           /* 31:24 SW=rw HW=ro 0x0 */
            uint32_t byte6 : 8;           /* 23:16 SW=rw HW=ro 0x0 */
            uint32_t byte5 : 8;           /* 15:8 SW=rw HW=ro 0x0 */
            uint32_t byte4 : 8;           /* 7:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t byte4 : 8;           /* 0:7 SW=rw HW=ro 0x0 */
            uint32_t byte5 : 8;           /* 8:15 SW=rw HW=ro 0x0 */
            uint32_t byte6 : 8;           /* 16:23 SW=rw HW=ro 0x0 */
            uint32_t byte7 : 8;           /* 24:31 SW=rw HW=ro 0x0 */
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_compliance_custom_80bits_7_4;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t byte9 : 8;           /* 15:8 SW=rw HW=ro 0x0 */
            uint32_t byte8 : 8;           /* 7:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t byte8 : 8;           /* 0:7 SW=rw HW=ro 0x0 */
            uint32_t byte9 : 8;           /* 8:15 SW=rw HW=ro 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_compliance_custom_80bits_9_8;

typedef struct {
    dp_source_compliance_custom_80bits_3_0  custom_80bits_3_0;
    dp_source_compliance_custom_80bits_7_4  custom_80bits_7_4;
    dp_source_compliance_custom_80bits_9_8  custom_80bits_9_8;
    
    
    
} dp_source_compliance;


/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv10 : 22;
            uint32_t fifo_pix_0_level_watermark : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_level : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t pix_0_sr_underflow : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t pix_1_sr_underflow : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t pix_2_sr_underflow : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t pix_3_sr_underflow : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_empty : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_full : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_full : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_empty : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t pix_3_sr_underflow : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t pix_2_sr_underflow : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t pix_1_sr_underflow : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t pix_0_sr_underflow : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_level : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t fifo_pix_0_level_watermark : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t resv10 : 22;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_rd2clr_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_pix_0_full : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_full : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_full;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_pix_0_empty : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_empty : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_empty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_pix_0_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_pix_0_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t pix_0_sr_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pix_0_sr_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_pix_0_sr_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t pix_1_sr_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pix_1_sr_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_pix_1_sr_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t pix_2_sr_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pix_2_sr_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_pix_2_sr_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t pix_3_sr_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t pix_3_sr_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_pix_3_sr_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_pix_0_level : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_level : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_pix_0_level_watermark : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_pix_0_level_watermark : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats0_fifo_pix_0_level_watermark;

typedef struct {
    dp_source_stats0_rd2clr_config  rd2clr_config;
    dp_source_stats0_fifo_pix_0_full  fifo_pix_0_full;
    dp_source_stats0_fifo_pix_0_empty  fifo_pix_0_empty;
    dp_source_stats0_fifo_pix_0_overflow  fifo_pix_0_overflow;
    dp_source_stats0_fifo_pix_0_underflow  fifo_pix_0_underflow;
    dp_source_stats0_pix_0_sr_underflow  pix_0_sr_underflow;
    dp_source_stats0_pix_1_sr_underflow  pix_1_sr_underflow;
    dp_source_stats0_pix_2_sr_underflow  pix_2_sr_underflow;
    dp_source_stats0_pix_3_sr_underflow  pix_3_sr_underflow;
    dp_source_stats0_fifo_pix_0_level  fifo_pix_0_level;
    dp_source_stats0_fifo_pix_0_level_watermark  fifo_pix_0_level_watermark;
    
    
    
} dp_source_stats0;


/*section : stats1 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv23 : 9;
            uint32_t sdp_ptp_pkt_sop_in : 1;           /* 22 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_level_watermark : 1;           /* 21 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_level : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_empty : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_full : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_level_watermark : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_level : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_empty : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_full : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_level_watermark : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_level : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_af1 : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_af0 : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_ae1 : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_ae0 : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_empty : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_full : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_full : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_empty : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 3 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_ae0 : 1;           /* 4 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_ae1 : 1;           /* 5 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_af0 : 1;           /* 6 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_af1 : 1;           /* 7 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_level : 1;           /* 8 SW=rw HW=ro 0x0 */
            uint32_t fifo_cs_level_watermark : 1;           /* 9 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_full : 1;           /* 10 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_empty : 1;           /* 11 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 12 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 13 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_level : 1;           /* 14 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_level_watermark : 1;           /* 15 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_full : 1;           /* 16 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_empty : 1;           /* 17 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 18 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 19 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_level : 1;           /* 20 SW=rw HW=ro 0x0 */
            uint32_t fifo_sdp_tag_level_watermark : 1;           /* 21 SW=rw HW=ro 0x0 */
            uint32_t sdp_ptp_pkt_sop_in : 1;           /* 22 SW=rw HW=ro 0x0 */
            uint32_t resv23 : 9;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_rd2clr_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_full : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_full : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_full;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_empty : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_empty : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_empty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_ae0 : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_ae0 : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_ae0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_ae1 : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_ae1 : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_ae1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_af0 : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_af0 : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_af0;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_cs_af1 : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_af1 : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_af1;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_cs_level : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_level : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_cs_level_watermark : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_cs_level_watermark : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_cs_level_watermark;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_full : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_full : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_full;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_empty : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_empty : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_empty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_sdp_level : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_level : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t fifo_sdp_level_watermark : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_level_watermark : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_level_watermark;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_full : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_full : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_full;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_empty : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_empty : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_empty;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_overflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_overflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_overflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_underflow : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_underflow : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_underflow;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_level : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_level : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_level;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t fifo_sdp_tag_level_watermark : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t fifo_sdp_tag_level_watermark : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_fifo_sdp_tag_level_watermark;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv8 : 24;
            uint32_t sdp_ptp_pkt_sop_in : 8;           /* 7:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t sdp_ptp_pkt_sop_in : 8;           /* 0:7 SW=ro HW=wo 0x0 */
            uint32_t resv8 : 24;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_stats1_sdp_ptp_pkt_sop_in;

typedef struct {
    dp_source_stats1_rd2clr_config  rd2clr_config;
    dp_source_stats1_fifo_cs_full  fifo_cs_full;
    dp_source_stats1_fifo_cs_empty  fifo_cs_empty;
    dp_source_stats1_fifo_cs_overflow  fifo_cs_overflow;
    dp_source_stats1_fifo_cs_underflow  fifo_cs_underflow;
    dp_source_stats1_fifo_cs_ae0  fifo_cs_ae0;
    dp_source_stats1_fifo_cs_ae1  fifo_cs_ae1;
    dp_source_stats1_fifo_cs_af0  fifo_cs_af0;
    dp_source_stats1_fifo_cs_af1  fifo_cs_af1;
    dp_source_stats1_fifo_cs_level  fifo_cs_level;
    dp_source_stats1_fifo_cs_level_watermark  fifo_cs_level_watermark;
    dp_source_stats1_fifo_sdp_full  fifo_sdp_full;
    dp_source_stats1_fifo_sdp_empty  fifo_sdp_empty;
    dp_source_stats1_fifo_sdp_overflow  fifo_sdp_overflow;
    dp_source_stats1_fifo_sdp_underflow  fifo_sdp_underflow;
    dp_source_stats1_fifo_sdp_level  fifo_sdp_level;
    dp_source_stats1_fifo_sdp_level_watermark  fifo_sdp_level_watermark;
    dp_source_stats1_fifo_sdp_tag_full  fifo_sdp_tag_full;
    dp_source_stats1_fifo_sdp_tag_empty  fifo_sdp_tag_empty;
    dp_source_stats1_fifo_sdp_tag_overflow  fifo_sdp_tag_overflow;
    dp_source_stats1_fifo_sdp_tag_underflow  fifo_sdp_tag_underflow;
    dp_source_stats1_fifo_sdp_tag_level  fifo_sdp_tag_level;
    dp_source_stats1_fifo_sdp_tag_level_watermark  fifo_sdp_tag_level_watermark;
    dp_source_stats1_sdp_ptp_pkt_sop_in  sdp_ptp_pkt_sop_in;
    
    
    
} dp_source_stats1;


/*section : irq */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t video_stream_end : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t video_stream_end : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=rw HW=na 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=rw HW=na 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=rw HW=na 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=rw HW=na 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=rw HW=na 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=rw HW=na 0x0 */
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=rw HW=na 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_irq_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t video_stream_end : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t video_stream_end : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=r/w1c HW=wo 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=r/w1c HW=wo 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=r/w1c HW=wo 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=r/w1c HW=wo 0x0 */
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=r/w1c HW=wo 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_irq_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t video_stream_end : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t video_stream_end : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=ro HW=na 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=ro HW=na 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=ro HW=na 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=ro HW=na 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=ro HW=na 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=ro HW=na 0x0 */
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=ro HW=na 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_irq_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv12 : 20;
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t video_stream_end : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t video_stream_end : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t fifo_cs_overflow : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t fifo_cs_underflow : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_tag_overflow : 1;           /* 3 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_tag_underflow : 1;           /* 4 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_overflow : 1;           /* 5 SW=ro HW=wo 0x0 */
            uint32_t fifo_sdp_underflow : 1;           /* 6 SW=ro HW=wo 0x0 */
            uint32_t fifo_pix_0_overflow : 1;           /* 7 SW=ro HW=wo 0x0 */
            uint32_t fifo_pix_0_underflow : 1;           /* 8 SW=ro HW=wo 0x0 */
            uint32_t decoder_err_flag : 1;           /* 9 SW=ro HW=wo 0x0 */
            uint32_t first_idle_pattern_sent : 1;           /* 10 SW=ro HW=wo 0x0 */
            uint32_t msa_dp_mvid_measured_update : 1;           /* 11 SW=ro HW=wo 0x0 */
            uint32_t resv12 : 20;
        } bf;
        
    #endif
    uint32_t  dw;
} dp_source_irq_raw;

typedef struct {
    dp_source_irq_enable  enable;
    dp_source_irq_pending  pending;
    dp_source_irq_pending_irq  pending_irq;
    dp_source_irq_raw  raw;
    
    
    
} dp_source_irq;


typedef struct {
    dp_source_version  version;
    dp_source_configuration  configuration;
    dp_source_scrambler  scrambler;
    
    union {
        dp_source_stream_generator s;
        uint8_t filler[0x9C];
    } stream_generator;
    
    union {
        dp_source_decoder_error_status s;
        uint8_t filler[0x8];
    } decoder_error_status;
    
    union {
        dp_source_compliance s;
        uint8_t filler[0xC];
    } compliance;
    
    union {
        dp_source_stats0 s;
        uint8_t filler[0x2C];
    } stats0;
    
    union {
        dp_source_stats1 s;
        uint8_t filler[0x60];
    } stats1;
    
    union {
        dp_source_irq s;
        uint8_t filler[0x10];
    } irq;
    
    
    uint8_t filler11[0xA8];
    
    
} dp_source_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define dp_source_version_READMASK 0xFFFFFF
#define dp_source_version_WRITEMASK 0x0
#define dp_source_version_VOLATILEMASK 0x0
#define dp_source_version_RESETMASK 0xFFFFFF
#define dp_source_version_DEFAULT 0x000B0900

#define dp_source_configuration_READMASK 0xF103FFFF
#define dp_source_configuration_WRITEMASK 0xF103FFFF
#define dp_source_configuration_VOLATILEMASK 0x0
#define dp_source_configuration_RESETMASK 0xF103FFFF
#define dp_source_configuration_DEFAULT 0x00001043

#define dp_source_scrambler_READMASK 0x1
#define dp_source_scrambler_WRITEMASK 0x1
#define dp_source_scrambler_VOLATILEMASK 0x0
#define dp_source_scrambler_RESETMASK 0x1
#define dp_source_scrambler_DEFAULT 0x00000000

#define dp_source_stream_generator_cfg0_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_cfg0_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_cfg0_VOLATILEMASK 0x0
#define dp_source_stream_generator_cfg0_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_cfg0_DEFAULT 0x3E85A200

#define dp_source_stream_generator_cfg1_READMASK 0x7FFFFF
#define dp_source_stream_generator_cfg1_WRITEMASK 0x7FFFFF
#define dp_source_stream_generator_cfg1_VOLATILEMASK 0x0
#define dp_source_stream_generator_cfg1_RESETMASK 0x7FFFFF
#define dp_source_stream_generator_cfg1_DEFAULT 0x000143F4

#define dp_source_stream_generator_cfg2_READMASK 0xF80000FF
#define dp_source_stream_generator_cfg2_WRITEMASK 0xF80000FF
#define dp_source_stream_generator_cfg2_VOLATILEMASK 0x0
#define dp_source_stream_generator_cfg2_RESETMASK 0xF80000FF
#define dp_source_stream_generator_cfg2_DEFAULT 0x00000011

#define dp_source_stream_generator_cfg3_READMASK 0xF800FFFF
#define dp_source_stream_generator_cfg3_WRITEMASK 0xF800FFFF
#define dp_source_stream_generator_cfg3_VOLATILEMASK 0x0
#define dp_source_stream_generator_cfg3_RESETMASK 0xF800FFFF
#define dp_source_stream_generator_cfg3_DEFAULT 0x00008844

#define dp_source_stream_generator_cs_pkt_updated_interval_READMASK 0x1FFF
#define dp_source_stream_generator_cs_pkt_updated_interval_WRITEMASK 0x0
#define dp_source_stream_generator_cs_pkt_updated_interval_VOLATILEMASK 0x1FFF
#define dp_source_stream_generator_cs_pkt_updated_interval_RESETMASK 0x1FFF
#define dp_source_stream_generator_cs_pkt_updated_interval_DEFAULT 0x00000000

#define dp_source_stream_generator_dp_width_total_actual_READMASK 0x7FFF
#define dp_source_stream_generator_dp_width_total_actual_WRITEMASK 0x0
#define dp_source_stream_generator_dp_width_total_actual_VOLATILEMASK 0x7FFF
#define dp_source_stream_generator_dp_width_total_actual_RESETMASK 0x7FFF
#define dp_source_stream_generator_dp_width_total_actual_DEFAULT 0x00000000

#define dp_source_stream_generator_alu0_READMASK 0x7FFF7FFF
#define dp_source_stream_generator_alu0_WRITEMASK 0x7FFF7FFF
#define dp_source_stream_generator_alu0_VOLATILEMASK 0x0
#define dp_source_stream_generator_alu0_RESETMASK 0x7FFF7FFF
#define dp_source_stream_generator_alu0_DEFAULT 0x0DA40FA0

#define dp_source_stream_generator_alu1_READMASK 0x7FFFFF
#define dp_source_stream_generator_alu1_WRITEMASK 0x7FFFFF
#define dp_source_stream_generator_alu1_VOLATILEMASK 0x0
#define dp_source_stream_generator_alu1_RESETMASK 0x7FFFFF
#define dp_source_stream_generator_alu1_DEFAULT 0x00404836

#define dp_source_stream_generator_alu2_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_alu2_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_alu2_VOLATILEMASK 0x0
#define dp_source_stream_generator_alu2_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_alu2_DEFAULT 0x000D05A0

#define dp_source_stream_generator_msa_control_0_READMASK 0x7FFFFFF
#define dp_source_stream_generator_msa_control_0_WRITEMASK 0x7FFFFFF
#define dp_source_stream_generator_msa_control_0_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_control_0_RESETMASK 0x7FFFFFF
#define dp_source_stream_generator_msa_control_0_DEFAULT 0x00004666

#define dp_source_stream_generator_msa_control_1_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_control_1_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_control_1_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_control_1_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_control_1_DEFAULT 0x00008000

#define dp_source_stream_generator_msa_mvid_READMASK 0xFFFFFF
#define dp_source_stream_generator_msa_mvid_WRITEMASK 0xFFFFFF
#define dp_source_stream_generator_msa_mvid_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_mvid_RESETMASK 0xFFFFFF
#define dp_source_stream_generator_msa_mvid_DEFAULT 0x00000000

#define dp_source_stream_generator_msa_nvid_READMASK 0xFFFFFF
#define dp_source_stream_generator_msa_nvid_WRITEMASK 0xFFFFFF
#define dp_source_stream_generator_msa_nvid_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_nvid_RESETMASK 0xFFFFFF
#define dp_source_stream_generator_msa_nvid_DEFAULT 0x00000000

#define dp_source_stream_generator_msa_horizontal_0_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_0_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_0_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_horizontal_0_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_0_DEFAULT 0x0FA00036

#define dp_source_stream_generator_msa_horizontal_1_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_1_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_1_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_horizontal_1_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_horizontal_1_DEFAULT 0x0F000020

#define dp_source_stream_generator_msa_vertical_0_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_0_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_0_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_vertical_0_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_0_DEFAULT 0x08AE0050

#define dp_source_stream_generator_msa_vertical_1_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_1_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_1_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_vertical_1_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_msa_vertical_1_DEFAULT 0x08700005

#define dp_source_stream_generator_msa_misc_READMASK 0x71FFF
#define dp_source_stream_generator_msa_misc_WRITEMASK 0x71FFF
#define dp_source_stream_generator_msa_misc_VOLATILEMASK 0x0
#define dp_source_stream_generator_msa_misc_RESETMASK 0x71FFF
#define dp_source_stream_generator_msa_misc_DEFAULT 0x00000020

#define dp_source_stream_generator_msa_dp_mvid_READMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_mvid_WRITEMASK 0x0
#define dp_source_stream_generator_msa_dp_mvid_VOLATILEMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_mvid_RESETMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_mvid_DEFAULT 0x00000000

#define dp_source_stream_generator_msa_dp_nvid_READMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_nvid_WRITEMASK 0x0
#define dp_source_stream_generator_msa_dp_nvid_VOLATILEMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_nvid_RESETMASK 0xFFFFFF
#define dp_source_stream_generator_msa_dp_nvid_DEFAULT 0x00000000

#define dp_source_stream_generator_fsm_status_READMASK 0x303
#define dp_source_stream_generator_fsm_status_WRITEMASK 0x0
#define dp_source_stream_generator_fsm_status_VOLATILEMASK 0x303
#define dp_source_stream_generator_fsm_status_RESETMASK 0x303
#define dp_source_stream_generator_fsm_status_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_cs_level_READMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_level_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_cs_level_VOLATILEMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_level_RESETMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_level_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_cs_status_READMASK 0xFF
#define dp_source_stream_generator_fifo_cs_status_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_cs_status_VOLATILEMASK 0xFF
#define dp_source_stream_generator_fifo_cs_status_RESETMASK 0xFF
#define dp_source_stream_generator_fifo_cs_status_DEFAULT 0x000000A1

#define dp_source_stream_generator_fifo_cs_control0_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control0_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control0_VOLATILEMASK 0x0
#define dp_source_stream_generator_fifo_cs_control0_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control0_DEFAULT 0x01680168

#define dp_source_stream_generator_fifo_cs_control1_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control1_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control1_VOLATILEMASK 0x0
#define dp_source_stream_generator_fifo_cs_control1_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_cs_control1_DEFAULT 0x021C021C

#define dp_source_stream_generator_fifo_cs_config_READMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_config_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_cs_config_VOLATILEMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_config_RESETMASK 0xFFFF
#define dp_source_stream_generator_fifo_cs_config_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_pix_level_READMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_level_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_pix_level_VOLATILEMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_level_RESETMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_level_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_pix_sr_status_READMASK 0xFFF
#define dp_source_stream_generator_fifo_pix_sr_status_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_pix_sr_status_VOLATILEMASK 0xFFF
#define dp_source_stream_generator_fifo_pix_sr_status_RESETMASK 0xFFF
#define dp_source_stream_generator_fifo_pix_sr_status_DEFAULT 0x00000001

#define dp_source_stream_generator_fifo_pix_control0_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control0_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control0_VOLATILEMASK 0x0
#define dp_source_stream_generator_fifo_pix_control0_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control0_DEFAULT 0x08000800

#define dp_source_stream_generator_fifo_pix_control1_READMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control1_WRITEMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control1_VOLATILEMASK 0x0
#define dp_source_stream_generator_fifo_pix_control1_RESETMASK 0xFFFFFFFF
#define dp_source_stream_generator_fifo_pix_control1_DEFAULT 0x04000400

#define dp_source_stream_generator_fifo_pix_control2_READMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_control2_WRITEMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_control2_VOLATILEMASK 0x0
#define dp_source_stream_generator_fifo_pix_control2_RESETMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_control2_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_pix_config_READMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_config_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_pix_config_VOLATILEMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_config_RESETMASK 0xFFFF
#define dp_source_stream_generator_fifo_pix_config_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_sdp_status_READMASK 0xF
#define dp_source_stream_generator_fifo_sdp_status_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_sdp_status_VOLATILEMASK 0xF
#define dp_source_stream_generator_fifo_sdp_status_RESETMASK 0xF
#define dp_source_stream_generator_fifo_sdp_status_DEFAULT 0x00000001

#define dp_source_stream_generator_fifo_sdp_tag_status_READMASK 0xF
#define dp_source_stream_generator_fifo_sdp_tag_status_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_sdp_tag_status_VOLATILEMASK 0xF
#define dp_source_stream_generator_fifo_sdp_tag_status_RESETMASK 0xF
#define dp_source_stream_generator_fifo_sdp_tag_status_DEFAULT 0x00000001

#define dp_source_stream_generator_fifo_sdp_config_READMASK 0x7FF
#define dp_source_stream_generator_fifo_sdp_config_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_sdp_config_VOLATILEMASK 0x7FF
#define dp_source_stream_generator_fifo_sdp_config_RESETMASK 0x7FF
#define dp_source_stream_generator_fifo_sdp_config_DEFAULT 0x00000000

#define dp_source_stream_generator_fifo_sdp_tag_config_READMASK 0x1FF
#define dp_source_stream_generator_fifo_sdp_tag_config_WRITEMASK 0x0
#define dp_source_stream_generator_fifo_sdp_tag_config_VOLATILEMASK 0x1FF
#define dp_source_stream_generator_fifo_sdp_tag_config_RESETMASK 0x1FF
#define dp_source_stream_generator_fifo_sdp_tag_config_DEFAULT 0x00000000

#define dp_source_stream_generator_sdp_ctrl_READMASK 0xFF03
#define dp_source_stream_generator_sdp_ctrl_WRITEMASK 0xFF03
#define dp_source_stream_generator_sdp_ctrl_VOLATILEMASK 0x0
#define dp_source_stream_generator_sdp_ctrl_RESETMASK 0xFF03
#define dp_source_stream_generator_sdp_ctrl_DEFAULT 0x00000001

#define dp_source_stream_generator_idle_pattern_debug_READMASK 0xFF01
#define dp_source_stream_generator_idle_pattern_debug_WRITEMASK 0x1
#define dp_source_stream_generator_idle_pattern_debug_VOLATILEMASK 0xFF00
#define dp_source_stream_generator_idle_pattern_debug_RESETMASK 0xFF01
#define dp_source_stream_generator_idle_pattern_debug_DEFAULT 0x00000000

#define dp_source_stream_generator_vbd_READMASK 0xFFFFFF
#define dp_source_stream_generator_vbd_WRITEMASK 0x0
#define dp_source_stream_generator_vbd_VOLATILEMASK 0xFFFFFF
#define dp_source_stream_generator_vbd_RESETMASK 0xFFFFFF
#define dp_source_stream_generator_vbd_DEFAULT 0x00000000

#define dp_source_decoder_error_status_handshake_READMASK 0xFFFF
#define dp_source_decoder_error_status_handshake_WRITEMASK 0x0
#define dp_source_decoder_error_status_handshake_VOLATILEMASK 0xFFFF
#define dp_source_decoder_error_status_handshake_RESETMASK 0xFFFF
#define dp_source_decoder_error_status_handshake_DEFAULT 0x00000000

#define dp_source_decoder_error_status_error_id_READMASK 0xFF01
#define dp_source_decoder_error_status_error_id_WRITEMASK 0x0
#define dp_source_decoder_error_status_error_id_VOLATILEMASK 0xFF01
#define dp_source_decoder_error_status_error_id_RESETMASK 0xFF01
#define dp_source_decoder_error_status_error_id_DEFAULT 0x00000000

#define dp_source_compliance_custom_80bits_3_0_READMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_3_0_WRITEMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_3_0_VOLATILEMASK 0x0
#define dp_source_compliance_custom_80bits_3_0_RESETMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_3_0_DEFAULT 0x00000000

#define dp_source_compliance_custom_80bits_7_4_READMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_7_4_WRITEMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_7_4_VOLATILEMASK 0x0
#define dp_source_compliance_custom_80bits_7_4_RESETMASK 0xFFFFFFFF
#define dp_source_compliance_custom_80bits_7_4_DEFAULT 0x00000000

#define dp_source_compliance_custom_80bits_9_8_READMASK 0xFFFF
#define dp_source_compliance_custom_80bits_9_8_WRITEMASK 0xFFFF
#define dp_source_compliance_custom_80bits_9_8_VOLATILEMASK 0x0
#define dp_source_compliance_custom_80bits_9_8_RESETMASK 0xFFFF
#define dp_source_compliance_custom_80bits_9_8_DEFAULT 0x00000000

#define dp_source_stats0_rd2clr_config_READMASK 0x3FF
#define dp_source_stats0_rd2clr_config_WRITEMASK 0x3FF
#define dp_source_stats0_rd2clr_config_VOLATILEMASK 0x0
#define dp_source_stats0_rd2clr_config_RESETMASK 0x3FF
#define dp_source_stats0_rd2clr_config_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_full_READMASK 0xFF
#define dp_source_stats0_fifo_pix_0_full_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_full_VOLATILEMASK 0xFF
#define dp_source_stats0_fifo_pix_0_full_RESETMASK 0xFF
#define dp_source_stats0_fifo_pix_0_full_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_empty_READMASK 0xFF
#define dp_source_stats0_fifo_pix_0_empty_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_empty_VOLATILEMASK 0xFF
#define dp_source_stats0_fifo_pix_0_empty_RESETMASK 0xFF
#define dp_source_stats0_fifo_pix_0_empty_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_overflow_READMASK 0xFF
#define dp_source_stats0_fifo_pix_0_overflow_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_overflow_VOLATILEMASK 0xFF
#define dp_source_stats0_fifo_pix_0_overflow_RESETMASK 0xFF
#define dp_source_stats0_fifo_pix_0_overflow_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_underflow_READMASK 0xFF
#define dp_source_stats0_fifo_pix_0_underflow_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_underflow_VOLATILEMASK 0xFF
#define dp_source_stats0_fifo_pix_0_underflow_RESETMASK 0xFF
#define dp_source_stats0_fifo_pix_0_underflow_DEFAULT 0x00000000

#define dp_source_stats0_pix_0_sr_underflow_READMASK 0xFF
#define dp_source_stats0_pix_0_sr_underflow_WRITEMASK 0x0
#define dp_source_stats0_pix_0_sr_underflow_VOLATILEMASK 0xFF
#define dp_source_stats0_pix_0_sr_underflow_RESETMASK 0xFF
#define dp_source_stats0_pix_0_sr_underflow_DEFAULT 0x00000000

#define dp_source_stats0_pix_1_sr_underflow_READMASK 0xFF
#define dp_source_stats0_pix_1_sr_underflow_WRITEMASK 0x0
#define dp_source_stats0_pix_1_sr_underflow_VOLATILEMASK 0xFF
#define dp_source_stats0_pix_1_sr_underflow_RESETMASK 0xFF
#define dp_source_stats0_pix_1_sr_underflow_DEFAULT 0x00000000

#define dp_source_stats0_pix_2_sr_underflow_READMASK 0xFF
#define dp_source_stats0_pix_2_sr_underflow_WRITEMASK 0x0
#define dp_source_stats0_pix_2_sr_underflow_VOLATILEMASK 0xFF
#define dp_source_stats0_pix_2_sr_underflow_RESETMASK 0xFF
#define dp_source_stats0_pix_2_sr_underflow_DEFAULT 0x00000000

#define dp_source_stats0_pix_3_sr_underflow_READMASK 0xFF
#define dp_source_stats0_pix_3_sr_underflow_WRITEMASK 0x0
#define dp_source_stats0_pix_3_sr_underflow_VOLATILEMASK 0xFF
#define dp_source_stats0_pix_3_sr_underflow_RESETMASK 0xFF
#define dp_source_stats0_pix_3_sr_underflow_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_level_READMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_level_VOLATILEMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_RESETMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_DEFAULT 0x00000000

#define dp_source_stats0_fifo_pix_0_level_watermark_READMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_watermark_WRITEMASK 0x0
#define dp_source_stats0_fifo_pix_0_level_watermark_VOLATILEMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_watermark_RESETMASK 0xFFFF
#define dp_source_stats0_fifo_pix_0_level_watermark_DEFAULT 0x00000000

#define dp_source_stats1_rd2clr_config_READMASK 0x7FFFFF
#define dp_source_stats1_rd2clr_config_WRITEMASK 0x7FFFFF
#define dp_source_stats1_rd2clr_config_VOLATILEMASK 0x0
#define dp_source_stats1_rd2clr_config_RESETMASK 0x7FFFFF
#define dp_source_stats1_rd2clr_config_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_full_READMASK 0xFF
#define dp_source_stats1_fifo_cs_full_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_full_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_full_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_full_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_empty_READMASK 0xFF
#define dp_source_stats1_fifo_cs_empty_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_empty_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_empty_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_empty_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_overflow_READMASK 0xFF
#define dp_source_stats1_fifo_cs_overflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_overflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_overflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_overflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_underflow_READMASK 0xFF
#define dp_source_stats1_fifo_cs_underflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_underflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_underflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_underflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_ae0_READMASK 0xFF
#define dp_source_stats1_fifo_cs_ae0_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_ae0_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_ae0_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_ae0_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_ae1_READMASK 0xFF
#define dp_source_stats1_fifo_cs_ae1_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_ae1_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_ae1_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_ae1_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_af0_READMASK 0xFF
#define dp_source_stats1_fifo_cs_af0_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_af0_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_af0_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_af0_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_af1_READMASK 0xFF
#define dp_source_stats1_fifo_cs_af1_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_af1_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_cs_af1_RESETMASK 0xFF
#define dp_source_stats1_fifo_cs_af1_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_level_READMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_level_VOLATILEMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_RESETMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_DEFAULT 0x00000000

#define dp_source_stats1_fifo_cs_level_watermark_READMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_watermark_WRITEMASK 0x0
#define dp_source_stats1_fifo_cs_level_watermark_VOLATILEMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_watermark_RESETMASK 0xFFFF
#define dp_source_stats1_fifo_cs_level_watermark_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_full_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_full_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_full_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_full_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_full_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_empty_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_empty_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_empty_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_empty_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_empty_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_overflow_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_overflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_overflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_overflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_overflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_underflow_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_underflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_underflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_underflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_underflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_level_READMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_level_VOLATILEMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_RESETMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_level_watermark_READMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_watermark_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_level_watermark_VOLATILEMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_watermark_RESETMASK 0xFFFF
#define dp_source_stats1_fifo_sdp_level_watermark_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_full_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_full_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_full_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_full_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_full_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_empty_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_empty_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_empty_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_empty_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_empty_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_overflow_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_overflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_overflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_overflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_overflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_underflow_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_underflow_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_underflow_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_underflow_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_underflow_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_level_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_level_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_DEFAULT 0x00000000

#define dp_source_stats1_fifo_sdp_tag_level_watermark_READMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_watermark_WRITEMASK 0x0
#define dp_source_stats1_fifo_sdp_tag_level_watermark_VOLATILEMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_watermark_RESETMASK 0xFF
#define dp_source_stats1_fifo_sdp_tag_level_watermark_DEFAULT 0x00000000

#define dp_source_stats1_sdp_ptp_pkt_sop_in_READMASK 0xFF
#define dp_source_stats1_sdp_ptp_pkt_sop_in_WRITEMASK 0x0
#define dp_source_stats1_sdp_ptp_pkt_sop_in_VOLATILEMASK 0xFF
#define dp_source_stats1_sdp_ptp_pkt_sop_in_RESETMASK 0xFF
#define dp_source_stats1_sdp_ptp_pkt_sop_in_DEFAULT 0x00000000

#define dp_source_irq_enable_READMASK 0xFFF
#define dp_source_irq_enable_WRITEMASK 0xFFF
#define dp_source_irq_enable_VOLATILEMASK 0x0
#define dp_source_irq_enable_RESETMASK 0xFFF
#define dp_source_irq_enable_DEFAULT 0x00000000

#define dp_source_irq_pending_READMASK 0xFFF
#define dp_source_irq_pending_WRITEMASK 0xFFF
#define dp_source_irq_pending_VOLATILEMASK 0xFFF
#define dp_source_irq_pending_RESETMASK 0xFFF
#define dp_source_irq_pending_DEFAULT 0x00000000

#define dp_source_irq_pending_irq_READMASK 0xFFF
#define dp_source_irq_pending_irq_WRITEMASK 0x0
#define dp_source_irq_pending_irq_VOLATILEMASK 0x0
#define dp_source_irq_pending_irq_RESETMASK 0xFFF
#define dp_source_irq_pending_irq_DEFAULT 0x00000000

#define dp_source_irq_raw_READMASK 0xFFF
#define dp_source_irq_raw_WRITEMASK 0x0
#define dp_source_irq_raw_VOLATILEMASK 0xFFF
#define dp_source_irq_raw_RESETMASK 0xFFF
#define dp_source_irq_raw_DEFAULT 0x00000000

#define dp_source_s_SIZE 0x200
#define dp_source_version_SIZE 0x4
#define dp_source_configuration_SIZE 0x4
#define dp_source_scrambler_SIZE 0x4
#define dp_source_stream_generator_SIZE 0x9C
#define dp_source_stream_generator_cfg0_SIZE 0x4
#define dp_source_stream_generator_cfg1_SIZE 0x4
#define dp_source_stream_generator_cfg2_SIZE 0x4
#define dp_source_stream_generator_cfg3_SIZE 0x4
#define dp_source_stream_generator_cs_pkt_updated_interval_SIZE 0x4
#define dp_source_stream_generator_dp_width_total_actual_SIZE 0x4
#define dp_source_stream_generator_alu0_SIZE 0x4
#define dp_source_stream_generator_alu1_SIZE 0x4
#define dp_source_stream_generator_alu2_SIZE 0x4
#define dp_source_stream_generator_msa_SIZE 0x24
#define dp_source_stream_generator_msa_control_0_SIZE 0x4
#define dp_source_stream_generator_msa_control_1_SIZE 0x4
#define dp_source_stream_generator_msa_mvid_SIZE 0x4
#define dp_source_stream_generator_msa_nvid_SIZE 0x4
#define dp_source_stream_generator_msa_horizontal_0_SIZE 0x4
#define dp_source_stream_generator_msa_horizontal_1_SIZE 0x4
#define dp_source_stream_generator_msa_vertical_0_SIZE 0x4
#define dp_source_stream_generator_msa_vertical_1_SIZE 0x4
#define dp_source_stream_generator_msa_misc_SIZE 0x4
#define dp_source_stream_generator_msa_dp_SIZE 0x8
#define dp_source_stream_generator_msa_dp_mvid_SIZE 0x4
#define dp_source_stream_generator_msa_dp_nvid_SIZE 0x4
#define dp_source_stream_generator_fsm_status_SIZE 0x4
#define dp_source_stream_generator_fifo_cs_level_SIZE 0x4
#define dp_source_stream_generator_fifo_cs_status_SIZE 0x4
#define dp_source_stream_generator_fifo_cs_control0_SIZE 0x4
#define dp_source_stream_generator_fifo_cs_control1_SIZE 0x4
#define dp_source_stream_generator_fifo_cs_config_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_level_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_sr_status_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_control0_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_control1_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_control2_SIZE 0x4
#define dp_source_stream_generator_fifo_pix_config_SIZE 0x4
#define dp_source_stream_generator_fifo_sdp_status_SIZE 0x4
#define dp_source_stream_generator_fifo_sdp_tag_status_SIZE 0x4
#define dp_source_stream_generator_fifo_sdp_config_SIZE 0x4
#define dp_source_stream_generator_fifo_sdp_tag_config_SIZE 0x4
#define dp_source_stream_generator_sdp_ctrl_SIZE 0x4
#define dp_source_stream_generator_idle_pattern_debug_SIZE 0x4
#define dp_source_stream_generator_vbd_SIZE 0x4
#define dp_source_decoder_error_status_SIZE 0x8
#define dp_source_decoder_error_status_handshake_SIZE 0x4
#define dp_source_decoder_error_status_error_id_SIZE 0x4
#define dp_source_compliance_SIZE 0xC
#define dp_source_compliance_custom_80bits_3_0_SIZE 0x4
#define dp_source_compliance_custom_80bits_7_4_SIZE 0x4
#define dp_source_compliance_custom_80bits_9_8_SIZE 0x4
#define dp_source_stats0_SIZE 0x2C
#define dp_source_stats0_rd2clr_config_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_full_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_empty_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_overflow_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_underflow_SIZE 0x4
#define dp_source_stats0_pix_0_sr_underflow_SIZE 0x4
#define dp_source_stats0_pix_1_sr_underflow_SIZE 0x4
#define dp_source_stats0_pix_2_sr_underflow_SIZE 0x4
#define dp_source_stats0_pix_3_sr_underflow_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_level_SIZE 0x4
#define dp_source_stats0_fifo_pix_0_level_watermark_SIZE 0x4
#define dp_source_stats1_SIZE 0x60
#define dp_source_stats1_rd2clr_config_SIZE 0x4
#define dp_source_stats1_fifo_cs_full_SIZE 0x4
#define dp_source_stats1_fifo_cs_empty_SIZE 0x4
#define dp_source_stats1_fifo_cs_overflow_SIZE 0x4
#define dp_source_stats1_fifo_cs_underflow_SIZE 0x4
#define dp_source_stats1_fifo_cs_ae0_SIZE 0x4
#define dp_source_stats1_fifo_cs_ae1_SIZE 0x4
#define dp_source_stats1_fifo_cs_af0_SIZE 0x4
#define dp_source_stats1_fifo_cs_af1_SIZE 0x4
#define dp_source_stats1_fifo_cs_level_SIZE 0x4
#define dp_source_stats1_fifo_cs_level_watermark_SIZE 0x4
#define dp_source_stats1_fifo_sdp_full_SIZE 0x4
#define dp_source_stats1_fifo_sdp_empty_SIZE 0x4
#define dp_source_stats1_fifo_sdp_overflow_SIZE 0x4
#define dp_source_stats1_fifo_sdp_underflow_SIZE 0x4
#define dp_source_stats1_fifo_sdp_level_SIZE 0x4
#define dp_source_stats1_fifo_sdp_level_watermark_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_full_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_empty_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_overflow_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_underflow_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_level_SIZE 0x4
#define dp_source_stats1_fifo_sdp_tag_level_watermark_SIZE 0x4
#define dp_source_stats1_sdp_ptp_pkt_sop_in_SIZE 0x4
#define dp_source_irq_SIZE 0x10
#define dp_source_irq_enable_SIZE 0x4
#define dp_source_irq_pending_SIZE 0x4
#define dp_source_irq_pending_irq_SIZE 0x4
#define dp_source_irq_raw_SIZE 0x4

#define dp_source_s_OFFSET 0x0
#define dp_source_version_OFFSET 0x0
#define dp_source_configuration_OFFSET 0x4
#define dp_source_scrambler_OFFSET 0x8
#define dp_source_stream_generator_OFFSET 0xC
#define dp_source_stream_generator_cfg0_OFFSET 0x0
#define dp_source_stream_generator_cfg1_OFFSET 0x4
#define dp_source_stream_generator_cfg2_OFFSET 0x8
#define dp_source_stream_generator_cfg3_OFFSET 0xC
#define dp_source_stream_generator_cs_pkt_updated_interval_OFFSET 0x10
#define dp_source_stream_generator_dp_width_total_actual_OFFSET 0x14
#define dp_source_stream_generator_alu0_OFFSET 0x18
#define dp_source_stream_generator_alu1_OFFSET 0x1C
#define dp_source_stream_generator_alu2_OFFSET 0x20
#define dp_source_stream_generator_msa_OFFSET 0x24
#define dp_source_stream_generator_msa_control_0_OFFSET 0x0
#define dp_source_stream_generator_msa_control_1_OFFSET 0x4
#define dp_source_stream_generator_msa_mvid_OFFSET 0x8
#define dp_source_stream_generator_msa_nvid_OFFSET 0xC
#define dp_source_stream_generator_msa_horizontal_0_OFFSET 0x10
#define dp_source_stream_generator_msa_horizontal_1_OFFSET 0x14
#define dp_source_stream_generator_msa_vertical_0_OFFSET 0x18
#define dp_source_stream_generator_msa_vertical_1_OFFSET 0x1C
#define dp_source_stream_generator_msa_misc_OFFSET 0x20
#define dp_source_stream_generator_msa_dp_OFFSET 0x48
#define dp_source_stream_generator_msa_dp_mvid_OFFSET 0x0
#define dp_source_stream_generator_msa_dp_nvid_OFFSET 0x4
#define dp_source_stream_generator_fsm_status_OFFSET 0x50
#define dp_source_stream_generator_fifo_cs_level_OFFSET 0x54
#define dp_source_stream_generator_fifo_cs_status_OFFSET 0x58
#define dp_source_stream_generator_fifo_cs_control0_OFFSET 0x5C
#define dp_source_stream_generator_fifo_cs_control1_OFFSET 0x60
#define dp_source_stream_generator_fifo_cs_config_OFFSET 0x64
#define dp_source_stream_generator_fifo_pix_level_OFFSET 0x68
#define dp_source_stream_generator_fifo_pix_sr_status_OFFSET 0x6C
#define dp_source_stream_generator_fifo_pix_control0_OFFSET 0x70
#define dp_source_stream_generator_fifo_pix_control1_OFFSET 0x74
#define dp_source_stream_generator_fifo_pix_control2_OFFSET 0x78
#define dp_source_stream_generator_fifo_pix_config_OFFSET 0x7C
#define dp_source_stream_generator_fifo_sdp_status_OFFSET 0x80
#define dp_source_stream_generator_fifo_sdp_tag_status_OFFSET 0x84
#define dp_source_stream_generator_fifo_sdp_config_OFFSET 0x88
#define dp_source_stream_generator_fifo_sdp_tag_config_OFFSET 0x8C
#define dp_source_stream_generator_sdp_ctrl_OFFSET 0x90
#define dp_source_stream_generator_idle_pattern_debug_OFFSET 0x94
#define dp_source_stream_generator_vbd_OFFSET 0x98
#define dp_source_decoder_error_status_OFFSET 0xA8
#define dp_source_decoder_error_status_handshake_OFFSET 0x0
#define dp_source_decoder_error_status_error_id_OFFSET 0x4
#define dp_source_compliance_OFFSET 0xB0
#define dp_source_compliance_custom_80bits_3_0_OFFSET 0x0
#define dp_source_compliance_custom_80bits_7_4_OFFSET 0x4
#define dp_source_compliance_custom_80bits_9_8_OFFSET 0x8
#define dp_source_stats0_OFFSET 0xBC
#define dp_source_stats0_rd2clr_config_OFFSET 0x0
#define dp_source_stats0_fifo_pix_0_full_OFFSET 0x4
#define dp_source_stats0_fifo_pix_0_empty_OFFSET 0x8
#define dp_source_stats0_fifo_pix_0_overflow_OFFSET 0xC
#define dp_source_stats0_fifo_pix_0_underflow_OFFSET 0x10
#define dp_source_stats0_pix_0_sr_underflow_OFFSET 0x14
#define dp_source_stats0_pix_1_sr_underflow_OFFSET 0x18
#define dp_source_stats0_pix_2_sr_underflow_OFFSET 0x1C
#define dp_source_stats0_pix_3_sr_underflow_OFFSET 0x20
#define dp_source_stats0_fifo_pix_0_level_OFFSET 0x24
#define dp_source_stats0_fifo_pix_0_level_watermark_OFFSET 0x28
#define dp_source_stats1_OFFSET 0xE8
#define dp_source_stats1_rd2clr_config_OFFSET 0x0
#define dp_source_stats1_fifo_cs_full_OFFSET 0x4
#define dp_source_stats1_fifo_cs_empty_OFFSET 0x8
#define dp_source_stats1_fifo_cs_overflow_OFFSET 0xC
#define dp_source_stats1_fifo_cs_underflow_OFFSET 0x10
#define dp_source_stats1_fifo_cs_ae0_OFFSET 0x14
#define dp_source_stats1_fifo_cs_ae1_OFFSET 0x18
#define dp_source_stats1_fifo_cs_af0_OFFSET 0x1C
#define dp_source_stats1_fifo_cs_af1_OFFSET 0x20
#define dp_source_stats1_fifo_cs_level_OFFSET 0x24
#define dp_source_stats1_fifo_cs_level_watermark_OFFSET 0x28
#define dp_source_stats1_fifo_sdp_full_OFFSET 0x2C
#define dp_source_stats1_fifo_sdp_empty_OFFSET 0x30
#define dp_source_stats1_fifo_sdp_overflow_OFFSET 0x34
#define dp_source_stats1_fifo_sdp_underflow_OFFSET 0x38
#define dp_source_stats1_fifo_sdp_level_OFFSET 0x3C
#define dp_source_stats1_fifo_sdp_level_watermark_OFFSET 0x40
#define dp_source_stats1_fifo_sdp_tag_full_OFFSET 0x44
#define dp_source_stats1_fifo_sdp_tag_empty_OFFSET 0x48
#define dp_source_stats1_fifo_sdp_tag_overflow_OFFSET 0x4C
#define dp_source_stats1_fifo_sdp_tag_underflow_OFFSET 0x50
#define dp_source_stats1_fifo_sdp_tag_level_OFFSET 0x54
#define dp_source_stats1_fifo_sdp_tag_level_watermark_OFFSET 0x58
#define dp_source_stats1_sdp_ptp_pkt_sop_in_OFFSET 0x5C
#define dp_source_irq_OFFSET 0x148
#define dp_source_irq_enable_OFFSET 0x0
#define dp_source_irq_pending_OFFSET 0x4
#define dp_source_irq_pending_irq_OFFSET 0x8
#define dp_source_irq_raw_OFFSET 0xC

#define dp_source_s_ADDRESS 0x000
#define dp_source_version_ADDRESS 0x000
#define dp_source_configuration_ADDRESS 0x004
#define dp_source_scrambler_ADDRESS 0x008
#define dp_source_stream_generator_ADDRESS 0x00C
#define dp_source_stream_generator_cfg0_ADDRESS 0x00C
#define dp_source_stream_generator_cfg1_ADDRESS 0x010
#define dp_source_stream_generator_cfg2_ADDRESS 0x014
#define dp_source_stream_generator_cfg3_ADDRESS 0x018
#define dp_source_stream_generator_cs_pkt_updated_interval_ADDRESS 0x01C
#define dp_source_stream_generator_dp_width_total_actual_ADDRESS 0x020
#define dp_source_stream_generator_alu0_ADDRESS 0x024
#define dp_source_stream_generator_alu1_ADDRESS 0x028
#define dp_source_stream_generator_alu2_ADDRESS 0x02C
#define dp_source_stream_generator_msa_ADDRESS 0x030
#define dp_source_stream_generator_msa_control_0_ADDRESS 0x030
#define dp_source_stream_generator_msa_control_1_ADDRESS 0x034
#define dp_source_stream_generator_msa_mvid_ADDRESS 0x038
#define dp_source_stream_generator_msa_nvid_ADDRESS 0x03C
#define dp_source_stream_generator_msa_horizontal_0_ADDRESS 0x040
#define dp_source_stream_generator_msa_horizontal_1_ADDRESS 0x044
#define dp_source_stream_generator_msa_vertical_0_ADDRESS 0x048
#define dp_source_stream_generator_msa_vertical_1_ADDRESS 0x04C
#define dp_source_stream_generator_msa_misc_ADDRESS 0x050
#define dp_source_stream_generator_msa_dp_ADDRESS 0x054
#define dp_source_stream_generator_msa_dp_mvid_ADDRESS 0x054
#define dp_source_stream_generator_msa_dp_nvid_ADDRESS 0x058
#define dp_source_stream_generator_fsm_status_ADDRESS 0x05C
#define dp_source_stream_generator_fifo_cs_level_ADDRESS 0x060
#define dp_source_stream_generator_fifo_cs_status_ADDRESS 0x064
#define dp_source_stream_generator_fifo_cs_control0_ADDRESS 0x068
#define dp_source_stream_generator_fifo_cs_control1_ADDRESS 0x06C
#define dp_source_stream_generator_fifo_cs_config_ADDRESS 0x070
#define dp_source_stream_generator_fifo_pix_level_ADDRESS 0x074
#define dp_source_stream_generator_fifo_pix_sr_status_ADDRESS 0x078
#define dp_source_stream_generator_fifo_pix_control0_ADDRESS 0x07C
#define dp_source_stream_generator_fifo_pix_control1_ADDRESS 0x080
#define dp_source_stream_generator_fifo_pix_control2_ADDRESS 0x084
#define dp_source_stream_generator_fifo_pix_config_ADDRESS 0x088
#define dp_source_stream_generator_fifo_sdp_status_ADDRESS 0x08C
#define dp_source_stream_generator_fifo_sdp_tag_status_ADDRESS 0x090
#define dp_source_stream_generator_fifo_sdp_config_ADDRESS 0x094
#define dp_source_stream_generator_fifo_sdp_tag_config_ADDRESS 0x098
#define dp_source_stream_generator_sdp_ctrl_ADDRESS 0x09C
#define dp_source_stream_generator_idle_pattern_debug_ADDRESS 0x0A0
#define dp_source_stream_generator_vbd_ADDRESS 0x0A4
#define dp_source_decoder_error_status_ADDRESS 0x0A8
#define dp_source_decoder_error_status_handshake_ADDRESS 0x0A8
#define dp_source_decoder_error_status_error_id_ADDRESS 0x0AC
#define dp_source_compliance_ADDRESS 0x0B0
#define dp_source_compliance_custom_80bits_3_0_ADDRESS 0x0B0
#define dp_source_compliance_custom_80bits_7_4_ADDRESS 0x0B4
#define dp_source_compliance_custom_80bits_9_8_ADDRESS 0x0B8
#define dp_source_stats0_ADDRESS 0x0BC
#define dp_source_stats0_rd2clr_config_ADDRESS 0x0BC
#define dp_source_stats0_fifo_pix_0_full_ADDRESS 0x0C0
#define dp_source_stats0_fifo_pix_0_empty_ADDRESS 0x0C4
#define dp_source_stats0_fifo_pix_0_overflow_ADDRESS 0x0C8
#define dp_source_stats0_fifo_pix_0_underflow_ADDRESS 0x0CC
#define dp_source_stats0_pix_0_sr_underflow_ADDRESS 0x0D0
#define dp_source_stats0_pix_1_sr_underflow_ADDRESS 0x0D4
#define dp_source_stats0_pix_2_sr_underflow_ADDRESS 0x0D8
#define dp_source_stats0_pix_3_sr_underflow_ADDRESS 0x0DC
#define dp_source_stats0_fifo_pix_0_level_ADDRESS 0x0E0
#define dp_source_stats0_fifo_pix_0_level_watermark_ADDRESS 0x0E4
#define dp_source_stats1_ADDRESS 0x0E8
#define dp_source_stats1_rd2clr_config_ADDRESS 0x0E8
#define dp_source_stats1_fifo_cs_full_ADDRESS 0x0EC
#define dp_source_stats1_fifo_cs_empty_ADDRESS 0x0F0
#define dp_source_stats1_fifo_cs_overflow_ADDRESS 0x0F4
#define dp_source_stats1_fifo_cs_underflow_ADDRESS 0x0F8
#define dp_source_stats1_fifo_cs_ae0_ADDRESS 0x0FC
#define dp_source_stats1_fifo_cs_ae1_ADDRESS 0x100
#define dp_source_stats1_fifo_cs_af0_ADDRESS 0x104
#define dp_source_stats1_fifo_cs_af1_ADDRESS 0x108
#define dp_source_stats1_fifo_cs_level_ADDRESS 0x10C
#define dp_source_stats1_fifo_cs_level_watermark_ADDRESS 0x110
#define dp_source_stats1_fifo_sdp_full_ADDRESS 0x114
#define dp_source_stats1_fifo_sdp_empty_ADDRESS 0x118
#define dp_source_stats1_fifo_sdp_overflow_ADDRESS 0x11C
#define dp_source_stats1_fifo_sdp_underflow_ADDRESS 0x120
#define dp_source_stats1_fifo_sdp_level_ADDRESS 0x124
#define dp_source_stats1_fifo_sdp_level_watermark_ADDRESS 0x128
#define dp_source_stats1_fifo_sdp_tag_full_ADDRESS 0x12C
#define dp_source_stats1_fifo_sdp_tag_empty_ADDRESS 0x130
#define dp_source_stats1_fifo_sdp_tag_overflow_ADDRESS 0x134
#define dp_source_stats1_fifo_sdp_tag_underflow_ADDRESS 0x138
#define dp_source_stats1_fifo_sdp_tag_level_ADDRESS 0x13C
#define dp_source_stats1_fifo_sdp_tag_level_watermark_ADDRESS 0x140
#define dp_source_stats1_sdp_ptp_pkt_sop_in_ADDRESS 0x144
#define dp_source_irq_ADDRESS 0x148
#define dp_source_irq_enable_ADDRESS 0x148
#define dp_source_irq_pending_ADDRESS 0x14C
#define dp_source_irq_pending_irq_ADDRESS 0x150
#define dp_source_irq_raw_ADDRESS 0x154
#define DP_SOURCE_VERSION_MAJOR_OFFSET 16
#define DP_SOURCE_VERSION_MAJOR_MASK 0xFF0000
#define DP_SOURCE_VERSION_MINOR_OFFSET 8
#define DP_SOURCE_VERSION_MINOR_MASK 0xFF00
#define DP_SOURCE_VERSION_PATCH_OFFSET 0
#define DP_SOURCE_VERSION_PATCH_MASK 0xFF
#define DP_SOURCE_CONFIGURATION_DEBUG_SEL_OFFSET 28
#define DP_SOURCE_CONFIGURATION_DEBUG_SEL_MASK 0xF0000000
#define DP_SOURCE_CONFIGURATION_DP_TRAINING_DONE_OFFSET 24
#define DP_SOURCE_CONFIGURATION_DP_TRAINING_DONE_MASK 0x1000000
#define DP_SOURCE_CONFIGURATION_DP_TRAINING_DONE 0x1000000
#define DP_SOURCE_CONFIGURATION_VID_STREAM_END_OFFSET 17
#define DP_SOURCE_CONFIGURATION_VID_STREAM_END_MASK 0x20000
#define DP_SOURCE_CONFIGURATION_VID_STREAM_END 0x20000
#define DP_SOURCE_CONFIGURATION_APB_TO_AXI_MODE_SELECT_OFFSET 16
#define DP_SOURCE_CONFIGURATION_APB_TO_AXI_MODE_SELECT_MASK 0x10000
#define DP_SOURCE_CONFIGURATION_APB_TO_AXI_MODE_SELECT 0x10000
#define DP_SOURCE_CONFIGURATION_PIX_GEN_MODE_OFFSET 14
#define DP_SOURCE_CONFIGURATION_PIX_GEN_MODE_MASK 0xC000
#define DP_SOURCE_CONFIGURATION_PIX_GEN_SEL_OFFSET 13
#define DP_SOURCE_CONFIGURATION_PIX_GEN_SEL_MASK 0x2000
#define DP_SOURCE_CONFIGURATION_PIX_GEN_SEL 0x2000
#define DP_SOURCE_CONFIGURATION_DP_ENH_FRM_EN_OFFSET 12
#define DP_SOURCE_CONFIGURATION_DP_ENH_FRM_EN_MASK 0x1000
#define DP_SOURCE_CONFIGURATION_DP_ENH_FRM_EN 0x1000
#define DP_SOURCE_CONFIGURATION_DECODER_ERROR_INJECT_OFFSET 11
#define DP_SOURCE_CONFIGURATION_DECODER_ERROR_INJECT_MASK 0x800
#define DP_SOURCE_CONFIGURATION_DECODER_ERROR_INJECT 0x800
#define DP_SOURCE_CONFIGURATION_VID_STREAM_GENERATOR_EN_OFFSET 10
#define DP_SOURCE_CONFIGURATION_VID_STREAM_GENERATOR_EN_MASK 0x400
#define DP_SOURCE_CONFIGURATION_VID_STREAM_GENERATOR_EN 0x400
#define DP_SOURCE_CONFIGURATION_SYN_STREAM_GENERATOR_EN_OFFSET 9
#define DP_SOURCE_CONFIGURATION_SYN_STREAM_GENERATOR_EN_MASK 0x200
#define DP_SOURCE_CONFIGURATION_SYN_STREAM_GENERATOR_EN 0x200
#define DP_SOURCE_CONFIGURATION_SDP_EN_OFFSET 8
#define DP_SOURCE_CONFIGURATION_SDP_EN_MASK 0x100
#define DP_SOURCE_CONFIGURATION_SDP_EN 0x100
#define DP_SOURCE_CONFIGURATION_LANE_BIT_RATE_OFFSET 6
#define DP_SOURCE_CONFIGURATION_LANE_BIT_RATE_MASK 0xC0
#define DP_SOURCE_CONFIGURATION_TPS_SEL_OFFSET 2
#define DP_SOURCE_CONFIGURATION_TPS_SEL_MASK 0x3C
#define DP_SOURCE_CONFIGURATION_LANE_NUM_OFFSET 0
#define DP_SOURCE_CONFIGURATION_LANE_NUM_MASK 0x3
#define DP_SOURCE_SCRAMBLER_ENABLE_OFFSET 0
#define DP_SOURCE_SCRAMBLER_ENABLE_MASK 0x1
#define DP_SOURCE_SCRAMBLER_ENABLE 0x1
#define DP_SOURCE_STREAM_GENERATOR_CFG0_CS_START_LEVEL_OFFSET 20
#define DP_SOURCE_STREAM_GENERATOR_CFG0_CS_START_LEVEL_MASK 0xFFF00000
#define DP_SOURCE_STREAM_GENERATOR_CFG0_CS_PKT_LENGTH_OFFSET 10
#define DP_SOURCE_STREAM_GENERATOR_CFG0_CS_PKT_LENGTH_MASK 0xFFC00
#define DP_SOURCE_STREAM_GENERATOR_CFG0_PIX_START_LEVEL_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_CFG0_PIX_START_LEVEL_MASK 0x3FF
#define DP_SOURCE_STREAM_GENERATOR_CFG1_CS_FIFO_LEVEL_CHECK_FREQUENCY_OFFSET 13
#define DP_SOURCE_STREAM_GENERATOR_CFG1_CS_FIFO_LEVEL_CHECK_FREQUENCY_MASK 0x7FE000
#define DP_SOURCE_STREAM_GENERATOR_CFG1_CS_PKT_INTERVAL_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_CFG1_CS_PKT_INTERVAL_MASK 0x1FFF
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_FEEDBACK_CTRL_OFFSET 31
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_FEEDBACK_CTRL_MASK 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_FEEDBACK_CTRL 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_FEEDBACK_CTRL_DEBUG_OFFSET 27
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_FEEDBACK_CTRL_DEBUG_MASK 0x78000000
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_MINUS_OFFSET0_OFFSET 4
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_MINUS_OFFSET0_MASK 0xF0
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_PLUS_OFFSET0_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_CFG2_CS_PKT_INTERVAL_PLUS_OFFSET0_MASK 0xF
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_FEEDBACK_CTRL_OFFSET 31
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_FEEDBACK_CTRL_MASK 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_FEEDBACK_CTRL 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_FEEDBACK_CTRL_DEBUG_OFFSET 27
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_FEEDBACK_CTRL_DEBUG_MASK 0x78000000
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_MINUS_OFFSET1_OFFSET 12
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_MINUS_OFFSET1_MASK 0xF000
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_PLUS_OFFSET1_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_PLUS_OFFSET1_MASK 0xF00
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_MINUS_OFFSET0_OFFSET 4
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_MINUS_OFFSET0_MASK 0xF0
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_PLUS_OFFSET0_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_CFG3_DP_WIDTH_TOTAL_PLUS_OFFSET0_MASK 0xF
#define DP_SOURCE_STREAM_GENERATOR_CS_PKT_UPDATED_INTERVAL_DEBUG_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_CS_PKT_UPDATED_INTERVAL_DEBUG_MASK 0x1FFF
#define DP_SOURCE_STREAM_GENERATOR_DP_WIDTH_TOTAL_ACTUAL_DEBUG_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_DP_WIDTH_TOTAL_ACTUAL_DEBUG_MASK 0x7FFF
#define DP_SOURCE_STREAM_GENERATOR_ALU0_DP_WIDTH_ACTIVE_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_ALU0_DP_WIDTH_ACTIVE_MASK 0x7FFF0000
#define DP_SOURCE_STREAM_GENERATOR_ALU0_DP_WIDTH_TOTAL_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_ALU0_DP_WIDTH_TOTAL_MASK 0x7FFF
#define DP_SOURCE_STREAM_GENERATOR_ALU1_FULL_TU_SIZE_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_ALU1_FULL_TU_SIZE_MASK 0x7F0000
#define DP_SOURCE_STREAM_GENERATOR_ALU1_LAST_TU_SIZE_OFFSET 9
#define DP_SOURCE_STREAM_GENERATOR_ALU1_LAST_TU_SIZE_MASK 0xFE00
#define DP_SOURCE_STREAM_GENERATOR_ALU1_FULL_TU_NUM_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_ALU1_FULL_TU_NUM_MASK 0x1FF
#define DP_SOURCE_STREAM_GENERATOR_ALU2_CPU_MATH_RESULT_RDY_OFFSET 31
#define DP_SOURCE_STREAM_GENERATOR_ALU2_CPU_MATH_RESULT_RDY_MASK 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_ALU2_CPU_MATH_RESULT_RDY 0x80000000
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_REPEAT_NUM_OFFSET 22
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_REPEAT_NUM_MASK 0x7FC00000
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_PER_FULL_TU_OFFSET 15
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_PER_FULL_TU_MASK 0x3F8000
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_NUM_PER_LANE_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_ALU2_VALID_BYTES_NUM_PER_LANE_MASK 0x7FFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_NVID_SEL_OFFSET 26
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_NVID_SEL_MASK 0x4000000
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_NVID_SEL 0x4000000
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_MVID_SEL_OFFSET 24
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_MVID_SEL_MASK 0x3000000
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_MVID_SET_VALUE_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_0_MVID_SET_VALUE_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_1_INSERT_LINE_SEL_OFFSET 24
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_1_INSERT_LINE_SEL_MASK 0xFF000000
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_1_NVID_SET_VALUE_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_CONTROL_1_NVID_SET_VALUE_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_MVID_MVID_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_MVID_MVID_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_NVID_NVID_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_NVID_NVID_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_0_TOTAL_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_0_TOTAL_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_0_START_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_0_START_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_WIDTH_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_WIDTH_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_POLARITY_OFFSET 15
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_POLARITY_MASK 0x8000
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_POLARITY 0x8000
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_SYNC_WIDTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_HORIZONTAL_1_SYNC_WIDTH_MASK 0x7FFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_0_TOTAL_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_0_TOTAL_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_0_START_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_0_START_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_HEIGHT_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_HEIGHT_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_POLARITY_OFFSET 15
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_POLARITY_MASK 0x8000
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_POLARITY 0x8000
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_SYNC_WIDTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_VERTICAL_1_SYNC_WIDTH_MASK 0x7FFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_RESERVED_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_RESERVED_MASK 0x70000
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_VSC_SDP_OFFSET 12
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_VSC_SDP_MASK 0x1000
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_VSC_SDP 0x1000
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_Y_ONLY_OFFSET 11
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_Y_ONLY_MASK 0x800
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_Y_ONLY 0x800
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_STEREO_OFFSET 9
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_STEREO_MASK 0x600
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_INT_TOTAL_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_INT_TOTAL_MASK 0x100
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_INT_TOTAL 0x100
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_COLOR_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_COLOR_MASK 0xFE
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_CLK_SYNC_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_CLK_SYNC_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_MSA_MISC_CLK_SYNC 0x1
#define DP_SOURCE_STREAM_GENERATOR_MSA_DP_MVID_MVID_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_DP_MVID_MVID_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_MSA_DP_NVID_NVID_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_MSA_DP_NVID_NVID_MASK 0xFFFFFF
#define DP_SOURCE_STREAM_GENERATOR_FSM_STATUS_STATE_VID_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_FSM_STATUS_STATE_VID_MASK 0x300
#define DP_SOURCE_STREAM_GENERATOR_FSM_STATUS_STATE_DP_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FSM_STATUS_STATE_DP_MASK 0x3
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_LEVEL_LEVEL_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_LEVEL_LEVEL_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE1_OFFSET 7
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE1_MASK 0x80
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE1 0x80
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF1_OFFSET 6
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF1_MASK 0x40
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF1 0x40
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE0_OFFSET 5
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE0_MASK 0x20
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AE0 0x20
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF0_OFFSET 4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF0_MASK 0x10
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_AF0 0x10
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_OVERFLOW_OFFSET 3
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_OVERFLOW_MASK 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_OVERFLOW 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_UNDERFLOW 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_FULL_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_FULL_MASK 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_FULL 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_EMPTY_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_EMPTY_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_STATUS_EMPTY 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL0_AET0_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL0_AET0_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL0_AFT0_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL0_AFT0_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL1_AET1_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL1_AET1_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL1_AFT1_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONTROL1_AFT1_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONFIG_DEPTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_CS_CONFIG_DEPTH_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_LEVEL_LEVEL_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_LEVEL_LEVEL_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_0_UNDERFLOW_OFFSET 11
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_0_UNDERFLOW_MASK 0x800
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_0_UNDERFLOW 0x800
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_1_UNDERFLOW_OFFSET 10
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_1_UNDERFLOW_MASK 0x400
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_1_UNDERFLOW 0x400
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_2_UNDERFLOW_OFFSET 9
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_2_UNDERFLOW_MASK 0x200
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_2_UNDERFLOW 0x200
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_3_UNDERFLOW_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_3_UNDERFLOW_MASK 0x100
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_SR_3_UNDERFLOW 0x100
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE1_OFFSET 7
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE1_MASK 0x80
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE1 0x80
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF1_OFFSET 6
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF1_MASK 0x40
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF1 0x40
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE0_OFFSET 5
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE0_MASK 0x20
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AE0 0x20
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF0_OFFSET 4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF0_MASK 0x10
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_AF0 0x10
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_OVERFLOW_OFFSET 3
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_OVERFLOW_MASK 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_OVERFLOW 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_UNDERFLOW_OFFSET 2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_UNDERFLOW_MASK 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_UNDERFLOW 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_FULL_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_FULL_MASK 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_FULL 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_EMPTY_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_EMPTY_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_SR_STATUS_FIFO_0_EMPTY 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL0_AET0_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL0_AET0_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL0_AFT0_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL0_AFT0_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL1_AET1_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL1_AET1_MASK 0xFFFF0000
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL1_AFT1_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL1_AFT1_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL2_OFFSET_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONTROL2_OFFSET_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONFIG_DEPTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_PIX_CONFIG_DEPTH_MASK 0xFFFF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_OVERFLOW_OFFSET 3
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_OVERFLOW_MASK 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_OVERFLOW 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_UNDERFLOW 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_FULL_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_FULL_MASK 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_FULL 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_EMPTY_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_EMPTY_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_STATUS_EMPTY 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_OVERFLOW_OFFSET 3
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_OVERFLOW_MASK 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_OVERFLOW 0x8
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_UNDERFLOW 0x4
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_FULL_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_FULL_MASK 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_FULL 0x2
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_EMPTY_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_EMPTY_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_STATUS_EMPTY 0x1
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_CONFIG_DEPTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_CONFIG_DEPTH_MASK 0x7FF
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_CONFIG_DEPTH_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_FIFO_SDP_TAG_CONFIG_DEPTH_MASK 0x1FF
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_MAUD_SET_VALUE_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_MAUD_SET_VALUE_MASK 0xFF00
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_MAUD_METHOD_SEL_OFFSET 1
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_MAUD_METHOD_SEL_MASK 0x2
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_MAUD_METHOD_SEL 0x2
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_AUDIOMUTE_FLAG_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_AUDIOMUTE_FLAG_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_SDP_CTRL_AUDIOMUTE_FLAG 0x1
#define DP_SOURCE_STREAM_GENERATOR_IDLE_PATTERN_DEBUG_CNT_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_IDLE_PATTERN_DEBUG_CNT_MASK 0xFF00
#define DP_SOURCE_STREAM_GENERATOR_IDLE_PATTERN_DEBUG_CNT_RST_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_IDLE_PATTERN_DEBUG_CNT_RST_MASK 0x1
#define DP_SOURCE_STREAM_GENERATOR_IDLE_PATTERN_DEBUG_CNT_RST 0x1
#define DP_SOURCE_STREAM_GENERATOR_VBD_VBID_OFFSET 16
#define DP_SOURCE_STREAM_GENERATOR_VBD_VBID_MASK 0xFF0000
#define DP_SOURCE_STREAM_GENERATOR_VBD_MAUD_OFFSET 8
#define DP_SOURCE_STREAM_GENERATOR_VBD_MAUD_MASK 0xFF00
#define DP_SOURCE_STREAM_GENERATOR_VBD_MVID_OFFSET 0
#define DP_SOURCE_STREAM_GENERATOR_VBD_MVID_MASK 0xFF
#define DP_SOURCE_DECODER_ERROR_STATUS_HANDSHAKE_VFR_HANDSHAKE_OFFSET 8
#define DP_SOURCE_DECODER_ERROR_STATUS_HANDSHAKE_VFR_HANDSHAKE_MASK 0xFF00
#define DP_SOURCE_DECODER_ERROR_STATUS_HANDSHAKE_CFR_HANDSHAKE_OFFSET 0
#define DP_SOURCE_DECODER_ERROR_STATUS_HANDSHAKE_CFR_HANDSHAKE_MASK 0xFF
#define DP_SOURCE_DECODER_ERROR_STATUS_ERROR_ID_ERR_ID_OFFSET 8
#define DP_SOURCE_DECODER_ERROR_STATUS_ERROR_ID_ERR_ID_MASK 0xFF00
#define DP_SOURCE_DECODER_ERROR_STATUS_ERROR_ID_ERR_FLAG_OFFSET 0
#define DP_SOURCE_DECODER_ERROR_STATUS_ERROR_ID_ERR_FLAG_MASK 0x1
#define DP_SOURCE_DECODER_ERROR_STATUS_ERROR_ID_ERR_FLAG 0x1
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE3_OFFSET 24
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE3_MASK 0xFF000000
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE2_OFFSET 16
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE2_MASK 0xFF0000
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE1_OFFSET 8
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE1_MASK 0xFF00
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE0_OFFSET 0
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_3_0_BYTE0_MASK 0xFF
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE7_OFFSET 24
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE7_MASK 0xFF000000
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE6_OFFSET 16
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE6_MASK 0xFF0000
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE5_OFFSET 8
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE5_MASK 0xFF00
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE4_OFFSET 0
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_7_4_BYTE4_MASK 0xFF
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_9_8_BYTE9_OFFSET 8
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_9_8_BYTE9_MASK 0xFF00
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_9_8_BYTE8_OFFSET 0
#define DP_SOURCE_COMPLIANCE_CUSTOM_80BITS_9_8_BYTE8_MASK 0xFF
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL_WATERMARK_OFFSET 9
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL_WATERMARK_MASK 0x200
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL_WATERMARK 0x200
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL_OFFSET 8
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL_MASK 0x100
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_LEVEL 0x100
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_0_SR_UNDERFLOW_OFFSET 7
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_0_SR_UNDERFLOW_MASK 0x80
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_0_SR_UNDERFLOW 0x80
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_1_SR_UNDERFLOW_OFFSET 6
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_1_SR_UNDERFLOW_MASK 0x40
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_1_SR_UNDERFLOW 0x40
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_2_SR_UNDERFLOW_OFFSET 5
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_2_SR_UNDERFLOW_MASK 0x20
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_2_SR_UNDERFLOW 0x20
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_3_SR_UNDERFLOW_OFFSET 4
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_3_SR_UNDERFLOW_MASK 0x10
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_PIX_3_SR_UNDERFLOW 0x10
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_UNDERFLOW_OFFSET 3
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_UNDERFLOW_MASK 0x8
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_UNDERFLOW 0x8
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_OVERFLOW_OFFSET 2
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_OVERFLOW_MASK 0x4
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_OVERFLOW 0x4
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_EMPTY_OFFSET 1
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_EMPTY_MASK 0x2
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_EMPTY 0x2
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_FULL_OFFSET 0
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_FULL_MASK 0x1
#define DP_SOURCE_STATS0_RD2CLR_CONFIG_FIFO_PIX_0_FULL 0x1
#define DP_SOURCE_STATS0_FIFO_PIX_0_FULL_FIFO_PIX_0_FULL_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_FULL_FIFO_PIX_0_FULL_MASK 0xFF
#define DP_SOURCE_STATS0_FIFO_PIX_0_EMPTY_FIFO_PIX_0_EMPTY_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_EMPTY_FIFO_PIX_0_EMPTY_MASK 0xFF
#define DP_SOURCE_STATS0_FIFO_PIX_0_OVERFLOW_FIFO_PIX_0_OVERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_OVERFLOW_FIFO_PIX_0_OVERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_FIFO_PIX_0_UNDERFLOW_FIFO_PIX_0_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_UNDERFLOW_FIFO_PIX_0_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_PIX_0_SR_UNDERFLOW_PIX_0_SR_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_PIX_0_SR_UNDERFLOW_PIX_0_SR_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_PIX_1_SR_UNDERFLOW_PIX_1_SR_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_PIX_1_SR_UNDERFLOW_PIX_1_SR_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_PIX_2_SR_UNDERFLOW_PIX_2_SR_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_PIX_2_SR_UNDERFLOW_PIX_2_SR_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_PIX_3_SR_UNDERFLOW_PIX_3_SR_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS0_PIX_3_SR_UNDERFLOW_PIX_3_SR_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS0_FIFO_PIX_0_LEVEL_FIFO_PIX_0_LEVEL_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_LEVEL_FIFO_PIX_0_LEVEL_MASK 0xFFFF
#define DP_SOURCE_STATS0_FIFO_PIX_0_LEVEL_WATERMARK_FIFO_PIX_0_LEVEL_WATERMARK_OFFSET 0
#define DP_SOURCE_STATS0_FIFO_PIX_0_LEVEL_WATERMARK_FIFO_PIX_0_LEVEL_WATERMARK_MASK 0xFFFF
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_SDP_PTP_PKT_SOP_IN_OFFSET 22
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_SDP_PTP_PKT_SOP_IN_MASK 0x400000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_SDP_PTP_PKT_SOP_IN 0x400000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL_WATERMARK_OFFSET 21
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL_WATERMARK_MASK 0x200000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL_WATERMARK 0x200000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL_OFFSET 20
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL_MASK 0x100000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_LEVEL 0x100000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_UNDERFLOW_OFFSET 19
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_UNDERFLOW_MASK 0x80000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_UNDERFLOW 0x80000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_OVERFLOW_OFFSET 18
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_OVERFLOW_MASK 0x40000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_OVERFLOW 0x40000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_EMPTY_OFFSET 17
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_EMPTY_MASK 0x20000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_EMPTY 0x20000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_FULL_OFFSET 16
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_FULL_MASK 0x10000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_TAG_FULL 0x10000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL_WATERMARK_OFFSET 15
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL_WATERMARK_MASK 0x8000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL_WATERMARK 0x8000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL_OFFSET 14
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL_MASK 0x4000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_LEVEL 0x4000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_UNDERFLOW_OFFSET 13
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_UNDERFLOW_MASK 0x2000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_UNDERFLOW 0x2000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_OVERFLOW_OFFSET 12
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_OVERFLOW_MASK 0x1000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_OVERFLOW 0x1000
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_EMPTY_OFFSET 11
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_EMPTY_MASK 0x800
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_EMPTY 0x800
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_FULL_OFFSET 10
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_FULL_MASK 0x400
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_SDP_FULL 0x400
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL_WATERMARK_OFFSET 9
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL_WATERMARK_MASK 0x200
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL_WATERMARK 0x200
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL_OFFSET 8
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL_MASK 0x100
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_LEVEL 0x100
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF1_OFFSET 7
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF1_MASK 0x80
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF1 0x80
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF0_OFFSET 6
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF0_MASK 0x40
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AF0 0x40
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE1_OFFSET 5
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE1_MASK 0x20
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE1 0x20
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE0_OFFSET 4
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE0_MASK 0x10
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_AE0 0x10
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_UNDERFLOW_OFFSET 3
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_UNDERFLOW_MASK 0x8
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_UNDERFLOW 0x8
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_OVERFLOW_OFFSET 2
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_OVERFLOW_MASK 0x4
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_OVERFLOW 0x4
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_EMPTY_OFFSET 1
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_EMPTY_MASK 0x2
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_EMPTY 0x2
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_FULL_OFFSET 0
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_FULL_MASK 0x1
#define DP_SOURCE_STATS1_RD2CLR_CONFIG_FIFO_CS_FULL 0x1
#define DP_SOURCE_STATS1_FIFO_CS_FULL_FIFO_CS_FULL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_FULL_FIFO_CS_FULL_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_EMPTY_FIFO_CS_EMPTY_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_EMPTY_FIFO_CS_EMPTY_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_OVERFLOW_FIFO_CS_OVERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_OVERFLOW_FIFO_CS_OVERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_UNDERFLOW_FIFO_CS_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_UNDERFLOW_FIFO_CS_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_AE0_FIFO_CS_AE0_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_AE0_FIFO_CS_AE0_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_AE1_FIFO_CS_AE1_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_AE1_FIFO_CS_AE1_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_AF0_FIFO_CS_AF0_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_AF0_FIFO_CS_AF0_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_AF1_FIFO_CS_AF1_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_AF1_FIFO_CS_AF1_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_CS_LEVEL_FIFO_CS_LEVEL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_LEVEL_FIFO_CS_LEVEL_MASK 0xFFFF
#define DP_SOURCE_STATS1_FIFO_CS_LEVEL_WATERMARK_FIFO_CS_LEVEL_WATERMARK_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_CS_LEVEL_WATERMARK_FIFO_CS_LEVEL_WATERMARK_MASK 0xFFFF
#define DP_SOURCE_STATS1_FIFO_SDP_FULL_FIFO_SDP_FULL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_FULL_FIFO_SDP_FULL_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_EMPTY_FIFO_SDP_EMPTY_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_EMPTY_FIFO_SDP_EMPTY_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_OVERFLOW_FIFO_SDP_OVERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_OVERFLOW_FIFO_SDP_OVERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_UNDERFLOW_FIFO_SDP_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_UNDERFLOW_FIFO_SDP_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_LEVEL_FIFO_SDP_LEVEL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_LEVEL_FIFO_SDP_LEVEL_MASK 0xFFFF
#define DP_SOURCE_STATS1_FIFO_SDP_LEVEL_WATERMARK_FIFO_SDP_LEVEL_WATERMARK_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_LEVEL_WATERMARK_FIFO_SDP_LEVEL_WATERMARK_MASK 0xFFFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_FULL_FIFO_SDP_TAG_FULL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_FULL_FIFO_SDP_TAG_FULL_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_EMPTY_FIFO_SDP_TAG_EMPTY_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_EMPTY_FIFO_SDP_TAG_EMPTY_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_OVERFLOW_FIFO_SDP_TAG_OVERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_OVERFLOW_FIFO_SDP_TAG_OVERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_UNDERFLOW_FIFO_SDP_TAG_UNDERFLOW_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_UNDERFLOW_FIFO_SDP_TAG_UNDERFLOW_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_LEVEL_FIFO_SDP_TAG_LEVEL_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_LEVEL_FIFO_SDP_TAG_LEVEL_MASK 0xFF
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_LEVEL_WATERMARK_FIFO_SDP_TAG_LEVEL_WATERMARK_OFFSET 0
#define DP_SOURCE_STATS1_FIFO_SDP_TAG_LEVEL_WATERMARK_FIFO_SDP_TAG_LEVEL_WATERMARK_MASK 0xFF
#define DP_SOURCE_STATS1_SDP_PTP_PKT_SOP_IN_SDP_PTP_PKT_SOP_IN_OFFSET 0
#define DP_SOURCE_STATS1_SDP_PTP_PKT_SOP_IN_SDP_PTP_PKT_SOP_IN_MASK 0xFF
#define DP_SOURCE_IRQ_ENABLE_MSA_DP_MVID_MEASURED_UPDATE_OFFSET 11
#define DP_SOURCE_IRQ_ENABLE_MSA_DP_MVID_MEASURED_UPDATE_MASK 0x800
#define DP_SOURCE_IRQ_ENABLE_MSA_DP_MVID_MEASURED_UPDATE 0x800
#define DP_SOURCE_IRQ_ENABLE_FIRST_IDLE_PATTERN_SENT_OFFSET 10
#define DP_SOURCE_IRQ_ENABLE_FIRST_IDLE_PATTERN_SENT_MASK 0x400
#define DP_SOURCE_IRQ_ENABLE_FIRST_IDLE_PATTERN_SENT 0x400
#define DP_SOURCE_IRQ_ENABLE_DECODER_ERR_FLAG_OFFSET 9
#define DP_SOURCE_IRQ_ENABLE_DECODER_ERR_FLAG_MASK 0x200
#define DP_SOURCE_IRQ_ENABLE_DECODER_ERR_FLAG 0x200
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_UNDERFLOW_OFFSET 8
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_UNDERFLOW_MASK 0x100
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_UNDERFLOW 0x100
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_OVERFLOW_OFFSET 7
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_OVERFLOW_MASK 0x80
#define DP_SOURCE_IRQ_ENABLE_FIFO_PIX_0_OVERFLOW 0x80
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_UNDERFLOW_OFFSET 6
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_UNDERFLOW_MASK 0x40
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_UNDERFLOW 0x40
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_OVERFLOW_OFFSET 5
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_OVERFLOW_MASK 0x20
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_OVERFLOW 0x20
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_UNDERFLOW_OFFSET 4
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_UNDERFLOW_MASK 0x10
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_UNDERFLOW 0x10
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_OVERFLOW_OFFSET 3
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_OVERFLOW_MASK 0x8
#define DP_SOURCE_IRQ_ENABLE_FIFO_SDP_TAG_OVERFLOW 0x8
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_UNDERFLOW 0x4
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_OVERFLOW_OFFSET 1
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_OVERFLOW_MASK 0x2
#define DP_SOURCE_IRQ_ENABLE_FIFO_CS_OVERFLOW 0x2
#define DP_SOURCE_IRQ_ENABLE_VIDEO_STREAM_END_OFFSET 0
#define DP_SOURCE_IRQ_ENABLE_VIDEO_STREAM_END_MASK 0x1
#define DP_SOURCE_IRQ_ENABLE_VIDEO_STREAM_END 0x1
#define DP_SOURCE_IRQ_PENDING_MSA_DP_MVID_MEASURED_UPDATE_OFFSET 11
#define DP_SOURCE_IRQ_PENDING_MSA_DP_MVID_MEASURED_UPDATE_MASK 0x800
#define DP_SOURCE_IRQ_PENDING_MSA_DP_MVID_MEASURED_UPDATE 0x800
#define DP_SOURCE_IRQ_PENDING_FIRST_IDLE_PATTERN_SENT_OFFSET 10
#define DP_SOURCE_IRQ_PENDING_FIRST_IDLE_PATTERN_SENT_MASK 0x400
#define DP_SOURCE_IRQ_PENDING_FIRST_IDLE_PATTERN_SENT 0x400
#define DP_SOURCE_IRQ_PENDING_DECODER_ERR_FLAG_OFFSET 9
#define DP_SOURCE_IRQ_PENDING_DECODER_ERR_FLAG_MASK 0x200
#define DP_SOURCE_IRQ_PENDING_DECODER_ERR_FLAG 0x200
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_UNDERFLOW_OFFSET 8
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_UNDERFLOW_MASK 0x100
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_UNDERFLOW 0x100
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_OVERFLOW_OFFSET 7
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_OVERFLOW_MASK 0x80
#define DP_SOURCE_IRQ_PENDING_FIFO_PIX_0_OVERFLOW 0x80
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_UNDERFLOW_OFFSET 6
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_UNDERFLOW_MASK 0x40
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_UNDERFLOW 0x40
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_OVERFLOW_OFFSET 5
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_OVERFLOW_MASK 0x20
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_OVERFLOW 0x20
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_UNDERFLOW_OFFSET 4
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_UNDERFLOW_MASK 0x10
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_UNDERFLOW 0x10
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_OVERFLOW_OFFSET 3
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_OVERFLOW_MASK 0x8
#define DP_SOURCE_IRQ_PENDING_FIFO_SDP_TAG_OVERFLOW 0x8
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_UNDERFLOW 0x4
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_OVERFLOW_OFFSET 1
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_OVERFLOW_MASK 0x2
#define DP_SOURCE_IRQ_PENDING_FIFO_CS_OVERFLOW 0x2
#define DP_SOURCE_IRQ_PENDING_VIDEO_STREAM_END_OFFSET 0
#define DP_SOURCE_IRQ_PENDING_VIDEO_STREAM_END_MASK 0x1
#define DP_SOURCE_IRQ_PENDING_VIDEO_STREAM_END 0x1
#define DP_SOURCE_IRQ_PENDING_IRQ_MSA_DP_MVID_MEASURED_UPDATE_OFFSET 11
#define DP_SOURCE_IRQ_PENDING_IRQ_MSA_DP_MVID_MEASURED_UPDATE_MASK 0x800
#define DP_SOURCE_IRQ_PENDING_IRQ_MSA_DP_MVID_MEASURED_UPDATE 0x800
#define DP_SOURCE_IRQ_PENDING_IRQ_FIRST_IDLE_PATTERN_SENT_OFFSET 10
#define DP_SOURCE_IRQ_PENDING_IRQ_FIRST_IDLE_PATTERN_SENT_MASK 0x400
#define DP_SOURCE_IRQ_PENDING_IRQ_FIRST_IDLE_PATTERN_SENT 0x400
#define DP_SOURCE_IRQ_PENDING_IRQ_DECODER_ERR_FLAG_OFFSET 9
#define DP_SOURCE_IRQ_PENDING_IRQ_DECODER_ERR_FLAG_MASK 0x200
#define DP_SOURCE_IRQ_PENDING_IRQ_DECODER_ERR_FLAG 0x200
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_UNDERFLOW_OFFSET 8
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_UNDERFLOW_MASK 0x100
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_UNDERFLOW 0x100
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_OVERFLOW_OFFSET 7
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_OVERFLOW_MASK 0x80
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_PIX_0_OVERFLOW 0x80
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_UNDERFLOW_OFFSET 6
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_UNDERFLOW_MASK 0x40
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_UNDERFLOW 0x40
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_OVERFLOW_OFFSET 5
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_OVERFLOW_MASK 0x20
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_OVERFLOW 0x20
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_UNDERFLOW_OFFSET 4
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_UNDERFLOW_MASK 0x10
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_UNDERFLOW 0x10
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_OVERFLOW_OFFSET 3
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_OVERFLOW_MASK 0x8
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_SDP_TAG_OVERFLOW 0x8
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_UNDERFLOW 0x4
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_OVERFLOW_OFFSET 1
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_OVERFLOW_MASK 0x2
#define DP_SOURCE_IRQ_PENDING_IRQ_FIFO_CS_OVERFLOW 0x2
#define DP_SOURCE_IRQ_PENDING_IRQ_VIDEO_STREAM_END_OFFSET 0
#define DP_SOURCE_IRQ_PENDING_IRQ_VIDEO_STREAM_END_MASK 0x1
#define DP_SOURCE_IRQ_PENDING_IRQ_VIDEO_STREAM_END 0x1
#define DP_SOURCE_IRQ_RAW_MSA_DP_MVID_MEASURED_UPDATE_OFFSET 11
#define DP_SOURCE_IRQ_RAW_MSA_DP_MVID_MEASURED_UPDATE_MASK 0x800
#define DP_SOURCE_IRQ_RAW_MSA_DP_MVID_MEASURED_UPDATE 0x800
#define DP_SOURCE_IRQ_RAW_FIRST_IDLE_PATTERN_SENT_OFFSET 10
#define DP_SOURCE_IRQ_RAW_FIRST_IDLE_PATTERN_SENT_MASK 0x400
#define DP_SOURCE_IRQ_RAW_FIRST_IDLE_PATTERN_SENT 0x400
#define DP_SOURCE_IRQ_RAW_DECODER_ERR_FLAG_OFFSET 9
#define DP_SOURCE_IRQ_RAW_DECODER_ERR_FLAG_MASK 0x200
#define DP_SOURCE_IRQ_RAW_DECODER_ERR_FLAG 0x200
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_UNDERFLOW_OFFSET 8
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_UNDERFLOW_MASK 0x100
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_UNDERFLOW 0x100
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_OVERFLOW_OFFSET 7
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_OVERFLOW_MASK 0x80
#define DP_SOURCE_IRQ_RAW_FIFO_PIX_0_OVERFLOW 0x80
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_UNDERFLOW_OFFSET 6
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_UNDERFLOW_MASK 0x40
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_UNDERFLOW 0x40
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_OVERFLOW_OFFSET 5
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_OVERFLOW_MASK 0x20
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_OVERFLOW 0x20
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_UNDERFLOW_OFFSET 4
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_UNDERFLOW_MASK 0x10
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_UNDERFLOW 0x10
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_OVERFLOW_OFFSET 3
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_OVERFLOW_MASK 0x8
#define DP_SOURCE_IRQ_RAW_FIFO_SDP_TAG_OVERFLOW 0x8
#define DP_SOURCE_IRQ_RAW_FIFO_CS_UNDERFLOW_OFFSET 2
#define DP_SOURCE_IRQ_RAW_FIFO_CS_UNDERFLOW_MASK 0x4
#define DP_SOURCE_IRQ_RAW_FIFO_CS_UNDERFLOW 0x4
#define DP_SOURCE_IRQ_RAW_FIFO_CS_OVERFLOW_OFFSET 1
#define DP_SOURCE_IRQ_RAW_FIFO_CS_OVERFLOW_MASK 0x2
#define DP_SOURCE_IRQ_RAW_FIFO_CS_OVERFLOW 0x2
#define DP_SOURCE_IRQ_RAW_VIDEO_STREAM_END_OFFSET 0
#define DP_SOURCE_IRQ_RAW_VIDEO_STREAM_END_MASK 0x1
#define DP_SOURCE_IRQ_RAW_VIDEO_STREAM_END 0x1
#endif /* _DP_SOURCE_REGS_H_ */

/* end */
