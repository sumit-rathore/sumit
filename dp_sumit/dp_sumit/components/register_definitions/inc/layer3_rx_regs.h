/*Icron Technologies ***** Copyright 2015 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : Mohsen Nahvi*/
/* generated by      : Mohsen.Nahvi*/
/* generated from    : C:\cygwin64\home\Mohsen.Nahvi\blackbird_current\m_layer3\regs\ids\layer3_rx\layer3_rx_regs.docx*/
/* IDesignSpec rev   : 6.8.10.0*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : uint%d_t*/
/* Bus Type                   : APB*/
/* BigEndian                  : true*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : layer3_rx */

#ifndef _LAYER3_RX_REGS_H_
#define _LAYER3_RX_REGS_H_

#ifndef __ASSEMBLER__
#ifndef __ASSEMBLER__
typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=ro 0x3 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=ro 0x2 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=ro 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=ro 0x2 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=ro 0x3 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_version;

/*section : eth_de_framer */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=na 0x1 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=na 0x0 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=na 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=na 0x0 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=na 0x1 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_eth_de_framer_version;

/*section : config0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t jumbo_lt_code : 16;           /* 15:0 SW=rw HW=ro 0x1717 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t jumbo_lt_code : 16;           /* 0:15 SW=rw HW=ro 0x1717 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_eth_de_framer_config0_jumbo_lt_code;

typedef struct {
    layer3_rx_eth_de_framer_config0_jumbo_lt_code  jumbo_lt_code;
    
} layer3_rx_eth_de_framer_config0;


/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t non_eth_pkt : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t out_sop : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t out_eop : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t out_eop : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t out_sop : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t non_eth_pkt : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_eth_de_framer_stats0_rd2clr_config;

typedef union {
    struct {
        uint32_t out_eop : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} layer3_rx_eth_de_framer_stats0_out_eop;

typedef union {
    struct {
        uint32_t out_sop : 32;           /* 31:0 SW=ro HW=wo 0x0 */
    } bf;
    uint32_t  dw;
} layer3_rx_eth_de_framer_stats0_out_sop;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t non_eth_pkt : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t non_eth_pkt : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_eth_de_framer_stats0_non_eth_pkt;

typedef struct {
    layer3_rx_eth_de_framer_stats0_rd2clr_config  rd2clr_config;
    layer3_rx_eth_de_framer_stats0_out_eop  out_eop;
    layer3_rx_eth_de_framer_stats0_out_sop  out_sop;
    layer3_rx_eth_de_framer_stats0_non_eth_pkt  non_eth_pkt;
    
} layer3_rx_eth_de_framer_stats0;


typedef struct {
    layer3_rx_eth_de_framer_version  version;
    
    union {
        layer3_rx_eth_de_framer_config0 s;
        uint8_t filler[0x4];
    } config0;
    
    union {
        layer3_rx_eth_de_framer_stats0 s;
        uint8_t filler[0x10];
    } stats0;
    
} layer3_rx_eth_de_framer;


/*section : ptp_guard */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv24 : 8;
            uint32_t major : 8;           /* 23:16 SW=ro HW=na 0x3 */
            uint32_t minor : 8;           /* 15:8 SW=ro HW=na 0x3 */
            uint32_t patch : 8;           /* 7:0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t patch : 8;           /* 0:7 SW=ro HW=na 0x0 */
            uint32_t minor : 8;           /* 8:15 SW=ro HW=na 0x3 */
            uint32_t major : 8;           /* 16:23 SW=ro HW=na 0x3 */
            uint32_t resv24 : 8;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_version;

/*section : config0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv2 : 30;
            uint32_t implemented : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t activate : 1;           /* 0 SW=rw HW=ro 0x1 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t activate : 1;           /* 0 SW=rw HW=ro 0x1 */
            uint32_t implemented : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t resv2 : 30;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_config0_fix_ptp_violations;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv20 : 12;
            uint32_t max_cycle_mode : 4;           /* 19:16 SW=rw HW=ro 0x3 */
            uint32_t max_cycles : 16;           /* 15:0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t max_cycles : 16;           /* 0:15 SW=rw HW=ro 0x0 */
            uint32_t max_cycle_mode : 4;           /* 16:19 SW=rw HW=ro 0x3 */
            uint32_t resv20 : 12;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_config0_max_cycles;

typedef struct {
    layer3_rx_ptp_guard_config0_fix_ptp_violations  fix_ptp_violations;
    layer3_rx_ptp_guard_config0_max_cycles  max_cycles;
    
} layer3_rx_ptp_guard_config0;


/*section : stats0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=ro 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=ro 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=ro 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=ro 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_stats0_rd2clr_config;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t missing_sop_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_stats0_missing_sop_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t missing_eop_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_eop_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_stats0_missing_eop_err;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv16 : 16;
            uint32_t max_cycle_err : 16;           /* 15:0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t max_cycle_err : 16;           /* 0:15 SW=ro HW=wo 0x0 */
            uint32_t resv16 : 16;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_stats0_max_cycle_err;

typedef struct {
    layer3_rx_ptp_guard_stats0_rd2clr_config  rd2clr_config;
    layer3_rx_ptp_guard_stats0_missing_sop_err  missing_sop_err;
    layer3_rx_ptp_guard_stats0_missing_eop_err  missing_eop_err;
    layer3_rx_ptp_guard_stats0_max_cycle_err  max_cycle_err;
    
} layer3_rx_ptp_guard_stats0;


/*section : irq0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_irq0_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_irq0_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_irq0_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t missing_sop_err : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t missing_eop_err : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t max_cycle_err : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_ptp_guard_irq0_raw;

typedef struct {
    layer3_rx_ptp_guard_irq0_enable  enable;
    layer3_rx_ptp_guard_irq0_pending  pending;
    layer3_rx_ptp_guard_irq0_pending_irq  pending_irq;
    layer3_rx_ptp_guard_irq0_raw  raw;
    
} layer3_rx_ptp_guard_irq0;


typedef struct {
    layer3_rx_ptp_guard_version  version;
    
    union {
        layer3_rx_ptp_guard_config0 s;
        uint8_t filler[0x8];
    } config0;
    
    union {
        layer3_rx_ptp_guard_stats0 s;
        uint8_t filler[0x10];
    } stats0;
    
    union {
        layer3_rx_ptp_guard_irq0 s;
        uint8_t filler[0x10];
    } irq0;
    
} layer3_rx_ptp_guard;


/*section : irq0 */

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=rw HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=rw HW=na 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=rw HW=na 0x0 */
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=rw HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_irq0_enable;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=r/w1c HW=wo 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=r/w1c HW=wo 0x0 */
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=r/w1c HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_irq0_pending;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=ro HW=na 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=ro HW=na 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=ro HW=na 0x0 */
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=ro HW=na 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_irq0_pending_irq;

typedef union {
    #ifdef IDS_BIG_ENDIAN
        struct {
            
            uint32_t resv3 : 29;
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=ro HW=wo 0x0 */
        } bf;
        
    #else     /* IDS_LITTLE_ENDIAN */
        struct {
            uint32_t de_framer_stats0_non_eth_pkt_irq_rollover : 1;           /* 0 SW=ro HW=wo 0x0 */
            uint32_t de_framer_stats0_out_sop_irq_rollover : 1;           /* 1 SW=ro HW=wo 0x0 */
            uint32_t de_framer_stats0_out_eop_irq_rollover : 1;           /* 2 SW=ro HW=wo 0x0 */
            uint32_t resv3 : 29;
        } bf;
        
    #endif
    uint32_t  dw;
} layer3_rx_irq0_raw;

typedef struct {
    layer3_rx_irq0_enable  enable;
    layer3_rx_irq0_pending  pending;
    layer3_rx_irq0_pending_irq  pending_irq;
    layer3_rx_irq0_raw  raw;
    
    
    
} layer3_rx_irq0;


typedef struct {
    layer3_rx_version  version;
    
    union {
        layer3_rx_eth_de_framer s;
        uint8_t filler[0x18];
    } eth_de_framer;
    
    union {
        layer3_rx_ptp_guard s;
        uint8_t filler[0x2C];
    } ptp_guard;
    
    union {
        layer3_rx_irq0 s;
        uint8_t filler[0x10];
    } irq0;
    
    
    uint8_t filler11[0xA8];
    
    
} layer3_rx_s;


#endif   //__ASSEMBLER__


#endif // __ASSEMBLER__
#define layer3_rx_version_READMASK 0xFFFFFF
#define layer3_rx_version_WRITEMASK 0x0
#define layer3_rx_version_VOLATILEMASK 0x0
#define layer3_rx_version_RESETMASK 0xFFFFFF
#define layer3_rx_version_DEFAULT 0x00030200

#define layer3_rx_eth_de_framer_version_READMASK 0xFFFFFF
#define layer3_rx_eth_de_framer_version_WRITEMASK 0x0
#define layer3_rx_eth_de_framer_version_VOLATILEMASK 0x0
#define layer3_rx_eth_de_framer_version_RESETMASK 0xFFFFFF
#define layer3_rx_eth_de_framer_version_DEFAULT 0x00010000

#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_READMASK 0xFFFF
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_WRITEMASK 0xFFFF
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_VOLATILEMASK 0x0
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_RESETMASK 0xFFFF
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_DEFAULT 0x00001717

#define layer3_rx_eth_de_framer_stats0_rd2clr_config_READMASK 0x7
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_WRITEMASK 0x7
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_VOLATILEMASK 0x0
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_RESETMASK 0x7
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_DEFAULT 0x00000000

#define layer3_rx_eth_de_framer_stats0_out_eop_READMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_eop_WRITEMASK 0x0
#define layer3_rx_eth_de_framer_stats0_out_eop_VOLATILEMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_eop_RESETMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_eop_DEFAULT 0x00000000

#define layer3_rx_eth_de_framer_stats0_out_sop_READMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_sop_WRITEMASK 0x0
#define layer3_rx_eth_de_framer_stats0_out_sop_VOLATILEMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_sop_RESETMASK 0xFFFFFFFF
#define layer3_rx_eth_de_framer_stats0_out_sop_DEFAULT 0x00000000

#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_READMASK 0xFFFF
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_WRITEMASK 0x0
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_VOLATILEMASK 0xFFFF
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_RESETMASK 0xFFFF
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_version_READMASK 0xFFFFFF
#define layer3_rx_ptp_guard_version_WRITEMASK 0x0
#define layer3_rx_ptp_guard_version_VOLATILEMASK 0x0
#define layer3_rx_ptp_guard_version_RESETMASK 0xFFFFFF
#define layer3_rx_ptp_guard_version_DEFAULT 0x00030300

#define layer3_rx_ptp_guard_config0_fix_ptp_violations_READMASK 0x3
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_WRITEMASK 0x1
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_VOLATILEMASK 0x2
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_RESETMASK 0x3
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_DEFAULT 0x00000001

#define layer3_rx_ptp_guard_config0_max_cycles_READMASK 0xFFFFF
#define layer3_rx_ptp_guard_config0_max_cycles_WRITEMASK 0xFFFFF
#define layer3_rx_ptp_guard_config0_max_cycles_VOLATILEMASK 0x0
#define layer3_rx_ptp_guard_config0_max_cycles_RESETMASK 0xFFFFF
#define layer3_rx_ptp_guard_config0_max_cycles_DEFAULT 0x00030000

#define layer3_rx_ptp_guard_stats0_rd2clr_config_READMASK 0x7
#define layer3_rx_ptp_guard_stats0_rd2clr_config_WRITEMASK 0x7
#define layer3_rx_ptp_guard_stats0_rd2clr_config_VOLATILEMASK 0x0
#define layer3_rx_ptp_guard_stats0_rd2clr_config_RESETMASK 0x7
#define layer3_rx_ptp_guard_stats0_rd2clr_config_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_stats0_missing_sop_err_READMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_sop_err_WRITEMASK 0x0
#define layer3_rx_ptp_guard_stats0_missing_sop_err_VOLATILEMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_sop_err_RESETMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_sop_err_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_stats0_missing_eop_err_READMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_eop_err_WRITEMASK 0x0
#define layer3_rx_ptp_guard_stats0_missing_eop_err_VOLATILEMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_eop_err_RESETMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_missing_eop_err_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_stats0_max_cycle_err_READMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_max_cycle_err_WRITEMASK 0x0
#define layer3_rx_ptp_guard_stats0_max_cycle_err_VOLATILEMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_max_cycle_err_RESETMASK 0xFFFF
#define layer3_rx_ptp_guard_stats0_max_cycle_err_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_irq0_enable_READMASK 0x7
#define layer3_rx_ptp_guard_irq0_enable_WRITEMASK 0x7
#define layer3_rx_ptp_guard_irq0_enable_VOLATILEMASK 0x0
#define layer3_rx_ptp_guard_irq0_enable_RESETMASK 0x7
#define layer3_rx_ptp_guard_irq0_enable_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_irq0_pending_READMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_WRITEMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_VOLATILEMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_RESETMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_irq0_pending_irq_READMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_irq_WRITEMASK 0x0
#define layer3_rx_ptp_guard_irq0_pending_irq_VOLATILEMASK 0x0
#define layer3_rx_ptp_guard_irq0_pending_irq_RESETMASK 0x7
#define layer3_rx_ptp_guard_irq0_pending_irq_DEFAULT 0x00000000

#define layer3_rx_ptp_guard_irq0_raw_READMASK 0x7
#define layer3_rx_ptp_guard_irq0_raw_WRITEMASK 0x0
#define layer3_rx_ptp_guard_irq0_raw_VOLATILEMASK 0x7
#define layer3_rx_ptp_guard_irq0_raw_RESETMASK 0x7
#define layer3_rx_ptp_guard_irq0_raw_DEFAULT 0x00000000

#define layer3_rx_irq0_enable_READMASK 0x7
#define layer3_rx_irq0_enable_WRITEMASK 0x7
#define layer3_rx_irq0_enable_VOLATILEMASK 0x0
#define layer3_rx_irq0_enable_RESETMASK 0x7
#define layer3_rx_irq0_enable_DEFAULT 0x00000000

#define layer3_rx_irq0_pending_READMASK 0x7
#define layer3_rx_irq0_pending_WRITEMASK 0x7
#define layer3_rx_irq0_pending_VOLATILEMASK 0x7
#define layer3_rx_irq0_pending_RESETMASK 0x7
#define layer3_rx_irq0_pending_DEFAULT 0x00000000

#define layer3_rx_irq0_pending_irq_READMASK 0x7
#define layer3_rx_irq0_pending_irq_WRITEMASK 0x0
#define layer3_rx_irq0_pending_irq_VOLATILEMASK 0x0
#define layer3_rx_irq0_pending_irq_RESETMASK 0x7
#define layer3_rx_irq0_pending_irq_DEFAULT 0x00000000

#define layer3_rx_irq0_raw_READMASK 0x7
#define layer3_rx_irq0_raw_WRITEMASK 0x0
#define layer3_rx_irq0_raw_VOLATILEMASK 0x7
#define layer3_rx_irq0_raw_RESETMASK 0x7
#define layer3_rx_irq0_raw_DEFAULT 0x00000000

#define layer3_rx_s_SIZE 0x100
#define layer3_rx_version_SIZE 0x4
#define layer3_rx_eth_de_framer_SIZE 0x18
#define layer3_rx_eth_de_framer_version_SIZE 0x4
#define layer3_rx_eth_de_framer_config0_SIZE 0x4
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_SIZE 0x4
#define layer3_rx_eth_de_framer_stats0_SIZE 0x10
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_SIZE 0x4
#define layer3_rx_eth_de_framer_stats0_out_eop_SIZE 0x4
#define layer3_rx_eth_de_framer_stats0_out_sop_SIZE 0x4
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_SIZE 0x4
#define layer3_rx_ptp_guard_SIZE 0x2C
#define layer3_rx_ptp_guard_version_SIZE 0x4
#define layer3_rx_ptp_guard_config0_SIZE 0x8
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_SIZE 0x4
#define layer3_rx_ptp_guard_config0_max_cycles_SIZE 0x4
#define layer3_rx_ptp_guard_stats0_SIZE 0x10
#define layer3_rx_ptp_guard_stats0_rd2clr_config_SIZE 0x4
#define layer3_rx_ptp_guard_stats0_missing_sop_err_SIZE 0x4
#define layer3_rx_ptp_guard_stats0_missing_eop_err_SIZE 0x4
#define layer3_rx_ptp_guard_stats0_max_cycle_err_SIZE 0x4
#define layer3_rx_ptp_guard_irq0_SIZE 0x10
#define layer3_rx_ptp_guard_irq0_enable_SIZE 0x4
#define layer3_rx_ptp_guard_irq0_pending_SIZE 0x4
#define layer3_rx_ptp_guard_irq0_pending_irq_SIZE 0x4
#define layer3_rx_ptp_guard_irq0_raw_SIZE 0x4
#define layer3_rx_irq0_SIZE 0x10
#define layer3_rx_irq0_enable_SIZE 0x4
#define layer3_rx_irq0_pending_SIZE 0x4
#define layer3_rx_irq0_pending_irq_SIZE 0x4
#define layer3_rx_irq0_raw_SIZE 0x4

#define layer3_rx_s_OFFSET 0x0
#define layer3_rx_version_OFFSET 0x0
#define layer3_rx_eth_de_framer_OFFSET 0x4
#define layer3_rx_eth_de_framer_version_OFFSET 0x0
#define layer3_rx_eth_de_framer_config0_OFFSET 0x4
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_OFFSET 0x0
#define layer3_rx_eth_de_framer_stats0_OFFSET 0x8
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_OFFSET 0x0
#define layer3_rx_eth_de_framer_stats0_out_eop_OFFSET 0x4
#define layer3_rx_eth_de_framer_stats0_out_sop_OFFSET 0x8
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_OFFSET 0xC
#define layer3_rx_ptp_guard_OFFSET 0x1C
#define layer3_rx_ptp_guard_version_OFFSET 0x0
#define layer3_rx_ptp_guard_config0_OFFSET 0x4
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_OFFSET 0x0
#define layer3_rx_ptp_guard_config0_max_cycles_OFFSET 0x4
#define layer3_rx_ptp_guard_stats0_OFFSET 0xC
#define layer3_rx_ptp_guard_stats0_rd2clr_config_OFFSET 0x0
#define layer3_rx_ptp_guard_stats0_missing_sop_err_OFFSET 0x4
#define layer3_rx_ptp_guard_stats0_missing_eop_err_OFFSET 0x8
#define layer3_rx_ptp_guard_stats0_max_cycle_err_OFFSET 0xC
#define layer3_rx_ptp_guard_irq0_OFFSET 0x1C
#define layer3_rx_ptp_guard_irq0_enable_OFFSET 0x0
#define layer3_rx_ptp_guard_irq0_pending_OFFSET 0x4
#define layer3_rx_ptp_guard_irq0_pending_irq_OFFSET 0x8
#define layer3_rx_ptp_guard_irq0_raw_OFFSET 0xC
#define layer3_rx_irq0_OFFSET 0x48
#define layer3_rx_irq0_enable_OFFSET 0x0
#define layer3_rx_irq0_pending_OFFSET 0x4
#define layer3_rx_irq0_pending_irq_OFFSET 0x8
#define layer3_rx_irq0_raw_OFFSET 0xC

#define layer3_rx_s_ADDRESS 0x000
#define layer3_rx_version_ADDRESS 0x000
#define layer3_rx_eth_de_framer_ADDRESS 0x004
#define layer3_rx_eth_de_framer_version_ADDRESS 0x004
#define layer3_rx_eth_de_framer_config0_ADDRESS 0x008
#define layer3_rx_eth_de_framer_config0_jumbo_lt_code_ADDRESS 0x008
#define layer3_rx_eth_de_framer_stats0_ADDRESS 0x00C
#define layer3_rx_eth_de_framer_stats0_rd2clr_config_ADDRESS 0x00C
#define layer3_rx_eth_de_framer_stats0_out_eop_ADDRESS 0x010
#define layer3_rx_eth_de_framer_stats0_out_sop_ADDRESS 0x014
#define layer3_rx_eth_de_framer_stats0_non_eth_pkt_ADDRESS 0x018
#define layer3_rx_ptp_guard_ADDRESS 0x01C
#define layer3_rx_ptp_guard_version_ADDRESS 0x01C
#define layer3_rx_ptp_guard_config0_ADDRESS 0x020
#define layer3_rx_ptp_guard_config0_fix_ptp_violations_ADDRESS 0x020
#define layer3_rx_ptp_guard_config0_max_cycles_ADDRESS 0x024
#define layer3_rx_ptp_guard_stats0_ADDRESS 0x028
#define layer3_rx_ptp_guard_stats0_rd2clr_config_ADDRESS 0x028
#define layer3_rx_ptp_guard_stats0_missing_sop_err_ADDRESS 0x02C
#define layer3_rx_ptp_guard_stats0_missing_eop_err_ADDRESS 0x030
#define layer3_rx_ptp_guard_stats0_max_cycle_err_ADDRESS 0x034
#define layer3_rx_ptp_guard_irq0_ADDRESS 0x038
#define layer3_rx_ptp_guard_irq0_enable_ADDRESS 0x038
#define layer3_rx_ptp_guard_irq0_pending_ADDRESS 0x03C
#define layer3_rx_ptp_guard_irq0_pending_irq_ADDRESS 0x040
#define layer3_rx_ptp_guard_irq0_raw_ADDRESS 0x044
#define layer3_rx_irq0_ADDRESS 0x048
#define layer3_rx_irq0_enable_ADDRESS 0x048
#define layer3_rx_irq0_pending_ADDRESS 0x04C
#define layer3_rx_irq0_pending_irq_ADDRESS 0x050
#define layer3_rx_irq0_raw_ADDRESS 0x054
#define LAYER3_RX_VERSION_MAJOR_OFFSET 16
#define LAYER3_RX_VERSION_MAJOR_MASK 0xFF0000
#define LAYER3_RX_VERSION_MINOR_OFFSET 8
#define LAYER3_RX_VERSION_MINOR_MASK 0xFF00
#define LAYER3_RX_VERSION_PATCH_OFFSET 0
#define LAYER3_RX_VERSION_PATCH_MASK 0xFF
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_MAJOR_OFFSET 16
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_MAJOR_MASK 0xFF0000
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_MINOR_OFFSET 8
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_MINOR_MASK 0xFF00
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_PATCH_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_VERSION_PATCH_MASK 0xFF
#define LAYER3_RX_ETH_DE_FRAMER_CONFIG0_JUMBO_LT_CODE_JUMBO_LT_CODE_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_CONFIG0_JUMBO_LT_CODE_JUMBO_LT_CODE_MASK 0xFFFF
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_NON_ETH_PKT_OFFSET 2
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_NON_ETH_PKT_MASK 0x4
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_NON_ETH_PKT 0x4
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_SOP_OFFSET 1
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_SOP_MASK 0x2
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_SOP 0x2
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_EOP_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_EOP_MASK 0x1
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_RD2CLR_CONFIG_OUT_EOP 0x1
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_OUT_EOP_OUT_EOP_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_OUT_EOP_OUT_EOP_MASK 0xFFFFFFFF
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_OUT_SOP_OUT_SOP_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_OUT_SOP_OUT_SOP_MASK 0xFFFFFFFF
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_NON_ETH_PKT_NON_ETH_PKT_OFFSET 0
#define LAYER3_RX_ETH_DE_FRAMER_STATS0_NON_ETH_PKT_NON_ETH_PKT_MASK 0xFFFF
#define LAYER3_RX_PTP_GUARD_VERSION_MAJOR_OFFSET 16
#define LAYER3_RX_PTP_GUARD_VERSION_MAJOR_MASK 0xFF0000
#define LAYER3_RX_PTP_GUARD_VERSION_MINOR_OFFSET 8
#define LAYER3_RX_PTP_GUARD_VERSION_MINOR_MASK 0xFF00
#define LAYER3_RX_PTP_GUARD_VERSION_PATCH_OFFSET 0
#define LAYER3_RX_PTP_GUARD_VERSION_PATCH_MASK 0xFF
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_OFFSET 1
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED_MASK 0x2
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_IMPLEMENTED 0x2
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_OFFSET 0
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE_MASK 0x1
#define LAYER3_RX_PTP_GUARD_CONFIG0_FIX_PTP_VIOLATIONS_ACTIVATE 0x1
#define LAYER3_RX_PTP_GUARD_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_OFFSET 16
#define LAYER3_RX_PTP_GUARD_CONFIG0_MAX_CYCLES_MAX_CYCLE_MODE_MASK 0xF0000
#define LAYER3_RX_PTP_GUARD_CONFIG0_MAX_CYCLES_MAX_CYCLES_OFFSET 0
#define LAYER3_RX_PTP_GUARD_CONFIG0_MAX_CYCLES_MAX_CYCLES_MASK 0xFFFF
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_OFFSET 2
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR_MASK 0x4
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MAX_CYCLE_ERR 0x4
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_OFFSET 1
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR_MASK 0x2
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_EOP_ERR 0x2
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR_MASK 0x1
#define LAYER3_RX_PTP_GUARD_STATS0_RD2CLR_CONFIG_MISSING_SOP_ERR 0x1
#define LAYER3_RX_PTP_GUARD_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_STATS0_MISSING_SOP_ERR_MISSING_SOP_ERR_MASK 0xFFFF
#define LAYER3_RX_PTP_GUARD_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_STATS0_MISSING_EOP_ERR_MISSING_EOP_ERR_MASK 0xFFFF
#define LAYER3_RX_PTP_GUARD_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_STATS0_MAX_CYCLE_ERR_MAX_CYCLE_ERR_MASK 0xFFFF
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MAX_CYCLE_ERR_OFFSET 2
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MAX_CYCLE_ERR_MASK 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MAX_CYCLE_ERR 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_EOP_ERR_OFFSET 1
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_EOP_ERR_MASK 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_EOP_ERR 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_SOP_ERR_MASK 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_ENABLE_MISSING_SOP_ERR 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MAX_CYCLE_ERR_OFFSET 2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MAX_CYCLE_ERR_MASK 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MAX_CYCLE_ERR 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_EOP_ERR_OFFSET 1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_EOP_ERR_MASK 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_EOP_ERR 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_SOP_ERR_MASK 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_MISSING_SOP_ERR 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_OFFSET 2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR_MASK 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MAX_CYCLE_ERR 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_OFFSET 1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_EOP_ERR_MASK 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_EOP_ERR 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_SOP_ERR_MASK 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_PENDING_IRQ_MISSING_SOP_ERR 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MAX_CYCLE_ERR_OFFSET 2
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MAX_CYCLE_ERR_MASK 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MAX_CYCLE_ERR 0x4
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_EOP_ERR_OFFSET 1
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_EOP_ERR_MASK 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_EOP_ERR 0x2
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_SOP_ERR_OFFSET 0
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_SOP_ERR_MASK 0x1
#define LAYER3_RX_PTP_GUARD_IRQ0_RAW_MISSING_SOP_ERR 0x1
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_OFFSET 2
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_MASK 0x4
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER 0x4
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_OFFSET 1
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_MASK 0x2
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER 0x2
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_OFFSET 0
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_MASK 0x1
#define LAYER3_RX_IRQ0_ENABLE_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER 0x1
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_OFFSET 2
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_MASK 0x4
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER 0x4
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_OFFSET 1
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_MASK 0x2
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER 0x2
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_OFFSET 0
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_MASK 0x1
#define LAYER3_RX_IRQ0_PENDING_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER 0x1
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_OFFSET 2
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_MASK 0x4
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER 0x4
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_OFFSET 1
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_MASK 0x2
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER 0x2
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_OFFSET 0
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_MASK 0x1
#define LAYER3_RX_IRQ0_PENDING_IRQ_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER 0x1
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_OFFSET 2
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER_MASK 0x4
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_EOP_IRQ_ROLLOVER 0x4
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_OFFSET 1
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER_MASK 0x2
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_OUT_SOP_IRQ_ROLLOVER 0x2
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_OFFSET 0
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER_MASK 0x1
#define LAYER3_RX_IRQ0_RAW_DE_FRAMER_STATS0_NON_ETH_PKT_IRQ_ROLLOVER 0x1
#endif /* _LAYER3_RX_REGS_H_ */

/* end */
